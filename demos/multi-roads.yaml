sources:
    osm:
        type: GeoJSONTileSource
        url:  http://vector.mapzen.com/osm/all/{z}/{x}/{y}.json

layers:
    landuse:
        data: { source: osm }
        style:
            polygons:
                order: 0
                color: green

    roads:
        data: { source: osm }
        style:
            lines:
                name: lines
                order: |
                    function () {
                        function reduceSortKey(key) {
                            return 30 * Math.floor((key % 10000) / 1000) +
                                   10 * Math.floor((key % 1000) / 100) +
                                   1  * (key % 10);
                        }

                        var min = reduceSortKey(-3109);
                        var order = 5 + reduceSortKey(feature.sort_key) - min;
                        return order;
                    }
                # order: 5
                interactive: function () { return (zoom >= 18); }
                color: white

        airports:
            filter: { aeroway: true }
            taxiways:
                filter: { aeroway: taxiway }
                style:
                    lines:
                        width: [[12, 1px], [13, 2px], [17, 10px]]
                        color: darkorange
                        cap: round
            runways:
                filter: { aeroway: runway }
                style:
                    lines:
                        width: [[12, 5px], [13, 10px], [15, 30px], [17, 150px]]
                        color: orange
                        # order: 1

        outlines:
            filter: { aeroway: false, $zoom: { min: 15 } }
            style:
                outlines:
                    name: lines
                    order: 4 # put road outlines underneath all roads
                    # order: |
                    #     function () {
                    #         function reduceSortKey(key) {
                    #             return 30 * Math.floor((key % 10000) / 1000) +
                    #                    10 * Math.floor((key % 1000) / 100) +
                    #                    1  * (key % 10);
                    #         }

                    #         var min = reduceSortKey(-3109);
                    #         var order = 4.5 + reduceSortKey(feature.sort_key) - min;
                    #         return order;
                    #     }

            z17:
                filter: { $zoom: { min: 17 } }
                style:
                    outlines:
                        cap: round
                        join: round

        not-airports:
            filter: { aeroway: false }
            rounded:
                filter: { $zoom: { min: 17 }, is_bridge: no }
                style:
                    lines:
                        cap: round
                        join: round

            highway:
                filter: { kind: highway }
                style:
                    lines:
                        color: [1.0, 1.0, 1.0]
                        width: function () { return 3 * Math.log(zoom); }
                    outlines:
                        color: [0.7, 0.7, 0.7]
                        width: function () { return (3 + 2 * 3/8) * Math.log(zoom); }

                tunnel:
                    filter: { is_tunnel: yes }
                    style:
                        lines:
                            color: '#333'
                            width: function () { return 2 * Math.log(zoom); }
                        outlines:
                            color: white
                            width: function () { return (2 + 2) * Math.log(zoom); }

            major_road:
                filter: { kind: major_road }
                style:
                    lines:
                        color: [0.5, 0.5, 0.5]
                        width: function () { return 2.5 * Math.log(zoom); }

                outlines:
                    filter: { $zoom: { min: 18 } }
                    style:
                        outlines:
                            color: [0.7, 0.7, 0.7]
                            width: function () { return (2.5 + 2 * 3/8) * Math.log(zoom); }

            minor_road:
                filter: { kind: minor_road, $zoom: { min: 13 } }
                style:
                    lines:
                        color: [0.65, 0.65, 0.65]
                        width: function () { return 2 * Math.log(zoom); }

                outlines:
                    filter: { $zoom: { min: 18 } }
                    style:
                        outlines:
                            color: [0.7, 0.7, 0.7]
                            width: function () { return (2 + 2 * 2.5/8) * Math.log(zoom); }

            path:
                filter: { kind: path, $zoom: { min: 15 } }
                style:
                    lines:
                        color: [0.8, 0.8, 0.8]
                        width: function () { return 1 * Math.log(zoom); }

                outlines:
                    filter: { $zoom: { min: 18 } }
                    style:
                        outlines:
                            color: [0.7, 0.7, 0.7]
                            width: function () { return (1 + 2 * 2/8) * Math.log(zoom); }

            rail:
                filter: { kind: rail }
                style:
                    lines:
                        color: [0.5, 0.0, 0.0]
                        width: function () { return 2 * Math.log(zoom); }

                outlines:
                    filter: { $zoom: { min: 18 } }
                    style:
                        outlines:
                            color: [0.7, 0.7, 0.7]
                            width: function () { return (2 + 2 * 2/8) * Math.log(zoom); }

