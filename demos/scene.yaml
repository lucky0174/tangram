cameras:
    perspective:
        type: perspective
        focal_length: [[16, 2], [17, 2.5], [18, 3], [19, 4], [20, 6]] # pairs of [zoom, focal len]
        vanishing_point: [0, -500] # relative to center of screen, in pixels
        active: true

    isometric:
        type: isometric
        axis: [0, 1]
        active: false

    flat:
        type: flat
        active: false

lights:
    directional1:
        type: directional
        direction: [.1, .5, -1] #[0.1, 0.1, -1]
        diffuse: .2
        ambient: 1.1

scene:
    background:
        color: '#9dc3de'

textures:
    pois:
        url: images/sdf3.png
        filtering: mipmap

styles:
    icons:
        base: points
        texcoords: true
        texture: pois
        shaders:
            uniforms:
                u_texture: images/sdf4.png
                u_color: [0., 0., 0.]
                u_SmoothCenter: .5
            blocks:
                # global:
                color: |
                    float SmoothCenter = 0.61;
                    float SmoothWidth = 0.01;

                    vec4 texcolor = texture2D(u_texture, v_texcoord);
                    float distance = texcolor.r;
                    float alpha = smoothstep(SmoothCenter - SmoothWidth,
                                     SmoothCenter + SmoothWidth,
                                     distance);
                    color = vec4(u_color, 1.0 - alpha);

                    // float smoothWidth = fwidth(distance);
                    // float alpha = smoothstep(SmoothCenter - smoothWidth, SmoothCenter + smoothWidth, distance);
                    // color.rgba = vec4(u_color, alpha);



sources:
    # When commented, demo main.js will set source based on URL - uncomment for testing
    # osm:
    #     type: TopoJSONTiles
    #     url:  http://vector.mapzen.com/osm/all/{z}/{x}/{y}.topojson?api_key=vector-tiles-HqUVidw

layers:
    earth:
        data: { source: osm }
        draw:
            polygons:
                order: 0
                color: '#f0ebeb'

  
    water:
        data: { source: osm }
        filter:
            any:
                # show smaller water areas at higher zooms
                - { $zoom: { min: 0 }, area: { min: 10000000 } }
                - { $zoom: { min: 10 }, area: { min: 1000000 } }
                - { $zoom: { min: 12 }, area: { min: 100000 } }
                - { $zoom: { min: 15 }, area: { min: 1000 } }
                - { $zoom: { min: 18 } }
        draw:
            polygons:
                interactive: true
                order: 3
                color: '#9dc3de'

    roads:
        data: { source: osm }
        filter:
            not: { kind: [rail] }
        draw:
            lines:
                color: white
                width: 12
                order: function () { return feature.sort_key + 5; }
                outline:
                    color: [[16, '#999'], [18, '#aaa']]
                    width: [[15, 0], [16, 2]]
                    order: 4 # put all outlines below all roads (for now)


        highway:
            filter: { kind: highway }
            draw:
                lines:
                    color: '#D16768'
                    width: [[14, 2px], [15, 12]]
                    outline:
                        width: [[14, 0], [15, 2]]
            link:
                filter: { is_link: yes }
                draw:
                    lines:
                        color: '#aaa'
                        width: [[13, 0], [14, 12]]
        major_road:
            filter: { kind: major_road, $zoom: { min: 10 } }
            draw:
                lines:
                    width: [[10, 0], [13, 2px], [14, 2px], [16, 12]]
                    outline:
                        width: [[16, 0], [17, 1]]
        minor_road:
            filter: { kind: minor_road }
            draw:
                lines:
                    width: [[13, 0px], [14, 1px], [15, 8]]
                    outline:
                        width: [[17, 0], [18, 1]]
      

    buildings:
        data: { source: osm }
        filter: { $zoom: { min: 14 } }

        draw:
            polygons:
                order: 50
                color: [.65, .65, .65]


        # extrude 3d buildings
        extruded:
            filter: { $zoom: { min: 15 } }
            draw:
                polygons:
                    extrude: function () { return feature.height > 20 || $zoom >= 16; }


    poi_icons:
        data: { source: osm, layer: pois }
        filter: { name: true, not: { kind: [peak, viewpoint, bicycle_rental, car_sharing] }, $zoom: { min: 15 } }
        draw:
            icons:
                size: 250px
                interactive: true
