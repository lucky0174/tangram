{"version":3,"file":"tangram.debug.js","sources":["../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../src/utils/thread.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../src/utils/version.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/construct.js","../src/utils/worker_broker.js","../src/utils/log.js","../src/utils/utils.js","../src/utils/debug_settings.js","../src/utils/urls.js","../src/utils/task.js","../src/utils/subscribe.js","../src/utils/slice.js","../src/gl/texture.js","../src/gl/glsl.js","../src/gl/extensions.js","../src/utils/hash.js","../node_modules/gl-shader-errors/index.js","../src/gl/shader_program.js","../src/gl/vao.js","../src/utils/merge.js","../src/utils/geo.js","../src/utils/functions.js","../node_modules/csscolorparser/csscolorparser.js","../src/styles/style_parser.js","../src/selection/selection.js","../src/gl/constants.js","../src/gl/vbo_mesh.js","../src/lights/material.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../src/utils/vector.js","../src/lights/light.js","../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../src/utils/errors.js","../src/sources/data_source.js","../src/tile/tile_id.js","../src/sources/raster.js","../src/builders/wireframe.js","../src/styles/style.js","../src/gl/vertex_elements.js","../src/gl/vertex_data.js","../src/gl/vertex_layout.js","../src/builders/common.js","../node_modules/earcut/src/earcut.js","../node_modules/quickselect/index.js","../src/builders/polygons.js","../src/styles/polygons/polygons.js","../src/builders/polylines.js","../src/styles/lines/dasharray.js","../src/styles/lines/lines.js","../src/builders/points.js","../src/labels/point_anchor.js","../src/labels/intersect.js","../src/utils/obb.js","../src/labels/label.js","../src/labels/repeat_group.js","../src/labels/collision_grid.js","../src/labels/collision.js","../src/labels/label_point.js","../src/labels/point_placement.js","../src/styles/text/text_settings.js","../node_modules/fontfaceobserver/fontfaceobserver.standalone.js","../src/styles/text/font_manager.js","../src/styles/text/text_segments.js","../src/styles/text/text_wrap.js","../src/styles/text/text_canvas.js","../src/styles/text/text_labels.js","../node_modules/gl-mat3/normal-from-mat4.js","../node_modules/gl-mat3/invert.js","../node_modules/gl-mat4/multiply.js","../node_modules/gl-mat4/translate.js","../node_modules/gl-mat4/scale.js","../node_modules/gl-mat4/perspective.js","../node_modules/gl-mat4/identity.js","../node_modules/gl-mat4/lookAt.js","../node_modules/gl-mat4/copy.js","../src/utils/gl-matrix.js","../src/scene/camera.js","../src/scene/view.js","../src/styles/points/points.js","../src/labels/label_line.js","../src/styles/text/text.js","../src/styles/raster/raster.js","../src/styles/style_manager.js","../src/styles/filter.js","../src/styles/layer.js","../src/tile/tile.js","../node_modules/ieee754/index.js","../node_modules/pbf/index.js","../node_modules/@mapbox/point-geometry/index.js","../node_modules/@mapbox/vector-tile/lib/vectortilefeature.js","../node_modules/@mapbox/vector-tile/lib/vectortilelayer.js","../node_modules/@mapbox/vector-tile/lib/vectortile.js","../node_modules/@mapbox/vector-tile/index.js","../src/sources/mvt.js","../node_modules/geojson-vt/src/simplify.js","../node_modules/geojson-vt/src/feature.js","../node_modules/geojson-vt/src/convert.js","../node_modules/geojson-vt/src/clip.js","../node_modules/geojson-vt/src/wrap.js","../node_modules/geojson-vt/src/transform.js","../node_modules/geojson-vt/src/tile.js","../node_modules/geojson-vt/src/index.js","../src/sources/geojson.js","../node_modules/topojson-client/src/reverse.js","../node_modules/topojson-client/src/identity.js","../node_modules/topojson-client/src/transform.js","../node_modules/topojson-client/src/feature.js","../src/sources/topojson.js","../src/scene/scene_worker.js","../src/gl/context.js","../src/utils/props.js","../src/scene/globals.js","../node_modules/rollup-plugin-node-globals/src/global.js","../node_modules/buffer-es6/base64.js","../node_modules/buffer-es6/ieee754.js","../node_modules/buffer-es6/isArray.js","../node_modules/buffer-es6/index.js","../node_modules/process-es6/browser.js","../node_modules/jszip/dist/jszip.min.js","../node_modules/js-yaml/lib/js-yaml/common.js","../node_modules/js-yaml/lib/js-yaml/exception.js","../node_modules/js-yaml/lib/js-yaml/mark.js","../node_modules/js-yaml/lib/js-yaml/type.js","../node_modules/js-yaml/lib/js-yaml/schema.js","../node_modules/js-yaml/lib/js-yaml/type/str.js","../node_modules/js-yaml/lib/js-yaml/type/seq.js","../node_modules/js-yaml/lib/js-yaml/type/map.js","../node_modules/js-yaml/lib/js-yaml/schema/failsafe.js","../node_modules/js-yaml/lib/js-yaml/type/null.js","../node_modules/js-yaml/lib/js-yaml/type/bool.js","../node_modules/js-yaml/lib/js-yaml/type/int.js","../node_modules/js-yaml/lib/js-yaml/type/float.js","../node_modules/js-yaml/lib/js-yaml/schema/json.js","../node_modules/js-yaml/lib/js-yaml/schema/core.js","../node_modules/js-yaml/lib/js-yaml/type/timestamp.js","../node_modules/js-yaml/lib/js-yaml/type/merge.js","../node_modules/js-yaml/lib/js-yaml/type/binary.js","../node_modules/js-yaml/lib/js-yaml/type/omap.js","../node_modules/js-yaml/lib/js-yaml/type/pairs.js","../node_modules/js-yaml/lib/js-yaml/type/set.js","../node_modules/js-yaml/lib/js-yaml/schema/default_safe.js","../node_modules/js-yaml/lib/js-yaml/type/js/undefined.js","../node_modules/js-yaml/lib/js-yaml/type/js/regexp.js","../node_modules/js-yaml/lib/js-yaml/type/js/function.js","../node_modules/js-yaml/lib/js-yaml/schema/default_full.js","../node_modules/js-yaml/lib/js-yaml/loader.js","../node_modules/js-yaml/lib/js-yaml.js","../node_modules/js-yaml/index.js","../src/scene/scene_bundle.js","../src/scene/scene_loader.js","../src/tile/tile_pyramid.js","../src/labels/main_pass.js","../src/tile/tile_manager.js","../src/gl/render_state.js","../src/utils/media_capture.js","../src/scene/scene_debug.js","../src/scene/scene.js","../src/utils/debounce.js","../src/leaflet_layer.js","../src/index.js","../build/bundle.mjs"],"sourcesContent":["function _arrayWithHoles(r) {\n  if (Array.isArray(r)) return r;\n}\nexport { _arrayWithHoles as default };","function _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\nexport { _iterableToArrayLimit as default };","function _arrayLikeToArray(r, a) {\n  (null == a || a > r.length) && (a = r.length);\n  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];\n  return n;\n}\nexport { _arrayLikeToArray as default };","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nfunction _unsupportedIterableToArray(r, a) {\n  if (r) {\n    if (\"string\" == typeof r) return arrayLikeToArray(r, a);\n    var t = {}.toString.call(r).slice(8, -1);\n    return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? arrayLikeToArray(r, a) : void 0;\n  }\n}\nexport { _unsupportedIterableToArray as default };","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _nonIterableRest as default };","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nfunction _slicedToArray(r, e) {\n  return arrayWithHoles(r) || iterableToArrayLimit(r, e) || unsupportedIterableToArray(r, e) || nonIterableRest();\n}\nexport { _slicedToArray as default };","/*jshint worker: true*/\n\n// Mark thread as main or worker\nconst Thread = {};\n\ntry {\n    if (window instanceof Window && window.document instanceof HTMLDocument) { // jshint ignore:line\n        Thread.is_worker = false;\n        Thread.is_main   = true;\n    }\n}\ncatch(e) {\n    Thread.is_worker = true;\n    Thread.is_main   = false;\n\n    // Patch for 3rd party libs that require these globals to be present. Specifically, FontFaceObserver.\n    // Brittle solution but allows that library to load on worker threads.\n    self.window = { document: {} };\n    self.document = self.window.document;\n}\n\nexport default Thread;\n","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nexport { _defineProperty as default };","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nfunction _arrayWithoutHoles(r) {\n  if (Array.isArray(r)) return arrayLikeToArray(r);\n}\nexport { _arrayWithoutHoles as default };","function _iterableToArray(r) {\n  if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r);\n}\nexport { _iterableToArray as default };","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _nonIterableSpread as default };","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nfunction _toConsumableArray(r) {\n  return arrayWithoutHoles(r) || iterableToArray(r) || unsupportedIterableToArray(r) || nonIterableSpread();\n}\nexport { _toConsumableArray as default };","function _classCallCheck(a, n) {\n  if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _classCallCheck as default };","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(e, r) {\n  for (var t = 0; t < r.length; t++) {\n    var o = r[t];\n    o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, toPropertyKey(o.key), o);\n  }\n}\nfunction _createClass(e, r, t) {\n  return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", {\n    writable: !1\n  }), e;\n}\nexport { _createClass as default };","import {version} from '../../package.json';\n\nexport default 'v' + version;\n","function _isNativeReflectConstruct() {\n  try {\n    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n  } catch (t) {}\n  return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {\n    return !!t;\n  })();\n}\nexport { _isNativeReflectConstruct as default };","function _setPrototypeOf(t, e) {\n  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, _setPrototypeOf(t, e);\n}\nexport { _setPrototypeOf as default };","import isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nfunction _construct(t, e, r) {\n  if (isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments);\n  var o = [null];\n  o.push.apply(o, e);\n  var p = new (t.bind.apply(t, o))();\n  return r && setPrototypeOf(p, r.prototype), p;\n}\nexport { _construct as default };","/*jshint worker: true*/\n\n// WorkerBroker routes messages between web workers and the main thread, allowing for simpler\n// async code via promises. Example usage:\n//\n// In web worker, register self as a callable \"target\", and define a method:\n//\n//     WorkerBroker.addTarget('self', self);\n//\n//     self.square = function (x) {\n//         return x * x;\n//     };\n//\n// In main thread, invoke that method and receive the result (if any) as a promise.\n//\n//     worker = new Worker(...);\n//     WorkerBroker.addWorker(worker);\n//\n//     WorkerBroker.postMessage(worker, 'self.square', 5).then(function(y) {\n//         console.log(y);\n//     });\n//\n//     -> prints 25\n//\n// Async code:\n//\n// For synchronous code that must pass a return value to the main thread, the function can simply\n// return an immediate value (see example above). For cases where the worker method needs to run\n// asynchronous code, the function can return a promise, and the resolved or rejected value will\n// be sent back to the main thread when the promise is fulfilled.\n//\n// Error handling:\n//\n// If the worker method either throws an error, or returns a promise that is rejected, it will be\n// sent back to the main thread as a promise rejection. These two examples are equivalent:\n//\n//     In worker, throwing an error:\n//\n//         self.broken = function () {\n//             throw new Error('error in worker!');\n//         };\n//\n//     In worker, returning a rejected promise:\n//\n//         self.broken = function () {\n//             return Promise.reject(new Error('error in worker!'));\n//         };\n//\n//     In main thread, both errors are received as a promise rejection:\n//\n//         WorkerBroker.postMessage(worker, 'self.broken').then(\n//             // Promise resolved\n//             function() {\n//                 console.log('success!');\n//             },\n//             // Promise rejected\n//             function(error) {\n//                 console.log('error!', error);\n//             });\n//\n//         -> prints 'error! error in worker'\n//\n// Calling from worker to main thread:\n//\n// The same style of calls can be made *from* a web worker, to the main thread. The API is the same\n// with the exception that the first argument, 'worker', is not needed for WorkerBroker.postMessage(),\n// since the main thread is the implicit target.\n//\n// In main thread, define a method and register it:\n//\n//     var geometry = {\n//         length: function(x, y) {\n//             return Math.sqrt(x * x + y * y);\n//         }\n//     };\n//\n//     WorkerBroker.addTarget('geometry', geometry);\n//\n// In worker thread):\n//\n//     WorkerBroker.postMessage('geometry.length', 3, 4).then(function(d) {\n//         console.log(d);\n//     });\n//\n//     -> prints 5\n//\n\nimport Thread from './thread';\nimport log from './log';\n\nvar WorkerBroker;\nexport default WorkerBroker = {};\n\n// Global list of all worker messages\n// Uniquely tracks every call made between main thread and a worker\nvar message_id = 0;\nvar messages = {};\n\n// Register an object to receive calls from other thread\nWorkerBroker.targets = {};\nWorkerBroker.addTarget = function (name, target) {\n    WorkerBroker.targets[name] = target;\n};\n\nWorkerBroker.removeTarget = function (name) {\n    if (name) {\n        delete WorkerBroker.targets[name];\n    }\n};\n\n// Given a dot-notation-style method name, e.g. 'Object.object.method',\n// find the object to call the method on from the list of registered targets\nfunction findTarget (method) {\n    var chain = [];\n    if (typeof method === 'string') {\n        chain = method.split('.');\n        method = chain.pop();\n    }\n\n    var target = WorkerBroker.targets;\n\n    for (let m=0; m < chain.length; m++) {\n        if (target[chain[m]]) {\n            target = target[chain[m]];\n        }\n        else {\n            return [];\n        }\n    }\n\n    return [method, target];\n}\n\n// Main thread:\n// - Send messages to workers, and optionally receive an async response as a promise\n// - Receive messages from workers, and optionally send an async response back as a promise\nfunction setupMainThread () {\n\n    // Send a message to a worker, and optionally get an async response\n    // Arguments:\n    //   - worker: one or more web worker instances to send the message to (single value or array)\n    //   - method: the method with this name, specified with dot-notation, will be invoked in the worker\n    //   - message: spread of arguments to call the method with\n    // Returns:\n    //   - a promise that will be fulfilled if the worker method returns a value (could be immediately, or async)\n    //\n    WorkerBroker.postMessage = function (worker, method, ...message) {\n        // If more than one worker specified, post to multiple\n        if (Array.isArray(worker)) {\n            return Promise.all(\n                worker.map(w => WorkerBroker.postMessage(w, method, ...message))\n            );\n        }\n\n        // Parse options\n        let options = {};\n        if (typeof method === 'object') {\n            options = method;\n            method = method.method;\n        }\n\n        // Track state of this message\n        var promise = new Promise((resolve, reject) => {\n            messages[message_id] = { method, message, resolve, reject };\n        });\n\n\n        let payload, transferables = [];\n\n        if (message && message.length === 1 && message[0] instanceof WorkerBroker.withTransferables) {\n            transferables = message[0].transferables;\n            message = message[0].value;\n        }\n\n        payload = {\n            type: 'main_send',      // mark message as method invocation from main thread\n            message_id,             // unique id for this message, for life of program\n            method,                 // will dispatch to a function of this name within the worker\n            message                 // message payload\n        };\n\n        if (options.stringify) {\n            payload = JSON.stringify(payload);\n        }\n\n        worker.postMessage(payload, transferables.map(t => t.object));\n        freeTransferables(transferables);\n        if (transferables.length > 0) {\n            log('trace', `'${method}' transferred ${transferables.length} objects to worker thread`);\n        }\n\n        message_id++;\n        return promise;\n    };\n\n    // Add a worker to communicate with - each worker must be registered from the main thread\n    WorkerBroker.addWorker = function (worker) {\n        if (!(worker instanceof Worker)) {\n            throw Error('Worker broker could not add non-Worker object', worker);\n        }\n\n        worker.addEventListener('message', function WorkerBrokerMainThreadHandler(event) {\n            let data = ((typeof event.data === 'string') ? JSON.parse(event.data) : event.data);\n            let id = data.message_id;\n\n            // Listen for messages coming back from the worker, and fulfill that message's promise\n            if (data.type === 'worker_reply') {\n                // Pass the result to the promise\n                if (messages[id]) {\n                    if (data.error) {\n                        messages[id].reject(data.error);\n                    }\n                    else {\n                        messages[id].resolve(data.message);\n                    }\n                    delete messages[id];\n                }\n            }\n            // Listen for messages initiating a call from the worker, dispatch them,\n            // and send any return value back to the worker\n            // Unique id for this message & return call to main thread\n            else if (data.type === 'worker_send' && id != null) {\n                // Call the requested method and save the return value\n                let result, error, target, method_name, method;\n                try {\n                    [method_name, target] = findTarget(data.method);\n                    if (!target) {\n                        throw Error(`Worker broker could not dispatch message type ${data.method} on target ${data.target} because no object with that name is registered on main thread`);\n                    }\n\n                    method = (typeof target[method_name] === 'function') && target[method_name];\n                    if (!method) {\n                        throw Error(`Worker broker could not dispatch message type ${data.method} on target ${data.target} because object has no method with that name`);\n                    }\n\n                    result = method.apply(target, data.message);\n                }\n                catch(e) {\n                    // Thrown errors will be passed back (in string form) to worker\n                    error = e;\n\n                }\n                // Send return value to worker\n                let payload, transferables = [];\n\n                // Async result\n                if (result instanceof Promise) {\n                    result.then((value) => {\n                        if (value instanceof WorkerBroker.withTransferables) {\n                            transferables = value.transferables;\n                            value = value.value[0];\n                        }\n\n                        payload = {\n                            type: 'main_reply',\n                            message_id: id,\n                            message: value\n                        };\n                        worker.postMessage(payload, transferables.map(t => t.object));\n                        freeTransferables(transferables);\n                        if (transferables.length > 0) {\n                            log('trace', `'${method_name}' transferred ${transferables.length} objects to worker thread`);\n                        }\n\n                    }, (error) => {\n                        worker.postMessage({\n                            type: 'main_reply',\n                            message_id: id,\n                            error: (error instanceof Error ? `${error.message}: ${error.stack}` : error)\n                        });\n                    });\n                }\n                // Immediate result\n                else {\n                    if (result instanceof WorkerBroker.withTransferables) {\n                        transferables = result.transferables;\n                        result = result.value[0];\n                    }\n\n                    payload = {\n                        type: 'main_reply',\n                        message_id: id,\n                        message: result,\n                        error: (error instanceof Error ? `${error.message}: ${error.stack}` : error)\n                    };\n                    worker.postMessage(payload, transferables.map(t => t.object));\n                    freeTransferables(transferables);\n                    if (transferables.length > 0) {\n                        log('trace', `'${method_name}' transferred ${transferables.length} objects to worker thread`);\n                    }\n                }\n            }\n        });\n\n    };\n\n    // Expose for debugging\n    WorkerBroker.getMessages = function () {\n        return messages;\n    };\n\n    WorkerBroker.getMessageId = function () {\n        return message_id;\n    };\n\n}\n\n// Worker threads:\n// - Receive messages from main thread, and optionally send an async response back as a promise\n// - Send messages to main thread, and optionally receive an async response as a promise\nfunction setupWorkerThread () {\n\n    // Send a message to the main thread, and optionally get an async response as a promise\n    // Arguments:\n    //   - method: the method with this name, specified with dot-notation, will be invoked on the main thread\n    //   - message: array of arguments to call the method with\n    // Returns:\n    //   - a promise that will be fulfilled if the main thread method returns a value (could be immediately, or async)\n    //\n    WorkerBroker.postMessage = function (method, ...message) {\n        // Parse options\n        let options = {};\n        if (typeof method === 'object') {\n            options = method;\n            method = method.method;\n        }\n\n        // Track state of this message\n        var promise = new Promise((resolve, reject) => {\n            messages[message_id] = { method, message, resolve, reject };\n        });\n\n        let payload, transferables = [];\n\n        if (message && message.length === 1 && message[0] instanceof WorkerBroker.withTransferables) {\n            transferables = message[0].transferables;\n            message = message[0].value;\n        }\n\n        payload = {\n            type: 'worker_send',    // mark message as method invocation from worker\n            message_id,             // unique id for this message, for life of program\n            method,                 // will dispatch to a method of this name on the main thread\n            message                 // message payload\n        };\n\n        if (options.stringify) {\n            payload = JSON.stringify(payload);\n        }\n\n        self.postMessage(payload, transferables.map(t => t.object));\n        freeTransferables(transferables);\n        if (transferables.length > 0) {\n            log('trace', `'${method}' transferred ${transferables.length} objects to main thread`);\n        }\n\n        message_id++;\n        return promise;\n    };\n\n    self.addEventListener('message', function WorkerBrokerWorkerThreadHandler(event) {\n        let data = ((typeof event.data === 'string') ? JSON.parse(event.data) : event.data);\n        let id = data.message_id;\n\n        // Listen for messages coming back from the main thread, and fulfill that message's promise\n        if (data.type === 'main_reply') {\n            // Pass the result to the promise\n            if (messages[id]) {\n                if (data.error) {\n                    messages[id].reject(data.error);\n                }\n                else {\n                    messages[id].resolve(data.message);\n                }\n                delete messages[id];\n            }\n        }\n        // Receive messages from main thread, dispatch them, and send back a reply\n        // Unique id for this message & return call to main thread\n        else if (data.type === 'main_send' && id != null) {\n            // Call the requested worker method and save the return value\n            let result, error, target, method_name, method;\n            try {\n                [method_name, target] = findTarget(data.method);\n                if (!target) {\n                    throw Error(`Worker broker could not dispatch message type ${data.method} on target ${data.target} because no object with that name is registered on main thread`);\n                }\n\n                method = (typeof target[method_name] === 'function') && target[method_name];\n\n                if (!method) {\n                    throw Error(`Worker broker could not dispatch message type ${data.method} because worker has no method with that name`);\n                }\n\n                result = method.apply(target, data.message);\n            }\n            catch(e) {\n                // Thrown errors will be passed back (in string form) to main thread\n                error = e;\n            }\n\n            // Send return value to main thread\n            let payload, transferables = [];\n\n            // Async result\n            if (result instanceof Promise) {\n                result.then((value) => {\n                    if (value instanceof WorkerBroker.withTransferables) {\n                        transferables = value.transferables;\n                        value = value.value[0];\n                    }\n\n                    payload = {\n                        type: 'worker_reply',\n                        message_id: id,\n                        message: value\n                    };\n                    self.postMessage(payload, transferables.map(t => t.object));\n                    freeTransferables(transferables);\n                    if (transferables.length > 0) {\n                        log('trace', `'${method_name}' transferred ${transferables.length} objects to main thread`);\n                    }\n                }, (error) => {\n                    self.postMessage({\n                        type: 'worker_reply',\n                        message_id: id,\n                        error: (error instanceof Error ? `${error.message}: ${error.stack}` : error)\n                    });\n                });\n            }\n            // Immediate result\n            else {\n                if (result instanceof WorkerBroker.withTransferables) {\n                    transferables = result.transferables;\n                    result = result.value[0];\n                }\n\n                payload = {\n                    type: 'worker_reply',\n                    message_id: id,\n                    message: result,\n                    error: (error instanceof Error ? `${error.message}: ${error.stack}` : error)\n                };\n                self.postMessage(payload, transferables.map(t => t.object));\n                freeTransferables(transferables);\n                if (transferables.length > 0) {\n                    log('trace', `'${method_name}' transferred ${transferables.length} objects to main thread`);\n                }\n            }\n        }\n    });\n\n}\n\n// Special value wrapper, to indicate that we want to find and include transferable objects in the message\nWorkerBroker.withTransferables = function (...value) {\n    if (!(this instanceof WorkerBroker.withTransferables)) {\n        return new WorkerBroker.withTransferables(...value);\n    }\n\n    this.value = value;\n    this.transferables = findTransferables(this.value);\n};\n\n// Build a list of transferable objects from a source object\n// Returns a list of info about each transferable:\n//   - object: the actual transferable object\n//   - parent: the parent object that the transferable is a property of (if any)\n//   - property: the property name of the transferable on the parent object (if any)\n// TODO: add option in case you DON'T want to transfer objects\nfunction findTransferables(source, parent = null, property = null, list = []) {\n    if (!source) {\n        return list;\n    }\n\n    if (Array.isArray(source)) {\n        // Check each array element\n        source.forEach((x, i) => findTransferables(x, source, i, list));\n    }\n    else if (typeof source === 'object') {\n        // Is the object a transferable array buffer?\n        if (source instanceof ArrayBuffer) {\n            list.push({ object: source, parent, property });\n        }\n        // Or looks like a typed array (has an array buffer property)?\n        else if (source.buffer instanceof ArrayBuffer) {\n            list.push({ object: source.buffer, parent, property });\n        }\n        // Otherwise check each property\n        else {\n            for (let prop in source) {\n                findTransferables(source[prop], source, prop, list);\n            }\n        }\n    }\n    return list;\n}\n\n// Remove neutered transferables from parent objects, as they should no longer be accessed after transfer\nfunction freeTransferables(transferables) {\n    if (!Array.isArray(transferables)) {\n        return;\n    }\n    transferables.filter(t => t.parent && t.property).forEach(t => delete t.parent[t.property]);\n}\n\n// Setup this thread as appropriate\nif (Thread.is_main) {\n    setupMainThread();\n}\n\nif (Thread.is_worker) {\n    setupWorkerThread();\n}\n","import version from './version';\nimport Thread from './thread';\nimport WorkerBroker from './worker_broker';\n\nconst LEVELS = {\n    silent: -1,\n    error: 0,\n    warn: 1,\n    info: 2,\n    debug: 3,\n    trace: 4\n};\n\nconst methods = {};\nlet logged_once = {};\n\nfunction methodForLevel (level) {\n    if (Thread.is_main) {\n        methods[level] = methods[level] || (console[level] ? console[level] : console.log).bind(console); // eslint-disable-line no-console\n        return methods[level];\n    }\n}\n\n// Logs message, proxying any log requests from worker threads back to the main thread.\n// Returns (asynchronously, due to proxying) a boolean indicating if the message was logged.\n// Option `once: true` can be used to only log each unique log message once (e.g. for warnings\n// that would otherwise be repetitive or possibly logged thousands of times, such as per feature).\nexport default function log (opts, ...msg) {\n    let level = (typeof opts === 'object') ? opts.level : opts;\n    if (LEVELS[level] <= LEVELS[log.level]) {\n        if (Thread.is_worker) {\n            // Proxy to main thread\n            return WorkerBroker.postMessage({ method: '_logProxy', stringify: true }, opts, ...msg);\n        }\n        else {\n            // Only log message once?\n            if (typeof opts === 'object' && opts.once === true) {\n                if (logged_once[JSON.stringify(msg)]) {\n                    return Promise.resolve(false);\n                }\n                logged_once[JSON.stringify(msg)] = true;\n            }\n\n            // Write to console (on main thread)\n            let logger = methodForLevel(level);\n            if (msg.length > 1) {\n                logger(`Tangram ${version} [${level}]: ${msg[0]}`, ...msg.slice(1));\n            }\n            else {\n                logger(`Tangram ${version} [${level}]: ${msg[0]}`);\n            }\n        }\n        return Promise.resolve(true);\n    }\n    return Promise.resolve(false);\n}\n\nlog.level = 'info';\nlog.workers = null;\n\nlog.setLevel = function (level) {\n    log.level = level;\n\n    if (Thread.is_main && Array.isArray(log.workers)) {\n        WorkerBroker.postMessage(log.workers, '_logSetLevelProxy', level);\n    }\n};\n\nif (Thread.is_main) {\n    log.setWorkers = function (workers) {\n        log.workers = workers;\n    };\n\n    log.reset = function () {\n        logged_once = {};\n    };\n}\n\nWorkerBroker.addTarget('_logProxy', log);                   // proxy log messages from worker to main thread\nWorkerBroker.addTarget('_logSetLevelProxy', log.setLevel);  // proxy log level setting from main to worker thread\n","// Miscellaneous utilities\n/*jshint worker: true*/\n\nimport log from './log';\nimport Thread from './thread';\nimport WorkerBroker from './worker_broker';\n\nconst Utils = {};\n\nexport default Utils;\n\nWorkerBroker.addTarget('Utils', Utils);\n\n// Basic Safari detection\n// http://stackoverflow.com/questions/7944460/detect-safari-browser\nUtils.isSafari = function () {\n    return /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n};\n\n// Basic IE11 or Edge detection\nUtils.isMicrosoft = function () {\n    return /(Trident\\/7.0|Edge[ /](\\d+[.\\d]+))/i.test(navigator.userAgent);\n};\n\nUtils._requests = {};       // XHR requests on current thread\nUtils._proxy_requests = {}; // XHR requests proxied to main thread\n\n// `request_key` is a user-provided key that can be later used to cancel the request\nUtils.io = function (url, timeout = 60000, responseType = 'text', method = 'GET', headers = {}, request_key = null, proxy = false) {\n    if (Thread.is_worker && Utils.isMicrosoft()) {\n        // Some versions of IE11 and Edge will hang web workers when performing XHR requests\n        // These requests can be proxied through the main thread\n        // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/9545866/\n        log('debug', 'Proxying request for URL to worker', url);\n\n        if (request_key) {\n            Utils._proxy_requests[request_key] = true; // mark as proxied\n        }\n        return WorkerBroker.postMessage('Utils.io', url, timeout, responseType, method, headers, request_key, true);\n    }\n    else {\n        var request = new XMLHttpRequest();\n        var promise = new Promise((resolve, reject) => {\n            request.open(method, url, true);\n            request.timeout = timeout;\n            request.responseType = responseType;\n\n            // Attach optional request headers\n            if (headers && typeof headers === 'object') {\n                for (let key in headers) {\n                    request.setRequestHeader(key, headers[key]);\n                }\n            }\n\n            request.onload = () => {\n                if (request.status === 200) {\n                    if (['text', 'json'].indexOf(request.responseType) > -1) {\n                        resolve({ body: request.responseText, status: request.status });\n                    }\n                    else {\n                        resolve({ body: request.response, status: request.status });\n                    }\n                }\n                else if (request.status === 204) { // No Content\n                    resolve({ body: null, status: request.status });\n                }\n                else {\n                    reject(Error('Request error with a status of ' + request.statusText));\n                }\n            };\n            request.onerror = (evt) => {\n                reject(Error('There was a network error' + evt.toString()));\n            };\n            request.ontimeout = (evt) => {\n                reject(Error('timeout '+ evt.toString()));\n            };\n            request.send();\n        });\n\n        promise = promise.then(response => {\n            if (request_key) {\n                delete Utils._requests[request_key];\n            }\n\n            if (proxy) {\n                return WorkerBroker.withTransferables(response);\n            }\n            return response;\n        });\n\n        if (request_key) {\n            Utils._requests[request_key] = request;\n        }\n\n        return promise;\n    }\n};\n\n// Ãancel a pending network request by user-provided request key\nUtils.cancelRequest = function (key) {\n    // Check for a request that was proxied to the main thread\n    if (Thread.is_worker && Utils._proxy_requests[key]) {\n        return WorkerBroker.postMessage('Utils.cancelRequest', key); // forward to main thread\n    }\n\n    let req = Utils._requests[key];\n    if (req) {\n        log('trace', `Cancelling network request key '${key}'`);\n        Utils._requests[key].abort();\n        delete Utils._requests[key];\n    }\n    else {\n        log('trace', `Could not find network request key '${key}'`);\n    }\n};\n\n// Stringify an object into JSON, but convert functions to strings\nUtils.serializeWithFunctions = function (obj) {\n    if (typeof obj === 'function') {\n        return obj.toString();\n    }\n\n    let serialized = JSON.stringify(obj, function(k, v) {\n        // Convert functions to strings\n        if (typeof v === 'function') {\n            return v.toString();\n        }\n        return v;\n    });\n\n    return serialized;\n};\n\n// Default to allowing high pixel density\n// Returns true if display density changed\nUtils.use_high_density_display = true;\nUtils.updateDevicePixelRatio = function () {\n    let prev = Utils.device_pixel_ratio;\n    Utils.device_pixel_ratio = (Utils.use_high_density_display && window.devicePixelRatio) || 1;\n    return Utils.device_pixel_ratio !== prev;\n};\n\nif (Thread.is_main) {\n    Utils.updateDevicePixelRatio();\n}\n\n// Used for differentiating between power-of-2 and non-power-of-2 textures\n// Via: http://stackoverflow.com/questions/19722247/webgl-wait-for-texture-to-load\nUtils.isPowerOf2 = function(value) {\n    return (value & (value - 1)) === 0;\n};\n\n// Interpolate 'x' along a series of control points\n// 'points' is an array of control points in the form [x, y]\n//\n// Example:\n//     Control points:\n//         [0, 5]:  when x=0, y=5\n//         [4, 10]: when x=4, y=10\n//\n//     Utils.interpolate(2, [[0, 5], [4, 10]]);\n//     -> computes x=2, halfway between x=0 and x=4: (10 - 5) / 2 +5\n//     -> returns 7.5\n//\n// TODO: add other interpolation methods besides linear\n//\nUtils.interpolate = function(x, points, transform) {\n    // If this doesn't resemble a list of control points, just return the original value\n    if (!Array.isArray(points) || !Array.isArray(points[0])) {\n        return points;\n    }\n    else if (points.length < 1) {\n        return points;\n    }\n\n    var x1, x2, d, y, y1, y2;\n\n    // Min bounds\n    if (x <= points[0][0]) {\n        y = points[0][1];\n        if (typeof transform === 'function') {\n            y = transform(y);\n        }\n    }\n    // Max bounds\n    else if (x >= points[points.length-1][0]) {\n        y = points[points.length-1][1];\n        if (typeof transform === 'function') {\n            y = transform(y);\n        }\n    }\n    // Find which control points x is between\n    else {\n        for (var i=0; i < points.length - 1; i++) {\n            if (x >= points[i][0] && x < points[i+1][0]) {\n                // Linear interpolation\n                x1 = points[i][0];\n                x2 = points[i+1][0];\n\n                // Multiple values\n                if (Array.isArray(points[i][1])) {\n                    y = [];\n                    for (var c=0; c < points[i][1].length; c++) {\n                        if (typeof transform === 'function') {\n                            y1 = transform(points[i][1][c]);\n                            y2 = transform(points[i+1][1][c]);\n                            d = y2 - y1;\n                            y[c] = d * (x - x1) / (x2 - x1) + y1;\n                        }\n                        else {\n                            d = points[i+1][1][c] - points[i][1][c];\n                            y[c] = d * (x - x1) / (x2 - x1) + points[i][1][c];\n                        }\n                    }\n                }\n                // Single value\n                else {\n                    if (typeof transform === 'function') {\n                        y1 = transform(points[i][1]);\n                        y2 = transform(points[i+1][1]);\n                        d = y2 - y1;\n                        y = d * (x - x1) / (x2 - x1) + y1;\n                    }\n                    else {\n                        d = points[i+1][1] - points[i][1];\n                        y = d * (x - x1) / (x2 - x1) + points[i][1];\n                    }\n                }\n                break;\n            }\n        }\n    }\n    return y;\n};\n\nUtils.toCSSColor = function (color) {\n    if (color != null) {\n        if (color[3] === 1) { // full opacity\n            return `rgb(${color.slice(0, 3).map(c => Math.round(c * 255)).join(', ')})`;\n        }\n        // RGB is between [0, 255] opacity is between [0, 1]\n        return `rgba(${color.map((c, i) => (i < 3 && Math.round(c * 255)) || c).join(', ')})`;\n    }\n};\n","let debugSettings;\n\nexport default debugSettings = {\n    // draws a blue rectangle border around the collision box of a label\n    draw_label_collision_boxes: false,\n\n    // draws a green rectangle border within the texture box of a label\n    draw_label_texture_boxes: false,\n\n    // suppreses fade-in of labels\n    suppress_label_fade_in: false,\n\n    // suppress animaton of label snap to pixel grid\n    suppress_label_snap_animation: false,\n\n    // show hidden labels for debugging\n    show_hidden_labels: false,\n\n    // collect feature/geometry stats on styling layers\n    layer_stats: false,\n\n    // draw scene in wireframe mode\n    wireframe: false\n};\n\nexport function mergeDebugSettings (settings) {\n    Object.assign(debugSettings, settings);\n}\n","import log from './log';\n\n// Adds a base origin to relative URLs\nexport function addBaseURL (url, base) {\n    if (!url || !isRelativeURL(url)) {\n        return url;\n    }\n\n    var relative_path = (url[0] !== '/');\n    var base_info;\n    if (base) {\n        base_info = document.createElement('a'); // use a temporary element to parse URL\n        base_info.href = base;\n    }\n    else {\n        base_info = window.location;\n    }\n\n    if (relative_path) {\n        let path = pathForURL(base_info.href);\n        url = path + url;\n    }\n    else {\n        let origin = base_info.origin;\n        if (!origin) {\n            origin = base_info.protocol + '//' + base_info.host; // IE11 doesn't have origin property\n        }\n        url = origin + url;\n    }\n\n    return url;\n}\n\nexport function pathForURL (url) {\n    if (typeof url === 'string' && url.search(/^(data|blob):/) === -1) {\n        let qs = url.indexOf('?');\n        if (qs > -1) {\n            url = url.substr(0, qs);\n        }\n\n        let hash = url.indexOf('#');\n        if (hash > -1) {\n            url = url.substr(0, hash);\n        }\n\n        return url.substr(0, url.lastIndexOf('/') + 1) || '';\n    }\n    return '';\n}\n\nexport function extensionForURL (url) {\n    url = url.split('/').pop();\n    let last_dot = url.lastIndexOf('.');\n    if (last_dot > -1) {\n        return url.substring(last_dot + 1);\n    }\n}\n\nexport function isLocalURL (url) {\n    if (typeof url !== 'string') {\n        return;\n    }\n    return (url.search(/^(data|blob):/) > -1);\n}\n\nexport function isRelativeURL (url) {\n    if (typeof url !== 'string') {\n        return;\n    }\n    return !(url.search(/^(http|https|data|blob):/) > -1 || url.substr(0, 2) === '//');\n}\n\n// Resolves './' and '../' components from relative path, to get a \"flattened\" path\nexport function flattenRelativeURL (url) {\n    let dirs = (url || '').split('/');\n    for (let d = 1; d < dirs.length; d++) {\n        if (dirs[d] === '.') {\n            dirs.splice(d, 1);\n            d--;\n        }\n        else if (dirs[d] === '..') {\n            d = d + 0;\n            dirs.splice(d-1, 2);\n            d--;\n        }\n    }\n    return dirs.join('/');\n}\n\n// Add a set of query string params to a URL\n// params: hash of key/value pairs of query string parameters\n// returns array of: [modified URL, array of duplicate param name and values]\nexport function addParamsToURL (url, params) {\n    if (!params || Object.keys(params).length === 0) {\n        return [url, []];\n    }\n\n    var qs_index = url.indexOf('?');\n    var hash_index = url.indexOf('#');\n\n    // Save and trim hash\n    var hash = '';\n    if (hash_index > -1) {\n        hash = url.slice(hash_index);\n        url = url.slice(0, hash_index);\n    }\n\n    // Start query string\n    if (qs_index === -1) {\n        qs_index = url.length;\n        url += '?';\n    }\n    qs_index++; // advanced past '?'\n\n    // Build query string params\n    var url_params = '';\n    var dupes = [];\n    for (var p in params) {\n        if (getURLParameter(p, url) !== '') {\n            dupes.push([p, params[p]]);\n            continue;\n        }\n        url_params += `${p}=${params[p]}&`;\n    }\n\n    // Insert new query string params and restore hash\n    url = url.slice(0, qs_index) + url_params + url.slice(qs_index) + hash;\n\n    return [url, dupes];\n}\n\n// Polyfill (for Safari compatibility)\nlet _createObjectURL;\nexport function createObjectURL (url) {\n    if (_createObjectURL === undefined) {\n        _createObjectURL = (window.URL && window.URL.createObjectURL) || (window.webkitURL && window.webkitURL.createObjectURL);\n\n        if (typeof _createObjectURL !== 'function') {\n            _createObjectURL = null;\n            log('warn', 'window.URL.createObjectURL (or vendor prefix) not found, unable to create local blob URLs');\n        }\n    }\n\n    if (_createObjectURL) {\n        return _createObjectURL(url);\n    }\n    else {\n        return url;\n    }\n}\n\nlet _revokeObjectURL;\nexport function revokeObjectURL (url) {\n    if (_revokeObjectURL === undefined) {\n        _revokeObjectURL = (window.URL && window.URL.revokeObjectURL) || (window.webkitURL && window.webkitURL.revokeObjectURL);\n\n        if (typeof _revokeObjectURL !== 'function') {\n            _revokeObjectURL = null;\n            log('warn', 'window.URL.revokeObjectURL (or vendor prefix) not found, unable to create local blob URLs');\n        }\n    }\n\n    if (_revokeObjectURL) {\n        return _revokeObjectURL(url);\n    }\n    else {\n        return url;\n    }\n}\n\n// Get URL that the current script was loaded from\n// If currentScript is not available, loops through <script> elements searching for a list of provided paths\n// e.g. findCurrentURL('tangram.debug.js', 'tangram.min.js');\nexport function findCurrentURL (...paths) {\n    // Find currently executing script\n    var script = document.currentScript;\n    if (script) {\n        return script.src;\n    }\n    else if (Array.isArray(paths)) {\n        // Fallback on looping through <script> elements if document.currentScript is not supported\n        var scripts = document.getElementsByTagName('script');\n        for (var s=0; s < scripts.length; s++) {\n            for (let p=0; p < paths.length; p++) {\n                if (scripts[s].src.indexOf(paths[p]) > -1) {\n                    return scripts[s].src;\n                }\n            }\n        }\n    }\n}\n\n// Via https://davidwalsh.name/query-string-javascript\nfunction getURLParameter (name, url) {\n    name = name.replace(/[[]/, '\\\\[').replace(/[\\]]/, '\\\\]');\n    var regex = new RegExp('[\\\\?&]' + name + '=([^&#]*)');\n    var results = regex.exec(url);\n    return results === null ? '' : decodeURIComponent(results[1].replace(/\\+/g, ' '));\n}\n","// import log from './log';\n\nconst Task = {\n    id: 0,              // unique id per task\n    queue: [],          // current queue of outstanding tasks\n    max_time: 20,       // default time in which all tasks should complete per frame\n    start_time: null,   // start time for tasks in current frame\n    state: {},          // track flags about environment state (ex: whether user is currently moving the view)\n\n    add (task) {\n        task.id = Task.id++;\n        task.max_time = task.max_time || Task.max_time; // allow task to run for this much time (tasks have a global collective limit per frame, too)\n        task.pause_factor = task.pause_factor || 1;     // pause tasks by this many frames when they run too long\n        let promise = new Promise((resolve, reject) => {\n            task.resolve = resolve;\n            task.reject = reject;\n        });\n        task.promise = promise;\n\n        task.elapsed = 0;\n        task.total_elapsed = 0;\n        task.stats = { calls: 0 };\n        this.queue.push(task);\n\n        // Run task immediately if under total frame time\n        this.start_time = this.start_time || performance.now(); // start frame timer if necessary\n        this.elapsed = performance.now() - this.start_time;\n        if (this.elapsed < Task.max_time || task.immediate) {\n            this.process(task);\n        }\n\n        return task.promise;\n    },\n\n    remove (task) {\n        let idx = this.queue.indexOf(task);\n        if (idx > -1) {\n            this.queue.splice(idx, 1);\n        }\n    },\n\n    process (task) {\n        // Skip task while user is moving the view, if the task requests it\n        // (for intensive tasks that lock the UI, like canvas rasterization)\n        if (this.state.user_moving_view && task.user_moving_view === false) {\n            // log('debug', `*** SKIPPING task id ${task.id}, ${task.type} while user is moving view`);\n            return;\n        }\n\n        // Skip task if it's currently paused\n        if (task.pause) {\n            // log('debug', `*** PAUSING task id ${task.id}, ${task.type} (${task.pause})`);\n            task.pause--;\n            return true;\n        }\n\n        task.stats.calls++;\n        task.start_time = performance.now(); // start task timer\n        return task.run(task);\n    },\n\n    processAll () {\n        this.start_time = this.start_time || performance.now(); // start frame timer if necessary\n        for (let i=0; i < this.queue.length; i++) {\n            // Exceeded either total task time, or total frame time\n            let task = this.queue[i];\n\n            if (this.process(task) !== true) {\n                // If the task didn't complete, pause it for a task-specific number of frames\n                // (can be disabled by setting pause_factor to 0)\n                if (!task.pause) {\n                    task.pause = (task.elapsed > task.max_time) ? task.pause_factor : 0;\n                }\n                task.total_elapsed += task.elapsed;\n            }\n\n            // Check total frame time\n            this.elapsed = performance.now() - this.start_time;\n            if (this.elapsed >= Task.max_time) {\n                this.start_time = null; // reset frame timer\n                break;\n            }\n        }\n\n    },\n\n    finish (task, value) {\n        task.elapsed = performance.now() - task.start_time;\n        task.total_elapsed += task.elapsed;\n        // log('debug', `task type ${task.type}, tile ${task.id}, finish after ${task.stats.calls} calls, ${task.total_elapsed.toFixed(2)} elapsed`);\n        this.remove(task);\n        task.resolve(value);\n        return task.promise;\n    },\n\n    cancel (task) {\n        let val;\n\n        if (task.cancel instanceof Function) {\n            val = task.cancel(task); // optional cancel function\n        }\n\n        task.resolve(val);\n    },\n\n    shouldContinue (task) {\n        // Suspend task if it runs over its specific per-frame limit, or the global limit\n        task.elapsed = performance.now() - task.start_time;\n        this.elapsed = performance.now() - this.start_time;\n        return ((task.elapsed < task.max_time) && (this.elapsed < Task.max_time));\n    },\n\n    removeForTile (tile_id) {\n        for (let idx = this.queue.length-1; idx >= 0; idx--) {\n            if (this.queue[idx].tile_id === tile_id) {\n                // log('trace', `Task: remove tasks for tile ${tile_id}`);\n                this.cancel(this.queue[idx]);\n                this.queue.splice(idx, 1);\n            }\n        }\n    },\n\n    setState (state) {\n        this.state = state;\n    }\n\n};\n\nexport default Task;\n","import log from './log';\n\nexport default function subscribeMixin (target) {\n\n    let listeners = [];\n\n    return Object.assign(target, {\n\n        subscribe(listener) {\n            if (listeners.indexOf(listener) === -1) {\n                listeners.push(listener);\n            }\n        },\n\n        unsubscribe(listener) {\n            let index = listeners.indexOf(listener);\n            if (index > -1) {\n                listeners.splice(index, 1);\n            }\n        },\n\n        unsubscribeAll() {\n            listeners = [];\n        },\n\n        trigger(event, ...data) {\n            listeners.forEach(listener => {\n                if (typeof listener[event] === 'function') {\n                    try {\n                        listener[event](...data);\n                    }\n                    catch(e) {\n                        log('warn', `Caught exception in listener for event '${event}':`, e);\n                    }\n                }\n            });\n        },\n\n        hasSubscribersFor(event) {\n            let has = false;\n            listeners.forEach(listener => {\n                if (typeof listener[event] === 'function') {\n                    has = true;\n                }\n            });\n            return has;\n        }\n\n    });\n\n}\n","export default function sliceObject (obj, keys) {\n    let sliced = {};\n    keys.forEach(k => sliced[k] = obj[k]);\n    return sliced;\n}\n","// Texture management\nimport log from '../utils/log';\nimport Utils from '../utils/utils';\nimport subscribeMixin from '../utils/subscribe';\nimport WorkerBroker from '../utils/worker_broker';\n\n// GL texture wrapper object for keeping track of a global set of textures, keyed by a unique user-defined name\nexport default class Texture {\n\n    constructor(gl, name, options = {}) {\n        options = Texture.sliceOptions(options); // exclude any non-texture-specific props\n        this.gl = gl;\n        this.texture = gl.createTexture();\n        if (this.texture) {\n            this.valid = true;\n        }\n        this.bind();\n\n        this.name = name;\n        this.retain_count = 0;\n        this.config_type = null;\n        this.loading = null;    // a Promise object to track the loading state of this texture\n        this.loaded = false;    // successfully loaded as expected\n        this.filtering = options.filtering;\n        this.density = options.density || 1; // native pixel density of texture\n        this.sprites = options.sprites;\n        this.texcoords = {};    // sprite UVs ([0, 1] range)\n        this.sizes = {};        // sprite sizes (pixel size)\n        this.css_sizes = {};    // sprite sizes, adjusted for native texture pixel density\n        this.aspects = {};      // sprite aspect ratios\n\n        // Default to a 1-pixel transparent black texture so we can safely render while we wait for an image to load\n        // See: http://stackoverflow.com/questions/19722247/webgl-wait-for-texture-to-load\n        this.setData(1, 1, new Uint8Array([0, 0, 0, 0]), { filtering: 'nearest' });\n        this.loaded = false; // don't consider loaded when only placeholder data is present\n\n        // Destroy previous texture if present\n        if (Texture.textures[this.name]) {\n            // Preserve previous retain count\n            this.retain_count = Texture.textures[this.name].retain_count;\n            Texture.textures[this.name].retain_count = 0; // allow to be freed\n            Texture.textures[this.name].destroy();\n        }\n\n        // Cache texture instance and definition\n        Texture.textures[this.name] = this;\n        Texture.texture_configs[this.name] = JSON.stringify(Object.assign({ name }, options));\n\n        this.load(options);\n        log('trace', `creating Texture ${this.name}`);\n    }\n\n    // Destroy a single texture instance\n    destroy({ force } = {}) {\n        if (this.retain_count > 0 && !force) {\n            log('error', `Texture '${this.name}': destroying texture with retain count of '${this.retain_count}'`);\n            return;\n        }\n\n        if (!this.valid) {\n            return;\n        }\n        this.gl.deleteTexture(this.texture);\n        this.texture = null;\n        if (Texture.textures[this.name] === this) {\n            delete Texture.textures[this.name];\n            delete Texture.texture_configs[this.name];\n        }\n        this.valid = false;\n        log('trace', `destroying Texture ${this.name}`);\n    }\n\n    retain () {\n        this.retain_count++;\n    }\n\n    release () {\n        if (this.retain_count <= 0) {\n            log('error', `Texture '${this.name}': releasing texture with retain count of '${this.retain_count}'`);\n        }\n\n        this.retain_count--;\n        if (this.retain_count <= 0) {\n            this.destroy();\n        }\n    }\n\n    bind(unit = 0) {\n        if (!this.valid) {\n            return;\n        }\n\n        if (Texture.activeUnit !== unit) {\n            this.gl.activeTexture(this.gl.TEXTURE0 + unit);\n            Texture.activeUnit = unit;\n            Texture.boundTexture = null; // texture must be re-bound when unit changes\n        }\n\n        if (Texture.boundTexture !== this.texture) {\n            this.gl.bindTexture(this.gl.TEXTURE_2D, this.texture);\n            Texture.boundTexture = this.texture;\n        }\n    }\n\n    load(options) {\n        if (!options) {\n            return this.loading || Promise.resolve(this);\n        }\n\n        this.loading = null;\n        if (typeof options.url === 'string') {\n            this.config_type = 'url';\n            this.setUrl(options.url, options);\n        } else if (options.element) {\n            this.config_type = 'element';\n            this.setElement(options.element, options);\n        } else if (options.data && options.width && options.height) {\n            this.config_type = 'data';\n            this.setData(options.width, options.height, options.data, options);\n        }\n\n        this.loading =\n            (this.loading && this.loading.then(() => { this.calculateSprites(); return this; })) ||\n            Promise.resolve(this);\n        return this.loading;\n    }\n\n    // Sets texture from an url\n    setUrl(url, options = {}) {\n        if (!this.valid) {\n            return;\n        }\n\n        this.url = url; // save URL reference (will be overwritten when element is loaded below)\n\n        this.loading = new Promise(resolve => {\n            let image = new Image();\n            image.onload = () => {\n                try {\n                    // For data URL images, first draw the image to a separate canvas element. Workaround for\n                    // obscure bug seen with small (<28px) SVG images encoded as data URLs in Chrome and Safari.\n                    if (this.url.slice(0, 5) === 'data:') {\n                        const canvas = document.createElement('canvas');\n                        const ctx = canvas.getContext('2d');\n                        canvas.width = image.width;\n                        canvas.height = image.height;\n                        ctx.drawImage(image, 0, 0);\n                        this.setElement(canvas, options);\n                    }\n                    else {\n                        this.setElement(image, options);\n                    }\n                }\n                catch (e) {\n                    this.loaded = false;\n                    log('warn', `Texture '${this.name}': failed to load url: '${this.url}'`, e, options);\n                    Texture.trigger('warning', { message: `Failed to load texture from ${this.url}`, error: e, texture: options });\n                }\n\n                this.loaded = true;\n                resolve(this);\n            };\n            image.onerror = e => {\n                // Warn and resolve on error\n                this.loaded = false;\n                log('warn', `Texture '${this.name}': failed to load url: '${this.url}'`, e, options);\n                Texture.trigger('warning', { message: `Failed to load texture from ${this.url}`, error: e, texture: options });\n                resolve(this);\n            };\n\n            // Safari has a bug loading data-URL images with CORS enabled, so it must be disabled in that case\n            // https://bugs.webkit.org/show_bug.cgi?id=123978\n            if (!(Utils.isSafari() && this.url.slice(0, 5) === 'data:')) {\n                image.crossOrigin = 'anonymous';\n            }\n\n            image.src = this.url;\n        });\n        return this.loading;\n    }\n\n    // Sets texture to a raw image buffer\n    setData(width, height, data, options = {}) {\n        this.width = width;\n        this.height = height;\n\n        // Convert regular array to typed array\n        if (Array.isArray(data)) {\n            data = new Uint8Array(data);\n        }\n\n        this.update(data, options);\n        this.setFiltering(options);\n\n        this.loaded = true;\n        this.loading = Promise.resolve(this);\n        return this.loading;\n    }\n\n    // Sets the texture to track a element (canvas/image)\n    setElement(element, options) {\n        let el = element;\n\n        // a string element is interpeted as a CSS selector\n        if (typeof element === 'string') {\n            element = document.querySelector(element);\n        }\n\n        if (element instanceof HTMLCanvasElement ||\n            element instanceof HTMLImageElement ||\n            element instanceof HTMLVideoElement) {\n            this.update(element, options);\n            this.setFiltering(options);\n        }\n        else {\n            this.loaded = false;\n            let msg = `the 'element' parameter (\\`element: ${JSON.stringify(el)}\\`) must be a CSS `;\n            msg += 'selector string, or a <canvas>, <image> or <video> object';\n            log('warn', `Texture '${this.name}': ${msg}`, options);\n            Texture.trigger('warning', { message: `Failed to load texture because ${msg}`, texture: options });\n        }\n\n        this.loaded = true;\n        this.loading = Promise.resolve(this);\n        return this.loading;\n    }\n\n    // Uploads current image or buffer to the GPU (can be used to update animated textures on the fly)\n    update(source, options = {}) {\n        if (!this.valid) {\n            return;\n        }\n\n        this.bind();\n\n        // Image or Canvas element\n        if (source instanceof HTMLCanvasElement || source instanceof HTMLVideoElement ||\n            (source instanceof HTMLImageElement && source.complete)) {\n\n            this.width = source.width;\n            this.height = source.height;\n            this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL, (options.UNPACK_FLIP_Y_WEBGL === false ? false : true));\n            this.gl.pixelStorei(this.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, options.UNPACK_PREMULTIPLY_ALPHA_WEBGL || false);\n            this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, this.gl.RGBA, this.gl.UNSIGNED_BYTE, source);\n        }\n        // Raw image buffer\n        else {\n            // these pixel store params are deprecated for non-DOM element uploads\n            // (e.g. when creating texture from raw data)\n            // setting them to null avoids a Firefox warning\n            this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL, null);\n            this.gl.pixelStorei(this.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, null);\n            this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, this.width, this.height, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, source);\n        }\n\n        Texture.trigger('update', this);\n    }\n\n    // Determines appropriate filtering mode\n    setFiltering(options = {}) {\n        if (!this.valid) {\n            return;\n        }\n\n        options.filtering = options.filtering || 'linear';\n\n        var gl = this.gl;\n        this.bind();\n\n        // For power-of-2 textures, the following presets are available:\n        // mipmap: linear blend from nearest mip\n        // linear: linear blend from original image (no mips)\n        // nearest: nearest pixel from original image (no mips, 'blocky' look)\n        if (Utils.isPowerOf2(this.width) && Utils.isPowerOf2(this.height)) {\n            this.power_of_2 = true;\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, options.TEXTURE_WRAP_S || (options.repeat && gl.REPEAT) || gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, options.TEXTURE_WRAP_T || (options.repeat && gl.REPEAT) || gl.CLAMP_TO_EDGE);\n\n            if (options.filtering === 'mipmap') {\n                this.filtering = 'mipmap';\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR); // TODO: use trilinear filtering by defualt instead?\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n                gl.generateMipmap(gl.TEXTURE_2D);\n            }\n            else if (options.filtering === 'linear') {\n                this.filtering = 'linear';\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n            }\n            else if (options.filtering === 'nearest') {\n                this.filtering = 'nearest';\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n            }\n        }\n        else {\n            // WebGL has strict requirements on non-power-of-2 textures:\n            // No mipmaps and must clamp to edge\n            this.power_of_2 = false;\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n            if (options.filtering === 'nearest') {\n                this.filtering = 'nearest';\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n            }\n            else { // default to linear for non-power-of-2 textures\n                this.filtering = 'linear';\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n            }\n        }\n\n        Texture.trigger('update', this);\n    }\n\n    // Pre-calc sprite regions for a texture sprite in UV [0, 1] space\n    calculateSprites() {\n        if (this.sprites) {\n            for (let s in this.sprites) {\n                let sprite = this.sprites[s];\n\n                // Map [0, 0] to [1, 1] coords to the appropriate sprite sub-area of the texture\n                this.texcoords[s] = Texture.getTexcoordsForSprite(\n                    [sprite[0], sprite[1]],\n                    [sprite[2], sprite[3]],\n                    [this.width, this.height]\n                );\n\n                // Pixel size of sprite\n                // Divide by native texture density to get correct CSS pixels\n                this.sizes[s] = [sprite[2], sprite[3]];\n                this.css_sizes[s] = [sprite[2] / this.density, sprite[3] / this.density];\n                this.aspects[s] = sprite[2] / sprite[3];\n            }\n        }\n    }\n\n    // Get the tetxure size in bytes\n    byteSize() {\n        // mipmaps use 33% additional memory\n        return Math.round(this.width * this.height * 4 * (this.filtering == 'mipmap' ? 1.33 : 1));\n    }\n\n}\n\n\n// Static/class methods and state\n\nTexture.create = function (gl, name, options) {\n    return new Texture(gl, name, options);\n};\n\nTexture.retain = function (name) {\n    if (Texture.textures[name]) {\n        Texture.textures[name].retain();\n    }\n};\n\nTexture.release = function (name) {\n    if (Texture.textures[name]) {\n        Texture.textures[name].release();\n    }\n};\n\n// Destroy all texture instances for a given GL context\nTexture.destroy = function (gl) {\n    var textures = Object.keys(Texture.textures);\n    textures.forEach(t => {\n        var texture = Texture.textures[t];\n        if (texture.gl === gl) {\n            texture.destroy({ force: true });\n        }\n    });\n};\n\n// Get sprite pixel size and UVs\nTexture.getSpriteInfo = function (texname, sprite) {\n    let texture = Texture.textures[texname];\n    return texture && {\n        size: texture.sizes[sprite],\n        css_size: texture.css_sizes[sprite],\n        aspect: texture.aspects[sprite],\n        texcoords: texture.texcoords[sprite]\n    };\n};\n\n// Re-scale UVs from [0, 1] range to a smaller area within the image\nTexture.getTexcoordsForSprite = function (area_origin, area_size, tex_size) {\n    var area_origin_y = tex_size[1] - area_origin[1] - area_size[1];\n\n    return [\n        area_origin[0] / tex_size[0],\n        area_origin_y / tex_size[1],\n        (area_size[0] + area_origin[0]) / tex_size[0],\n        (area_size[1] + area_origin_y) / tex_size[1]\n    ];\n};\n\n// Create a set of textures keyed in an object\n// Optionally load each if it has a URL specified\nTexture.createFromObject = function (gl, textures) {\n    let loading = [];\n    if (textures) {\n        for (let texname in textures) {\n            let config = textures[texname];\n\n            if (config.skip_create) {\n                // explicitly skip (re-)creating this texture\n                // used for dynamic canvas textures that we *know* haven't changed\n                // (internal raster tiles, vs. user-supplied canvas where pixels may have changed)\n                continue;\n            }\n\n            // If texture already exists and definition hasn't changed, no need to re-create\n            // Note: to avoid flicker when other textures/scene items change\n            if (!Texture.changed(texname, config)) {\n                continue;\n            }\n\n            let texture = Texture.create(gl, texname, config);\n            loading.push(texture.loading);\n        }\n    }\n    return Promise.all(loading);\n};\n\n// Create a 'default' texture (1x1 pixel) that can be used as a placeholder\n// (for example to prevent GL from complaining about unbound textures)\nTexture.default = '__default';\nTexture.createDefault = function (gl) {\n    return Texture.create(gl, Texture.default);\n};\n\n// Only include texture-specific properties (avoid faulty equality comparisons between\n// textures when caller may include other ancillary props)\nTexture.sliceOptions = function(options) {\n    return {\n        filtering: options.filtering,\n        sprites: options.sprites,\n        url: options.url,\n        element: options.element,\n        data: options.data,\n        width: options.width,\n        height: options.height,\n        density: options.density,\n        repeat: options.repeat,\n        TEXTURE_WRAP_S: options.TEXTURE_WRAP_S,\n        TEXTURE_WRAP_T: options.TEXTURE_WRAP_T,\n        UNPACK_FLIP_Y_WEBGL: options.UNPACK_FLIP_Y_WEBGL,\n        UNPACK_PREMULTIPLY_ALPHA_WEBGL: options.UNPACK_PREMULTIPLY_ALPHA_WEBGL\n    };\n};\n\n// Indicate if a texture definition would be a change from the current cache\nTexture.changed = function (name, config) {\n    let texture = Texture.textures[name];\n    if (texture) { // cached texture\n        // canvas/image-based textures are considered dynamic and always refresh\n        if (texture.config_type === 'element' || config.element != null) {\n            return true;\n        }\n\n        // compare definitions\n        config = Texture.sliceOptions(config); // exclude any non-texture-specific props\n        if (Texture.texture_configs[name] === JSON.stringify(Object.assign({ name }, config))) {\n            return false;\n        }\n    }\n    return true;\n};\n\n// Get metadata for a texture by name\n// Returns via promise, in case texture is still loading\n// Can be called on main thread from worker, to sync texture info to worker\nTexture.getInfo = function (name) {\n    // Get info for all textures by default\n    if (!name) {\n        name = Object.keys(Texture.textures);\n    }\n\n    // Get multiple textures\n    if (Array.isArray(name)) {\n        return Promise.all(name.map(n => Texture.getInfo(n)));\n    }\n\n    // Get single texture\n    var tex = Texture.textures[name];\n    if (tex) {\n        // Wait for this texture to finish loading, or return immediately\n        var loading = tex.loading || Promise.resolve(tex);\n        return loading.then(() => {\n            // Return a subset of texture info\n            // (compatible w/structured cloning, suitable for passing to a worker)\n            return {\n                name: tex.name,\n                width: tex.width,\n                height: tex.height,\n                density: tex.density,\n                css_size: [ tex.width / tex.density, tex.height / tex.density ],\n                aspect: tex.width / tex.height,\n                sprites: tex.sprites,\n                texcoords: tex.texcoords,\n                sizes: tex.sizes,\n                css_sizes: tex.css_sizes,\n                aspects: tex.aspects,\n                filtering: tex.filtering,\n                power_of_2: tex.power_of_2,\n                valid: tex.valid\n            };\n        });\n    }\n    else {\n        // No texture found\n        return Promise.resolve(null);\n    }\n};\n\n// Sync texture info to worker\n// Called from worker, gets info on one or more textures info from main thread via remote call, then stores it\n// locally in worker. 'textures' can be an array of texture names to sync, or if null, all textures are synced.\nTexture.syncTexturesToWorker = function (names) {\n    return WorkerBroker.postMessage('Texture.getInfo', names).\n        then(textures => {\n            if (textures) {\n                textures\n                    .filter(x => x) // remove nulls\n                    .forEach(t => Texture.textures[t.name] = t);\n            }\n            return Texture.textures;\n        });\n};\n\n// Report max texture size for a GL context\nTexture.getMaxTextureSize = function (gl) {\n    return gl.getParameter(gl.MAX_TEXTURE_SIZE);\n};\n\n// Global set of textures, by name\nTexture.textures = {};\nTexture.texture_configs = {};\nTexture.boundTexture = null;\nTexture.activeUnit = null;\n\nWorkerBroker.addTarget('Texture', Texture);\nsubscribeMixin(Texture);\n","var GLSL = {};\nexport default GLSL;\n\n/**\n    Parse uniforms from a JS object, infers types and returns an array of objects with the\n    necessary information to set uniform values on a GL program. Each object in the returned\n    array has the form:\n    { type, method, name, value }\n\n    type: the GL uniform type, such as 'vec3', 'float', etc.\n    method: the GL uniform setter method to use, such as '1f', '3fv', etc.\n    name: the fully qualified name of the GL uniform location, e.g. 'array[0].field', etc.\n    value: the value to be passed to the GL uniform setter for that type, e.g. [1, 2, 3] for a vec3\n\n    Textures have special behavior: uniforms with string values are treated as textures, and\n    the string is used as a unique texture 'key' to be interpreted by the caller (which is responsible\n    for actually setting the uniforms). For example, this could be used as a key into a dictionary of\n    known texture names, or it could simply be used as a URL to dynamically load the texture from.\n*/\nGLSL.parseUniforms = function (uniforms = {}) {\n    var parsed = [];\n\n    for (const [name, uniform] of Object.entries(uniforms)) {\n        // Single float\n        if (typeof uniform === 'number') {\n            parsed.push({\n                type: 'float',\n                method: '1f',\n                name,\n                value: uniform,\n                path: [name]\n            });\n        }\n        // Array: vector, array of floats, array of textures\n        else if (Array.isArray(uniform)) {\n            // Numeric values\n            if (typeof uniform[0] === 'number') {\n                // float vectors (vec2, vec3, vec4)\n                if (uniform.length >= 2 && uniform.length <= 4) {\n                    parsed.push({\n                        type: 'vec' + uniform.length,\n                        method: uniform.length + 'fv',\n                        name,\n                        value: uniform,\n                        path: [name]\n                    });\n                }\n                // float array\n                else if (uniform.length > 4) {\n                    parsed.push({\n                        type: 'float[]',\n                        method: '1fv',\n                        name: name + '[0]',\n                        value: uniform,\n                        path: [name]\n                    });\n                }\n                // TODO: assume matrix for (typeof == Float32Array && length == 16)?\n            }\n            // Array of textures\n            else if (typeof uniform[0] === 'string') {\n                for (let u = 0; u < uniform.length; u++) {\n                    parsed.push({\n                        type: 'sampler2D',\n                        method: '1i',\n                        name: name + '[' + u + ']',\n                        value: uniform[u],\n                        path: [name, u]\n                    });\n                }\n            }\n            // Array of arrays - but only arrays of vectors are allowed in this case\n            else if (Array.isArray(uniform[0]) && typeof uniform[0][0] === 'number') {\n                // float vectors (vec2, vec3, vec4)\n                if (uniform[0].length >= 2 && uniform[0].length <= 4) {\n                    // Set each vector in the array\n                    for (let u = 0; u < uniform.length; u++) {\n                        parsed.push({\n                            type: 'vec' + uniform[0].length,\n                            method: uniform[0].length + 'fv',\n                            name: name + '[' + u + ']',\n                            value: uniform[u],\n                            path: [name, u]\n                        });\n                    }\n                }\n            }\n            // TODO: else warning\n        }\n        // Boolean\n        else if (typeof uniform === 'boolean') {\n            parsed.push({\n                type: 'bool',\n                method: '1i',\n                name,\n                value: uniform,\n                path: [name]\n            });\n        }\n        // Texture\n        else if (typeof uniform === 'string') {\n            parsed.push({\n                type: 'sampler2D',\n                method: '1i',\n                name,\n                value: uniform,\n                path: [name]\n            });\n        }\n    }\n\n    return parsed;\n};\n\n/**\n    Generate a GLSL variable definition from a JS object\n*/\nGLSL.defineVariable = function (name, value) {\n    var type, array;\n\n    // Single float\n    if (typeof value === 'number') {\n        type = 'float';\n    }\n    // Multiple floats - vector or array\n    else if (Array.isArray(value)) {\n        // Numeric values\n        if (typeof value[0] === 'number') {\n            // float vectors (vec2, vec3, vec4)\n            if (value.length >= 2 && value.length <= 4) {\n                type = 'vec' + value.length;\n            }\n            // float array\n            else { //if (value.length > 4) {\n                type = 'float';\n                array = value.length;\n            }\n            // TODO: assume matrix for (typeof == Float32Array && length == 16)?\n        }\n        // Array of textures\n        else if (typeof value[0] === 'string') {\n            type = 'sampler2D';\n            array = value.length;\n        }\n        // Array of arrays - but only arrays of vectors are allowed in this case\n        else if (Array.isArray(value[0]) && typeof value[0][0] === 'number') {\n            // float vectors (vec2, vec3, vec4)\n            if (value[0].length >= 2 && value[0].length <= 4) {\n                type = 'vec' + value[0].length;\n                array = value.length;\n            }\n        }\n    }\n    // Boolean\n    else if (typeof value === 'boolean') {\n        type = 'bool';\n    }\n    // Texture\n    else if (typeof value === 'string') {\n        type = 'sampler2D';\n    }\n    else {\n        return; // no valid type found\n    }\n\n    // Construct variable definition\n    var variable = '';\n    variable += `${type} ${name}`;\n    if (array) {\n        variable += `[${array}]`;\n    }\n    variable += ';\\n';\n\n    return variable;\n};\n\n/**\n    Generate a GLSL uniform definition from a JS object\n*/\nGLSL.defineUniform = function (name, value) {\n    var def = GLSL.defineVariable(name, value);\n    if (!def) {\n        return;\n    }\n    return 'uniform ' + def;\n};\n\n/**\n    Expand a single value or 2-element array into a 3-element array, with the last ( z )\n    coordinate defaulting to 1 (with option to specify). Also runs parseFloat to try to maintain\n    data integrity. Returns null if input couldn't be parsed.\n*/\nGLSL.expandVec3 = function (v, z = 1) {\n    let x;\n    if (Array.isArray(v)) {\n        if (v.length === 2) {\n            x = [...v, z].map(parseFloat);\n        }\n        else {\n            return v;\n        }\n    }\n    else {\n        x = [v, v, v].map(parseFloat);\n    }\n\n    if (x && x.every(n => typeof n === 'number' && !isNaN(n))) {\n        return x;\n    }\n};\n\n/**\n    Expand a single value or 3-element array into a 4-element array, with the last (e.g. w or a)\n    coordinate defaulting to 1 (with option to specify). Also runs parseFloat to try to maintain\n    data integrity. Returns null if input couldn't be parsed.\n*/\nGLSL.expandVec4 = function (v, w = 1) {\n    let x;\n    if (Array.isArray(v)) {\n        if (v.length === 3) {\n            x = [...v, w].map(parseFloat);\n        }\n        else {\n            return v;\n        }\n    }\n    else {\n        x = [v, v, v, w].map(parseFloat);\n    }\n\n    if (x && x.every(n => typeof n === 'number' && !isNaN(n))) {\n        return x;\n    }\n};\n\n\n","// WebGL extension wrapper\n// Stores extensions by name and GL context\n\n// list of extension arrays, for each entry, 1st element GL context, 2nd map of extensions by name\nlet extensions = [];\n\nexport default function getExtension (gl, name) {\n    let exts = extensions.filter(e => e[0] === gl)[0];\n    exts = exts && exts[1];\n\n    if (!exts) {\n        extensions.push([gl, {}]);\n        exts = extensions[extensions.length-1][1];\n    }\n\n    if (!exts[name]) {\n        exts[name] = gl.getExtension(name);\n    }\n    return exts[name];\n}\n","// http://werxltd.com/wp/2010/05/13/javascript-implementation-of-javas-string-hashcode-method/\nexport default function hashString (string) {\n    var hash = 0, i, chr, len;\n\n    if (string.length === 0) {\n        return hash;\n    }\n\n    for (i = 0, len = string.length; i < len; i++) {\n        chr   = string.charCodeAt(i);\n        hash  = ((hash << 5) - hash) + chr;\n        hash |= 0; // Convert to 32bit integer\n    }\n    return hash;\n}\n","module.exports = parseErrors\n\nfunction parseErrors(log) {\n  log = String(log)\n\n  var logs = []\n  var result\n\n  while (result = log.match(/ERROR\\:([^\\n]+)/)) {\n    log = log.slice(result.index + 1)\n\n    var line = result[1].trim()\n    var seps = line.split(':')\n    var emsg = seps.slice(2).join(':').trim()\n    var file = parseInt(seps[0], 10)\n    var line = parseInt(seps[1], 10)\n\n    logs.push({\n        message: emsg\n      , file: file\n      , line: line\n    })\n  }\n\n  return logs\n}\n","// GL program wrapper to cache uniform locations/values, do compile-time pre-processing\n// (injecting #defines and #pragma blocks into shaders), etc.\n\nimport log from '../utils/log';\nimport GLSL from './glsl';\nimport Texture from './texture';\nimport getExtension from './extensions';\nimport hashString from '../utils/hash';\n\nimport parseShaderErrors from 'gl-shader-errors';\n\n// Regex patterns\nconst re_pragma = /^\\s*#pragma.*$/gm;   // for removing unused pragmas after shader block injection\nconst re_continue_line = /\\\\\\s*\\n/mg;   // for removing backslash line continuations\n\nexport default class ShaderProgram {\n\n    constructor(gl, vertex_source, fragment_source, options) {\n        options = options || {};\n\n        this.gl = gl;\n        this.program = null;\n        this.compiled = false;\n        this.compiling = false;\n        this.error = null;\n\n        // key/values inserted as #defines into shaders at compile-time\n        this.defines = Object.assign({}, options.defines||{});\n\n        // key/values for blocks that can be injected into shaders at compile-time\n        this.blocks = Object.assign({}, options.blocks||{});\n        this.block_scopes = Object.assign({}, options.block_scopes||{});\n\n        // list of extensions to activate\n        this.extensions = options.extensions || [];\n\n        // JS-object uniforms that are expected by this program, their types are inferred and definitions\n        // for each will be injected.\n        this.dependent_uniforms = options.uniforms;\n\n        this.uniforms = {}; // program locations of uniforms, lazily added as each uniform is set\n        this.attribs = {}; // program locations of vertex attributes, lazily added as each attribute is accessed\n\n        this.vertex_source = vertex_source;\n        this.fragment_source = fragment_source;\n\n        this.id = ShaderProgram.id++;\n        this.name = options.name; // can provide a program name (useful for debugging)\n    }\n\n    destroy() {\n        this.gl.useProgram(null);\n        this.gl.deleteProgram(this.program);\n        this.program = null;\n        this.uniforms = {};\n        this.attribs = {};\n        this.compiled = false;\n    }\n\n    // Use program wrapper with simple state cache\n    use() {\n        if (!this.compiled) {\n            return;\n        }\n\n        if (ShaderProgram.current !== this) {\n            this.gl.useProgram(this.program);\n        }\n        ShaderProgram.current = this;\n    }\n\n    compile() {\n        if (this.compiling) {\n            throw(new Error(`ShaderProgram.compile(): skipping for ${this.id} (${this.name}) because already compiling`));\n        }\n        this.compiling = true;\n        this.compiled = false;\n        this.error = null;\n\n        // Copy sources from pre-modified template\n        this.computed_vertex_source = this.vertex_source;\n        this.computed_fragment_source = this.fragment_source;\n\n        // Check for extension availability\n        let extensions = this.checkExtensions();\n\n        // Make list of defines to be injected later\n        var defines = this.buildDefineList();\n\n        // Inject user-defined blocks (arbitrary code points matching named #pragmas)\n        // Replace according to this pattern:\n        // #pragma tangram: [key]\n        // e.g. #pragma tangram: global\n\n        // Gather all block code snippets\n        var blocks = this.buildShaderBlockList();\n        var regexp;\n\n        for (var key in blocks) {\n            var block = blocks[key];\n            if (!block || (Array.isArray(block) && block.length === 0)) {\n                continue;\n            }\n\n            // First find code replace points in shaders\n            regexp = new RegExp('^\\\\s*#pragma\\\\s+tangram:\\\\s+' + key + '\\\\s*$', 'm');\n            var inject_vertex = this.computed_vertex_source.match(regexp);\n            var inject_fragment = this.computed_fragment_source.match(regexp);\n\n            // Avoid network request if nothing to replace\n            if (inject_vertex == null && inject_fragment == null) {\n                continue;\n            }\n\n            // Combine all blocks into one string\n            var source = '';\n            block.forEach(val => {\n                // Mark start and end of each block with metadata (which can be extracted from\n                // final source for error handling, debugging, etc.)\n                let mark = `${val.scope}, ${val.key}, ${val.num}`;\n                source += `\\n// tangram-block-start: ${mark}\\n`;\n                source += val.source;\n                source += `\\n// tangram-block-end: ${mark}\\n`;\n            });\n\n            // Inject\n            if (inject_vertex != null) {\n                this.computed_vertex_source = this.computed_vertex_source.replace(regexp, source);\n            }\n            if (inject_fragment != null) {\n                this.computed_fragment_source = this.computed_fragment_source.replace(regexp, source);\n            }\n\n            // Add a #define for this injection point\n            defines['TANGRAM_BLOCK_' + key.replace(/[\\s-]+/g, '_').toUpperCase()] = true;\n        }\n\n        // Clean-up any #pragmas that weren't replaced (to prevent compiler warnings)\n        this.computed_vertex_source = this.computed_vertex_source.replace(re_pragma, '');\n        this.computed_fragment_source = this.computed_fragment_source.replace(re_pragma, '');\n\n        // Inject uniform definitions\n        this.ensureUniforms(this.dependent_uniforms);\n\n        // Build & inject extensions & defines\n        // This is done *after* code injection so that we can add defines for which code points were injected\n        let precision = '';\n        let high = this.gl.getShaderPrecisionFormat(this.gl.FRAGMENT_SHADER, this.gl.HIGH_FLOAT);\n        if (high && high.precision > 0) {\n            precision = 'precision highp float;\\n';\n        }\n        else {\n            precision = 'precision mediump float;\\n';\n        }\n\n        defines['TANGRAM_VERTEX_SHADER'] = true;\n        defines['TANGRAM_FRAGMENT_SHADER'] = false;\n        this.computed_vertex_source =\n            precision +\n            ShaderProgram.buildDefineString(defines) +\n            this.computed_vertex_source;\n\n        // Precision qualifier only valid in fragment shader\n        // NB: '#extension' statements added to fragment shader only, as IE11 throws error when they appear in\n        // vertex shader (even when guarded by #ifdef), and no WebGL extensions require '#extension' in vertex shaders\n        defines['TANGRAM_VERTEX_SHADER'] = false;\n        defines['TANGRAM_FRAGMENT_SHADER'] = true;\n        this.computed_fragment_source =\n            ShaderProgram.buildExtensionString(extensions) +\n            precision +\n            ShaderProgram.buildDefineString(defines) +\n            this.computed_fragment_source;\n\n        // Replace multi-line backslashes\n        this.computed_vertex_source = this.computed_vertex_source.replace(re_continue_line, '');\n        this.computed_fragment_source = this.computed_fragment_source.replace(re_continue_line, '');\n\n        // Compile & set uniforms to cached values\n        try {\n            this.program = ShaderProgram.updateProgram(this.gl, this.program, this.computed_vertex_source, this.computed_fragment_source);\n            this.compiled = true;\n            this.compiling = false;\n        }\n        catch(error) {\n            this.program = null;\n            this.compiled = false;\n            this.compiling = false;\n            this.error = error;\n\n            // shader error info\n            this.error.vertex_shader_source = this.computed_vertex_source;\n            this.error.fragment_shader_source = this.computed_fragment_source;\n\n            if (error.type === 'vertex' || error.type === 'fragment') {\n                this.shader_errors = error.errors;\n                this.shader_errors.forEach(e => {\n                    e.type = error.type;\n                    e.block = this.block(error.type, e.line);\n                    e.line = this.block(error.type, e.line);\n                });\n                this.error.shader_errors = this.shader_errors;\n            }\n            throw error;\n        }\n\n        // Discard shader sources after successful compilation\n        this.computed_vertex_source = null;\n        this.computed_fragment_source = null;\n\n        this.use();\n        this.refreshUniforms();\n        this.refreshAttributes();\n    }\n\n    // Make list of defines (global, then program-specific)\n    buildDefineList() {\n        var d, defines = {};\n        for (d in ShaderProgram.defines) {\n            defines[d] = ShaderProgram.defines[d];\n        }\n        for (d in this.defines) {\n            defines[d] = this.defines[d];\n        }\n        return defines;\n    }\n\n    // Make list of shader blocks (global, then program-specific)\n    buildShaderBlockList() {\n        let key, blocks = {};\n\n        // Global blocks\n        for (key in ShaderProgram.blocks) {\n            blocks[key] = [];\n\n            if (Array.isArray(ShaderProgram.blocks[key])) {\n                blocks[key].push(\n                    ...ShaderProgram.blocks[key].map((source, num) => {\n                        return { key, source, num, scope: 'ShaderProgram' };\n                    })\n                );\n            }\n            else {\n                blocks[key] = [{ key, source: ShaderProgram.blocks[key], num: 0, scope: 'ShaderProgram' }];\n            }\n        }\n\n        // Program-specific blocks\n        for (key in this.blocks) {\n            blocks[key] = blocks[key] || [];\n\n            if (Array.isArray(this.blocks[key])) {\n                let scopes = (this.block_scopes && this.block_scopes[key]) || [];\n                let cur_scope = null, num = 0;\n\n                for (let b=0; b < this.blocks[key].length; b++) {\n                    // Count blocks relative to current scope\n                    if (scopes[b] !== cur_scope) {\n                        cur_scope = scopes[b];\n                        num = 0;\n                    }\n\n                    blocks[key].push({\n                        key,\n                        source: this.blocks[key][b],\n                        num,\n                        scope: cur_scope || this.name\n                    });\n\n                    num++;\n                }\n            }\n            else {\n                // TODO: address discrepancy in array vs. single-value blocks\n                // styles assume array when tracking block scopes\n                blocks[key].push({ key, source: this.blocks[key], num: 0, scope: this.name });\n            }\n        }\n        return blocks;\n    }\n\n    // Inject uniform definitions\n    ensureUniforms(uniforms) {\n        if (!uniforms) {\n            return;\n        }\n\n        // Get GLSL definitions\n        const inject = Object.entries(uniforms).\n            map(([name, uniform]) => GLSL.defineUniform(name, uniform)).\n            filter(x => x);\n\n        // Inject uniforms\n        // NOTE: these are injected at the very top of the shaders, even before any #defines or #pragmas are added\n        // this could cause some issues with certain #pragmas, or other functions that might expect #defines\n        this.computed_vertex_source = inject.join('\\n') + this.computed_vertex_source;\n        this.computed_fragment_source = inject.join('\\n') + this.computed_fragment_source;\n    }\n\n    // Set uniforms from a JS object, with inferred types\n    setUniforms(uniforms, reset_texture_unit = true) {\n        if (!this.compiled) {\n            return;\n        }\n\n        // TODO: only update uniforms when changed\n\n        // Texture units must be tracked and incremented each time a texture sampler uniform is set.\n        // By default, the texture unit is reset to 0 each time setUniforms is called, but they can\n        // also be preserved, for example in cases where multiple calls to setUniforms are expected\n        // (e.g. program-specific uniforms followed by mesh-specific ones).\n        if (reset_texture_unit) {\n            this.texture_unit = 0;\n        }\n\n        // Parse uniform types and values from the JS object\n        GLSL.parseUniforms(uniforms)\n            .forEach(({ name, type, value, method }) => {\n                if (type === 'sampler2D') {\n                    // For textures, we need to track texture units, so we have a special setter\n                    this.setTextureUniform(name, value);\n                }\n                else {\n                    this.uniform(method, name, value);\n                }\n            });\n    }\n\n    // Cache some or all uniform values so they can be restored\n    saveUniforms(subset) {\n        let uniforms = subset || this.uniforms;\n        for (let u in uniforms) {\n            let uniform = this.uniforms[u];\n            if (uniform) {\n                uniform.saved_value = uniform.value;\n            }\n        }\n        this.saved_texture_unit = this.texture_unit || 0;\n    }\n\n    // Restore some or all uniforms to saved values\n    restoreUniforms(subset) {\n        let uniforms = subset || this.uniforms;\n        for (let u in uniforms) {\n            let uniform = this.uniforms[u];\n            if (uniform && uniform.saved_value) {\n                uniform.value = uniform.saved_value;\n                this.updateUniform(uniform);\n            }\n        }\n        this.texture_unit = this.saved_texture_unit || 0;\n    }\n\n    // Set a texture uniform, finds texture by name or creates a new one\n    setTextureUniform(uniform_name, texture_name) {\n        var texture = Texture.textures[texture_name];\n        if (texture == null) {\n            log('warn', `Cannot find texture '${texture_name}'`);\n            return;\n        }\n\n        texture.bind(this.texture_unit);\n        this.uniform('1i', uniform_name, this.texture_unit);\n        this.texture_unit++; // TODO: track max texture units and log/throw errors\n    }\n\n    // ex: program.uniform('3fv', 'position', [x, y, z]);\n    // TODO: only update uniforms when changed\n    uniform(method, name, value) { // 'value' is a method-appropriate arguments list\n        if (!this.compiled) {\n            return;\n        }\n\n        this.uniforms[name] = this.uniforms[name] || {};\n        let uniform = this.uniforms[name];\n        uniform.name = name;\n        if (uniform.location === undefined) {\n            uniform.location = this.gl.getUniformLocation(this.program, name);\n        }\n        uniform.method = method;\n        uniform.value = value;\n        this.updateUniform(uniform);\n    }\n\n    // Set a single uniform\n    updateUniform(uniform) {\n        if (!this.compiled) {\n            return;\n        }\n\n        if (!uniform || uniform.location == null) {\n            return;\n        }\n\n        this.use();\n        this.commitUniform(uniform);\n    }\n\n    // Commits the uniform to the GPU\n    commitUniform(uniform){\n        let location = uniform.location;\n        let value = uniform.value;\n\n        switch (uniform.method) {\n        case '1i':\n            this.gl.uniform1i(location, value);\n            break;\n        case '1f':\n            this.gl.uniform1f(location, value);\n            break;\n        case '2f':\n            this.gl.uniform2f(location, value[0], value[1]);\n            break;\n        case '3f':\n            this.gl.uniform3f(location, value[0], value[1], value[2]);\n            break;\n        case '4f':\n            this.gl.uniform4f(location, value[0], value[1], value[2], value[3]);\n            break;\n        case '1iv':\n            this.gl.uniform1iv(location, value);\n            break;\n        case '3iv':\n            this.gl.uniform3iv(location, value);\n            break;\n        case '1fv':\n            this.gl.uniform1fv(location, value);\n            break;\n        case '2fv':\n            this.gl.uniform2fv(location, value);\n            break;\n        case '3fv':\n            this.gl.uniform3fv(location, value);\n            break;\n        case '4fv':\n            this.gl.uniform4fv(location, value);\n            break;\n        case 'Matrix3fv':\n            this.gl.uniformMatrix3fv(location, false, value);\n            break;\n        case 'Matrix4fv':\n            this.gl.uniformMatrix4fv(location, false, value);\n            break;\n        }\n    }\n\n    // Refresh uniform locations and set to last cached values\n    refreshUniforms() {\n        if (!this.compiled) {\n            return;\n        }\n\n        for (var u in this.uniforms) {\n            let uniform = this.uniforms[u];\n            uniform.location = this.gl.getUniformLocation(this.program, u);\n            this.updateUniform(uniform);\n        }\n    }\n\n    refreshAttributes() {\n        // var len = this.gl.getProgramParameter(this.program, this.gl.ACTIVE_ATTRIBUTES);\n        // for (var i=0; i < len; i++) {\n        //     var a = this.gl.getActiveAttrib(this.program, i);\n        // }\n        this.attribs = {};\n    }\n\n    // Get the location of a vertex attribute\n    attribute(name) {\n        if (!this.compiled) {\n            return;\n        }\n\n        var attrib = (this.attribs[name] = this.attribs[name] || {});\n        if (attrib.location != null) {\n            return attrib;\n        }\n\n        attrib.name = name;\n        attrib.location = this.gl.getAttribLocation(this.program, name);\n\n        // var info = this.gl.getActiveAttrib(this.program, attrib.location);\n        // attrib.type = info.type;\n        // attrib.size = info.size;\n\n        return attrib;\n    }\n\n    // Get shader source as string\n    source(type) {\n        if (type === 'vertex') {\n            return this.computed_vertex_source;\n        }\n        else if (type === 'fragment') {\n            return this.computed_fragment_source;\n        }\n    }\n\n    // Get shader source as array of line strings\n    lines(type) {\n        let source = this.source(type);\n        if (source) {\n            return source.split('\\n');\n        }\n        return [];\n    }\n\n    // Get a specific line from shader source\n    line(type, num) {\n        let source = this.lines(type);\n        if (source) {\n            return source[num];\n        }\n    }\n\n    // Get info on which shader block (if any) a particular line number in a shader is in\n    // Returns an object with the following info if a block is found: { name, line, source }\n    //  scope: where the shader block originated, either a style name, or global such as ShaderProgram\n    //  name: shader block name (e.g. 'color', 'position', 'global')\n    //  num: the block number *within* local scope (e.g. if a style has multiple 'color' blocks)\n    //  line: line number *within* the shader block (not the whole shader program), useful for error highlighting\n    //  source: the code for the line\n    // NOTE: this does a bruteforce loop over the shader source and looks for shader block start/end markers\n    // We could track line ranges for shader blocks as they are inserted, but as this code is only used for\n    // error handling on compilation failure, it was simpler to keep it separate than to burden the core\n    // compilation path.\n    block(type, num) {\n        let lines = this.lines(type);\n        let block;\n        for (let i=0; i < num && i < lines.length; i++) {\n            let line = lines[i];\n            let match = line.match(/\\/\\/ tangram-block-start: ([A-Za-z0-9_-]+), ([A-Za-z0-9_-]+), (\\d+)/);\n            if (match && match.length > 1) {\n                // mark current block\n                block = {\n                    scope: match[1],\n                    name: match[2],\n                    num: match[3]\n                };\n            }\n            else {\n                match = line.match(/\\/\\/ tangram-block-end: ([A-Za-z0-9_-]+), ([A-Za-z0-9_-]+), (\\d+)/);\n                if (match && match.length > 1) {\n                    block = null; // clear current block\n                }\n            }\n\n            // update line # and content\n            if (block) {\n                // init to -1 so that line 0 is first actual line of block code, after comment marker\n                block.line = (block.line == null) ? -1 : block.line + 1;\n                block.source = line;\n            }\n        }\n        return block;\n    }\n\n    // Returns list of available extensions from those requested\n    // Sets internal #defines indicating availability of each requested extension\n    checkExtensions() {\n        let exts = [];\n        this.extensions.forEach(name => {\n            let ext = getExtension(this.gl, name);\n            let def = `TANGRAM_EXTENSION_${name}`;\n\n            this.defines[def] = (ext != null);\n\n            if (ext) {\n                exts.push(name);\n            }\n            else {\n                log('debug', `Could not enable extension '${name}'`);\n            }\n        });\n        return exts;\n    }\n\n}\n\n\n// Static methods and state\nShaderProgram.id = 0;                   // assign each program a unique id\nShaderProgram.current = null;           // currently bound program\n\n// Global config applied to all programs (duplicate properties for a specific program will take precedence)\nShaderProgram.defines = {};\nShaderProgram.blocks = {};\n\n// Reset program and shader caches\nShaderProgram.reset = function () {\n    ShaderProgram.programs_by_source = {};  // GL program objects by exact vertex + fragment shader source\n    ShaderProgram.shaders_by_source = {};   // GL shader objects by exact source\n};\nShaderProgram.reset();\n\n// Turn an object of key/value pairs into single string of #define statements\nShaderProgram.buildDefineString = function (defines) {\n    var define_str = '';\n    for (var d in defines) {\n        if (defines[d] == null || defines[d] === false) {\n            continue;\n        }\n        else if (typeof defines[d] === 'boolean' && defines[d] === true) { // booleans are simple defines with no value\n            define_str += '#define ' + d + '\\n';\n        }\n        else if (typeof defines[d] === 'number' && Math.floor(defines[d]) === defines[d]) { // int to float conversion to satisfy GLSL floats\n            define_str += '#define ' + d + ' ' + defines[d].toFixed(1) + '\\n';\n        }\n        else { // any other float or string value\n            define_str += '#define ' + d + ' ' + defines[d] + '\\n';\n        }\n    }\n    return define_str;\n};\n\n// Turn a list of extension names into single string of #extension statements\nShaderProgram.buildExtensionString = function (extensions) {\n    extensions = extensions || [];\n    let str = '';\n    extensions.forEach(ext => {\n        str += `#ifdef GL_${ext}\\n#extension GL_${ext} : enable\\n#endif\\n`;\n    });\n    return str;\n};\n\nShaderProgram.addBlock = function (key, ...blocks) {\n    ShaderProgram.blocks[key] = ShaderProgram.blocks[key] || [];\n    ShaderProgram.blocks[key].push(...blocks);\n};\n\n// Remove all global shader blocks for a given key\nShaderProgram.removeBlock = function (key) {\n    ShaderProgram.blocks[key] = [];\n};\n\nShaderProgram.replaceBlock = function (key, ...blocks) {\n    ShaderProgram.removeBlock(key);\n    ShaderProgram.addBlock(key, ...blocks);\n};\n\n// Compile & link a WebGL program from provided vertex and fragment shader sources\n// update a program if one is passed in. Create one if not. Alert and don't update anything if the shaders don't compile.\nShaderProgram.updateProgram = function (gl, program, vertex_shader_source, fragment_shader_source) {\n    // Program with this exact vertex and fragment shader sources already cached?\n    let key = hashString(gl._tangram_id + '::' + vertex_shader_source + '::' + fragment_shader_source);\n    if (ShaderProgram.programs_by_source[key]) {\n        log('trace', 'Reusing identical source GL program object');\n        return ShaderProgram.programs_by_source[key];\n    }\n\n    var vertex_shader = ShaderProgram.createShader(gl, vertex_shader_source, gl.VERTEX_SHADER);\n    var fragment_shader = ShaderProgram.createShader(gl, fragment_shader_source, gl.FRAGMENT_SHADER);\n\n    gl.useProgram(null);\n    if (program != null) {\n        var old_shaders = gl.getAttachedShaders(program);\n        for(var i = 0; i < old_shaders.length; i++) {\n            gl.detachShader(program, old_shaders[i]);\n        }\n    } else {\n        program = gl.createProgram();\n    }\n\n    if (vertex_shader == null || fragment_shader == null) {\n        return program;\n    }\n\n    gl.attachShader(program, vertex_shader);\n    gl.attachShader(program, fragment_shader);\n\n    // Require position to be at attribute location 0\n    // Attribute 0 should never be disabled (per GL best practices). All of our shader programs have an `a_position`\n    // attribute, and it's customary for the vertex position to be the first attribute, so we enforce that here.\n    // This can avoid unexpected/undefined interaction between static and dynamic attributes in Safari, and\n    // possible warnings/errors in other browsers.\n    // See https://stackoverflow.com/questions/20305231/webgl-warning-attribute-0-is-disabled-this-has-significant-performance-penalt/20923946\n    gl.bindAttribLocation(program, 0, 'a_position');\n\n    gl.linkProgram(program);\n\n    // TODO: reference count and delete shader objects when no programs reference them\n\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n        let message = new Error(\n            `WebGL program error:\n            VALIDATE_STATUS: ${gl.getProgramParameter(program, gl.VALIDATE_STATUS)}\n            ERROR: ${gl.getError()}\n            --- Vertex Shader ---\n            ${vertex_shader_source}\n            --- Fragment Shader ---\n            ${fragment_shader_source}`);\n\n        throw Object.assign(new Error(message), { type: 'program' });\n    }\n\n    ShaderProgram.programs_by_source[key] = program; // cache by exact source\n    return program;\n};\n\n// Compile a vertex or fragment shader from provided source\nShaderProgram.createShader = function (gl, source, stype) {\n    // Program with identical vertex and fragment shader sources already cached?\n    let key = hashString(gl._tangram_id + '::' + source);\n    if (ShaderProgram.shaders_by_source[key]) {\n        log('trace', 'Reusing identical source GL shader object');\n        return ShaderProgram.shaders_by_source[key];\n    }\n\n    let shader = gl.createShader(stype);\n\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n        let type = (stype === gl.VERTEX_SHADER ? 'vertex' : 'fragment');\n        let message = gl.getShaderInfoLog(shader);\n        let errors = parseShaderErrors(message);\n        throw Object.assign(new Error(message), { type, errors });\n    }\n\n    ShaderProgram.shaders_by_source[key] = shader; // cache by exact source\n    return shader;\n};\n","// Creates a Vertex Array Object if the extension is available, or falls back on standard attribute calls\n\nimport getExtension from './extensions';\nimport log from '../utils/log';\n\nexport default {\n\n    disabled: false, // set to true to disable VAOs even if extension is available\n    bound_vao: [],   // currently bound VAO, by GL context\n\n    init (gl) {\n        let ext;\n        if (this.disabled !== true) {\n            ext = getExtension(gl, 'OES_vertex_array_object');\n        }\n\n        if (ext != null) {\n            log('info', 'Vertex Array Object extension available');\n        }\n        else if (this.disabled !== true) {\n            log('warn', 'Vertex Array Object extension NOT available');\n        }\n        else {\n            log('warn', 'Vertex Array Object extension force disabled');\n        }\n    },\n\n    getExtension(gl, ext_name) {\n        if (this.disabled !== true) {\n            return getExtension(gl, ext_name);\n        }\n    },\n\n    create (gl, setup, teardown) {\n        let vao = {};\n        vao.setup = setup;\n        vao.teardown = teardown;\n\n        let ext = this.getExtension(gl, 'OES_vertex_array_object');\n        if (ext != null) {\n            vao._vao = ext.createVertexArrayOES();\n            ext.bindVertexArrayOES(vao._vao);\n        }\n\n        vao.setup();\n\n        return vao;\n    },\n\n    getCurrentBinding (gl) {\n        let bound = this.bound_vao.filter(e => e[0] === gl)[0];\n        return bound && bound[1];\n    },\n\n    setCurrentBinding (gl, vao) {\n        let bound_vao = this.bound_vao;\n        let binding = bound_vao.filter(e => e[0] === gl)[0];\n        if (binding == null) {\n            bound_vao.push([gl, vao]);\n        }\n        else {\n            binding[1] = vao;\n        }\n    },\n\n    bind (gl, vao) {\n        let ext = this.getExtension(gl, 'OES_vertex_array_object');\n        if (vao != null) {\n            if (ext != null && vao._vao != null) {\n                ext.bindVertexArrayOES(vao._vao);\n                this.setCurrentBinding(gl, vao);\n            }\n            else {\n                vao.setup();\n            }\n        }\n        else {\n            let bound_vao = this.getCurrentBinding(gl);\n            if (ext != null) {\n                ext.bindVertexArrayOES(null);\n            }\n            else if (bound_vao != null && typeof bound_vao.teardown === 'function') {\n                bound_vao.teardown();\n            }\n            this.setCurrentBinding(gl, null);\n        }\n    },\n\n    destroy (gl, vao) {\n        let ext = this.getExtension(gl, 'OES_vertex_array_object');\n        if (ext != null && vao != null && vao._vao != null) {\n            ext.deleteVertexArrayOES(vao._vao);\n            vao._vao = null;\n        }\n        // destroy is a no-op if VAO extension isn't available\n    }\n\n};\n","// Deep/recursive merge of one or more source objects into a destination object\nexport default function mergeObjects (dest, ...sources) {\n    for (let s=0; s < sources.length; s++) {\n        let source = sources[s];\n        if (!source) {\n            continue;\n        }\n        for (let key in source) {\n            let value = source[key];\n            // Recursively merge the source into the destination if it is a a non-null key/value object\n            // (e.g. don't merge arrays, those are treated as scalar values; null values will overwrite/erase\n            // the previous destination value)\n            if (value !== null && typeof value === 'object' && !Array.isArray(value)) {\n                if (dest[key] !== null && typeof dest[key] === 'object' && !Array.isArray(dest[key])) {\n                    dest[key] = mergeObjects(dest[key], value);\n                }\n                else {\n                    dest[key] = mergeObjects({}, value); // destination not an object, overwrite\n                }\n            }\n            // Overwrite the previous destination value if the source property is: a scalar (number/string),\n            // an array, or a null value\n            else if (value !== undefined) {\n                dest[key] = value;\n            }\n            // Undefined source properties are ignored\n        }\n\n    }\n    return dest;\n}\n","// Miscellaneous geo functions\n\nvar Geo;\nexport default Geo = {};\n\n// Projection constants\nGeo.default_source_max_zoom = 18;\nGeo.default_view_max_zoom = 20;\nGeo.max_style_zoom = 25; // max zoom at which styles will be evaluated\nGeo.tile_size = 256;\nGeo.half_circumference_meters = 20037508.342789244;\nGeo.circumference_meters = Geo.half_circumference_meters * 2;\nGeo.min_zoom_meters_per_pixel = Geo.circumference_meters / Geo.tile_size; // min zoom draws world as 2 tiles wide\n\nlet meters_per_pixel = [];\nGeo.metersPerPixel = function (z) {\n    meters_per_pixel[z] = meters_per_pixel[z] || Geo.min_zoom_meters_per_pixel / Math.pow(2, z);\n    return meters_per_pixel[z];\n};\n\nlet meters_per_tile = [];\nGeo.metersPerTile = function (z) {\n    meters_per_tile[z] = meters_per_tile[z] || Geo.circumference_meters / Math.pow(2, z);\n    return meters_per_tile[z];\n};\n\n// Conversion functions based on an defined tile scale\nGeo.tile_scale = 4096; // coordinates are locally scaled to the range [0, tile_scale]\nGeo.units_per_pixel = Geo.tile_scale / Geo.tile_size;\nGeo.height_scale = 16;  // provides sub-meter precision for height values (16ths of a meters)\n\nlet units_per_meter = [];\nGeo.unitsPerMeter = function (z) {\n    units_per_meter[z] = units_per_meter[z] || Geo.tile_scale / (Geo.tile_size * Geo.metersPerPixel(z));\n    return units_per_meter[z];\n};\n\n// Convert tile location to mercator meters - multiply by pixels per tile, then by meters per pixel, adjust for map origin\nGeo.metersForTile = function (tile) {\n    return {\n        x: tile.x * Geo.circumference_meters / Math.pow(2, tile.z) - Geo.half_circumference_meters,\n        y: -(tile.y * Geo.circumference_meters / Math.pow(2, tile.z) - Geo.half_circumference_meters)\n    };\n};\n\n/**\n   Given a point in mercator meters and a zoom level, return the tile X/Y/Z that the point lies in\n*/\nGeo.tileForMeters = function ([x, y], zoom) {\n    return {\n        x: Math.floor((x + Geo.half_circumference_meters) / (Geo.circumference_meters / Math.pow(2, zoom))),\n        y: Math.floor((-y + Geo.half_circumference_meters) / (Geo.circumference_meters / Math.pow(2, zoom))),\n        z: zoom\n    };\n};\n\n// Wrap a tile to positive #s for zoom\n// Optionally specify the axes to wrap\nGeo.wrapTile = function({ x, y, z }, mask = { x: true, y: false }) {\n    var m = (1 << z) - 1;\n    if (mask.x) {\n        x = x & m;\n    }\n    if (mask.y) {\n        y = y & m;\n    }\n    return { x, y, z };\n};\n\n/**\n   Convert mercator meters to lat-lng, in-place\n*/\nGeo.metersToLatLng = function (c) {\n    c[0] /= Geo.half_circumference_meters;\n    c[1] /= Geo.half_circumference_meters;\n\n    c[1] = (2 * Math.atan(Math.exp(c[1] * Math.PI)) - (Math.PI / 2)) / Math.PI;\n\n    c[0] *= 180;\n    c[1] *= 180;\n\n    return c;\n};\n\n/**\n  Convert lat-lng to mercator meters, in-place\n*/\nGeo.latLngToMeters = function (c) {\n    // Latitude\n    c[1] = Math.log(Math.tan(c[1] * Math.PI / 360 + Math.PI / 4)) / Math.PI;\n    c[1] *= Geo.half_circumference_meters;\n\n    // Longitude\n    c[0] *= Geo.half_circumference_meters / 180;\n\n    return c;\n};\n\n// Transform from local tile coordinats to lat lng\nGeo.tileSpaceToLatlng = function (geometry, z, min) {\n    const units_per_meter = Geo.unitsPerMeter(z);\n    Geo.transformGeometry(geometry, coord => {\n        coord[0] = (coord[0] / units_per_meter) + min.x;\n        coord[1] = (coord[1] / units_per_meter) + min.y;\n        Geo.metersToLatLng(coord);\n    });\n    return geometry;\n};\n\n// Copy GeoJSON geometry\nGeo.copyGeometry = function (geometry) {\n    if (geometry == null) {\n        return; // skip if missing geometry (valid GeoJSON)\n    }\n\n    let copy = { type: geometry.type };\n\n    if (geometry.type === 'Point') {\n        copy.coordinates = [geometry.coordinates[0], geometry.coordinates[1]];\n    }\n    else if (geometry.type === 'LineString' || geometry.type === 'MultiPoint') {\n        copy.coordinates = geometry.coordinates.map(c => [c[0], c[1]]);\n    }\n    else if (geometry.type === 'Polygon' || geometry.type === 'MultiLineString') {\n        copy.coordinates = geometry.coordinates.map(ring => ring.map(c => [c[0], c[1]]));\n    }\n    else if (geometry.type === 'MultiPolygon') {\n        copy.coordinates = geometry.coordinates.map(polygon => {\n            return polygon.map(ring => ring.map(c => [c[0], c[1]]));\n        });\n    }\n    // TODO: support GeometryCollection\n    return copy;\n};\n\n// Run an in-place transform function on each cooordinate in a GeoJSON geometry\nGeo.transformGeometry = function (geometry, transform) {\n    if (geometry == null) {\n        return; // skip if missing geometry (valid GeoJSON)\n    }\n\n    if (geometry.type === 'Point') {\n        transform(geometry.coordinates);\n    }\n    else if (geometry.type === 'LineString' || geometry.type === 'MultiPoint') {\n        geometry.coordinates.forEach(transform);\n    }\n    else if (geometry.type === 'Polygon' || geometry.type === 'MultiLineString') {\n        geometry.coordinates.forEach(ring => ring.forEach(transform));\n    }\n    else if (geometry.type === 'MultiPolygon') {\n        geometry.coordinates.forEach(polygon => {\n            polygon.forEach(ring => ring.forEach(transform));\n        });\n    }\n    // TODO: support GeometryCollection\n};\n\nGeo.boxIntersect = function (b1, b2) {\n    return !(\n        b2.sw.x > b1.ne.x ||\n        b2.ne.x < b1.sw.x ||\n        b2.sw.y > b1.ne.y ||\n        b2.ne.y < b1.sw.y\n    );\n};\n\n// Finds the axis-aligned bounding box for a polygon\nGeo.findBoundingBox = function (polygon) {\n    var min_x = Infinity,\n        max_x = -Infinity,\n        min_y = Infinity,\n        max_y = -Infinity;\n\n    // Only need to examine outer ring (polygon[0])\n    var num_coords = polygon[0].length;\n    for (var c=0; c < num_coords; c++) {\n        var coord = polygon[0][c];\n\n        if (coord[0] < min_x) {\n            min_x = coord[0];\n        }\n        if (coord[1] < min_y) {\n            min_y = coord[1];\n        }\n        if (coord[0] > max_x) {\n            max_x = coord[0];\n        }\n        if (coord[1] > max_y) {\n            max_y = coord[1];\n        }\n    }\n\n    return [min_x, min_y, max_x, max_y];\n};\n\n// Convert geometry type to one of: 'point', 'line', 'polygon'\nGeo.geometryType = function(type) {\n    if (type === 'Polygon' || type === 'MultiPolygon') {\n        return 'polygon';\n    }\n    else if (type === 'LineString' || type === 'MultiLineString') {\n        return 'line';\n    }\n    if (type === 'Point' || type === 'MultiPoint') {\n        return 'point';\n    }\n};\n\n// Geometric / weighted centroid of polygon\n// Adapted from https://github.com/Leaflet/Leaflet/blob/c10f405a112142b19785967ce0e142132a6095ad/src/layer/vector/Polygon.js#L57\nGeo.centroid = function (polygon, relative = true) {\n    if (!polygon || polygon.length === 0) {\n        return;\n    }\n\n    let x = 0, y = 0, area = 0;\n    let ring = polygon[0]; // only use first ring for now\n    let len = ring.length;\n\n    // optionally calculate relative to first coordinate to avoid precision issues w/small polygons\n    let origin;\n    if (relative) {\n        origin = ring[0];\n        ring = ring.map(v => [v[0] - origin[0], v[1] - origin[1]]);\n    }\n\n    for (let i = 0, j = len - 1; i < len; j = i, i++) {\n        let p0 = ring[i];\n        let p1 = ring[j];\n        let f = p0[1] * p1[0] - p1[1] * p0[0];\n\n        x += (p0[0] + p1[0]) * f;\n        y += (p0[1] + p1[1]) * f;\n        area += f * 3;\n    }\n\n    if (!area) {\n        return; // skip degenerate polygons\n    }\n\n    let c = [x / area, y / area];\n    if (relative) {\n        c[0] += origin[0];\n        c[1] += origin[1];\n    }\n    return c;\n};\n\nGeo.multiCentroid = function (polygons) {\n    let n = 0;\n    let centroid = null;\n\n    for (let p=0; p < polygons.length; p++) {\n        let c = Geo.centroid(polygons[p]);\n        if (c) { // skip degenerate polygons\n            centroid = centroid || [0, 0];\n            centroid[0] += c[0];\n            centroid[1] += c[1];\n            n++;\n        }\n    }\n\n    if (n > 0) {\n        centroid[0] /= n;\n        centroid[1] /= n;\n    }\n\n    return centroid; // will return null if all polygons were degenerate\n};\n\nGeo.signedPolygonRingAreaSum = function (ring) {\n    let area = 0;\n    let n = ring.length;\n\n    for (let i = 0; i < n - 1; i++) {\n        let p0 = ring[i];\n        let p1 = ring[i+1];\n\n        area += p0[0] * p1[1] - p1[0] * p0[1];\n    }\n\n    area += ring[n - 1][0] * ring[0][1] - ring[0][0] * ring[n - 1][1];\n    return area;\n};\n\nGeo.polygonRingArea = function (ring) {\n    return Math.abs(Geo.signedPolygonRingAreaSum(ring)) / 2;\n};\n\n// TODO: subtract inner rings\nGeo.polygonArea = function (polygon) {\n    if (!polygon) {\n        return;\n    }\n    return Geo.polygonRingArea(polygon[0]);\n};\n\nGeo.multiPolygonArea = function (polygons) {\n    let area = 0;\n\n    for (let p=0; p < polygons.length; p++) {\n        area += Geo.polygonArea(polygons[p]);\n    }\n\n    return area;\n};\n\nGeo.ringWinding = function (ring) {\n    let area = Geo.signedPolygonRingAreaSum(ring);\n    if (area > 0) {\n        return 'CW';\n    }\n    else if (area < 0) {\n        return 'CCW';\n    }\n    // return undefined on zero area polygon\n};\n","import hashString from './hash';\n\n// cache of functions, keyed by unique source\nconst cache = {\n    functions: {},\n    num_functions: 0,\n    num_cached: 0\n};\n\nexport { cache as functionStringCache };\n\nexport function clearFunctionStringCache () {\n    cache.functions = {};\n    cache.num_functions = 0;\n    cache.num_cached = 0;\n}\n\n// Recursively parse an object, compiling string properties that look like functions\nexport function compileFunctionStrings (obj, wrap) {\n    // Convert string\n    if (typeof obj === 'string') {\n        obj = compileFunctionString(obj, wrap);\n    }\n    // Loop through object properties\n    else if (obj != null && typeof obj === 'object') {\n        for (let p in obj) {\n            obj[p] = compileFunctionStrings(obj[p], wrap);\n        }\n    }\n    return obj;\n}\n\n// Compile a string that looks like a function\nexport function compileFunctionString (val, wrap) {\n    // Parse function signature and body\n    let fmatch =\n        (typeof val === 'string') &&\n        val.match(/^\\s*function[^(]*\\(([^)]*)\\)\\s*?\\{([\\s\\S]*)\\}$/m);\n\n    if (fmatch && fmatch.length > 2) {\n        try {\n            // function body\n            const body = fmatch[2];\n            const source = (typeof wrap === 'function') ? wrap(body) : body; // optionally wrap source\n\n            // compile and cache by unique function source\n            const key = hashString(source);\n            if (cache.functions[key] === undefined) {\n                // function arguments extracted from signature\n                let args = fmatch[1].length > 0 && fmatch[1].split(',').map(x => x.trim()).filter(x => x);\n                args = args.length > 0 ? args : ['context']; // default to single 'context' argument\n\n                cache.functions[key] = new Function(args.toString(), source); // jshint ignore:line\n                cache.functions[key].source = body; // save original, un-wrapped function body source\n                cache.num_functions++;\n            }\n            else {\n                cache.num_cached++;\n            }\n\n            return cache.functions[key];\n        }\n        catch (e) {\n            // fall-back to original value if parsing failed\n            return val;\n        }\n    }\n    return val;\n}\n","// (c) Dean McNamee <dean@gmail.com>, 2012.\n//\n// https://github.com/deanm/css-color-parser-js\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n// IN THE SOFTWARE.\n\n// http://www.w3.org/TR/css3-color/\nvar kCSSColorTable = {\n  \"transparent\": [0,0,0,0], \"aliceblue\": [240,248,255,1],\n  \"antiquewhite\": [250,235,215,1], \"aqua\": [0,255,255,1],\n  \"aquamarine\": [127,255,212,1], \"azure\": [240,255,255,1],\n  \"beige\": [245,245,220,1], \"bisque\": [255,228,196,1],\n  \"black\": [0,0,0,1], \"blanchedalmond\": [255,235,205,1],\n  \"blue\": [0,0,255,1], \"blueviolet\": [138,43,226,1],\n  \"brown\": [165,42,42,1], \"burlywood\": [222,184,135,1],\n  \"cadetblue\": [95,158,160,1], \"chartreuse\": [127,255,0,1],\n  \"chocolate\": [210,105,30,1], \"coral\": [255,127,80,1],\n  \"cornflowerblue\": [100,149,237,1], \"cornsilk\": [255,248,220,1],\n  \"crimson\": [220,20,60,1], \"cyan\": [0,255,255,1],\n  \"darkblue\": [0,0,139,1], \"darkcyan\": [0,139,139,1],\n  \"darkgoldenrod\": [184,134,11,1], \"darkgray\": [169,169,169,1],\n  \"darkgreen\": [0,100,0,1], \"darkgrey\": [169,169,169,1],\n  \"darkkhaki\": [189,183,107,1], \"darkmagenta\": [139,0,139,1],\n  \"darkolivegreen\": [85,107,47,1], \"darkorange\": [255,140,0,1],\n  \"darkorchid\": [153,50,204,1], \"darkred\": [139,0,0,1],\n  \"darksalmon\": [233,150,122,1], \"darkseagreen\": [143,188,143,1],\n  \"darkslateblue\": [72,61,139,1], \"darkslategray\": [47,79,79,1],\n  \"darkslategrey\": [47,79,79,1], \"darkturquoise\": [0,206,209,1],\n  \"darkviolet\": [148,0,211,1], \"deeppink\": [255,20,147,1],\n  \"deepskyblue\": [0,191,255,1], \"dimgray\": [105,105,105,1],\n  \"dimgrey\": [105,105,105,1], \"dodgerblue\": [30,144,255,1],\n  \"firebrick\": [178,34,34,1], \"floralwhite\": [255,250,240,1],\n  \"forestgreen\": [34,139,34,1], \"fuchsia\": [255,0,255,1],\n  \"gainsboro\": [220,220,220,1], \"ghostwhite\": [248,248,255,1],\n  \"gold\": [255,215,0,1], \"goldenrod\": [218,165,32,1],\n  \"gray\": [128,128,128,1], \"green\": [0,128,0,1],\n  \"greenyellow\": [173,255,47,1], \"grey\": [128,128,128,1],\n  \"honeydew\": [240,255,240,1], \"hotpink\": [255,105,180,1],\n  \"indianred\": [205,92,92,1], \"indigo\": [75,0,130,1],\n  \"ivory\": [255,255,240,1], \"khaki\": [240,230,140,1],\n  \"lavender\": [230,230,250,1], \"lavenderblush\": [255,240,245,1],\n  \"lawngreen\": [124,252,0,1], \"lemonchiffon\": [255,250,205,1],\n  \"lightblue\": [173,216,230,1], \"lightcoral\": [240,128,128,1],\n  \"lightcyan\": [224,255,255,1], \"lightgoldenrodyellow\": [250,250,210,1],\n  \"lightgray\": [211,211,211,1], \"lightgreen\": [144,238,144,1],\n  \"lightgrey\": [211,211,211,1], \"lightpink\": [255,182,193,1],\n  \"lightsalmon\": [255,160,122,1], \"lightseagreen\": [32,178,170,1],\n  \"lightskyblue\": [135,206,250,1], \"lightslategray\": [119,136,153,1],\n  \"lightslategrey\": [119,136,153,1], \"lightsteelblue\": [176,196,222,1],\n  \"lightyellow\": [255,255,224,1], \"lime\": [0,255,0,1],\n  \"limegreen\": [50,205,50,1], \"linen\": [250,240,230,1],\n  \"magenta\": [255,0,255,1], \"maroon\": [128,0,0,1],\n  \"mediumaquamarine\": [102,205,170,1], \"mediumblue\": [0,0,205,1],\n  \"mediumorchid\": [186,85,211,1], \"mediumpurple\": [147,112,219,1],\n  \"mediumseagreen\": [60,179,113,1], \"mediumslateblue\": [123,104,238,1],\n  \"mediumspringgreen\": [0,250,154,1], \"mediumturquoise\": [72,209,204,1],\n  \"mediumvioletred\": [199,21,133,1], \"midnightblue\": [25,25,112,1],\n  \"mintcream\": [245,255,250,1], \"mistyrose\": [255,228,225,1],\n  \"moccasin\": [255,228,181,1], \"navajowhite\": [255,222,173,1],\n  \"navy\": [0,0,128,1], \"oldlace\": [253,245,230,1],\n  \"olive\": [128,128,0,1], \"olivedrab\": [107,142,35,1],\n  \"orange\": [255,165,0,1], \"orangered\": [255,69,0,1],\n  \"orchid\": [218,112,214,1], \"palegoldenrod\": [238,232,170,1],\n  \"palegreen\": [152,251,152,1], \"paleturquoise\": [175,238,238,1],\n  \"palevioletred\": [219,112,147,1], \"papayawhip\": [255,239,213,1],\n  \"peachpuff\": [255,218,185,1], \"peru\": [205,133,63,1],\n  \"pink\": [255,192,203,1], \"plum\": [221,160,221,1],\n  \"powderblue\": [176,224,230,1], \"purple\": [128,0,128,1],\n  \"rebeccapurple\": [102,51,153,1],\n  \"red\": [255,0,0,1], \"rosybrown\": [188,143,143,1],\n  \"royalblue\": [65,105,225,1], \"saddlebrown\": [139,69,19,1],\n  \"salmon\": [250,128,114,1], \"sandybrown\": [244,164,96,1],\n  \"seagreen\": [46,139,87,1], \"seashell\": [255,245,238,1],\n  \"sienna\": [160,82,45,1], \"silver\": [192,192,192,1],\n  \"skyblue\": [135,206,235,1], \"slateblue\": [106,90,205,1],\n  \"slategray\": [112,128,144,1], \"slategrey\": [112,128,144,1],\n  \"snow\": [255,250,250,1], \"springgreen\": [0,255,127,1],\n  \"steelblue\": [70,130,180,1], \"tan\": [210,180,140,1],\n  \"teal\": [0,128,128,1], \"thistle\": [216,191,216,1],\n  \"tomato\": [255,99,71,1], \"turquoise\": [64,224,208,1],\n  \"violet\": [238,130,238,1], \"wheat\": [245,222,179,1],\n  \"white\": [255,255,255,1], \"whitesmoke\": [245,245,245,1],\n  \"yellow\": [255,255,0,1], \"yellowgreen\": [154,205,50,1]}\n\nfunction clamp_css_byte(i) {  // Clamp to integer 0 .. 255.\n  i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clamp_css_float(f) {  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parse_css_int(str) {  // int or percentage.\n  if (str[str.length - 1] === '%')\n    return clamp_css_byte(parseFloat(str) / 100 * 255);\n  return clamp_css_byte(parseInt(str));\n}\n\nfunction parse_css_float(str) {  // float or percentage.\n  if (str[str.length - 1] === '%')\n    return clamp_css_float(parseFloat(str) / 100);\n  return clamp_css_float(parseFloat(str));\n}\n\nfunction css_hue_to_rgb(m1, m2, h) {\n  if (h < 0) h += 1;\n  else if (h > 1) h -= 1;\n\n  if (h * 6 < 1) return m1 + (m2 - m1) * h * 6;\n  if (h * 2 < 1) return m2;\n  if (h * 3 < 2) return m1 + (m2 - m1) * (2/3 - h) * 6;\n  return m1;\n}\n\nfunction parseCSSColor(css_str) {\n  // Remove all whitespace, not compliant, but should just be more accepting.\n  var str = css_str.replace(/ /g, '').toLowerCase();\n\n  // Color keywords (and transparent) lookup.\n  if (str in kCSSColorTable) return kCSSColorTable[str].slice();  // dup.\n\n  // #abc and #abc123 syntax.\n  if (str[0] === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n      if (!(iv >= 0 && iv <= 0xfff)) return null;  // Covers NaN.\n      return [((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n              (iv & 0xf0) | ((iv & 0xf0) >> 4),\n              (iv & 0xf) | ((iv & 0xf) << 4),\n              1];\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n      if (!(iv >= 0 && iv <= 0xffffff)) return null;  // Covers NaN.\n      return [(iv & 0xff0000) >> 16,\n              (iv & 0xff00) >> 8,\n              iv & 0xff,\n              1];\n    }\n\n    return null;\n  }\n\n  var op = str.indexOf('('), ep = str.indexOf(')');\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op+1, ep-(op+1)).split(',');\n    var alpha = 1;  // To allow case fallthrough.\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) return null;\n        alpha = parse_css_float(params.pop());\n        // Fall through.\n      case 'rgb':\n        if (params.length !== 3) return null;\n        return [parse_css_int(params[0]),\n                parse_css_int(params[1]),\n                parse_css_int(params[2]),\n                alpha];\n      case 'hsla':\n        if (params.length !== 4) return null;\n        alpha = parse_css_float(params.pop());\n        // Fall through.\n      case 'hsl':\n        if (params.length !== 3) return null;\n        var h = (((parseFloat(params[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parse_css_float(params[1]);\n        var l = parse_css_float(params[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n        return [clamp_css_byte(css_hue_to_rgb(m1, m2, h+1/3) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h-1/3) * 255),\n                alpha];\n      default:\n        return null;\n    }\n  }\n\n  return null;\n}\n\ntry { exports.parseCSSColor = parseCSSColor } catch(e) { }\n","import Utils from '../utils/utils';\nimport {compileFunctionString} from '../utils/functions';\nimport Geo from '../utils/geo';\nimport log from '../utils/log';\n\nimport parseCSSColor from 'csscolorparser';\n\nconst StyleParser = {};\nexport default StyleParser;\n\n// Helpers for string converstion / NaN handling\nconst clampPositive = v => Math.max(v, 0);\nconst noNaN = v => isNaN(v) ? 0 : v;\nconst parseNumber = v => Array.isArray(v) ? v.map(parseFloat).map(noNaN) : noNaN(parseFloat(v));\nconst parsePositiveNumber = v => Array.isArray(v) ? v.map(parseNumber).map(clampPositive) : clampPositive(parseNumber(v));\n\nObject.assign(StyleParser, {clampPositive, noNaN, parseNumber, parsePositiveNumber});\n\n// Wraps style functions and provides a scope of commonly accessible data:\n// - feature: the 'properties' of the feature, e.g. accessed as 'feature.name'\n// - global: user-defined properties on the `global` object in the scene file\n// - $zoom: the current map zoom level\n// - $geometry: the type of geometry, 'point', 'line', or 'polygon'\n// - $meters_per_pixel: conversion for meters/pixels at current map zoom\nStyleParser.wrapFunction = function (func) {\n    var f = `\n        var feature = context.feature.properties;\n        var global = context.global;\n        var $zoom = context.zoom;\n        var $layer = context.layer;\n        var $source = context.source;\n        var $geometry = context.geometry;\n        var $meters_per_pixel = context.meters_per_pixel;\n        var $id = context.id;\n\n        var val = (function(){ ${func} }());\n\n        if (typeof val === 'number' && isNaN(val)) {\n            val = null; // convert NaNs to nulls\n        }\n\n        return val;\n    `;\n    return f;\n};\n\n\n// Style parsing\n\nStyleParser.zeroPair = Object.freeze([0, 0]); // single allocation for zero values that won't be modified\n\n// Style defaults\nStyleParser.defaults = {\n    color: [1, 1, 1, 1],\n    width: 1,\n    size: 1,\n    extrude: false,\n    height: 20,\n    min_height: 0,\n    order: 0,\n    z: 0,\n    outline: {\n        color: [0, 0, 0, 0],\n        width: 0\n    },\n    material: {\n        ambient: 1,\n        diffuse: 1\n    }\n};\n\n// Style macros\nStyleParser.macros = {\n    // pseudo-random color by geometry id\n    'Style.color.pseudoRandomColor': function() {\n        return [\n            0.7 * (parseInt(feature.id, 16) / 100 % 1),     // eslint-disable-line no-undef\n            0.7 * (parseInt(feature.id, 16) / 10000 % 1),   // eslint-disable-line no-undef\n            0.7 * (parseInt(feature.id, 16) / 1000000 % 1), // eslint-disable-line no-undef\n            1\n        ];\n    },\n\n    // random color\n    'Style.color.randomColor': function() {\n        return [0.7 * Math.random(), 0.7 * Math.random(), 0.7 * Math.random(), 1];\n    }\n};\n\n// A context object that is passed to style parsing functions to provide a scope of commonly used values\nStyleParser.getFeatureParseContext = function (feature, tile, global) {\n    return {\n        feature,\n        id: feature.id,\n        tile,\n        global,\n        zoom: tile.style_z,\n        geometry: Geo.geometryType(feature.geometry.type),\n        meters_per_pixel: tile.meters_per_pixel,\n        meters_per_pixel_sq: tile.meters_per_pixel_sq,\n        units_per_meter_overzoom: tile.units_per_meter_overzoom\n    };\n};\n\n// Build a style param cache object\n// `value` is a raw value, cache methods will add other properties as needed\n// `transform` is an optional, one-time transform function to run on values during setup\n// `dynamic_transform` is an optional post-processing function applied to the result of function-based properties\nconst CACHE_TYPE = {\n    STATIC: 0,\n    DYNAMIC: 1,\n    ZOOM: 2\n};\nStyleParser.CACHE_TYPE = CACHE_TYPE;\n\nStyleParser.createPropertyCache = function (obj, transform = null, dynamic_transform = null) {\n    if (obj == null) {\n        return;\n    }\n\n    if (obj.value) {\n        return { value: obj.value, zoom: (obj.zoom ? {} : null), type: obj.type }; // clone existing cache object\n    }\n\n    let c = { value: obj, type: CACHE_TYPE.STATIC };\n\n    // does value contain zoom stops to be interpolated?\n    if (Array.isArray(c.value) && Array.isArray(c.value[0])) {\n        c.zoom = {}; // will hold values interpolated by zoom\n        c.type = CACHE_TYPE.ZOOM;\n    }\n    else if (typeof c.value === 'function') {\n        c.type = CACHE_TYPE.DYNAMIC;\n        c.dynamic_transform = (typeof dynamic_transform === 'function' ? dynamic_transform : null);\n    }\n\n    // apply optional transform function - usually a parsing function\n    if (typeof transform === 'function') {\n        if (c.zoom) { // apply to each zoom stop value\n            c.value = c.value.map((v, i) => [v[0], transform(v[1], i)]);\n        }\n        else if (typeof c.value !== 'function') { // don't transform functions\n            c.value = transform(c.value, 0); // single value, 0 = the first and only item in the array\n        }\n    }\n\n    return c;\n};\n\n// Convert old-style color macro into a function\n// TODO: deprecate this macro syntax\nStyleParser.createColorPropertyCache = function (obj) {\n    return StyleParser.createPropertyCache(obj, v => {\n        if (v === 'Style.color.pseudoRandomColor') {\n            return compileFunctionString(StyleParser.wrapFunction(StyleParser.macros['Style.color.pseudoRandomColor']));\n        }\n        else if (v === 'Style.color.randomColor') {\n            return StyleParser.macros['Style.color.randomColor'];\n        }\n\n        return v;\n    });\n};\n\n// Parse point sizes, which include optional %-based or aspect-ratio-constrained scaling from sprite size\n// Returns a cache object if successful, otherwise throws error message\nconst isPercent = v => typeof v === 'string' && v[v.length-1] === '%'; // size computed by %\nconst isRatio = v => v === 'auto'; // size derived from aspect ratio of one dimension\nconst isComputed = v => isPercent(v) || isRatio(v);\nconst dualRatioError = '\\'size\\' can specify either width or height as derived from aspect ratio, but not both';\nStyleParser.createPointSizePropertyCache = function (obj, texture) {\n    // obj is the value to be parsed eg \"64px\" \"100%\" \"auto\"\n    // mimics the structure of the size value (at each zoom stop if applicable),\n    // stores flags indicating if each element is a %-based size or not, or derived from aspect\n    let has_pct = null;\n    let has_ratio = null;\n    if (isPercent(obj)) { // 1D size\n        has_pct = [true];\n    }\n    else if (Array.isArray(obj)) {\n        // track which fields are % vals\n        if (Array.isArray(obj[0])) { // zoom stops\n            // could be a 1D value (that could be a %), or a 2D value (either width or height or both could be a %)\n            if (obj.some(v => Array.isArray(v[1]) ? v[1].some(w => isComputed(w)) : isPercent(v[1]))) {\n                has_pct = obj.map(v => Array.isArray(v[1]) ? v[1].map(w => isPercent(w)) : isPercent(v[1]));\n                has_ratio = obj.map(v => Array.isArray(v[1]) && v[1].map(w => isRatio(w)));\n                if (has_ratio.some(v => Array.isArray(v) && v.every(c => c))) {\n                    throw dualRatioError; // invalid case where both dims are ratios\n                }\n            }\n        }\n        else if (obj.some(isComputed)) { // 2D size\n            has_pct = [obj.map(isPercent)];\n            has_ratio = [obj.map(isRatio)];\n            if (has_ratio[0].every(c => c)) {\n                throw dualRatioError; // invalid case where both dims are ratios\n            }\n        }\n    }\n    else if (isRatio(obj)) {\n        throw 'this value only allowed as half of an array, eg [16px, auto]:';\n        // TODO: add this error check for zoom stop parsing above\n    }\n\n    if (has_pct || has_ratio) {\n        // texture is required when % or ratio sizes are used\n        if (!texture) {\n            throw '% or \\'auto\\' keywords can only be used to specify point size when a texture is defined';\n        }\n\n        // per-sprite based evaluation\n        obj = { value: obj };\n        obj.has_pct = has_pct;\n        obj.has_ratio = has_ratio;\n        obj.sprites = {}; // cache by sprite\n    }\n    else {\n        // no % or aspect ratio sizing, one cache for texture or all sprites\n        obj = StyleParser.createPropertyCache(obj, parsePositiveNumber);\n    }\n\n    return obj;\n};\n\nStyleParser.evalCachedPointSizeProperty = function (val, sprite_info, texture_info, context) {\n    if (val == null) {\n        return;\n    }\n\n    // no percentage-based calculation, one cache for all sprites\n    if (!val.has_pct && !val.has_ratio) {\n        return StyleParser.evalCachedProperty(val, context);\n    }\n\n    if (sprite_info) {\n        // per-sprite based evaluation, cache sizes per sprite\n        if (!val.sprites[sprite_info.sprite]) {\n            val.sprites[sprite_info.sprite] = createPointSizeCacheEntry(val, sprite_info);\n        }\n        return StyleParser.evalCachedProperty(val.sprites[sprite_info.sprite], context);\n    }\n    else {\n        // texture-based evaluation\n        // apply percentage or ratio sizing to a texture\n        val.texture = val.texture || createPointSizeCacheEntry(val, texture_info);\n        return StyleParser.evalCachedProperty(val.texture, context);\n    }\n};\n\nfunction createPointSizeCacheEntry (val, image_info) {\n    // the cache property transform function needs access to the image in `val`\n    // so it's accessed via a closure here\n    return StyleParser.createPropertyCache(val.value, (v, i) => {\n        if (Array.isArray(v)) { // 2D size\n            // either width or height or both could be a %\n            v = v.\n                map((c, j) => val.has_ratio[i][j] ? c : parsePositiveNumber(c)). // convert non-ratio values to px\n                map((c, j) => val.has_pct[i][j] ? image_info.css_size[j] * c / 100 : c); // apply % scaling as needed\n\n            // either width or height could be a ratio\n            if (val.has_ratio[i][0]) {\n                v[0] = v[1] * image_info.aspect;\n            }\n            else if (val.has_ratio[i][1]) {\n                v[1] = v[0] / image_info.aspect;\n            }\n        }\n        else { // 1D size\n            v = parsePositiveNumber(v);\n            if (val.has_pct[i]) {\n                v = image_info.css_size.map(c => c * v / 100); // set size as % of image\n            }\n            else {\n                v = [v, v]; // expand 1D size to 2D\n            }\n        }\n        return v;\n    });\n}\n\n// Interpolation and caching for a generic property (not a color or distance)\n// { value: original, static: val, zoom: { 1: val1, 2: val2, ... }, dynamic: function(){...} }\nStyleParser.evalCachedProperty = function(val, context) {\n    if (val == null) {\n        return;\n    }\n    else if (val.dynamic) { // function, compute each time (no caching)\n        return tryEval(val.dynamic, context);\n    }\n    else if (val.static) { // single static value\n        return val.static;\n    }\n    else if (val.zoom && val.zoom[context.zoom]) { // interpolated, cached\n        return val.zoom[context.zoom];\n    }\n    else { // not yet evaulated for cache\n        // Dynamic function-based\n        if (typeof val.value === 'function') {\n            if (val.dynamic_transform) {\n                // apply an optional post-eval transform function\n                // e.g. apply device pixel ratio to font sizes, unit conversions, etc.\n                val.dynamic = function(context) {\n                    return val.dynamic_transform(val.value(context));\n                };\n            }\n            else {\n                val.dynamic = val.value;\n            }\n            return tryEval(val.dynamic, context);\n        }\n        // Array of zoom-interpolated stops, e.g. [zoom, value] pairs\n        else if (Array.isArray(val.value) && Array.isArray(val.value[0])) {\n            // Calculate value for current zoom\n            val.zoom = val.zoom || {};\n            val.zoom[context.zoom] = Utils.interpolate(context.zoom, val.value);\n            return val.zoom[context.zoom];\n        }\n        // Single static value\n        else {\n            val.static = val.value;\n            return val.static;\n        }\n    }\n};\n\nStyleParser.convertUnits = function(val, context) {\n    // pre-parsed units\n    if (val.value != null) {\n        if (val.units === 'px') { // convert from pixels\n            return val.value * Geo.metersPerPixel(context.zoom);\n        }\n        return val.value;\n    }\n    // un-parsed unit string\n    else if (typeof val === 'string') {\n        if (val.trim().slice(-2) === 'px') {\n            val = parseNumber(val);\n            val *= Geo.metersPerPixel(context.zoom); // convert from pixels\n        }\n        else {\n            val = parseNumber(val);\n        }\n    }\n    // multiple values or stops\n    else if (Array.isArray(val)) {\n        // Array of arrays, e.g. zoom-interpolated stops\n        if (Array.isArray(val[0])) {\n            return val.map(v => [v[0], StyleParser.convertUnits(v[1], context)]);\n        }\n        // Array of values\n        else {\n            return val.map(v => StyleParser.convertUnits(v, context));\n        }\n    }\n    return val;\n};\n\n// Pre-parse units from string values\nStyleParser.parseUnits = function (value) {\n    var obj = { value: parseNumber(value) };\n    if (obj.value !== 0 && typeof value === 'string' && value.trim().slice(-2) === 'px') {\n        obj.units = 'px';\n    }\n    return obj;\n};\n\n// Takes a distance cache object and returns a distance value for this zoom\n// (caching the result for future use)\n// { value: original, zoom: { z: meters }, dynamic: function(){...} }\nStyleParser.evalCachedDistanceProperty = function(val, context) {\n    if (val == null) {\n        return;\n    }\n    else if (val.dynamic) {\n        return tryEval(val.dynamic, context);\n    }\n    else if (val.zoom && val.zoom[context.zoom]) {\n        return val.zoom[context.zoom];\n    }\n    else {\n        // Dynamic function-based\n        if (typeof val.value === 'function') {\n            val.dynamic = val.value;\n            return tryEval(val.dynamic, context);\n        }\n        // Array of zoom-interpolated stops, e.g. [zoom, value] pairs\n        else if (val.zoom) {\n            // Calculate value for current zoom\n            // Do final unit conversion as late as possible, when interpolation values have been determined\n            val.zoom[context.zoom] = Utils.interpolate(context.zoom, val.value,\n                v => StyleParser.convertUnits(v, context));\n\n            return val.zoom[context.zoom];\n        }\n        else {\n            return StyleParser.convertUnits(val.value, context);\n        }\n    }\n};\n\n// Cache previously parsed color strings\nStyleParser.string_colors = {};\nStyleParser.colorForString = function(string) {\n    // Cached\n    if (StyleParser.string_colors[string]) {\n        return StyleParser.string_colors[string];\n    }\n\n    // Calculate and cache\n    let color = parseCSSColor.parseCSSColor(string);\n    if (color && color.length === 4) {\n        color[0] /= 255;\n        color[1] /= 255;\n        color[2] /= 255;\n    }\n    else {\n        color = StyleParser.defaults.color;\n    }\n    StyleParser.string_colors[string] = color;\n    return color;\n};\n\n// Takes a color cache object and returns a color value for this zoom\n// (caching the result for future use)\n// { value: original, static: [r,g,b,a], zoom: { z: [r,g,b,a] }, dynamic: function(){...} }\nStyleParser.evalCachedColorProperty = function(val, context = {}) {\n    if (val == null) {\n        return;\n    }\n    else if (val.dynamic) {\n        let v = tryEval(val.dynamic, context);\n\n        if (typeof v === 'string') {\n            v = StyleParser.colorForString(v);\n        }\n\n        if (v && v[3] == null) {\n            v[3] = 1; // default alpha\n        }\n        return v;\n    }\n    else if (val.static) {\n        return val.static;\n    }\n    else if (val.zoom && val.zoom[context.zoom]) {\n        return val.zoom[context.zoom];\n    }\n    else {\n        // Dynamic function-based color\n        if (typeof val.value === 'function') {\n            val.dynamic = val.value;\n            let v = tryEval(val.dynamic, context);\n\n            if (typeof v === 'string') {\n                v = StyleParser.colorForString(v);\n            }\n\n            if (v && v[3] == null) {\n                v[3] = 1; // default alpha\n            }\n            return v;\n        }\n        // Single string color\n        else if (typeof val.value === 'string') {\n            val.static = StyleParser.colorForString(val.value);\n            return val.static;\n        }\n        // Array of zoom-interpolated stops, e.g. [zoom, color] pairs\n        else if (val.zoom) {\n            // Parse any string colors inside stops, the first time we encounter this property\n            if (!val.zoom_preprocessed) {\n                for (let i=0; i < val.value.length; i++) {\n                    let v = val.value[i];\n                    if (v && typeof v[1] === 'string') {\n                        v[1] = StyleParser.colorForString(v[1]);\n                    }\n                }\n                val.zoom_preprocessed = true;\n            }\n\n            // Calculate color for current zoom\n            val.zoom[context.zoom] = Utils.interpolate(context.zoom, val.value);\n            val.zoom[context.zoom][3] = val.zoom[context.zoom][3] || 1; // default alpha\n            return val.zoom[context.zoom];\n        }\n        // Single array color\n        else {\n            val.static = val.value.map(x => x); // copy to avoid modifying\n            if (val.static && val.static[3] == null) {\n                val.static[3] = 1; // default alpha\n            }\n            return val.static;\n        }\n    }\n};\n\n// Evaluate color cache object and apply optional alpha override (alpha arg is a single value cache object)\nStyleParser.evalCachedColorPropertyWithAlpha = function (val, alpha_prop, context) {\n    const color = StyleParser.evalCachedColorProperty(val, context);\n    if (color != null && alpha_prop != null) {\n        const alpha = StyleParser.evalCachedProperty(alpha_prop, context);\n        if (alpha != null) {\n            return [color[0], color[1], color[2], alpha];\n        }\n    }\n    return color;\n};\n\nStyleParser.parseColor = function(val, context = {}) {\n    if (typeof val === 'function') {\n        val = tryEval(val, context);\n    }\n\n    // Parse CSS-style colors\n    // TODO: change all colors to use 0-255 range internally to avoid dividing and then re-multiplying in geom builder\n    if (typeof val === 'string') {\n        val = StyleParser.colorForString(val);\n    }\n    else if (Array.isArray(val) && Array.isArray(val[0])) {\n        // Array of zoom-interpolated stops, e.g. [zoom, color] pairs\n        for (let i=0; i < val.length; i++) {\n            let v = val[i];\n            if (typeof v[1] === 'string') {\n                v[1] = StyleParser.colorForString(v[1]);\n            }\n        }\n\n        if (context.zoom) {\n            val = Utils.interpolate(context.zoom, val);\n        }\n    }\n\n    // Defaults\n    if (Array.isArray(val)) {\n        val = val.map(x => x); // copy to avoid modifying\n        // alpha\n        if (val[3] == null) {\n            val[3] = 1;\n        }\n    }\n    else {\n        val = [0, 0, 0, 1];\n    }\n\n    return val;\n};\n\nStyleParser.calculateOrder = function(order, context) {\n    // Computed order\n    if (typeof order === 'function') {\n        order = tryEval(order, context);\n    }\n    else if (typeof order === 'string') {\n        // Order tied to feature property\n        if (context.feature.properties[order]) {\n            order = context.feature.properties[order];\n        }\n        // Explicit order value\n        else {\n            order = parsePositiveNumber(order);\n        }\n    }\n\n    return order;\n};\n\n// Evaluate a function-based property, or pass-through static value\nStyleParser.evalProperty = function(prop, context) {\n    if (typeof prop === 'function') {\n        return tryEval(prop, context);\n    }\n    return prop;\n};\n\n// eval property function with try/catch\nfunction tryEval (func, context) {\n    try {\n        return func(context);\n    } catch(e) {\n        log('warn',\n            `Property function in layer '${context.layers[context.layers.length-1]}' failed with\\n`,\n            `error ${e.stack}\\n`,\n            `function '${func.source}'\\n`,\n            context.feature, context);\n    }\n}\n","import log from '../utils/log';\nimport Texture from '../gl/texture';\nimport WorkerBroker from '../utils/worker_broker';\n\nexport default class FeatureSelection {\n\n    constructor(gl, workers, lock_fn) {\n        this.gl = gl;\n        this.workers = workers; // pool of workers to request feature look-ups from, keyed by id\n        this._lock_fn = (typeof lock_fn === 'function') && lock_fn; // indicates if safe to read/write selection buffer this frame\n        this.init();\n    }\n\n    init() {\n        // Selection state tracking\n        this.requests = {}; // pending selection requests\n        this.feature = null; // currently selected feature\n        this.read_delay = 0; // delay time from selection render to framebuffer sample, to avoid CPU/GPU sync lock\n        this.read_delay_timer = null; // current timer (setTimeout) for delayed selection reads\n        this.pixels = null; // allocated lazily on request\n\n        // Frame buffer for selection\n        // TODO: initiate lazily in case we don't need to do any selection\n        this.fbo = this.gl.createFramebuffer();\n        this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this.fbo);\n        this.fbo_size = { width: 256, height: 256 }; // TODO: make configurable / adaptive based on canvas size\n\n        // Texture for the FBO color attachment\n        var fbo_texture = Texture.create( this.gl, '__selection_fbo', { filtering: 'nearest' });\n        fbo_texture.setData(this.fbo_size.width, this.fbo_size.height, null, { filtering: 'nearest' });\n        this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER, this.gl.COLOR_ATTACHMENT0, this.gl.TEXTURE_2D, fbo_texture.texture, 0);\n\n        // Renderbuffer for the FBO depth attachment\n        var fbo_depth_rb = this.gl.createRenderbuffer();\n        this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, fbo_depth_rb);\n        this.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.DEPTH_COMPONENT16, this.fbo_size.width, this.fbo_size.height);\n        this.gl.framebufferRenderbuffer(this.gl.FRAMEBUFFER, this.gl.DEPTH_ATTACHMENT, this.gl.RENDERBUFFER, fbo_depth_rb);\n\n        this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, null);\n    }\n\n    destroy() {\n        if (this.gl && this.fbo) {\n            this.gl.deleteFramebuffer(this.fbo);\n            this.fbo = null;\n            this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, null);\n        }\n\n        // TODO: free texture?\n    }\n\n    // external lock function determines when it's safe to read/write from selection buffer\n    get locked () {\n        return (this._lock_fn && this._lock_fn()) || false;\n    }\n\n    bind() {\n        // Switch to FBO\n        this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this.fbo);\n        this.gl.viewport(0, 0, this.fbo_size.width, this.fbo_size.height);\n        this.gl.clearColor(...FeatureSelection.defaultColor);\n    }\n\n    // Request feature selection\n    // Runs asynchronously, schedules selection buffer to be updated\n    getFeatureAt(point, { radius }) {\n        // ensure requested point is in canvas bounds\n        if (!point || point.x < 0 || point.y < 0 || point.x > 1 || point.y > 1) {\n            return Promise.resolve({ feature: null, changed: false });\n        }\n\n        return new Promise((resolve, reject) => {\n            // Queue requests for feature selection, and they will be picked up by the render loop\n            this.selection_request_id = (this.selection_request_id + 1) || 0;\n            this.requests[this.selection_request_id] = {\n                id: this.selection_request_id,\n                point,\n                radius,\n                resolve,\n                reject\n            };\n        });\n    }\n\n    // Any pending selection requests\n    pendingRequests() {\n        return Object.keys(this.requests).length ? this.requests : null;\n    }\n\n    hasPendingRequests() {\n        return this.pendingRequests() != null;\n    }\n\n    clearPendingRequests() {\n        for (var r in this.requests) {\n            var request = this.requests[r];\n\n            // This request was already sent to the worker, we're just awaiting its reply\n            if (request.sent) {\n                continue;\n            }\n\n            // Reject request since it will never be fulfilled\n            // TODO: pass a reason for rejection?\n            request.reject({ request });\n            delete this.requests[r];\n        }\n    }\n\n    // Read pending results from the selection buffer. Called after rendering to selection buffer.\n    read() {\n        // Delay reading the pixel result from the selection buffer to avoid CPU/GPU sync lock.\n        // Calling readPixels synchronously caused a massive performance hit, presumably since it\n        // forced this function to wait for the GPU to finish rendering and retrieve the texture contents.\n        if (this.read_delay_timer != null) {\n            clearTimeout(this.read_delay_timer);\n        }\n        this.read_delay_timer = setTimeout(() => {\n            if (this.locked) {\n                return;\n            }\n\n            var gl = this.gl;\n\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.fbo);\n\n            for (var r in this.requests) {\n                var request = this.requests[r];\n\n                // This request was already sent to the worker, we're just awaiting its reply\n                if (request.sent) {\n                    continue;\n                }\n\n                // Check selection map against FBO\n                let feature_key, worker_id = 255;\n                let {point, radius} = request;\n                let diam_px;\n\n                if (!radius) {\n                    radius = { x: 0, y: 0 };\n                    diam_px = { x: 1, y: 1 };\n                }\n                else {\n                    // diameter in selection buffer pixels\n                    let max_radius = Math.min(this.fbo_size.width, this.fbo_size.height);\n                    diam_px = {\n                        x: Math.min(Math.ceil(radius.x * 2 * this.fbo_size.width), max_radius),\n                        y: Math.min(Math.ceil(radius.y * 2 * this.fbo_size.height), max_radius)\n                    };\n                }\n\n                // allocate or resize\n                if (this.pixels == null || this.pixels.byteLength < diam_px.x * diam_px.y * 4) {\n                    this.pixels = new Uint8Array(diam_px.x * diam_px.y * 4);\n                }\n\n                // clear pixels\n                if (this.pixels.fill instanceof Function) {\n                    this.pixels.fill(0); // native typed array fill\n                }\n                else {\n                    for (let p=0; p < this.pixels.length; p++) {\n                        this.pixels[p] = 0;\n                    }\n                }\n\n                // capture pixels\n                gl.readPixels(\n                    Math.round(((point.x - radius.x) * this.fbo_size.width)),\n                    Math.round((1 - point.y - radius.y) * this.fbo_size.height),\n                    diam_px.x, diam_px.y, gl.RGBA, gl.UNSIGNED_BYTE, this.pixels);\n\n                // first check center pixel (avoid scanning all pixels if cursor is directly on a feature)\n                let p = (Math.round(diam_px.y / 2) * diam_px.x + Math.round(diam_px.x / 2)) * 4;\n                let v = this.pixels[p] + (this.pixels[p+1] << 8) + (this.pixels[p+2] << 16); // feature id in RGB channels\n                if (v > 0) {\n                    feature_key = (v + (this.pixels[p+3] << 24)) >>> 0; // worker id in alpha channel\n                    worker_id = this.pixels[p+3];\n                }\n                else {\n                    // scan all pixels for feature closest to cursor\n                    let min_dist = -1 >>> 0;\n                    p = 0;\n                    for (let y=0; y < diam_px.y; y++) {\n                        for (let x=0; x < diam_px.x; x++, p += 4) {\n                            v = this.pixels[p] + (this.pixels[p+1] << 8) + (this.pixels[p+2] << 16); // feature id in RGB channels\n                            if (v > 0) { // non-zero value indicates a feature\n                                // check to see if closer than last found feature\n                                let dist = (x - diam_px.x/2) * (x - diam_px.x/2) + (y - diam_px.y/2) * (y - diam_px.y/2);\n                                if (dist <= min_dist) {\n                                    // get worker id from alpha channel\n                                    feature_key = (v + (this.pixels[p+3] << 24)) >>> 0;\n                                    worker_id = this.pixels[p+3];\n                                    min_dist = dist;\n                                }\n                            }\n                        }\n                    }\n                }\n\n                // If feature found, ask appropriate web worker to lookup feature\n                if (worker_id !== 255) { // 255 indicates an empty selection buffer pixel\n                    if (this.workers[worker_id] != null) {\n                        WorkerBroker.postMessage(\n                            this.workers[worker_id],\n                            'self.getFeatureSelection',\n                            { id: request.id, key: feature_key })\n                            .then(message => {\n                                this.finishRead(message);\n                            });\n                    }\n                }\n                // No feature found, but still need to resolve promise\n                else {\n                    this.finishRead({ id: request.id });\n                }\n\n                request.sent = true;\n            }\n\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n        }, this.read_delay);\n    }\n\n    // Called on main thread when a web worker finds a feature in the selection buffer\n    finishRead (message) {\n        var request = this.requests[message.id];\n        if (!request) {\n            log('error', 'FeatureSelection.finishRead(): could not find message', message);\n            return; // request was cleared before it returned\n        }\n\n        var feature = message.feature;\n        var changed = false;\n        if ((feature != null && this.feature == null) ||\n            (feature == null && this.feature != null) ||\n            (feature != null && this.feature != null &&\n                JSON.stringify(feature) !== JSON.stringify(this.feature))) {\n            changed = true;\n        }\n\n        this.feature = feature; // store the most recently selected feature\n\n        // Resolve the request\n        request.resolve({ feature, changed, request });\n        delete this.requests[message.id]; // done processing this request\n    }\n\n\n    // Selection map generation\n    // Each worker will create its own independent, 'local' selection map\n\n    // Create a unique 32-bit color to identify a feature\n    // Workers independently create/modify selection colors in their own threads, but we also\n    // need the main thread to know where each feature color originated. To accomplish this,\n    // we partition the map by setting the 4th component (alpha channel) to the worker's id.\n    static makeEntry(tile) {\n        // 32-bit color key\n        this.map_entry++;\n        var ir = this.map_entry & 255;\n        var ig = (this.map_entry >> 8) & 255;\n        var ib = (this.map_entry >> 16) & 255;\n        var ia = this.map_prefix;\n        var r = ir / 255;\n        var g = ig / 255;\n        var b = ib / 255;\n        var a = ia / 255;\n        var key = (ir + (ig << 8) + (ib << 16) + (ia << 24)) >>> 0; // need unsigned right shift to convert to positive #\n\n        this.map[key] = {\n            color: [r, g, b, a],\n        };\n        this.map_size++;\n\n        // Initialize tile-specific tracking info\n        if (!this.tiles[tile.key]) {\n            this.tiles[tile.key] = {\n                entries: [],                        // set of feature entries in this thread\n                tile: {                             // subset of tile properties to pass back with feature\n                    key: tile.key,\n                    coords: tile.coords,\n                    style_z: tile.style_z,\n                    source: tile.source,\n                    generation: tile.generation\n                }\n            };\n        }\n\n        this.tiles[tile.key].entries.push(key);\n\n        return this.map[key];\n    }\n\n    static makeColor(feature, tile, context) {\n        var selector = this.makeEntry(tile);\n        selector.feature = {\n            id: feature.id,\n            properties: feature.properties,\n            source_name: context.source,\n            source_layer: context.layer,\n            layers: context.layers,\n            tile: this.tiles[tile.key].tile\n        };\n\n        return selector.color;\n    }\n\n    static reset(sources) {\n        // Clear specific sources\n        if (Array.isArray(sources)) {\n            sources.forEach(source => this.clearSource(source));\n        }\n        // Clear all sources\n        else {\n            this.tiles = {};\n            this.map = {};\n            this.map_size = 0;\n            this.map_entry = 0;\n        }\n    }\n\n    static clearSource(source) {\n        for (let key in this.tiles) {\n            if (this.tiles[key].tile.source === source) {\n                this.clearTile(key);\n            }\n        }\n    }\n\n    static clearTile(key) {\n        if (this.tiles[key]) {\n            this.tiles[key].entries.forEach(k => delete this.map[k]);\n            this.map_size -= this.tiles[key].entries.length;\n            delete this.tiles[key];\n        }\n    }\n\n    static getMapSize() {\n        return this.map_size;\n    }\n\n    static setPrefix(prefix) {\n        this.map_prefix = prefix;\n    }\n\n}\n\n// Static properties\nFeatureSelection.map = {};   // this will be unique per module instance (so unique per worker)\nFeatureSelection.tiles = {}; // selection keys, by tile\nFeatureSelection.map_size = 0;\nFeatureSelection.map_entry = 0;\nFeatureSelection.map_prefix = 0; // set by worker to worker id #\nFeatureSelection.defaultColor = [0, 0, 0, 1];\n","// WebGL constants - need to import these separately to make them available in the web worker\n\nvar gl;\nexport default gl = {};\n\n/* DataType */\ngl.BYTE                           = 0x1400;\ngl.UNSIGNED_BYTE                  = 0x1401;\ngl.SHORT                          = 0x1402;\ngl.UNSIGNED_SHORT                 = 0x1403;\ngl.INT                            = 0x1404;\ngl.UNSIGNED_INT                   = 0x1405;\ngl.FLOAT                          = 0x1406;\n","// Manage rendering for primitives\nimport ShaderProgram from './shader_program';\nimport VertexArrayObject from './vao';\nimport Texture from './texture';\n\n// A single mesh/VBO, described by a vertex layout, that can be drawn with one or more programs\nexport default class VBOMesh  {\n\n    constructor(gl, vertex_data, element_data, vertex_layout, options) {\n        options = options || {};\n\n        this.gl = gl;\n        this.vertex_data = vertex_data; // typed array\n        this.element_data = element_data; // typed array\n        this.vertex_layout = vertex_layout;\n        this.vertex_buffer = this.gl.createBuffer();\n        this.buffer_size = this.vertex_data.byteLength;\n        this.draw_mode = options.draw_mode || this.gl.TRIANGLES;\n        this.data_usage = options.data_usage || this.gl.STATIC_DRAW;\n        this.vertices_per_geometry = 3; // TODO: support lines, strip, fan, etc.\n        this.uniforms = options.uniforms;\n        this.textures = options.textures; // any textures owned by this mesh\n        this.retain = options.retain || false; // whether to retain mesh data in CPU after uploading to GPU\n        this.created_at = +new Date();\n        this.fade_in_time = options.fade_in_time || 0; // optional time to fade in mesh\n\n        this.vertex_count = this.vertex_data.byteLength / this.vertex_layout.stride;\n        this.element_count = 0;\n        this.vaos = {}; // map of VertexArrayObjects, keyed by program\n\n        this.toggle_element_array = false;\n        if (this.element_data) {\n            this.toggle_element_array = true;\n            this.element_count = this.element_data.length;\n            this.geometry_count = this.element_count / this.vertices_per_geometry;\n            this.element_type = (this.element_data.constructor === Uint16Array) ? this.gl.UNSIGNED_SHORT: this.gl.UNSIGNED_INT;\n            this.element_buffer = this.gl.createBuffer();\n            this.buffer_size += this.element_data.byteLength;\n            this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.element_buffer);\n            this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, this.element_data, this.data_usage);\n        }\n        else {\n            this.geometry_count = this.vertex_count / this.vertices_per_geometry;\n        }\n\n        this.upload();\n\n        if (!this.retain) {\n            delete this.vertex_data;\n            delete this.element_data;\n        }\n        this.valid = true;\n    }\n\n    // Render, by default with currently bound program, or otherwise with optionally provided one\n    // Returns true if mesh requests a render on next frame (e.g. for fade animations)\n    render(options = {}) {\n        if (!this.valid) {\n            return false;\n        }\n\n        var program = options.program || ShaderProgram.current;\n        program.use();\n\n        if (this.uniforms) {\n            program.saveUniforms(this.uniforms);\n            program.setUniforms(this.uniforms, false); // don't reset texture unit\n        }\n\n        let visible_time = (+new Date() - this.created_at) / 1000;\n        program.uniform('1f', 'u_visible_time', visible_time);\n\n        this.bind(program);\n\n        if (this.toggle_element_array){\n            this.gl.drawElements(this.draw_mode, this.element_count, this.element_type, 0);\n        }\n        else {\n            this.gl.drawArrays(this.draw_mode, 0, this.vertex_count);\n        }\n\n        VertexArrayObject.bind(this.gl, null);\n\n        if (this.uniforms) {\n            program.restoreUniforms(this.uniforms);\n        }\n\n        // Request next render if mesh is fading in\n        return (visible_time < this.fade_in_time);\n    }\n\n    // Bind buffers and vertex attributes to prepare for rendering\n    bind(program) {\n        // Bind VAO for this progam, or create one\n        let vao = this.vaos[program.id];\n        if (vao) {\n            VertexArrayObject.bind(this.gl, vao);\n        }\n        else {\n            this.vaos[program.id] = VertexArrayObject.create(this.gl, () => {\n                this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vertex_buffer);\n                if (this.toggle_element_array) {\n                    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.element_buffer);\n                }\n                this.vertex_layout.enableDynamicAttributes(this.gl, program);\n            });\n        }\n\n        this.vertex_layout.enableStaticAttributes(this.gl, program);\n    }\n\n    // Upload buffer data to GPU\n    upload() {\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vertex_buffer);\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, this.vertex_data, this.data_usage);\n    }\n\n    destroy() {\n        if (!this.valid) {\n            return false;\n        }\n        this.valid = false;\n\n        for (let v in this.vaos) {\n            VertexArrayObject.destroy(this.gl, this.vaos[v]);\n        }\n\n        this.gl.deleteBuffer(this.vertex_buffer);\n        this.vertex_buffer = null;\n\n        if (this.element_buffer) {\n            this.gl.deleteBuffer(this.element_buffer);\n            this.element_buffer = null;\n        }\n\n        delete this.vertex_data;\n        delete this.element_data;\n\n        if (this.textures) {\n            this.textures.forEach(t => Texture.release(t));\n        }\n\n        return true;\n    }\n\n}\n","import GLSL from '../gl/glsl';\nimport StyleParser from '../styles/style_parser';\n\nimport material_source from './material.glsl';\n\nconst material_props = ['emission', 'ambient', 'diffuse', 'specular'];\n\nexport default class Material {\n    constructor (config) {\n\n        config = config || {};\n\n        // These properties all have the same defaults, so they can be set in bulk\n        material_props.forEach(prop => {\n            const value = config[prop];\n            if (value != null) {\n                if (value.texture) {\n                    this[prop] = {\n                        texture: value.texture,\n                        mapping: value.mapping || 'spheremap',\n                        scale: GLSL.expandVec3(value.scale != null ? value.scale : 1),\n                        amount: GLSL.expandVec4(value.amount != null ? value.amount : 1)\n                    };\n                }\n                else if (typeof value === 'number' || Array.isArray(value)) {\n                    this[prop] = { amount: GLSL.expandVec4(value) };\n                }\n                else if (typeof value === 'string') {\n                    this[prop] = { amount: StyleParser.parseColor(value) };\n                }\n                else {\n                    this[prop] = value;\n                }\n            }\n        });\n\n        // Extra specular props\n        if (this.specular) {\n            this.specular.shininess = config.shininess ? parseFloat(config.shininess) : 0.2;\n        }\n\n        // Normal mapping\n        if (config.normal != null) {\n            this.normal = {\n                texture: config.normal.texture,\n                mapping: config.normal.mapping || 'triplanar',\n                scale: GLSL.expandVec3(config.normal.scale != null ? config.normal.scale : 1),\n                amount: config.normal.amount != null ? config.normal.amount : 1\n            };\n        }\n    }\n\n    // Determine if a material config block has sufficient properties to create a material\n    static isValid (config) {\n        if (config == null) {\n            return false;\n        }\n\n        if (config.emission == null &&\n            config.ambient == null &&\n            config.diffuse == null &&\n            config.specular == null) {\n            return false;\n        }\n\n        return true;\n    }\n\n    inject (style) {\n        // For each property, sets defines to configure texture mapping, with a pattern like:\n        //   TANGRAM_MATERIAL_DIFFUSE, TANGRAM_MATERIAL_DIFFUSE_TEXTURE, TANGRAM_MATERIAL_DIFFUSE_TEXTURE_SPHEREMAP\n        // Also sets flags to keep track of each unique mapping type being used, e.g.:\n        //   TANGRAM_MATERIAL_TEXTURE_SPHEREMAP\n        // Enables texture coordinates if needed and not already on\n        material_props.forEach(prop => {\n            let def = `TANGRAM_MATERIAL_${prop.toUpperCase()}`;\n            let texdef = def + '_TEXTURE';\n            style.defines[def] = (this[prop] != null);\n            if (this[prop] && this[prop].texture) {\n                style.defines[texdef] = true;\n                style.defines[texdef + '_' + this[prop].mapping.toUpperCase()] = true;\n                style.defines[`TANGRAM_MATERIAL_TEXTURE_${this[prop].mapping.toUpperCase()}`] = true;\n                style.texcoords = style.texcoords || (this[prop].mapping === 'uv');\n            }\n        });\n\n        // Normal mapping\n        // As anove, sets flags to keep track of each unique mapping type being used, e.g.:\n        //   TANGRAM_MATERIAL_TEXTURE_SPHEREMAP\n        if (this.normal && this.normal.texture) {\n            style.defines['TANGRAM_MATERIAL_NORMAL_TEXTURE'] = true;\n            style.defines['TANGRAM_MATERIAL_NORMAL_TEXTURE_' + this.normal.mapping.toUpperCase()] = true;\n            style.defines[`TANGRAM_MATERIAL_TEXTURE_${this.normal.mapping.toUpperCase()}`] = true;\n            style.texcoords = style.texcoords || (this.normal.mapping === 'uv');\n        }\n\n        style.replaceShaderBlock(Material.block, material_source, 'Material');\n        style.addShaderBlock('setup', '\\nmaterial = u_material;\\n', 'Material');\n    }\n\n    setupProgram (_program) {\n        // For each property, sets uniforms in the pattern:\n        // u_material.diffuse, u_material.diffuseScale u_material_diffuse_texture\n        material_props.forEach(prop => {\n            if (this[prop]) {\n                if (this[prop].texture) {\n                    _program.setTextureUniform(`u_material_${prop}_texture`, this[prop].texture);\n                    _program.uniform('3fv', `u_material.${prop}Scale`, this[prop].scale);\n                    _program.uniform('4fv', `u_material.${prop}`, this[prop].amount);\n                } else if (this[prop].amount) {\n                    _program.uniform('4fv', `u_material.${prop}`, this[prop].amount);\n                }\n            }\n        });\n\n        // Extra specular props\n        if (this.specular) {\n            _program.uniform('1f', 'u_material.shininess', this.specular.shininess);\n        }\n\n        // Normal mapping\n        if (this.normal && this.normal.texture) {\n            _program.setTextureUniform('u_material_normal_texture', this.normal.texture);\n            _program.uniform('3fv', 'u_material.normalScale', this.normal.scale);\n            _program.uniform('1f', 'u_material.normalAmount', this.normal.amount);\n        }\n    }\n}\n\nMaterial.block = 'material';\n","function _getPrototypeOf(t) {\n  return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) {\n    return t.__proto__ || Object.getPrototypeOf(t);\n  }, _getPrototypeOf(t);\n}\nexport { _getPrototypeOf as default };","import getPrototypeOf from \"./getPrototypeOf.js\";\nfunction _superPropBase(t, o) {\n  for (; !{}.hasOwnProperty.call(t, o) && null !== (t = getPrototypeOf(t)););\n  return t;\n}\nexport { _superPropBase as default };","import superPropBase from \"./superPropBase.js\";\nfunction _get() {\n  return _get = \"undefined\" != typeof Reflect && Reflect.get ? Reflect.get.bind() : function (e, t, r) {\n    var p = superPropBase(e, t);\n    if (p) {\n      var n = Object.getOwnPropertyDescriptor(p, t);\n      return n.get ? n.get.call(arguments.length < 3 ? e : r) : n.value;\n    }\n  }, _get.apply(null, arguments);\n}\nexport { _get as default };","function _assertThisInitialized(e) {\n  if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  return e;\n}\nexport { _assertThisInitialized as default };","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nfunction _possibleConstructorReturn(t, e) {\n  if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e;\n  if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\");\n  return assertThisInitialized(t);\n}\nexport { _possibleConstructorReturn as default };","import setPrototypeOf from \"./setPrototypeOf.js\";\nfunction _inherits(t, e) {\n  if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\");\n  t.prototype = Object.create(e && e.prototype, {\n    constructor: {\n      value: t,\n      writable: !0,\n      configurable: !0\n    }\n  }), Object.defineProperty(t, \"prototype\", {\n    writable: !1\n  }), e && setPrototypeOf(t, e);\n}\nexport { _inherits as default };","/*** Vector functions - vectors provided as [x, y] or [x, y, z] arrays ***/\n\nvar Vector;\nexport default Vector = {};\n\nVector.copy = function (v) {\n    var V = [];\n    var lim = v.length;\n    for (var i = 0; i < lim; i++) {\n        V[i] = v[i];\n    }\n    return V;\n};\n\nVector.neg = function (v) {\n    var V = [];\n    var lim = v.length;\n    for (var i = 0; i < lim; i++) {\n        V[i] = -v[i];\n    }\n    return V;\n};\n\n// Addition of two vectors\nVector.add = function (v1, v2) {\n    var v = [];\n    var lim = Math.min(v1.length,v2.length);\n    for (var i = 0; i < lim; i++) {\n        v[i] = v1[i] + v2[i];\n    }\n    return v;\n};\n\n// Substraction of two vectors\nVector.sub = function (v1, v2) {\n    var v = [];\n    var lim = Math.min(v1.length,v2.length);\n\n    for (var i = 0; i < lim; i++) {\n        v[i] = v1[i] - v2[i];\n    }\n    return v;\n};\n\nVector.signed_area = function (v1, v2, v3) {\n    return (v2[0]-v1[0])*(v3[1]-v1[1]) - (v3[0]-v1[0])*(v2[1]-v1[1]);\n};\n\n// Multiplication of two vectors, or a vector and a scalar\nVector.mult = function (v1, v2) {\n    var v = [],\n        len = v1.length,\n        i;\n\n    if (typeof v2 === 'number') {\n        // Mulitply by scalar\n        for (i = 0; i < len; i++) {\n            v[i] = v1[i] * v2;\n        }\n    }\n    else {\n        // Multiply two vectors\n        len = Math.min(v1.length,v2.length);\n        for (i = 0; i < len; i++) {\n            v[i] = v1[i] * v2[i];\n        }\n    }\n    return v;\n};\n\n// Division of two vectors\nVector.div = function (v1, v2) {\n    var v = [],\n        i;\n    if(typeof v2 === 'number'){\n        // Divide by scalar\n        for (i = 0; i < v1.length; i++){\n            v[i] = v1[i] / v2;\n        }\n    } else {\n        // Divide to vectors\n        var len = Math.min(v1.length,v2.length);\n        for (i = 0; i < len; i++) {\n            v[i] = v1[i] / v2[i];\n        }\n    }\n    return v;\n};\n\n// Get 2D perpendicular\nVector.perp = function (v1, v2) {\n    return [\n        v2[1] - v1[1],\n        v1[0] - v2[0]\n    ];\n};\n\n// Get 2D vector rotated\nVector.rot = function (v, a) {\n    var c = Math.cos(a);\n    var s = Math.sin(a);\n    return [\n        v[0] * c - v[1] * s,\n        v[0] * s + v[1] * c\n    ];\n};\n\n// Get 2D counter-clockwise angle\n// Angles in quadrant I and II are mapped to [0, PI)\n// Angles in quadrant III and IV are mapped to [-PI, 0]\nVector.angle = function ([x, y]) {\n    return Math.atan2(y,x);\n};\n\n// Get angle between two vectors\nVector.angleBetween = function(A, B){\n    var delta = Vector.dot(\n        Vector.normalize(Vector.copy(A)),\n        Vector.normalize(Vector.copy(B))\n    );\n    if (delta > 1) {delta = 1;} // protect against floating point error\n    return Math.acos(delta);\n};\n\n// Compare two points\nVector.isEqual = function (v1, v2) {\n    var len = v1.length;\n    for (var i = 0; i < len; i++) {\n        if (v1[i] !== v2[i]){\n            return false;\n        }\n    }\n    return true;\n};\n\n// Vector length squared\nVector.lengthSq = function (v) {\n    if (v.length === 2) {\n        return (v[0]*v[0] + v[1]*v[1]);\n    }\n    else if (v.length >= 3) {\n        return (v[0]*v[0] + v[1]*v[1] + v[2]*v[2]);\n    }\n    return 0;\n};\n\n// Vector length\nVector.length = function (v) {\n    return Math.sqrt(Vector.lengthSq(v));\n};\n\n// Normalize a vector *in place* (use Vector.copy() if you need a new vector instance)\nVector.normalize = function (v) {\n    var d;\n    if (v.length === 2) {\n        d = v[0]*v[0] + v[1]*v[1];\n\n        if (d === 1) {\n            return v;\n        }\n\n        d = Math.sqrt(d);\n\n        if (d !== 0) {\n            v[0] /= d;\n            v[1] /= d;\n        }\n        else {\n            v[0] = 0, v[1] = 0;\n        }\n    } else if (v.length >= 3) {\n        d = v[0]*v[0] + v[1]*v[1] + v[2]*v[2];\n\n        if (d === 1) {\n            return v;\n        }\n\n        d = Math.sqrt(d);\n\n        if (d !== 0) {\n            v[0] /= d;\n            v[1] /= d;\n            v[2] /= d;\n        }\n        else {\n            v[0] = 0, v[1] = 0, v[2] = 0;\n        }\n    }\n    return v;\n};\n\n// Cross product of two vectors\nVector.cross  = function (v1, v2) {\n    if (v1.length === 2){\n        return v1[0] * v2[1] - v1[1] * v2[0];\n    }\n    else if (v1.length === 3){\n        return [\n            (v1[1] * v2[2]) - (v1[2] * v2[1]),\n            (v1[2] * v2[0]) - (v1[0] * v2[2]),\n            (v1[0] * v2[1]) - (v1[1] * v2[0])\n        ];\n    }\n};\n\n// Dot product of two vectors\nVector.dot = function (v1, v2) {\n    var n = 0;\n    var lim = Math.min(v1.length, v2.length);\n    for (var i = 0; i < lim; i++) {\n        n += v1[i] * v2[i];\n    }\n    return n;\n};\n","import ShaderProgram from '../gl/shader_program';\nimport GLSL from '../gl/glsl';\nimport Geo from '../utils/geo';\nimport Vector from '../utils/vector';\nimport StyleParser from '../styles/style_parser';\n\nimport ambient_source from './ambient_light.glsl';\nimport directional_source from './directional_light.glsl';\nimport point_source from './point_light.glsl';\nimport spot_source from './spot_light.glsl';\n\n// Abstract light\nexport default class Light {\n\n    constructor (view, config) {\n        this.name = config.name;\n        this.view = view;\n\n        if (config.ambient == null || typeof config.ambient === 'number') {\n            this.ambient = GLSL.expandVec3(config.ambient || 0);\n        }\n        else {\n            this.ambient = StyleParser.parseColor(config.ambient).slice(0, 3);\n        }\n\n        if (config.diffuse == null || typeof config.diffuse === 'number') {\n            this.diffuse = GLSL.expandVec3(config.diffuse != null ? config.diffuse : 1);\n        }\n        else {\n            this.diffuse = StyleParser.parseColor(config.diffuse).slice(0, 3);\n        }\n\n        if (config.specular == null || typeof config.specular === 'number') {\n            this.specular = GLSL.expandVec3(config.specular || 0);\n        }\n        else {\n            this.specular = StyleParser.parseColor(config.specular).slice(0, 3);\n        }\n    }\n\n    // Create a light by type name, factory-style\n    // 'config' must include 'name' and 'type', along with any other type-specific properties\n    static create (view, config) {\n        if (Light.types[config.type]) {\n            return new Light.types[config.type](view, config);\n        }\n    }\n\n    // Set light for a style: fragment lighting, vertex lighting, or none\n    static setMode (mode, style) {\n        if (mode === true) {\n            mode = 'fragment';\n        }\n        mode = Light.enabled && ((mode != null) ? mode : 'fragment'); // default to fragment lighting\n        style.defines['TANGRAM_LIGHTING_FRAGMENT'] = (mode === 'fragment');\n        style.defines['TANGRAM_LIGHTING_VERTEX'] = (mode === 'vertex');\n    }\n\n    // Inject all provided light definitions, and calculate cumulative light function\n    static inject (lights) {\n        // Clear previous injections\n        ShaderProgram.removeBlock(Light.block);\n\n        // If lighting is globally disabled, nothing is injected (mostly for debugging or live editing)\n        if (!Light.enabled) {\n            return;\n        }\n\n        // Construct code to calculate each light instance\n        let calculateLights = '';\n        if (lights && Object.keys(lights).length > 0) {\n            // Collect uniques types of lights\n            let types = {};\n            for (let light_name in lights) {\n                types[lights[light_name].type] = true;\n            }\n\n            // Inject each type of light\n            for (let type in types) {\n                Light.types[type].inject();\n            }\n\n            // Inject per-instance blocks and construct the list of functions to calculate each light\n            for (let light_name in lights) {\n                // Define instance\n                lights[light_name].inject();\n\n                // Add the calculation function to the list\n                calculateLights += `calculateLight(${light_name}, _eyeToPoint, _normal);\\n`;\n            }\n        }\n\n        // Glue together the final lighting function that sums all the lights\n        let calculateFunction = `\n            vec4 calculateLighting(in vec3 _eyeToPoint, in vec3 _normal, in vec4 _color) {\n\n                // Do initial material calculations over normal, emission, ambient, diffuse and specular values\n                calculateMaterial(_eyeToPoint,_normal);\n\n                // Un roll the loop of individual ligths to calculate\n                ${calculateLights}\n\n                //  Final light intensity calculation\n                vec4 color = vec4(vec3(0.), _color.a); // start with vertex color alpha\n\n                #ifdef TANGRAM_MATERIAL_EMISSION\n                    color.rgb = material.emission.rgb;\n                    color.a *= material.emission.a;\n                #endif\n\n                #ifdef TANGRAM_MATERIAL_AMBIENT\n                    color.rgb += light_accumulator_ambient.rgb * _color.rgb * material.ambient.rgb;\n                    color.a *= material.ambient.a;\n                #else\n                    #ifdef TANGRAM_MATERIAL_DIFFUSE\n                        color.rgb += light_accumulator_ambient.rgb * _color.rgb * material.diffuse.rgb;\n                    #endif\n                #endif\n\n                #ifdef TANGRAM_MATERIAL_DIFFUSE\n                    color.rgb += light_accumulator_diffuse.rgb * _color.rgb * material.diffuse.rgb;\n                    color.a *= material.diffuse.a;\n                #endif\n\n                #ifdef TANGRAM_MATERIAL_SPECULAR\n                    color.rgb += light_accumulator_specular.rgb * material.specular.rgb;\n                    color.a *= material.specular.a;\n                #endif\n\n                // Clamp final color\n                color = clamp(color, 0.0, 1.0);\n\n                return color;\n            }`;\n\n        ShaderProgram.addBlock(Light.block, calculateFunction);\n    }\n\n    // Common instance definition\n    inject () {\n        let instance =  `\n            uniform ${this.struct_name} u_${this.name};\n            ${this.struct_name} ${this.name};\n            `;\n        let assign = `\n            ${this.name} = u_${this.name};\\n\n        `;\n\n        ShaderProgram.addBlock(Light.block, instance);\n        ShaderProgram.addBlock('setup', assign);\n    }\n\n    // Update method called once per frame\n    update () {\n    }\n\n    // Called once per frame per program (e.g. for main render pass, then for each additional\n    // pass for feature selection, etc.)\n    setupProgram (_program) {\n        //  Three common light properties\n        _program.uniform('3fv', `u_${this.name}.ambient`, this.ambient);\n        _program.uniform('3fv', `u_${this.name}.diffuse`, this.diffuse);\n        _program.uniform('3fv', `u_${this.name}.specular`, this.specular);\n    }\n\n}\n\nLight.types = {}; // references to subclasses by short name\nLight.block = 'lighting'; // shader block name\nLight.enabled = true; // lighting can be globally enabled/disabled\n\n\n// Light subclasses\nclass AmbientLight extends Light {\n\n    constructor(view, config) {\n        super(view, config);\n        this.type = 'ambient';\n        this.struct_name = 'AmbientLight';\n    }\n\n    // Inject struct and calculate function\n    static inject() {\n        ShaderProgram.addBlock(Light.block, ambient_source);\n    }\n\n    setupProgram (_program) {\n        _program.uniform('3fv', `u_${this.name}.ambient`, this.ambient);\n    }\n\n}\nLight.types['ambient'] = AmbientLight;\n\nclass DirectionalLight extends Light {\n\n    constructor(view, config) {\n        super(view, config);\n        this.type = 'directional';\n        this.struct_name = 'DirectionalLight';\n\n        if (config.direction) {\n            this._direction = config.direction;\n        }\n        else {\n            // Default directional light maintains full intensity on ground, with basic extrusion shading\n            let theta = 135; // angle of light in xy plane (rotated around z axis)\n            let scale = Math.sin(Math.PI*60/180); // scaling factor to keep total directional intensity to 0.5\n            this._direction = [\n                Math.cos(Math.PI*theta/180) * scale,\n                Math.sin(Math.PI*theta/180) * scale,\n                -0.5\n            ];\n\n            if (config.ambient == null) {\n                this.ambient = GLSL.expandVec3(0.5);\n            }\n        }\n        this.direction = this._direction.map(parseFloat);\n    }\n\n    get direction () {\n        return this._direction;\n    }\n\n    set direction (v) {\n        this._direction = Vector.normalize(Vector.copy(v));\n    }\n\n    // Inject struct and calculate function\n    static inject() {\n        ShaderProgram.addBlock(Light.block, directional_source);\n    }\n\n    setupProgram (_program) {\n        super.setupProgram(_program);\n        _program.uniform('3fv', `u_${this.name}.direction`, this.direction);\n    }\n\n}\nLight.types['directional'] = DirectionalLight;\n\n\nclass PointLight extends Light {\n\n    constructor (view, config) {\n        super(view, config);\n        this.type = 'point';\n        this.struct_name = 'PointLight';\n\n        this.position = config.position || [0, 0, '100px'];\n        this.position_eye = []; // position in eyespace\n        this.origin = config.origin || 'ground';\n        this.attenuation = !isNaN(parseFloat(config.attenuation)) ? parseFloat(config.attenuation) : 0;\n\n        if (config.radius) {\n            if (Array.isArray(config.radius) && config.radius.length === 2) {\n                this.radius = config.radius;\n            }\n            else {\n                this.radius = [null, config.radius];\n            }\n        }\n        else {\n            this.radius = null;\n        }\n    }\n\n    // Inject struct and calculate function\n    static inject () {\n        ShaderProgram.addBlock(Light.block, point_source);\n    }\n\n    // Inject isntance-specific settings\n    inject() {\n        super.inject();\n\n        ShaderProgram.defines['TANGRAM_POINTLIGHT_ATTENUATION_EXPONENT'] = (this.attenuation !== 0);\n        ShaderProgram.defines['TANGRAM_POINTLIGHT_ATTENUATION_INNER_RADIUS'] = (this.radius != null && this.radius[0] != null);\n        ShaderProgram.defines['TANGRAM_POINTLIGHT_ATTENUATION_OUTER_RADIUS'] = (this.radius != null);\n    }\n\n    update () {\n        this.updateEyePosition();\n    }\n\n    updateEyePosition () {\n        if (this.origin === 'world') {\n            // For world origin, format is: [longitude, latitude, meters (default) or pixels w/px units]\n\n            // Move light's world position into camera space\n            const m = Geo.latLngToMeters([...this.position]);\n            this.position_eye[0] = m[0] - this.view.camera.position_meters[0];\n            this.position_eye[1] = m[1] - this.view.camera.position_meters[1];\n\n            this.position_eye[2] = StyleParser.convertUnits(this.position[2],\n                { zoom: this.view.zoom, meters_per_pixel: Geo.metersPerPixel(this.view.zoom) });\n            this.position_eye[2] = this.position_eye[2] - this.view.camera.position_meters[2];\n        }\n        else if (this.origin === 'ground' || this.origin === 'camera') {\n            // For camera or ground origin, format is: [x, y, z] in meters (default) or pixels w/px units\n\n            // Light is in camera space by default\n            this.position_eye = StyleParser.convertUnits(this.position,\n                { zoom: this.view.zoom, meters_per_pixel: Geo.metersPerPixel(this.view.zoom) });\n\n            if (this.origin === 'ground') {\n                // Leave light's xy in camera space, but z needs to be moved relative to ground plane\n                this.position_eye[2] = this.position_eye[2] - this.view.camera.position_meters[2];\n            }\n        }\n        this.position_eye[3] = 1;\n    }\n\n    setupProgram (_program) {\n        super.setupProgram(_program);\n\n        _program.uniform('4fv', `u_${this.name}.position`, this.position_eye);\n\n        if(ShaderProgram.defines['TANGRAM_POINTLIGHT_ATTENUATION_EXPONENT']) {\n            _program.uniform('1f', `u_${this.name}.attenuationExponent`, this.attenuation);\n        }\n\n        if(ShaderProgram.defines['TANGRAM_POINTLIGHT_ATTENUATION_INNER_RADIUS']) {\n            _program.uniform('1f', `u_${this.name}.innerRadius`,\n                StyleParser.convertUnits(this.radius[0],\n                    { zoom: this.view.zoom, meters_per_pixel: Geo.metersPerPixel(this.view.zoom) }));\n        }\n\n        if(ShaderProgram.defines['TANGRAM_POINTLIGHT_ATTENUATION_OUTER_RADIUS']) {\n            _program.uniform('1f', `u_${this.name}.outerRadius`,\n                StyleParser.convertUnits(this.radius[1],\n                    { zoom: this.view.zoom, meters_per_pixel: Geo.metersPerPixel(this.view.zoom) }));\n        }\n    }\n}\nLight.types['point'] = PointLight;\n\n\nclass SpotLight extends PointLight {\n\n    constructor (view, config) {\n        super(view, config);\n        this.type = 'spotlight';\n        this.struct_name = 'SpotLight';\n\n        this.direction = this._direction = (config.direction || [0, 0, -1]).map(parseFloat); // [x, y, z]\n        this.exponent = config.exponent ? parseFloat(config.exponent) : 0.2;\n        this.angle = config.angle ? parseFloat(config.angle) : 20;\n    }\n\n    get direction () {\n        return this._direction;\n    }\n\n    set direction (v) {\n        this._direction = Vector.normalize(Vector.copy(v));\n    }\n\n    // Inject struct and calculate function\n    static inject () {\n        ShaderProgram.addBlock(Light.block, spot_source);\n    }\n\n    setupProgram (_program) {\n        super.setupProgram(_program);\n\n        _program.uniform('3fv', `u_${this.name}.direction`, this.direction);\n        _program.uniform('1f', `u_${this.name}.spotCosCutoff`, Math.cos(this.angle * 3.14159 / 180));\n        _program.uniform('1f', `u_${this.name}.spotExponent`, this.exponent);\n    }\n\n}\nLight.types['spotlight'] = SpotLight;\n","function _isNativeFunction(t) {\n  try {\n    return -1 !== Function.toString.call(t).indexOf(\"[native code]\");\n  } catch (n) {\n    return \"function\" == typeof t;\n  }\n}\nexport { _isNativeFunction as default };","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nfunction _wrapNativeSuper(t) {\n  var r = \"function\" == typeof Map ? new Map() : void 0;\n  return _wrapNativeSuper = function _wrapNativeSuper(t) {\n    if (null === t || !isNativeFunction(t)) return t;\n    if (\"function\" != typeof t) throw new TypeError(\"Super expression must either be null or a function\");\n    if (void 0 !== r) {\n      if (r.has(t)) return r.get(t);\n      r.set(t, Wrapper);\n    }\n    function Wrapper() {\n      return construct(t, arguments, getPrototypeOf(this).constructor);\n    }\n    return Wrapper.prototype = Object.create(t.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: !1,\n        writable: !0,\n        configurable: !0\n      }\n    }), setPrototypeOf(Wrapper, t);\n  }, _wrapNativeSuper(t);\n}\nexport { _wrapNativeSuper as default };","\n\nexport class MethodNotImplemented extends Error {\n    constructor(methodName) {\n        super();\n        this.name    = 'MethodNotImplemented';\n        this.message = 'Method ' + methodName + ' must be implemented in subclass';\n    }\n}\n","/*jshint worker: true */\nimport Geo from '../utils/geo';\nimport {MethodNotImplemented} from '../utils/errors';\nimport Utils from '../utils/utils';\nimport sliceObject from '../utils/slice';\nimport * as URLs from '../utils/urls';\nimport log from '../utils/log';\n\nexport default class DataSource {\n\n    constructor (config, sources) {\n        this.validate(config);\n\n        this.config = config; // save original config\n        this.sources = sources; // full set of data sources TODO: centralize these like textures?\n        this.id = config.id;\n        this.name = config.name;\n        this.pad_scale = config.pad_scale || 0.00001; // scale tile up by small factor to cover seams\n        this.default_winding = null; // winding order will adapt to data source\n        this.rasters = []; // attached raster tile sources\n        if (Array.isArray(config.rasters)) { // copy unique set of raster sources\n            config.rasters.forEach(r => {\n                if (this.rasters.indexOf(r) === -1) {\n                    this.rasters.push(r);\n                }\n            });\n        }\n\n        // Optional function to preprocess source data\n        this.preprocess = config.preprocess;\n        if (typeof this.preprocess === 'function') {\n            this.preprocess.bind(this);\n        }\n\n        // Optional function to transform source data\n        this.transform = config.transform;\n        if (typeof this.transform === 'function') {\n            this.transform.bind(this);\n        }\n\n        // Optional additional data to pass to the transform function\n        this.extra_data = config.extra_data;\n\n        // Optional additional scripts made available to the transform function\n        // NOTE: these are loaded alongside the library when the workers are instantiated\n        this.scripts = config.scripts;\n\n        // Configure zoom ranges at which new data will be loaded\n        this.setZooms(config);\n\n        // set a custom extra overzoom adjustment factor to load consistently lower zoom levels\n        // than the current map zoom level â eg a zoom_offset of 1 would load z3 data at z4\n        this.zoom_offset = (config.zoom_offset != null) ? config.zoom_offset : 0;\n        if (this.zoom_offset < 0) {\n            let msg = `Data source '${this.name}' zoom_offset must not be negative â setting to 0.`;\n            log({ level: 'warn', once: true }, msg);\n            this.zoom_offset = 0;\n        }\n\n        this.setTileSize(config.tile_size);\n\n        // no tiles will be requested or displayed outside of these min/max values\n        this.min_display_zoom = Math.max(config.min_display_zoom || 0, this.zooms[0]);\n        this.max_display_zoom = (config.max_display_zoom != null) ? config.max_display_zoom : null;\n    }\n\n    // Register a new data source type name, providing a function that returns the class name\n    // to instantiate based on the source definition in the scene\n    static register (type_name, type_func) {\n        if (!type_name || !type_func) {\n            return;\n        }\n\n        DataSource.types[type_name] = type_func;\n    }\n\n    // Create a data source, factory-style\n    static create (source, sources) {\n        // Find the class to instantiate based on the source definition\n        if (typeof DataSource.types[source.type] === 'function') {\n            const source_class = DataSource.types[source.type](source);\n            if (source_class) {\n                return new source_class(source, sources);\n            }\n        }\n    }\n\n    // Check if a data source definition changed in a way that could affect which tiles are in view\n    static tileLayoutChanged (source, prev_source) {\n        if (!source || !prev_source) {\n            return true;\n        }\n\n        // subset of parameters that affect tile layout\n        const rebuild_params = [\n            'max_zoom',\n            'zooms',\n            'min_display_zoom',\n            'max_display_zoom',\n            'bounds',\n            'tile_size',\n            'zoom_offset'\n        ];\n        const cur = sliceObject(source.config, rebuild_params);\n        const prev = sliceObject(prev_source.config, rebuild_params);\n\n        return JSON.stringify(cur) !== JSON.stringify(prev);\n    }\n\n    // Mercator projection\n    static projectData (source) {\n        var timer = +new Date();\n        for (var t in source.layers) {\n            var num_features = source.layers[t].features.length;\n            for (var f=0; f < num_features; f++) {\n                var feature = source.layers[t].features[f];\n                Geo.transformGeometry(feature.geometry, this.projectCoord);\n            }\n        }\n\n        if (source.debug !== undefined) {\n            source.debug.projection = +new Date() - timer;\n        }\n    }\n\n    static projectCoord (coord) {\n        Geo.latLngToMeters(coord);\n    }\n\n    /**\n     Re-scale geometries within each source to internal tile units\n    */\n    static scaleData (source, { coords: { z }, min }) {\n        let units_per_meter = Geo.unitsPerMeter(z);\n        for (var t in source.layers) {\n            var num_features = source.layers[t].features.length;\n            for (var f=0; f < num_features; f++) {\n                var feature = source.layers[t].features[f];\n                Geo.transformGeometry(feature.geometry, coord => {\n                    coord[0] = (coord[0] - min.x) * units_per_meter;\n                    coord[1] = (coord[1] - min.y) * units_per_meter * -1; // flip coords positive\n                });\n            }\n        }\n    }\n\n    load (dest) {\n        dest.source_data = {};\n        dest.source_data.layers = {};\n        dest.pad_scale = this.pad_scale;\n        dest.rasters = [...this.rasters]; // copy list of rasters to load for tile\n\n        return this._load(dest).then((dest) => {\n            // Post-processing\n            for (let layer in dest.source_data.layers) {\n                let data = dest.source_data.layers[layer];\n                if (data && data.features) {\n                    data.features.forEach(feature => {\n                        Geo.transformGeometry(feature.geometry, coord => {\n                            // Flip Y coords\n                            coord[1] = -coord[1];\n\n                            // Slightly scale up tile to cover seams\n                            if (this.pad_scale) {\n                                coord[0] = Math.round(coord[0] * (1 + this.pad_scale) - (Geo.tile_scale * this.pad_scale/2));\n                                coord[1] = Math.round(coord[1] * (1 + this.pad_scale) - (Geo.tile_scale * this.pad_scale/2));\n                            }\n                        });\n\n                        // Use first encountered polygon winding order as default for data source\n                        this.updateDefaultWinding(feature.geometry);\n                    });\n                }\n            }\n\n            dest.default_winding = this.default_winding || 'CCW';\n            return dest;\n        });\n    }\n\n    // Sub-classes must implement\n    _load (/*dest*/) {\n        throw new MethodNotImplemented('_load');\n    }\n\n    // Copy source data from another tile (so we can reuse source data for overzoomed tiles)\n    copyTileData (source, dest) {\n        log('trace', `Copy tile data from ${source.key} to ${dest.key}`);\n        dest.source_data = { layers: source.source_data.layers };\n        dest.rasters = [...source.rasters];\n        dest.pad_scale = source.pad_scale;\n        dest.default_winding = source.default_winding;\n        return dest;\n    }\n\n    // Configure zoom ranges at which new data will be loaded\n    // e.g. can be used to skip fetching data for some zooms, reusing data from next lowest available zoom instead\n    setZooms ({ max_zoom, zooms }) {\n        // overzoom will apply for zooms higher than this\n        this.max_zoom = (max_zoom != null) ? max_zoom : Geo.default_source_max_zoom;\n        if (Array.isArray(zooms)) {\n            this.zooms = zooms; // TODO: support range parsing, e.g. [0-4, 6-7, 12]?\n            this.max_zoom = this.zooms[this.zooms.length-1]; // overrides `max_zoom` when both are present\n        }\n        else {\n            this.zooms = [];\n            for (let i = 0; i <= this.max_zoom; i++) {\n                this.zooms[i] = i;\n            }\n        }\n    }\n\n    // Set the internal tile size in pixels, e.g. '256px' (default), '512px', etc.\n    // Must be a power of 2, and greater than or equal to 256\n    setTileSize (tile_size) {\n        this.tile_size = tile_size || 256;\n        if (typeof this.tile_size !== 'number' || this.tile_size < 256 || !Utils.isPowerOf2(this.tile_size)) {\n            log({ level: 'warn', once: true },\n                `Data source '${this.name}': 'tile_size' parameter must be a number that is a power of 2 greater than or equal to 256, but was '${tile_size}'`);\n            this.tile_size = 256;\n        }\n\n        // # of zoom levels bigger than 256px tiles - 8 in place of log2(256)\n        // Many Tangram functions assume 256px tiles, this factor adjusts for the\n        // case of bigger tile sizes - eg 512px tiles are 1 zoom level bigger,\n        // 1024px tiles are 2 levels bigger\n        this.zoom_bias = Math.log2(this.tile_size) - 8 + this.zoom_offset;\n    }\n\n    // Infer winding for data source from first ring of provided geometry\n    updateDefaultWinding (geom) {\n        if (this.default_winding == null) {\n            if (geom.type === 'Polygon') {\n                this.default_winding = Geo.ringWinding(geom.coordinates[0]);\n            }\n            else if (geom.type === 'MultiPolygon') {\n                this.default_winding = Geo.ringWinding(geom.coordinates[0][0]);\n            }\n        }\n        return this.default_winding;\n    }\n\n    // All data sources support a min zoom, tiled sources can subclass for more specific limits (e.g. bounding box)\n    includesTile (coords, style_z) {\n        // Limit by this data source\n        if (coords.z < this.min_display_zoom || (this.max_display_zoom != null && style_z > this.max_display_zoom)) {\n            return false;\n        }\n\n        // Limit by any dependent raster sources\n        for (let r=0; r < this.rasters.length; r++) {\n            const source_name = this.rasters[r];\n            if (this.sources[source_name] &&\n                this.sources[source_name] !== this &&\n                !this.sources[source_name].includesTile(coords, coords.z)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    validate (/*source*/) {\n    }\n\n}\n\nDataSource.types = {}; // set of supported data source classes, referenced by type name\n\n\n/*** Generic network loading source - abstract class ***/\n\nlet network_request_id = 0; // used to namespace URL requests\n\nexport class NetworkSource extends DataSource {\n\n    constructor (source, sources) {\n        super(source, sources);\n        this.response_type = ''; // use to set explicit XHR type\n\n        // Add extra URL params, and warn on duplicates\n        let [url, dupes] = URLs.addParamsToURL(source.url, source.url_params);\n        this.url = url;\n        dupes.forEach(([param, value]) => {\n            log({ level: 'warn', once: true },\n                `Data source '${this.name}': parameter '${param}' already present in URL '${source.url}', ` +\n                `skipping value '${param}=${value}' specified in 'url_params'`);\n        });\n\n        // Optional HTTP request headers to send\n        if (source.request_headers && typeof source.request_headers === 'object') {\n            this.request_headers = source.request_headers;\n        }\n    }\n\n    _load (dest) {\n        let url = this.formatURL(this.url, dest);\n\n        let source_data = dest.source_data;\n        source_data.url = url;\n        dest.debug = dest.debug || {};\n        dest.debug.network = +new Date();\n\n        return new Promise(resolve => {\n            let request_id = (network_request_id++) + '-' + url;\n            let promise = Utils.io(url, 60 * 1000, this.response_type, 'GET', this.request_headers, request_id);\n\n            source_data.request_id = request_id;\n            source_data.error = null;\n\n            promise.then(({ body }) => {\n                dest.debug.response_size = body && (body.length || body.byteLength);\n                dest.debug.network = +new Date() - dest.debug.network;\n                dest.debug.parsing = +new Date();\n\n                // Apply optional data transform on raw network response\n                if (body != null && typeof this.preprocess === 'function') {\n                    body = this.preprocess(body);\n                }\n\n                // Return data immediately, or after user-returned promise resolves\n                body = (body instanceof Promise) ? body : Promise.resolve(body);\n                body.then(body => {\n                    if (body != null) {\n                        this.parseSourceData(dest, source_data, body);\n                    }\n                    else {\n                        source_data.layers = {}; // for cases where server returned no content (e.g. 204 response)\n                    }\n                    dest.debug.parsing = +new Date() - dest.debug.parsing;\n                    resolve(dest);\n                });\n            }).catch((error) => {\n                source_data.error = error.stack;\n                resolve(dest); // resolve request but pass along error\n            });\n        });\n    }\n\n    validate (source) {\n        if (typeof source.url !== 'string') {\n            throw Error('Network data source must provide a string `url` property');\n        }\n    }\n\n    // Sub-classes must implement:\n\n    formatURL (/*url_template, dest*/) {\n        throw new MethodNotImplemented('formatURL');\n    }\n\n    parseSourceData (/*dest, source, reponse*/) {\n        throw new MethodNotImplemented('parseSourceData');\n    }\n}\n\n\n/*** Generic network tile loading - abstract class ***/\n\nexport class NetworkTileSource extends NetworkSource {\n\n    constructor (source, sources) {\n        super(source, sources);\n\n        this.tiled = true;\n        this.bounds = this.parseBounds(source);\n\n        // indicates if source should build geometry tiles, enabled for sources referenced in the scene's layers,\n        // and left disabled for sources that are never referenced, or only used as raster textures\n        this.builds_geometry_tiles = false;\n\n        this.tms = (source.tms === true); // optionally flip tile coords for TMS\n\n        // optional list of subdomains to round-robin through\n        if (this.url && this.url.search('{s}') > -1) {\n            if (Array.isArray(source.url_subdomains) && source.url_subdomains.length > 0) {\n                this.url_subdomains = source.url_subdomains;\n                this.next_url_subdomain = 0;\n            }\n            else {\n                log({ level: 'warn', once: true },\n                    `Data source '${this.name}': source URL includes '{s}' subdomain marker ('${this.url}'), but no subdomains ` +\n                    'were specified in \\'url_subdomains\\' parameter');\n            }\n        }\n\n        // optional list of pixel density scale modifiers\n        if (this.url && this.url.search('{r}') > -1) {\n            if (Array.isArray(source.url_density_scales) && source.url_density_scales.length > 0) {\n                this.url_density_scales = source.url_density_scales;\n            }\n            else {\n                this.url_density_scales = [1, 2]; // default to supporting 1x and 2x display densities\n            }\n        }\n    }\n\n    // Get bounds from source config parameters\n    parseBounds (source) {\n        if (Array.isArray(source.bounds) && source.bounds.length === 4) {\n            const [w, s, e, n] = source.bounds;\n            return {\n                latlng: [...source.bounds],\n                meters: {\n                    min: Geo.latLngToMeters([w, n]),\n                    max: Geo.latLngToMeters([e, s]),\n                },\n                tiles: { // max tile bounds per zoom (lazily evaluated)\n                    min: {},\n                    max: {}\n                }\n            };\n        }\n    }\n\n    // Returns false if tile is outside data source's bounds, true if within\n    checkBounds (coords, bounds) {\n        // Check tile bounds\n        if (bounds) {\n            // get tile and bounds coords at current zoom, wrapping to keep x coords in positive range\n            coords = Geo.wrapTile(coords);\n\n            let min = bounds.tiles.min[coords.z];\n            if (!min) {\n                min = bounds.tiles.min[coords.z] = Geo.tileForMeters(bounds.meters.min, coords.z);\n            }\n\n            let max = bounds.tiles.max[coords.z];\n            if (!max) {\n                max = bounds.tiles.max[coords.z] = Geo.tileForMeters(bounds.meters.max, coords.z);\n            }\n\n            // check latitude\n            if (coords.y < min.y || coords.y > max.y) {\n                return false;\n            }\n\n            // longitude bounds are between meridians\n            if (min.x <= max.x) {\n                if (coords.x < min.x || coords.x > max.x) {\n                    return false;\n                }\n            }\n            // longitude bounds cross the antimeridian\n            else if (coords.x > max.x && coords.x < min.x) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    includesTile (coords, style_z) {\n        if (!super.includesTile(coords, style_z)) {\n            return false;\n        }\n\n        // Check tile bounds\n        if (!this.checkBounds(coords, this.bounds)) {\n            return false;\n        }\n        return true;\n    }\n\n    formatURL (url_template, tile) {\n        let coords = Geo.wrapTile(tile.coords, { x: true });\n\n        if (this.tms) {\n            coords.y = Math.pow(2, coords.z) - 1 - coords.y; // optionally flip tile coords for TMS\n        }\n\n        // tile URL template replacement\n        let url = url_template\n            .replace('{x}', coords.x)\n            .replace('{y}', coords.y)\n            .replace('{z}', coords.z)\n            .replace('{r}', this.getDensityModifier()) // modify URL by display density (e.g. @2x)\n            .replace('{q}', this.toQuadKey(coords)); // quadkey for tile coordinates\n\n        if (this.url_subdomains != null) {\n            url = url.replace('{s}', this.url_subdomains[this.next_url_subdomain]);\n            this.next_url_subdomain = (this.next_url_subdomain + 1) % this.url_subdomains.length;\n        }\n        return url;\n    }\n\n    // Find the right tile URL modifier based on the display density, e.g. add `@2x` for sources supporting 2x tiles.\n    // Source `url_density_scales` param can specify an array of densities supported by the source,\n    // each entry serves as a threshold based on the current display density.\n    getDensityModifier () {\n        if (this.url_density_scales) {\n            // find the highest matching density\n            const dpr = Utils.device_pixel_ratio;\n            let scale = this.url_density_scales\n                .filter(s => dpr >= s)\n                .reverse()[0];\n\n            // default to first scale if none matched\n            scale = (scale != null ? scale : this.url_density_scales[0]);\n\n            // scales higher than 1x use the `@` modifier (e.g. `@2x`)\n            if (scale > 1) {\n                return `@${scale}x`;\n            }\n        }\n        return ''; // for 1x (or less) displays, no URL modifier is used (following @2x URL convention)\n    }\n\n    toQuadKey ({ x, y, z }) {\n        let quadkey = '';\n        for (let i = z; i > 0; i--) {\n            let b = 0;\n            let mask = 1 << (i - 1);\n            if ((x & mask) !== 0) b++;\n            if ((y & mask) !== 0) b += 2;\n            quadkey += b.toString();\n        }\n        return quadkey;\n    }\n\n    // Checks for the x/y/z tile pattern in URL template\n    static urlHasTilePattern (url) {\n        return url && (\n            (url.search('{x}') > -1 && url.search('{y}') > -1 && url.search('{z}') > -1) ||\n            url.search('{q}') > -1\n        );\n    }\n\n}\n","export const TileID = {\n\n    coord(c) {\n        return {x: c.x, y: c.y, z: c.z, key: this.coordKey(c)};\n    },\n\n    coordKey({x, y, z}) {\n        return x + '/' + y + '/' + z;\n    },\n\n    key (coords, source, style_z) {\n        if (coords.y < 0 || coords.y >= (1 << coords.z) || coords.z < 0) {\n            return; // cull tiles out of range (x will wrap)\n        }\n        return [source.name, coords.x, coords.y, coords.z, style_z].join('/');\n    },\n\n    normalizedKey (coords, source, style_z) {\n        return this.key(this.normalizedCoord(coords, source), source, style_z);\n    },\n\n    normalizedCoord (coords, source) {\n        if (source.zoom_bias) {\n            coords = this.coordAtZoom(coords, Math.max(coords.z - source.zoom_bias, source.zooms[0]));\n        }\n        return this.coordForTileZooms(coords, source.zooms);\n    },\n\n    coordAtZoom({x, y, z}, zoom) {\n        zoom = Math.max(0, zoom); // zoom can't go below zero\n        if (z !== zoom) {\n            let zscale = Math.pow(2, z - zoom);\n            x = Math.floor(x / zscale);\n            y = Math.floor(y / zscale);\n            z = zoom;\n        }\n        return this.coord({x, y, z});\n    },\n\n    coordForTileZooms({ x, y, z }, zooms) {\n        const nz = this.findZoomInRange(z, zooms);\n        if (nz !== z) {\n            return this.coordAtZoom({ x, y, z }, nz);\n        }\n        return this.coord({ x, y, z });\n    },\n\n    findZoomInRange(z, zooms) {\n        return zooms.filter(s => z >= s).reverse()[0] || zooms[0];\n    },\n\n    isDescendant(parent, descendant) {\n        if (descendant.z > parent.z) {\n            let {x, y} = this.coordAtZoom(descendant, parent.z);\n            return (parent.x === x && parent.y === y);\n        }\n        return false;\n    },\n\n    // Return identifying info for tile's parent tile\n    parent ({ coords, source, style_z }) {\n        if (style_z > 0) { // no more tiles above style zoom 0\n            style_z--;\n            const sz = Math.max(style_z - source.zoom_bias, source.zooms[0]); // z can't be lower than tile source\n            const c = this.coordForTileZooms(this.coordAtZoom(coords, sz), source.zooms);\n\n            if (c.z > style_z) {\n                return null;\n            }\n\n            return {\n                key: this.key(c, source, style_z),\n                coords: c,\n                style_z,\n                source\n            };\n        }\n    },\n\n    // Return identifying info for tile's child tiles\n    children ({ coords, source, style_z }, CACHE = {}) {\n        style_z++;\n        const c = this.coordForTileZooms(this.coordAtZoom(coords, style_z - source.zoom_bias), source.zooms);\n        if (c.z === coords.z) {\n            // same coord zoom for next level down\n            return [{\n                key: this.key(c, source, style_z),\n                coords: c,\n                style_z,\n                source\n            }];\n        }\n        else {\n            // coord zoom advanced down\n            const key = this.key(c, source, style_z);\n            CACHE[source.id] = CACHE[source.id] || {};\n            if (CACHE[source.id][key] == null) {\n                const span = Math.pow(2, c.z - coords.z);\n                const x = coords.x * span;\n                const y = coords.y * span;\n                let children = [];\n                for (let nx = x; nx < x + span; nx++) {\n                    for (let ny = y; ny < y + span; ny++) {\n                        let nc = this.coord({ x: nx, y: ny, z: c.z });\n                        children.push({\n                            key: this.key(nc, source, style_z),\n                            coords: nc,\n                            style_z,\n                            source\n                        });\n                    }\n                }\n                CACHE[source.id][key] = children;\n            }\n            return CACHE[source.id][key];\n        }\n    }\n\n};\n","import DataSource, {NetworkTileSource} from './data_source';\nimport {TileID} from '../tile/tile_id';\nimport Geo from '../utils/geo';\nimport Texture from '../gl/texture';\nimport Utils from '../utils/utils';\nimport hashString from '../utils/hash';\nimport log from '../utils/log';\n\nexport class RasterTileSource extends NetworkTileSource {\n\n    constructor (source, sources) {\n        super(source, sources);\n\n        if (this.rasters.indexOf(this.name) === -1) {\n            this.rasters.unshift(this.name); // add this raster as the first\n        }\n        this.filtering = source.filtering; // optional texture filtering (nearest, linear, mipmap)\n\n        // save texture objects by tile key, so URL remains stable if tile is built multiple times,\n        // e.g. avoid re-loading the same tile texture under a different subdomain when using tile hosts\n        this.textures = {};\n    }\n\n    async load (tile) {\n        tile.source_data = {};\n        tile.source_data.layers = {};\n        tile.pad_scale = this.pad_scale;\n        tile.rasters = [...this.rasters]; // copy list of rasters to load for tile\n\n        // Generate a single quad that fills the entire tile\n        let scale = Geo.tile_scale;\n        tile.source_data.layers = {\n            _default: {\n                type: 'FeatureCollection',\n                features: [{\n                    geometry: {\n                        type: 'Polygon',\n                        coordinates: [[\n                            [0, 0], [scale, 0],\n                            [scale, -scale], [0, -scale], [0, 0]\n                        ]]\n                    },\n                    properties: {}\n                }]\n            }\n        };\n\n        tile.default_winding = 'CW';\n        return tile;\n    }\n\n    // Return texture info for a raster tile\n    async tileTexture (tile) {\n        let coords = this.adjustRasterTileZoom(tile);\n        let key = coords.key;\n        // texture definitions are cached to avoid loading the same raster tile multiple times,\n        // e.g. due to slightly different URLs when subdomain pattern is used (a.tile.com vs. b.tile.com)\n        if (!this.textures[key]) {\n            let url = this.formatURL(this.url, { coords });\n            this.textures[key] = {\n                name: url,\n                url,\n                filtering: this.filtering,\n                coords\n            };\n        }\n        return this.textures[key];\n    }\n\n    // If the raster is attached to another source, we need to compare their levels of zoom detail\n    // to see if any adjustments are needed. Both the `tile_size` and `zoom_offset` data source params\n    // cause the zoom level to be downsampled relative to the \"base\" zoom level of the map view.\n    // The attaching source has already applied its own zoom downsampling. If this source has a lower\n    // level of detail, we apply the remaining differential here.\n    adjustRasterTileZoom (tile) {\n        let coords = tile.coords;\n        const tile_source = this.sources[tile.source];\n        if (tile_source !== this) { // no-op if the raster source isn't being rendered as an attachment\n            let zdiff = this.zoom_bias - tile_source.zoom_bias; // difference in zoom detail between the sources\n            if (zdiff > 0) { // raster source is less detailed\n                // do extra zoom adjustment and apply this raster source's max zoom\n                coords = TileID.normalizedCoord(tile.coords, {\n                    zoom_bias: zdiff,\n                    zooms: this.zooms\n                });\n            }\n            else {\n                // raster source supports higher detail, but was downsampled to match (the downsampling already\n                // happened upstream, when the attaching source calculated its own tile coordinate)\n                if (zdiff < 0) {\n                    log({ level: 'warn', once: true},\n                        `Raster source '${this.name}' supports higher zoom detail than source '${tile_source.name}' ` +\n                        `it's attached to. Downsampling this source ${-zdiff} extra zoom levels to match.`\n                    );\n                }\n\n                // no extra zoom adjustment needed, but still need to apply this raster source's max zoom\n                coords = TileID.coordForTileZooms(coords, this.zooms);\n            }\n        }\n        return coords;\n    }\n\n}\n\n// Data source for loading standalone, geo-referenced raster images\n// The `bounds` parameter is used to position the raster image on the map\n// Currently, only axis-aligned, rectangular North-up images are supported\n// TODO: add support for arbitrarily rotated images and quadrangle control points\nexport class RasterSource extends RasterTileSource {\n\n    constructor (source, sources) {\n        super(source, sources);\n\n        this.load_image = {}; // resolves to image, cached for life of data source\n\n        // alpha factor applied at time raster images are loaded and tiled (*not* at shader render-time)\n        this.alpha = (source.alpha != null) ? Math.max(Math.min(source.alpha, 1), 0) : null;\n\n        // non-full-alpha pixels should be discarded (for rendering rasters w/opaque blend)\n        this.mask_alpha = true;\n\n        // don't retain tiles for this source from nearby zooms (to improve memory usage)\n        this.preserve_tiles_within_zoom = 0;\n\n        // optionally set a max pixel density used for generated raster tiles (to improve memory usage)\n        this.max_display_density = source.max_display_density;\n\n        // Optionally composite multiple images into one raster layer\n        if (Array.isArray(source.composite)) {\n            // TODO: calculate enclosing bounding box to speed tile intersection checks\n            this.images = source.composite.map(s => {\n                return {\n                    url: s.url,\n                    bounds: this.parseBounds(s),\n                    alpha: (s.alpha != null) ? Math.max(Math.min(s.alpha, 1), 0) : null\n                };\n            });\n        }\n        // Single image raster layer\n        else {\n            this.images = [{\n                url: this.url,\n                bounds: this.bounds,\n                alpha: this.alpha\n            }];\n        }\n    }\n\n    // Render the sub-rectangle of the source raster image for the given tile, to a texture.\n    // Clipping the source image to individual raster tiles naturally partitions images\n    // (which may be large or only have a small portion in current view), and maintains\n    // consistency with the raster tile pipeline allowing for sampling within the fragment shader,\n    // and clipping the raster against vector source data.\n    async tileTexture (tile, { blend, generation }) {\n        let coords = this.adjustRasterTileZoom(tile);\n        const use_alpha = (blend !== 'opaque'); // ignore source alpha multiplier with opaque blending\n        const name = `raster-${this.name}-${coords.key}-${use_alpha ? 'alpha' : 'opaque'}-${generation}`; // unique texture name\n\n        // only render each raster tile once (per scene generation)\n        if (Texture.textures[name]) {\n            return {\n                name,\n                coords,\n\n                // tell style to skip re-creating this texture\n                // we have an explicit flag for this because element-based (e.g. canvas) textures\n                // are usually considered dynamic and always re-created when a new tile needs them\n                // (because the user could have updated the canvas pixel contents outside of Tangram)\n                skip_create: true\n            };\n        }\n\n        // Display density, with extra 2x for better intra-zoom scaling, because raster tiles\n        // can be scaled up to 100% before next zoom level is loaded\n        let dpr = Utils.device_pixel_ratio;\n        if (this.max_display_density) {\n            dpr = Math.min(dpr, this.max_display_density); // optionally cap pixel density\n        }\n        dpr *= 2;\n\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        canvas.width = this.tile_size * dpr; // adjusted for display density\n        canvas.height = this.tile_size * dpr;\n\n        // Applies nearest neighbor filtering to the canvas image rendering when data source requests it\n        // NB: does not work on IE11 (image will be blurry when scaled)\n        ctx.imageSmoothingEnabled = (this.filtering !== 'nearest');\n\n        // Draw one or more images\n        const images = this.images.filter(r => this.checkBounds(tile.coords, r.bounds));\n        await Promise.all(images.map(i => {\n            // TODO: log warning if alpha specified but will be ignored (in opaque mode)?\n            const alpha = (use_alpha ? (i.alpha != null ? i.alpha : this.alpha) : 1);\n            return this.drawImage(i.url, i.bounds, alpha, tile, dpr, ctx);\n        }));\n\n        // texture config\n        return {\n            name,\n            element: canvas,\n            filtering: this.filtering,\n            coords\n        };\n    }\n\n    // Draw a single image to the tile canvas based on on its bounds\n    async drawImage (url, bounds, alpha, tile, dpr, ctx) {\n        // Get source raster image\n        const key = hashString(url); // use hash of URL for shorter keys\n        this.load_image[key] = this.load_image[key] || this.loadImage(url);\n        const image = await this.load_image[key];\n\n        // Meters per pixel for this zoom, adjusted for display density and source tile size (e.g. 512px tiles)\n        const mpp = Geo.metersPerPixel(tile.coords.z) / dpr / (this.tile_size / Geo.tile_size);\n\n        // Raster origin relative to tile origin (get delta in meters, then convert to pixels)\n        const dx = (bounds.meters.min[0] - tile.min.x) / mpp;\n        const dy = -(bounds.meters.min[1] - tile.min.y) / mpp;\n\n        // Raster size in pixels for current zoom\n        const sx = (bounds.meters.max[0] - bounds.meters.min[0]) / mpp;\n        const sy = -(bounds.meters.max[1] - bounds.meters.min[1]) / mpp;\n\n        // Draw the raster, clipped to the current tile\n        // NB: this is drawing the *whole* raster, no matter how large, and relying on the native Canvas clipping.\n        // May want to benchmark with a pre-clipped draw area, though the native implementation is likely fast,\n        // and has to apply its own clipping check anyway.\n        ctx.globalAlpha = (alpha != null) ? alpha : 1;\n        ctx.drawImage(image, dx, dy, sx, sy);\n    }\n\n    // Load source raster image\n    loadImage (url) {\n        return new Promise(resolve => {\n            let image = new Image();\n            image.onload = () => resolve(image);\n            image.onerror = e => {\n                // Warn and resolve on error\n                log('warn', `Raster source '${this.name}': failed to load url: '${url}'`, e);\n                resolve(null);\n            };\n\n            // Safari has a bug loading data-URL images with CORS enabled, so it must be disabled in that case\n            // https://bugs.webkit.org/show_bug.cgi?id=123978\n            if (!(Utils.isSafari() && url.slice(0, 5) === 'data:')) {\n                image.crossOrigin = 'anonymous';\n            }\n\n            image.src = url;\n        });\n    }\n\n    // Checks if tile interects any rasters in this source\n    includesTile (coords, style_z) {\n        // Checks zoom range and dependent rasters\n        if (!DataSource.prototype.includesTile.call(this, coords, style_z)) {\n            return false;\n        }\n\n        return this.images.some(r => this.checkBounds(coords, r.bounds)); // check if any images intersect\n    }\n\n    validate (source) {\n        const is_composite = Array.isArray(source.composite);\n\n        let url_msg = 'Raster data source must provide a string `url` parameter, or an array of `composite` raster ';\n        url_msg += 'image objects that each have a `url` parameter';\n\n        let bounds_msg = 'Raster data source must provide a `bounds` parameter, or an array of `composite` raster ';\n        bounds_msg += 'image objects that each have a `bounds` parameter';\n\n        let mutex_msg = 'Raster data source must have *either* a single image specified as `url` and `bounds `';\n        mutex_msg += 'parameters, or an array of `composite` raster image objects, each with `url` and `bounds`.';\n\n        if (is_composite) {\n            if (source.composite.some(s => typeof s.url !== 'string')) {\n                throw Error(url_msg);\n            }\n\n            if (source.composite.some(s => !(Array.isArray(s.bounds) && s.bounds.length === 4))) {\n                throw Error(bounds_msg);\n            }\n\n            if (source.url != null || source.bounds != null) {\n                throw Error(mutex_msg);\n            }\n        }\n        else {\n            if (typeof source.url !== 'string') {\n                throw Error(url_msg);\n            }\n\n            if (!(Array.isArray(source.bounds) && source.bounds.length === 4)) {\n                throw Error(bounds_msg);\n            }\n        }\n    }\n\n}\n\n// Check for URL tile pattern, if not found, treat as geo-referenced raster layer\nDataSource.register('Raster', source => {\n    return RasterTileSource.urlHasTilePattern(source.url) ? RasterTileSource : RasterSource;\n});\n","// Rearranges element array for triangles into a new element array that draws a wireframe\n// Used for debugging\nexport default function makeWireframeForTriangleElementData (element_data) {\n    const wireframe_data = new Uint16Array(element_data.length * 2);\n\n    // Draw triangles as lines:\n    // Make a copy of element_data, and for every group of three vertices, duplicate\n    // each vertex according to the following pattern:\n    // [1, 2, 3] => [1, 2, 2, 3, 3, 1]\n    // This takes three vertices which would have been interpreted as a triangle,\n    // and converts them into three 2-vertex line segments.\n    for (let i = 0; i < element_data.length; i += 3) {\n        wireframe_data.set(\n            [\n                element_data[i],\n                element_data[i+1],\n                element_data[i+1],\n                element_data[i+2],\n                element_data[i+2],\n                element_data[i]\n            ],\n            i * 2\n        );\n    }\n    return wireframe_data;\n}\n","// Rendering styles\n\nimport StyleParser from './style_parser';\nimport FeatureSelection from '../selection/selection';\nimport gl from '../gl/constants'; // import GL constants since workers can't access GL context\nimport ShaderProgram from '../gl/shader_program';\nimport VBOMesh from '../gl/vbo_mesh';\nimport Texture from '../gl/texture';\nimport Material from '../lights/material';\nimport Light from '../lights/light';\nimport {RasterTileSource} from '../sources/raster';\nimport log from '../utils/log';\nimport mergeObjects from '../utils/merge';\nimport Thread from '../utils/thread';\nimport WorkerBroker from '../utils/worker_broker';\nimport makeWireframeForTriangleElementData from '../builders/wireframe';\nimport debugSettings from '../utils/debug_settings';\n\nimport selection_fragment_source from '../selection/selection_fragment.glsl';\nimport rasters_source from './raster/raster_globals.glsl';\n\n// Base class\n\nexport var Style = {\n    init ({ generation, styles, sources = {}, introspection } = {}) {\n        this.setGeneration(generation);\n        this.styles = styles;                       // styles for scene\n        this.sources = sources;                     // data sources for scene\n        this.defines = (Object.prototype.hasOwnProperty.call(this, 'defines') && this.defines) || {}; // #defines to be injected into the shaders\n        this.shaders = (Object.prototype.hasOwnProperty.call(this, 'shaders') && this.shaders) || {}; // shader customization (uniforms, defines, blocks, etc.)\n        this.introspection = introspection || false;\n        this.selection = this.selection || this.introspection || false;   // flag indicating if this style supports feature selection\n        this.compile_setup = false;                 // one-time setup steps for program compilation\n        this.program = null;                        // GL program reference (for main render pass)\n        this.selection_program = null;              // GL program reference for feature selection render pass\n        this.feature_style = {};                    // style for feature currently being parsed, shared to lessen GC/memory thrash\n        this.vertex_template = [];                  // shared single-vertex template, filled out by each style\n        this.tile_data = {};\n        this.stencil_proxy_tiles = true;            // applied to proxy tiles w/non-opaque blend mode to avoid compounding alpha\n\n        this.variants = {}; // mesh variants by variant key\n        this.vertex_layouts = {}; // vertex layouts by variant key\n\n        // Default world coords to wrap every 100,000 meters, can turn off by setting this to 'false'\n        this.defines.TANGRAM_WORLD_POSITION_WRAP = 100000;\n\n        // Blending\n        // `opaque` styles are drawn first/under other styles, without alpha blending\n        this.blend = this.blend || 'opaque'; // default to opaque\n        if (this.blend !== 'opaque') {\n            // non-opaque styles can customize their blend order, which will determine which features\n            // are drawn first/under each other\n            if (this.blend_order == null) {\n                this.blend_order = this.default_blend_orders[this.blend];\n            }\n        }\n        else {\n            // `opaque` ignores blend order, always render first/under\n            this.blend_order = this.default_blend_orders[this.blend];\n        }\n\n        this.defines[`TANGRAM_BLEND_${this.blend.toUpperCase()}`] = true;\n\n        this.removeShaderBlock('setup'); // clear before material injection\n\n        // If the style defines its own material, replace the inherited material instance\n        if (!(this.material instanceof Material)) {\n            if (!Material.isValid(this.material)) {\n                this.material = StyleParser.defaults.material;\n            }\n            this.material = new Material(this.material);\n        }\n        this.material.inject(this);\n\n        // Set lighting mode: fragment, vertex, or none (specified as 'false')\n        Light.setMode(this.lighting, this);\n\n        // Setup raster samplers if needed\n        this.setupRasters();\n\n        // Setup shader definitions for custom attributes\n        this.setupCustomAttributes();\n\n        this.initialized = true;\n    },\n\n    destroy () {\n        if (this.program) {\n            this.program.destroy();\n            this.program = null;\n        }\n\n        if (this.selection_program) {\n            this.selection_program.destroy();\n            this.selection_program = null;\n        }\n\n        WorkerBroker.removeTarget(this.main_thread_target);\n        this.gl = null;\n        this.initialized = false;\n    },\n\n    reset () {\n    },\n\n    baseStyle () {\n        return this.base || this.name;\n    },\n\n    setGeneration (generation) {\n        // Scene generation id this style was created for\n        this.generation = generation;\n\n        // Provide a hook for this object to be called from worker threads\n        this.main_thread_target = ['Style', this.name, this.generation].join('_');\n        if (Thread.is_main) {\n            WorkerBroker.addTarget(this.main_thread_target, this);\n        }\n    },\n\n    /*** Style parsing and geometry construction ***/\n\n    // Returns an object to hold feature data (for a tile or other object)\n    startData (tile) {\n        this.tile_data[tile.id] = this.tile_data[tile.id] || {\n            meshes: {},\n            uniforms: {},\n            textures: []\n        };\n    },\n\n    // Finalizes an object holding feature data (for a tile or other object)\n    async endData (tile) {\n        var tile_data = this.tile_data[tile.id];\n        this.tile_data[tile.id] = null;\n\n        if (tile_data && Object.keys(tile_data.meshes).length > 0) {\n            for (let variant in tile_data.meshes) {\n                let mesh = tile_data.meshes[variant];\n\n                // Remove empty mesh variants\n                if (mesh.vertex_data.vertex_count === 0) {\n                    delete tile_data.meshes[variant];\n                    continue;\n                }\n\n                // Only keep final byte buffer\n                mesh.vertex_data.end();\n                mesh.vertex_elements = mesh.vertex_data.element_buffer;\n                mesh.vertex_data = mesh.vertex_data.vertex_buffer; // convert from instance to raw typed array\n            }\n\n            // Load raster tiles passed from data source\n            // Blocks mesh completion to avoid flickering\n            return this.buildRasterTextures(tile, tile_data);\n        }\n        else {\n            return null; // don't send tile data back if doesn't have geometry\n        }\n    },\n\n    // Has mesh data for a given tile?\n    hasDataForTile (tile) {\n        return this.tile_data[tile.id] != null;\n    },\n\n    getTileMesh (tile, variant) {\n        const meshes = this.tile_data[tile.id].meshes;\n        if (meshes[variant.key] == null) {\n            const vertex_layout = this.vertexLayoutForMeshVariant(variant);\n            meshes[variant.key] = {\n                variant,\n                vertex_data: vertex_layout.createVertexData()\n            };\n        }\n        return meshes[variant.key];\n    },\n\n    vertexLayoutForMeshVariant (/*variant*/) {\n        // styles must implement\n    },\n\n    meshVariantTypeForDraw (/*draw*/) {\n        // styles must implement\n    },\n\n    addFeature (feature, draw, context) {\n        let tile = context.tile;\n        if (tile.generation !== this.generation) {\n            return;\n        }\n\n        if (!this.tile_data[tile.id]) {\n            this.startData(tile);\n        }\n\n        let style = this.parseFeature(feature, draw, context);\n        if (!style) {\n            return; // skip feature\n        }\n\n        if (this.buildGeometry(feature.geometry, style, context) > 0) {\n            feature.generation = this.generation; // track scene generation that feature was rendered for\n        }\n    },\n\n    buildGeometry (geometry, style, context) {\n        let geom_count;\n        if (geometry.type === 'Polygon') {\n            geom_count = this.buildPolygons([geometry.coordinates], style, context);\n        }\n        else if (geometry.type === 'MultiPolygon') {\n            geom_count = this.buildPolygons(geometry.coordinates, style, context);\n        }\n        else if (geometry.type === 'LineString') {\n            geom_count = this.buildLines([geometry.coordinates], style, context);\n        }\n        else if (geometry.type === 'MultiLineString') {\n            geom_count = this.buildLines(geometry.coordinates, style, context);\n        }\n        else if (geometry.type === 'Point') {\n            geom_count = this.buildPoints([geometry.coordinates], style, context);\n        }\n        else if (geometry.type === 'MultiPoint') {\n            geom_count = this.buildPoints(geometry.coordinates, style, context);\n        }\n\n        // Optionally collect per-layer stats\n        if (geom_count > 0 && debugSettings.layer_stats) {\n            let tile = context.tile;\n            tile.debug.layers = tile.debug.layers || { list: {}, tree: {} };\n            let list = tile.debug.layers.list;\n            let tree = tile.debug.layers.tree;\n            let ftree = {}; // tree of layers for this feature\n            context.layers.forEach(layer => {\n                addLayerDebugEntry(list, layer, 1, geom_count, {[this.name]: geom_count}, {[this.baseStyle()]: geom_count});\n\n                let node = tree;\n                let fnode = ftree;\n                let levels = layer.split(':');\n                for (let i=0; i < levels.length; i++) {\n                    let level = levels[i];\n                    node[level] = node[level] || { features: 0, geoms: 0, styles: {}, base: {} };\n\n                    if (fnode[level] == null) { // only count each layer level once per feature\n                        fnode[level] = {};\n                        addLayerDebugEntry(node, level, 1, geom_count, {[this.name]: geom_count}, {[this.baseStyle()]: geom_count});\n                    }\n\n                    if (i < levels.length - 1) {\n                        node[level].layers = node[level].layers || {};\n                    }\n                    node = node[level].layers;\n                    fnode = fnode[level];\n                }\n            });\n        }\n\n        return geom_count;\n    },\n\n    parseFeature (feature, draw, context) {\n        try {\n            var style = this.feature_style;\n\n            // Calculate order\n            style.order = this.parseOrder(draw.order, context);\n            if (style.order == null && this.blend !== 'overlay') {\n                let msg = `Layer '${draw.layers.join(', ')}', draw group '${draw.group}': `;\n                msg += '\\'order\\' parameter is required unless blend mode is \\'overlay\\'';\n                if (draw.order != null) {\n                    msg += '; \\'order\\' was set to a dynamic value (e.g. string tied to feature property, ';\n                    msg += 'or JS function), but evaluated to null for one or more features';\n                }\n                log({ level: 'warn', once: true }, msg);\n                return;\n            }\n\n            // Subclass implementation\n            style = this._parseFeature(feature, draw, context);\n            if (!style) {\n                return; // skip feature\n            }\n\n            // Custom attributes\n            if (this.shaders.attributes) {\n                style.attributes = style.attributes || {};\n                for (const aname in this.shaders.attributes) {\n                    style.attributes[aname] = StyleParser.evalCachedProperty(\n                        draw.attributes && draw.attributes[aname], context);\n                    // set attribute value to zero for null/undefined/non-numeric values\n                    if (typeof style.attributes[aname] !== 'number') {\n                        style.attributes[aname] = 0;\n                    }\n                }\n            }\n\n            // Feature selection (only if feature is marked as interactive, and style supports it)\n            if (this.selection) {\n                style.interactive = StyleParser.evalProperty(draw.interactive, context);\n            }\n            else {\n                style.interactive = false;\n            }\n\n            if (style.interactive === true) {\n                style.selection_color = FeatureSelection.makeColor(feature, context.tile, context);\n            }\n            else {\n                style.selection_color = FeatureSelection.defaultColor;\n            }\n\n            return style;\n        }\n        catch (error) {\n            log('error', 'Style.parseFeature: style parsing error', feature, style, error.stack);\n        }\n    },\n\n    _parseFeature (/*feature, draw, context*/) {\n        return this.feature_style;\n    },\n\n    preprocess (draw) {\n        // Preprocess first time\n        if (!draw.preprocessed) {\n            // Apply draw defaults\n            if (this.draw) {\n                // Merge each property separately to avoid modifying `draw` instance identity\n                for (let param in this.draw) {\n                    let val = this.draw[param];\n                    if (typeof val === 'object' && !Array.isArray(val)) {  // nested param (e.g. `outline`)\n                        draw[param] = mergeObjects({}, val, draw[param]);\n                    }\n                    else if (draw[param] == null) { // simple param (single scalar value or array)\n                        draw[param] = val;\n                    }\n                }\n            }\n\n            if (!this.selection) {\n                draw.interactive = false; // always disable feature selection for when style doesn't support it\n            }\n            else if (this.introspection) {\n                draw.interactive = true;  // always enable feature selection for introspection\n            }\n\n            draw = this._preprocess(draw); // optional subclass implementation\n            if (!draw) {\n                return;\n            }\n\n            // Custom attributes\n            if (this.shaders.attributes) {\n                draw.attributes = draw.attributes || {};\n                for (const aname in this.shaders.attributes) {\n                    draw.attributes[aname] = StyleParser.createPropertyCache(\n                        draw.attributes[aname] != null ? draw.attributes[aname] : 0);\n                }\n            }\n\n            draw.preprocessed = true;\n        }\n        return draw;\n    },\n\n    // optionally implemented by subclass\n    _preprocess (draw) {\n        return draw;\n    },\n\n    // Parse an order value\n    parseOrder (order, context) {\n        // Calculate order if it was not cached\n        if (typeof order !== 'number') {\n            return StyleParser.calculateOrder(order, context);\n        }\n        return order;\n    },\n\n    // Expand final precision for half-layers (for outlines)\n    scaleOrder (order) {\n        return order * 2;\n    },\n\n    // Parse a color of choose a default if acceptable, return undefined if color missing\n    parseColor(color, context) {\n        // Need either a color, or a shader block for 'color' or 'filter'\n        if (color) {\n            return StyleParser.evalCachedColorProperty(color, context);\n        }\n        else if (this.shaders.blocks.color || this.shaders.blocks.filter) {\n            return StyleParser.defaults.color;\n        }\n    },\n\n    // Build functions are no-ops until overriden\n    buildPolygons () { return 0; },\n    buildLines () { return 0; },\n    buildPoints () { return 0; },\n\n\n    /*** GL state and rendering ***/\n\n    setGL (gl) {\n        this.gl = gl;\n        this.max_texture_size = Texture.getMaxTextureSize(this.gl);\n    },\n\n    makeMesh (vertex_data, vertex_elements, options = {}) {\n        let vertex_layout = this.vertexLayoutForMeshVariant(options.variant);\n\n        if (debugSettings.wireframe) {\n            // In wireframe debug mode, transform mesh into lines\n            vertex_elements = makeWireframeForTriangleElementData(vertex_elements);\n            return new VBOMesh(this.gl, vertex_data, vertex_elements, vertex_layout,\n                { ...options, draw_mode: this.gl.LINES });\n        }\n\n        return new VBOMesh(this.gl, vertex_data, vertex_elements, vertex_layout, options);\n    },\n\n    render (mesh) {\n        return mesh.render();\n    },\n\n    // Get a specific program, compiling if necessary\n    getProgram (key = 'program') {\n        this.compileSetup();\n\n        const program = this[key];\n        if (!program || program.error) {\n            return;\n        }\n\n        if (!program.compiled) {\n            log('debug', `Compiling style '${this.name}', program key '${key}'`);\n            try {\n                program.compile();\n            }\n            catch (e) {\n                log('error', `Style: error compiling program for style '${this.name}' (program key '${key}')`,\n                    this, e.stack, e.type, e.shader_errors);\n                throw e; // re-throw so users can be notified via event subscriptions\n            }\n        }\n        return program;\n    },\n\n    // One-time setup for compiling style's programs\n    compileSetup () {\n        if (this.compile_setup) {\n            return;\n        }\n\n        if (!this.gl) {\n            throw(new Error(`style.compile(): skipping for ${this.name} because no GL context`));\n        }\n\n        // Build defines & for selection (need to create a new object since the first is stored as a reference by the program)\n        var defines = this.buildDefineList();\n        if (this.selection) {\n            var selection_defines = Object.assign({}, defines);\n            selection_defines.TANGRAM_FEATURE_SELECTION = true;\n        }\n\n        // Shader blocks\n        var blocks = (this.shaders && this.shaders.blocks);\n        var block_scopes = (this.shaders && this.shaders.block_scopes);\n\n        // Uniforms\n        var uniforms = Object.assign({}, this.shaders && this.shaders.uniforms);\n        for (let u in uniforms) { // validate uniforms\n            if (uniforms[u] == null) {\n                log({ level: 'warn', once: true }, `Style '${this.name}' has invalid uniform '${u}': uniform values must be non-null`);\n            }\n        }\n\n        // Accept a single extension, or an array of extensions\n        var extensions = (this.shaders && this.shaders.extensions);\n        if (typeof extensions === 'string') {\n            extensions = [extensions];\n        }\n\n        // Create shaders\n        this.program = new ShaderProgram(\n            this.gl,\n            this.vertex_shader_src,\n            this.fragment_shader_src,\n            {\n                name: this.name,\n                defines,\n                uniforms,\n                blocks,\n                block_scopes,\n                extensions\n            }\n        );\n\n        if (this.selection) {\n            this.selection_program = new ShaderProgram(\n                this.gl,\n                this.vertex_shader_src,\n                selection_fragment_source,\n                {\n                    name: (this.name + ' (selection)'),\n                    defines: selection_defines,\n                    uniforms,\n                    blocks,\n                    block_scopes,\n                    extensions\n                }\n            );\n        }\n        else {\n            this.selection_program = null;\n        }\n\n        this.compile_setup = true;\n    },\n\n    // Add a shader block\n    addShaderBlock (key, block, scope = null) {\n        this.shaders.blocks = this.shaders.blocks || {};\n        this.shaders.blocks[key] = this.shaders.blocks[key] || [];\n        this.shaders.blocks[key].push(block);\n\n        this.shaders.block_scopes = this.shaders.block_scopes || {};\n        this.shaders.block_scopes[key] = this.shaders.block_scopes[key] || [];\n        this.shaders.block_scopes[key].push(scope);\n    },\n\n    // Remove all shader blocks for key\n    removeShaderBlock (key) {\n        if (this.shaders.blocks) {\n            this.shaders.blocks[key] = null;\n        }\n\n        if (this.shaders.block_scopes) {\n            this.shaders.block_scopes[key] = null;\n        }\n    },\n\n    replaceShaderBlock (key, block, scope = null) {\n        this.removeShaderBlock(key);\n        this.addShaderBlock(key, block, scope);\n    },\n\n    /** TODO: could probably combine and generalize this with similar method in ShaderProgram\n     * (list of define objects that inherit from each other)\n     */\n    buildDefineList () {\n        // Add any custom defines to built-in style defines\n        var defines = {}; // create a new object to avoid mutating a prototype value that may be shared with other styles\n        if (this.defines != null) {\n            for (var d in this.defines) {\n                defines[d] = this.defines[d];\n            }\n        }\n        if (this.shaders != null && this.shaders.defines != null) {\n            for (d in this.shaders.defines) {\n                defines[d] = this.shaders.defines[d];\n            }\n        }\n        return defines;\n\n    },\n\n    // Determines if 'raster' parameter is set to a valid value\n    hasRasters () {\n        return (['color', 'normal', 'custom'].indexOf(this.raster) > -1);\n    },\n\n    // Setup raster access in shaders\n    setupRasters () {\n        if (!this.hasRasters()) {\n            return;\n        }\n\n        // Enable raster textures and configure how first raster is applied\n        if (this.raster === 'color') {\n            this.defines.TANGRAM_RASTER_TEXTURE_COLOR = true;\n        }\n        else if (this.raster === 'normal') {\n            this.defines.TANGRAM_RASTER_TEXTURE_NORMAL = true;\n        }\n        // else custom raster (samplers will be made available but not automatically applied)\n\n        // A given style may be built with multiple data sources, each of which may attach\n        // a variable number of raster sources (0 to N, where N is the max number of raster sources\n        // defined for the scene). This means we don't know *which* or *how many* rasters will be\n        // bound now, at initial compile-time; we only know this at geometry build-time. To ensure\n        // that we can bind as many raster sources as needed, we declare our uniform arrays to hold\n        // the maximum number of possible sources. At render time, only the necessary number of rasters\n        // are bound (the remaining slots aren't intended to be accessed).\n        let num_raster_sources =\n            Object.keys(this.sources)\n                .filter(s => this.sources[s] instanceof RasterTileSource)\n                .length;\n\n        this.defines.TANGRAM_NUM_RASTER_SOURCES = `${num_raster_sources}`; // force to string to avoid auto-float conversion\n        if (num_raster_sources > 0) {\n            // Track how many raster sources have alpha masking (used for handling transparency outside raster image)\n            const num_masked_rasters = Object.keys(this.sources)\n                .filter(s => this.sources[s].mask_alpha)\n                .length;\n            this.defines.TANGRAM_HAS_MASKED_RASTERS = (num_masked_rasters > 0);\n            this.defines.TANGRAM_ALL_MASKED_RASTERS = (num_masked_rasters === num_raster_sources);\n\n            // Use model position of tile's coordinate zoom for raster tile texture UVs\n            this.defines.TANGRAM_MODEL_POSITION_BASE_ZOOM_VARYING = true;\n\n            // Uniforms and samplers\n            this.replaceShaderBlock('raster', rasters_source, 'Raster');\n        }\n    },\n\n    // Load raster tile textures and set uniforms\n    async buildRasterTextures (tile, tile_data) {\n        // skip if style doesn't support rasters\n        if (!this.hasRasters()) {\n            return tile_data;\n        }\n\n        // skip if source didn't attach any rasters to tile\n        if (tile.rasters.length === 0) {\n            return tile_data;\n        }\n\n        // Load textures on main thread and return when done\n        // We want to block the building of a raster tile mesh until its texture is loaded,\n        // to avoid flickering while loading (texture will render as black)\n        let textures;\n        try {\n            textures = await WorkerBroker.postMessage(\n                `${this.main_thread_target}.loadTextures`,\n                { coords: tile.coords, source: tile.source, rasters: tile.rasters, min: tile.min, max: tile.max }\n            );\n        }\n        catch (e) { // error thrown if style has been removed from main thread\n            return tile_data;\n        }\n\n        if (!textures || textures.length < 1) { // no textures found (unexpected)\n            // TODO: warning\n            return tile_data;\n        }\n        else if (textures.some(t => !t.loaded)) { // some textures failed, throw out style for this tile\n            return null;\n        }\n\n        // Enable alpha masking if needed (for transparency outside raster image, on first raster only)\n        tile_data.uniforms['u_raster_mask_alpha'] = (this.sources[tile.rasters[0]].mask_alpha === true);\n\n        // Set texture uniforms (returned after loading from main thread)\n        const u_samplers = tile_data.uniforms['u_rasters'] = [];\n        const u_sizes = tile_data.uniforms['u_raster_sizes'] = [];\n        const u_offsets = tile_data.uniforms['u_raster_offsets'] = [];\n\n        textures.forEach(t => {\n            const i = t.index;\n            u_samplers[i] = t.name;\n            tile_data.textures.push(t.name);\n\n            u_sizes[i] = [t.width, t.height];\n\n            // Tile geometry may be at a higher zoom than the raster tile texture,\n            // (e.g. an overzoomed raster tile), in which case we need to adjust the\n            // raster texture UVs to offset to the appropriate starting point for\n            // this geometry tile.\n            if (tile.coords.z > t.coords.z) {\n                let dz = tile.coords.z - t.coords.z; // # of levels raster source is overzoomed\n                let dz2 = Math.pow(2, dz);\n                u_offsets[i] = [\n                    (((tile.coords.x % dz2) + dz2) % dz2) / dz2, // double-modulo to handle negative (wrapped) tile coords\n                    (dz2 - 1 - (tile.coords.y % dz2)) / dz2, // GL texture coords are +Y up\n                    1 / dz2\n                ];\n            }\n            else {\n                u_offsets[i] = [0, 0, 1];\n            }\n        });\n\n        return tile_data;\n    },\n\n    // Determine which raster tile textures need to load for this tile, load them and return metadata to worker\n    // Called on main thread\n    async loadTextures (tile) {\n        let configs = {}; // texture configs to pass to texture builder, keyed by texture name\n        let index = {};   // index into raster sampler array, keyed by texture name\n        let queue = [];\n\n        // Find raster textures that need to be loaded\n        tile.rasters.map(r => this.sources[r]).filter(x => x).forEach((source, i) => {\n            if (source instanceof RasterTileSource) {\n                queue.push(source.tileTexture(tile, this).then(config => {\n                    configs[config.name] = config;\n                    index[config.name] = i;\n                }));\n            }\n        });\n        await Promise.all(queue);\n\n        // Create and load raster textures\n        await Texture.createFromObject(this.gl, configs);\n        let textures = await Promise.all(Object.keys(configs)\n            .map(t => Texture.textures[t] && Texture.textures[t].load())\n            .filter(x => x)\n        );\n        textures.forEach(t => t.retain());\n\n        // Take a subset of texture metadata, and decorate with raster-specific info\n        // NB: only return name and size of textures loaded, because we can't send actual texture objects to worker\n        return textures.map(t => ({\n            name: t.name,\n            width: t.width,\n            height: t.height,\n            loaded: t.loaded,\n            index: index[t.name],          // raster sampler index\n            coords: configs[t.name].coords // tile coords of raster tile\n        }));\n    },\n\n    // Setup shader definitions for custom attributes\n    setupCustomAttributes() {\n        if (this.shaders.attributes) {\n            for (const [aname, attrib] of Object.entries(this.shaders.attributes)) {\n                // alias each custom attribute to the internal attribute name in vertex shader,\n                // and internal varying name in fragment shader (if varying is enabled)\n                if (attrib.type === 'float') {\n                    if (attrib.varying !== false) {\n                        this.addShaderBlock('attributes', `\n                            #ifdef TANGRAM_VERTEX_SHADER\n                                attribute float a_${aname};\n                                varying float v_${aname};\n                                #define ${aname} a_${aname}\n                            #else\n                                varying float v_${aname};\n                                #define ${aname} v_${aname}\n                            #endif\n                        `);\n                        this.addShaderBlock('setup', `#ifdef TANGRAM_VERTEX_SHADER\\nv_${aname} = a_${aname};\\n#endif`);\n                    }\n                    else {\n                        this.addShaderBlock('attributes', `\n                            #ifdef TANGRAM_VERTEX_SHADER\n                                attribute float a_${aname};\n                                #define ${aname} a_${aname}\n                            #endif\n                        `);\n                    }\n                }\n            }\n        }\n    },\n\n    // Add custom attributes to a list of attributes for initializing a vertex layout\n    addCustomAttributesToAttributeList(attribs) {\n        if (this.shaders.attributes) {\n            for (const [aname, attrib] of Object.entries(this.shaders.attributes)) {\n                if (attrib.type === 'float') {\n                    attribs.push({ name: `a_${aname}`, size: 1, type: gl.FLOAT, normalized: false });\n                }\n            }\n        }\n        return attribs;\n    },\n\n    // Add current feature values for custom attributes to vertex template\n    addCustomAttributesToVertexTemplate(draw, index) {\n        if (this.shaders.attributes) {\n            for (let aname in this.shaders.attributes) {\n                this.vertex_template[index++] = draw.attributes[aname] != null ? draw.attributes[aname] : 0;\n            }\n        }\n    },\n\n    // Setup any GL state for rendering\n    setup () {\n        this.setUniforms();\n        this.material.setupProgram(ShaderProgram.current);\n    },\n\n    // Set style uniforms on currently bound program\n    setUniforms () {\n        var program = ShaderProgram.current;\n        if (!program) {\n            return;\n        }\n\n        program.setUniforms(this.shaders?.uniforms, true); // reset texture unit to 0\n    },\n\n    // Render state settings by blend mode\n    render_states: {\n        opaque: { depth_test: true, depth_write: true },\n        translucent: { depth_test: true, depth_write: true },\n        add: { depth_test: true, depth_write: false },\n        multiply: { depth_test: true, depth_write: false },\n        inlay: { depth_test: true, depth_write: false },\n        overlay: { depth_test: false, depth_write: false }\n    },\n\n    // Default sort order for blend modes\n    default_blend_orders: {\n        opaque: Number.MIN_SAFE_INTEGER,\n        add: 1,\n        multiply: 2,\n        inlay: 3,\n        translucent: 4,\n        overlay: 5\n    },\n\n    getBlendOrderForDraw (draw) {\n        // Allow draw block to override blend_order for non-opaque blend styles\n        return ((this.blend !== 'opaque' && draw.blend_order != null) ? draw.blend_order : this.blend_order);\n    }\n\n};\n\n// add feature and geometry counts for a single layer\nexport function addLayerDebugEntry (target, layer, faeture_count, geom_count, styles, bases) {\n    target[layer] = target[layer] || { features: 0, geoms: 0, styles: {}, base: {} };\n    target[layer].features += faeture_count;    // feature count\n    target[layer].geoms += geom_count;          // geometry count\n\n    // geometry count by style\n    for (let style in styles) {\n        target[layer].styles[style] = target[layer].styles[style] || 0;\n        target[layer].styles[style] += styles[style];\n    }\n\n    // geometry count by base style\n    for (let style in bases) {\n        target[layer].base[style] = target[layer].base[style] || 0;\n        target[layer].base[style] += bases[style];\n    }\n}\n","let MAX_VALUE = Math.pow(2, 16) - 1;\nlet has_element_index_uint = false;\n\nexport default class VertexElements {\n    constructor () {\n        this.array = [];\n        this.has_overflown = false;\n    }\n    push (value) {\n        // If values have overflown and no Uint32 option is available, do not push values\n        if (this.has_overflown && !has_element_index_uint) {\n            return;\n        }\n\n        // Trigger overflow if value is greater than Uint16 max\n        if (value > MAX_VALUE) {\n            this.has_overflown = true;\n            if (!has_element_index_uint) {\n                return;\n            }\n        }\n\n        this.array.push(value);\n    }\n    end () {\n        if (this.array.length){\n            let buffer = createBuffer(this.array, this.has_overflown);\n            this.array = [];\n            this.has_overflown = false;\n            return buffer;\n        }\n        else {\n            return false;\n        }\n    }\n}\n\nVertexElements.setElementIndexUint = function(flag) {\n    has_element_index_uint = flag;\n};\n\nfunction createBuffer(array, overflown) {\n    var typedArray = (overflown && has_element_index_uint) ? Uint32Array : Uint16Array;\n    return new typedArray(array);\n}\n","import gl from './constants'; // web workers don't have access to GL context, so import all GL constants\nimport log from '../utils/log';\nimport VertexElements from './vertex_elements';\n\n// Maps GL types to JS array types\nlet array_types = {\n    [gl.FLOAT]: Float32Array,\n    [gl.BYTE]: Int8Array,\n    [gl.UNSIGNED_BYTE]: Uint8Array,\n    [gl.INT]: Int32Array,\n    [gl.UNSIGNED_INT]: Uint32Array,\n    [gl.SHORT]: Int16Array,\n    [gl.UNSIGNED_SHORT]: Uint16Array\n};\n\n// An intermediary object that holds vertex data in typed arrays, according to a given vertex layout\n// Used to construct a mesh/VBO for rendering\nexport default class VertexData {\n\n    constructor (vertex_layout, { prealloc = 500 } = {}) {\n        this.vertex_layout = vertex_layout;\n        this.vertex_elements = new VertexElements();\n        this.stride = this.vertex_layout.stride;\n\n        if (VertexData.array_pool.length > 0) {\n            this.vertex_buffer = VertexData.array_pool.pop();\n            this.byte_length = this.vertex_buffer.byteLength;\n            this.size = Math.floor(this.byte_length / this.stride);\n            log('trace', `VertexData: reused buffer of bytes ${this.byte_length}, ${this.size} vertices`);\n        }\n        else {\n            this.size = prealloc; // # of vertices to allocate\n            this.byte_length = this.stride * this.size;\n            this.vertex_buffer = new Uint8Array(this.byte_length);\n        }\n        this.offset = 0;             // byte offset into currently allocated buffer\n\n        this.vertex_count = 0;\n        this.realloc_count = 0;\n        this.setBufferViews();\n        this.setAddVertexFunction();\n    }\n\n    // (Re-)allocate typed views into the main buffer - only create the types we need for this layout\n    setBufferViews () {\n        this.views = {};\n        this.views[gl.UNSIGNED_BYTE] = this.vertex_buffer;\n        this.vertex_layout.dynamic_attribs.forEach(attrib => {\n            // Need view for this type?\n            if (this.views[attrib.type] == null) {\n                var array_type = array_types[attrib.type];\n                this.views[attrib.type] = new array_type(this.vertex_buffer.buffer);\n            }\n        });\n    }\n\n    // Check allocated buffer size, expand/realloc buffer if needed\n    checkBufferSize () {\n        if ((this.offset + this.stride) > this.byte_length) {\n            this.size = Math.floor(this.size * 1.5);\n            this.size -= this.size % 4;\n            this.byte_length = this.stride * this.size;\n            var new_view = new Uint8Array(this.byte_length);\n            new_view.set(this.vertex_buffer); // copy existing data to new buffer\n            VertexData.array_pool.push(this.vertex_buffer); // save previous buffer for use by next tile\n            this.vertex_buffer = new_view;\n            this.setBufferViews();\n            this.realloc_count++;\n            // log('info', `VertexData: expanded vertex block to ${this.size} vertices`);\n        }\n    }\n\n    // Initialize the add vertex function (lazily compiled by vertex layout)\n    setAddVertexFunction () {\n        this.vertexLayoutAddVertex = this.vertex_layout.getAddVertexFunction();\n    }\n\n    // Add a vertex, copied from a plain JS array of elements matching the order of the vertex layout\n    addVertex (vertex) {\n        this.checkBufferSize();\n        this.vertexLayoutAddVertex(vertex, this.views, this.offset);\n        this.offset += this.stride;\n        this.vertex_count++;\n    }\n\n    // Finalize vertex buffer for use in constructing a mesh\n    end () {\n        // Clip the buffer to size used for this VBO\n        this.vertex_buffer = this.vertex_buffer.subarray(0, this.offset);\n        this.element_buffer = this.vertex_elements.end();\n\n        log('trace', `VertexData: ${this.size} vertices total, realloc count ${this.realloc_count}`);\n\n        return this;\n    }\n\n}\n\nVertexData.array_pool = []; // pool of currently available (previously used) buffers (uint8)\n","import gl from './constants'; // web workers don't have access to GL context, so import all GL constants\nimport VertexData from './vertex_data';\nimport hashString from '../utils/hash';\n\n// Describes a vertex layout that can be used with many different GL programs.\nexport default class VertexLayout {\n    // Attribs are an array, in layout order, of: name, size, type, normalized\n    // ex: { name: 'position', size: 3, type: gl.FLOAT, normalized: false }\n    constructor (attribs) {\n        this.attribs = attribs; // array of attributes, specified as standard GL attrib options\n        this.dynamic_attribs = this.attribs.filter(x => x.static == null); // attributes with per-vertex values, used to build VBOs\n        this.static_attribs = this.attribs.filter(x => x.static != null); // attributes with fixed values\n        this.components = [];   // list of type and offset info about each attribute component\n        this.index = {};        // JS buffer index of each attribute component, e.g. this.index.position\n        this.offset = {};       // VBO buffer byte offset of each attribute component, e.g. this.offset.color\n        this.stride = 0;        // byte stride of a single vertex\n\n        let index = 0, count = 0;\n        for (let a=0; a < this.attribs.length; a++) {\n            let attrib = this.attribs[a];\n            // Dynamic attribute\n            if (attrib.static == null) {\n                attrib.offset = this.stride;\n                attrib.byte_size = attrib.size;\n                let shift = 0;\n\n                switch (attrib.type) {\n                case gl.FLOAT:\n                case gl.INT:\n                case gl.UNSIGNED_INT:\n                    attrib.byte_size *= 4;\n                    shift = 2;\n                    break;\n                case gl.SHORT:\n                case gl.UNSIGNED_SHORT:\n                    attrib.byte_size *= 2;\n                    shift = 1;\n                    break;\n                }\n\n                // Force 4-byte alignment on attributes\n                if (attrib.byte_size & 3) { // pad to multiple of 4 bytes\n                    attrib.byte_size += 4 - (attrib.byte_size & 3);\n                }\n                this.stride += attrib.byte_size;\n\n                // Add info to list of attribute components (e.g. float is 1 component, vec3 is 3 separate components)\n                // Used to map plain JS array to typed arrays\n                let offset_typed = attrib.offset >> shift;\n                for (let s=0; s < attrib.size; s++) {\n                    this.components.push({\n                        type: attrib.type,\n                        shift,\n                        offset: offset_typed++,\n                        index: count++\n                    });\n                }\n\n                // Provide an index into the vertex data buffer for each attribute by name\n                this.index[attrib.name] = index;\n                index += attrib.size;\n\n                // Store byte offset of each attribute by name\n                this.offset[attrib.name] = attrib.offset;\n            }\n            // Static attribute\n            else {\n                attrib.static = Array.isArray(attrib.static) ? attrib.static : [attrib.static]; // convert single value to array\n                attrib.method = `vertexAttrib${attrib.static.length}fv`;\n            }\n        }\n    }\n\n    // Enables dynamic (array-based) attributes for a given GL program\n    // Assumes that the desired vertex buffer (VBO) is already bound\n    // If the program doesn't include all attributes, it can still use the vertex layout\n    // to read those attribs that it does recognize, using the attrib offsets to skip others.\n    enableDynamicAttributes (gl, program) {\n        // Disable all attributes\n        for (const location in VertexLayout.enabled_attribs) {\n            gl.disableVertexAttribArray(location);\n        }\n        VertexLayout.enabled_attribs = {};\n\n        // Enable dynamic attributes for this layout\n        this.dynamic_attribs.forEach(attrib => {\n            const location = program.attribute(attrib.name).location;\n            if (location !== -1) {\n                gl.enableVertexAttribArray(location);\n                gl.vertexAttribPointer(location, attrib.size, attrib.type, attrib.normalized, this.stride, attrib.offset);\n                VertexLayout.enabled_attribs[location] = program;\n            }\n        });\n    }\n\n    // Enable static attributes for this layout. Since these aren't captured as part of Vertex Array Object state,\n    // they are enabled separately.\n    enableStaticAttributes (gl, program) {\n        this.static_attribs.forEach(attrib => {\n            const location = program.attribute(attrib.name).location;\n            if (location !== -1 && gl[attrib.method] instanceof Function) {\n                // N.B.: Safari appears to require an explicit array enable to set vertex attribute as \"active\"\n                // (the static attribute value method does not work without it). So the attribute is temporarily\n                // enabled as an array, then disabled.\n                gl.enableVertexAttribArray(location);\n                gl[attrib.method](location, attrib.static);\n                gl.disableVertexAttribArray(location);\n            }\n        });\n    }\n\n    createVertexData () {\n        return new VertexData(this);\n    }\n\n    // Lazily create the add vertex function\n    getAddVertexFunction () {\n        if (this.addVertex == null) {\n            this.createAddVertexFunction();\n        }\n        return this.addVertex;\n    }\n\n    // Dynamically compile a function to add a plain JS vertex array to this layout's typed VBO arrays\n    createAddVertexFunction () {\n        let key = hashString(JSON.stringify(this.attribs));\n        if (VertexLayout.add_vertex_funcs[key] == null) {\n            // `t` = current typed array to write to\n            // `o` = current offset into VBO, in current type size (e.g. divide 2 for shorts, divide by 4 for floats, etc.)\n            // `v` = plain JS array containing vertex data\n            // `vs` = typed arrays (one per GL type needed for this vertex layout)\n            // `off` = current offset into VBO, in bytes\n            let src = ['var t, o;'];\n\n            // Sort by array type to reduce redundant array look-up and offset calculation\n            let last_type;\n            let components = [...this.components];\n            components.sort((a, b) => (a.type !== b.type) ? (a.type - b.type) : (a.index - b.index));\n\n            for (let c=0; c < components.length; c++) {\n                let component = components[c];\n\n                if (last_type !== component.type) {\n                    src.push(`t = vs[${component.type}];`);\n                    src.push(`o = off${component.shift ? ' >> ' + component.shift : ''};`);\n                    last_type = component.type;\n                }\n\n                src.push(`t[o + ${component.offset}] = v[${component.index}];`);\n            }\n\n            src = src.join('\\n');\n            let func = new Function('v', 'vs', 'off', src); // jshint ignore:line\n            VertexLayout.add_vertex_funcs[key] = func;\n        }\n\n        this.addVertex = VertexLayout.add_vertex_funcs[key];\n    }\n\n}\n\n// Track currently enabled attribs, by the program they are bound to\n// Static class property to reflect global GL state\nVertexLayout.enabled_attribs = {};\n\n// Functions to add plain JS vertex array to typed VBO arrays\nVertexLayout.add_vertex_funcs = {}; // keyed by unique set of attributes\n","// Geometry building functions\nimport Geo from '../utils/geo';\n\nexport const tile_bounds = [\n    { x: 0, y: 0},\n    { x: Geo.tile_scale, y: -Geo.tile_scale } // TODO: correct for flipped y-axis?\n];\n\nexport const default_uvs = [0, 0, 1, 1];\n\n// Tests if a line segment (from point A to B) is outside the tile bounds\n// (within a certain tolerance to account for geometry nearly on tile edges)\nexport function outsideTile (_a, _b, tolerance) {\n    let tile_min = tile_bounds[0];\n    let tile_max = tile_bounds[1];\n\n    // TODO: fix flipped Y coords here, confusing with 'max' reference\n    if ((_a[0] <= tile_min.x + tolerance && _b[0] <= tile_min.x + tolerance) ||\n        (_a[0] >= tile_max.x - tolerance && _b[0] >= tile_max.x - tolerance) ||\n        (_a[1] >= tile_min.y - tolerance && _b[1] >= tile_min.y - tolerance) ||\n        (_a[1] <= tile_max.y + tolerance && _b[1] <= tile_max.y + tolerance)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isCoordOutsideTile (coord, tolerance) {\n    tolerance = tolerance || 0;\n    let tile_min = tile_bounds[0];\n    let tile_max = tile_bounds[1];\n\n    return coord[0] <= tile_min.x + tolerance ||\n           coord[0] >= tile_max.x - tolerance ||\n           coord[1] >= tile_min.y - tolerance ||\n           coord[1] <= tile_max.y + tolerance;\n}\n","'use strict';\n\nmodule.exports = earcut;\nmodule.exports.default = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 1 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim);\n            triangles.push(ear.i / dim);\n            triangles.push(next.i / dim);\n\n            removeNode(ear);\n\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var p = ear.next.next;\n\n    while (p !== ear.prev) {\n        if (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // triangle bbox; min & max are calculated like this for speed\n    var minTX = a.x < b.x ? (a.x < c.x ? a.x : c.x) : (b.x < c.x ? b.x : c.x),\n        minTY = a.y < b.y ? (a.y < c.y ? a.y : c.y) : (b.y < c.y ? b.y : c.y),\n        maxTX = a.x > b.x ? (a.x > c.x ? a.x : c.x) : (b.x > c.x ? b.x : c.x),\n        maxTY = a.y > b.y ? (a.y > c.y ? a.y : c.y) : (b.y > c.y ? b.y : c.y);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(minTX, minTY, minX, minY, invSize),\n        maxZ = zOrder(maxTX, maxTY, minX, minY, invSize);\n\n    var p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n !== ear.prev && n !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n !== ear.prev && n !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim);\n            triangles.push(p.i / dim);\n            triangles.push(b.i / dim);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return filterPoints(p);\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize);\n                earcutLinked(c, triangles, dim, minX, minY, invSize);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        eliminateHole(queue[i], outerNode);\n        outerNode = filterPoints(outerNode, outerNode.next);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    outerNode = findHoleBridge(hole, outerNode);\n    if (outerNode) {\n        var b = splitPolygon(outerNode, hole);\n\n        // filter collinear points around the cuts\n        filterPoints(outerNode, outerNode.next);\n        filterPoints(b, b.next);\n    }\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                if (x === hx) {\n                    if (hy === p.y) return p;\n                    if (hy === p.next.y) return p.next;\n                }\n                m = p.x < p.next.x ? p : p.next;\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    if (hx === qx) return m; // hole touches outer segment; pick leftmost endpoint\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m;\n\n    do {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if (locallyInside(p, hole) &&\n                (tan < tanMin || (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    } while (p !== stop);\n\n    return m;\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    var p = start;\n    do {\n        if (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = 32767 * (x - minX) * invSize;\n    y = 32767 * (y - minY) * invSize;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 &&\n           (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 &&\n           (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && // dones't intersect other edges\n           (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && // locally visible\n            (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n            equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    var o1 = sign(area(p1, q1, p2));\n    var o2 = sign(area(p1, q1, q2));\n    var o3 = sign(area(p2, q2, p1));\n    var o4 = sign(area(p2, q2, q1));\n\n    if (o1 !== o2 && o3 !== o4) return true; // general case\n\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n    return false;\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n    return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n}\n\nfunction sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertex index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertex nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = null;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n","\n/**\n * Rearranges items so that all items in the [left, k] are the smallest.\n * The k-th element will have the (k - left + 1)-th smallest value in [left, right].\n *\n * @template T\n * @param {T[]} arr the array to partially sort (in place)\n * @param {number} k middle index for partial sorting (as defined above)\n * @param {number} [left=0] left index of the range to sort\n * @param {number} [right=arr.length-1] right index\n * @param {(a: T, b: T) => number} [compare = (a, b) => a - b] compare function\n */\nexport default function quickselect(arr, k, left = 0, right = arr.length - 1, compare = defaultCompare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            const n = right - left + 1;\n            const m = k - left + 1;\n            const z = Math.log(n);\n            const s = 0.5 * Math.exp(2 * z / 3);\n            const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselect(arr, k, newLeft, newRight, compare);\n        }\n\n        const t = arr[k];\n        let i = left;\n        /** @type {number} */\n        let j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\n/**\n * @template T\n * @param {T[]} arr\n * @param {number} i\n * @param {number} j\n */\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\n/**\n * @template T\n * @param {T} a\n * @param {T} b\n * @returns {number}\n */\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","// Polygon builders\nimport Geo from '../utils/geo';\nimport Vector from '../utils/vector';\nimport { default_uvs, outsideTile } from './common';\n\nimport earcut from 'earcut';\nimport quickselect from 'quickselect';\n\nconst up_vec3 = [0, 0, 1];\n\n\n/**\n * To tesselate flat 2D polygons.\n * The x & y coordinates will be set as first two elements of provided vertex_template.\n * @param {Array.<Array.<Array.<Array.<number>>>>} polygons The polygons to tesselate.\n * @param {VertexData} vertex_data The VertexData were to store the results\n * @param {Array.<number>} vertex_template The vertex template to use\n * @param {Object} options The texture coordinate options to apply\n * @return {number} the number of the resulting geometries (triangles)\n */\nexport function buildPolygons (\n    polygons, vertex_data, vertex_template, { texcoord_index, texcoord_scale, texcoord_normalize }) {\n\n    let vertex_elements = vertex_data.vertex_elements,\n        num_polygons = polygons.length,\n        geom_count = 0,\n        min_u, min_v, max_u, max_v,\n        min_x, min_y, max_x, max_y,\n        span_x, span_y, scale_u, scale_v;\n\n    if (texcoord_index) {\n        texcoord_normalize = texcoord_normalize || 1;\n        [min_u, min_v, max_u, max_v] = texcoord_scale || default_uvs;\n    }\n\n    for (let p = 0; p < num_polygons; p++) {\n\n        const max_rings = 500;\n        let polygon = polygons[p];\n\n        if (polygon.length > max_rings) {\n            polygon = [...polygon]; // copy to avoid modifying original\n            quickselect(polygon, max_rings, 1, polygon.length - 1, (a, b) => b.area - a.area);\n            polygon = polygon.slice(0, max_rings);\n        }\n\n        const indices = triangulatePolygon(earcut.flatten(polygon));\n        const num_indices = indices.length;\n        const element_offset = vertex_data.vertex_count;\n\n        // The vertices and vertex-elements must not be added if earcut returns no indices:\n        if (num_indices) {\n\n            // Find polygon extents to calculate UVs, fit them to the axis-aligned bounding box:\n            if (texcoord_index) {\n                [min_x, min_y, max_x, max_y] = Geo.findBoundingBox(polygon),\n                span_x = max_x - min_x,\n                span_y = max_y - min_y,\n                scale_u = (max_u - min_u) / span_x,\n                scale_v = (max_v - min_v) / span_y;\n            }\n\n            for (let ring_index = 0; ring_index < polygon.length; ring_index++) {\n                // Add vertex data:\n                let polygon_ring = polygon[ring_index];\n                for (let i = 0; i < polygon_ring.length; i++) {\n                    let vertex = polygon_ring[i];\n                    vertex_template[0] = vertex[0];\n                    vertex_template[1] = vertex[1];\n\n                    // Add UVs:\n                    if (texcoord_index) {\n                        vertex_template[texcoord_index + 0] = ((vertex[0] - min_x) * scale_u + min_u) * texcoord_normalize;\n                        vertex_template[texcoord_index + 1] = ((vertex[1] - min_y) * scale_v + min_v) * texcoord_normalize;\n                    }\n\n                    vertex_data.addVertex(vertex_template);\n                }\n            }\n\n            // Add element indices:\n            for (let i = 0; i < num_indices; i++) {\n                vertex_elements.push(element_offset + indices[i]);\n            }\n            geom_count += num_indices / 3;\n\n        }\n    }\n    return geom_count;\n}\n\n\n// Tesselate and extrude a flat 2D polygon into a simple 3D model with fixed height and add to GL vertex buffer\nexport function buildExtrudedPolygons (\n    polygons,\n    z, height, min_height,\n    vertex_data, vertex_template,\n    normal_index,\n    normal_normalize,\n    {\n        remove_tile_edges,\n        tile_edge_tolerance,\n        texcoord_index,\n        texcoord_scale,\n        texcoord_normalize,\n        winding\n    }) {\n\n    // Top\n    var min_z = z + (min_height || 0);\n    var max_z = z + height;\n    vertex_template[2] = max_z;\n    var geom_count = buildPolygons(polygons, vertex_data, vertex_template, { texcoord_index, texcoord_scale, texcoord_normalize });\n\n    var vertex_elements = vertex_data.vertex_elements;\n    var element_offset = vertex_data.vertex_count;\n\n    // Walls\n    // Fit UVs to wall quad\n    if (texcoord_index) {\n        texcoord_normalize = texcoord_normalize || 1;\n        var [min_u, min_v, max_u, max_v] = texcoord_scale || default_uvs;\n        var texcoords = [\n            [min_u, max_v],\n            [min_u, min_v],\n            [max_u, min_v],\n            [max_u, max_v]\n        ];\n    }\n\n    var num_polygons = polygons.length;\n    for (var p=0; p < num_polygons; p++) {\n        var polygon = polygons[p];\n\n        for (var q=0; q < polygon.length; q++) {\n            var contour = polygon[q];\n\n            for (var w=0; w < contour.length - 1; w++) {\n                if (remove_tile_edges && outsideTile(contour[w], contour[w+1], tile_edge_tolerance)) {\n                    continue; // don't extrude tile edges\n                }\n\n                // Wall order is dependent on winding order, so that normals face outward\n                let w0, w1;\n                if (winding === 'CCW') {\n                    w0 = w;\n                    w1 = w+1;\n                }\n                else {\n                    w0 = w+1;\n                    w1 = w;\n                }\n\n                // Two triangles for the quad formed by each vertex pair, going from bottom to top height\n                var wall_vertices = [\n                    [contour[w1][0], contour[w1][1], max_z],\n                    [contour[w1][0], contour[w1][1], min_z],\n                    [contour[w0][0], contour[w0][1], min_z],\n                    [contour[w0][0], contour[w0][1], max_z]\n                ];\n\n                // Calc the normal of the wall from up vector and one segment of the wall triangles\n                let wall_vec = Vector.normalize([contour[w1][0] - contour[w0][0], contour[w1][1] - contour[w0][1], 0]);\n                let normal = Vector.cross(up_vec3, wall_vec);\n\n                // Update vertex template with current surface normal\n                vertex_template[normal_index + 0] = normal[0] * normal_normalize;\n                vertex_template[normal_index + 1] = normal[1] * normal_normalize;\n                vertex_template[normal_index + 2] = normal[2] * normal_normalize;\n\n                for (var wv=0; wv < wall_vertices.length; wv++) {\n                    vertex_template[0] = wall_vertices[wv][0];\n                    vertex_template[1] = wall_vertices[wv][1];\n                    vertex_template[2] = wall_vertices[wv][2];\n\n                    if (texcoord_index) {\n                        vertex_template[texcoord_index + 0] = texcoords[wv][0] * texcoord_normalize;\n                        vertex_template[texcoord_index + 1] = texcoords[wv][1] * texcoord_normalize;\n                    }\n\n                    vertex_data.addVertex(vertex_template);\n                }\n\n                vertex_elements.push(element_offset + 0);\n                vertex_elements.push(element_offset + 1);\n                vertex_elements.push(element_offset + 2);\n                vertex_elements.push(element_offset + 2);\n                vertex_elements.push(element_offset + 3);\n                vertex_elements.push(element_offset + 0);\n\n                element_offset += 4;\n                geom_count += 2;\n            }\n        }\n    }\n    return geom_count;\n}\n\n// Triangulation using earcut\n// https://github.com/mapbox/earcut\nexport function triangulatePolygon (data) {\n    return earcut(data.vertices, data.holes, data.dimensions);\n}\n","// Polygon rendering style\n\nimport {Style} from '../style';\nimport StyleParser from '../style_parser';\nimport gl from '../../gl/constants'; // web workers don't have access to GL context, so import all GL constants\nimport VertexLayout from '../../gl/vertex_layout';\nimport {buildPolygons, buildExtrudedPolygons} from '../../builders/polygons';\nimport Geo from '../../utils/geo';\n\nimport polygons_vs from './polygons_vertex.glsl';\nimport polygons_fs from './polygons_fragment.glsl';\n\nexport const Polygons = Object.create(Style);\n\nObject.assign(Polygons, {\n    name: 'polygons',\n    built_in: true,\n    vertex_shader_src: polygons_vs,\n    fragment_shader_src: polygons_fs,\n    selection: true, // enable feature selection\n\n    init() {\n        Style.init.apply(this, arguments);\n\n        // Tell the shader about optional attributes (shader is shared with lines style, which has different config)\n        this.defines.TANGRAM_NORMAL_ATTRIBUTE = true;\n        this.defines.TANGRAM_TEXTURE_COORDS = this.texcoords;\n    },\n\n    _parseFeature (feature, draw, context) {\n        var style = this.feature_style;\n\n        style.color = this.parseColor(draw.color, context);\n        if (!style.color) {\n            return null;\n        }\n\n        style.alpha = StyleParser.evalCachedProperty(draw.alpha, context); // optional alpha override\n\n        style.variant = draw.variant; // pre-calculated mesh variant\n\n        style.z = StyleParser.evalCachedDistanceProperty(draw.z, context) || StyleParser.defaults.z;\n        style.z *= Geo.height_scale; // provide sub-meter precision of height values\n\n        style.extrude = StyleParser.evalProperty(draw.extrude, context);\n        if (style.extrude) {\n            // use feature's height and min_height properties\n            if (style.extrude === true) {\n                style.height = feature.properties.height || StyleParser.defaults.height;\n                style.min_height = feature.properties.min_height || StyleParser.defaults.min_height;\n\n            }\n            // explicit height, no min_height\n            else if (typeof style.extrude === 'number') {\n                style.height = style.extrude;\n                style.min_height = 0;\n            }\n            // explicit height and min_height\n            else if (Array.isArray(style.extrude)) {\n                style.min_height = style.extrude[0];\n                style.height = style.extrude[1];\n            }\n\n            style.height *= Geo.height_scale;       // provide sub-meter precision of height values\n            style.min_height *= Geo.height_scale;\n        }\n\n        style.tile_edges = draw.tile_edges; // usually activated for debugging, or rare visualization needs\n\n        return style;\n    },\n\n    _preprocess (draw) {\n        draw.color = StyleParser.createColorPropertyCache(draw.color);\n        draw.alpha = StyleParser.createPropertyCache(draw.alpha);\n        draw.z = StyleParser.createPropertyCache(draw.z, StyleParser.parseUnits);\n        this.computeVariant(draw);\n        return draw;\n    },\n\n    // Calculate and store mesh variant (unique by draw group but not feature)\n    computeVariant (draw) {\n        // Factors that determine a unique mesh rendering variant\n        const selection = (draw.interactive ? 1 : 0); // whether feature has interactivity\n        const normal = (draw.extrude != null ? 1 : 0); // whether feature has extrusion (need per-vertex normals)\n        const texcoords = (this.texcoords ? 1 : 0); // whether feature has texture UVs\n        const blend_order = this.getBlendOrderForDraw(draw);\n        const key = [selection, normal, texcoords, blend_order].join('/');\n        draw.variant = key;\n\n        if (this.variants[key] == null) {\n            this.variants[key] = {\n                key,\n                blend_order,\n                mesh_order: 0,\n                selection,\n                normal,\n                texcoords\n            };\n        }\n    },\n\n    // Override\n    // Create or return desired vertex layout permutation based on flags\n    vertexLayoutForMeshVariant (variant) {\n        if (this.vertex_layouts[variant.key] == null) {\n            // Attributes for this mesh variant\n            // Optional attributes have placeholder values assigned with `static` parameter\n            const attribs = [\n                { name: 'a_position', size: 4, type: gl.SHORT, normalized: false },\n                { name: 'a_normal', size: 3, type: gl.BYTE, normalized: true, static: (variant.normal ? null : [0, 0, 1]) }, // gets padded to 4-bytes\n                { name: 'a_color', size: 4, type: gl.UNSIGNED_BYTE, normalized: true },\n                { name: 'a_selection_color', size: 4, type: gl.UNSIGNED_BYTE, normalized: true, static: (variant.selection ? null : [0, 0, 0, 0]) },\n                { name: 'a_texcoord', size: 2, type: gl.UNSIGNED_SHORT, normalized: true, static: (variant.texcoords ? null : [0, 0]) }\n            ];\n\n            this.addCustomAttributesToAttributeList(attribs);\n            this.vertex_layouts[variant.key] = new VertexLayout(attribs);\n        }\n        return this.vertex_layouts[variant.key];\n    },\n\n    // Override\n    meshVariantTypeForDraw (draw) {\n        return this.variants[draw.variant]; // return pre-calculated mesh variant\n    },\n\n    /**\n     * A \"template\" that sets constant attibutes for each vertex, which is then modified per vertex or per feature.\n     * A plain JS array matching the order of the vertex layout.\n     */\n    makeVertexTemplate(style, mesh) {\n        let i = 0;\n\n        // a_position.xyz - vertex position\n        // a_position.w - layer order\n        this.vertex_template[i++] = 0;\n        this.vertex_template[i++] = 0;\n        this.vertex_template[i++] = style.z || 0;\n        this.vertex_template[i++] = this.scaleOrder(style.order);\n\n        // a_normal.xyz - surface normal\n        // only stored per-vertex for extruded features (hardcoded to 'up' for others)\n        if (mesh.variant.normal) {\n            this.vertex_template[i++] = 0;\n            this.vertex_template[i++] = 0;\n            this.vertex_template[i++] = 1 * 127;\n        }\n\n        // a_color.rgba - feature color\n        this.vertex_template[i++] = style.color[0] * 255;\n        this.vertex_template[i++] = style.color[1] * 255;\n        this.vertex_template[i++] = style.color[2] * 255;\n        this.vertex_template[i++] = (style.alpha != null ? style.alpha : style.color[3]) * 255;\n\n        // a_selection_color.rgba - selection color\n        if (mesh.variant.selection) {\n            this.vertex_template[i++] = style.selection_color[0] * 255;\n            this.vertex_template[i++] = style.selection_color[1] * 255;\n            this.vertex_template[i++] = style.selection_color[2] * 255;\n            this.vertex_template[i++] = style.selection_color[3] * 255;\n        }\n\n        // a_texcoord.uv - texture coordinates\n        if (mesh.variant.texcoords) {\n            this.vertex_template[i++] = 0;\n            this.vertex_template[i++] = 0;\n        }\n\n        this.addCustomAttributesToVertexTemplate(style, i);\n        return this.vertex_template;\n    },\n\n    buildPolygons(polygons, style, context) {\n        let mesh = this.getTileMesh(context.tile, this.meshVariantTypeForDraw(style));\n        let vertex_data = mesh.vertex_data;\n        let vertex_layout = vertex_data.vertex_layout;\n        let vertex_template = this.makeVertexTemplate(style, mesh);\n        let options = {\n            texcoord_index: vertex_layout.index.a_texcoord,\n            texcoord_normalize: 65535, // scale UVs to unsigned shorts\n            remove_tile_edges: !style.tile_edges,\n            tile_edge_tolerance: Geo.tile_scale * context.tile.pad_scale * 4,\n            winding: context.winding\n        };\n\n        // Extruded polygons (e.g. 3D buildings)\n        if (style.extrude && style.height) {\n            return buildExtrudedPolygons(\n                polygons,\n                style.z, style.height, style.min_height,\n                vertex_data, vertex_template,\n                vertex_layout.index.a_normal,\n                127, // scale normals to signed bytes\n                options\n            );\n        }\n        // Regular polygons\n        else {\n            return buildPolygons(\n                polygons,\n                vertex_data, vertex_template,\n                options\n            );\n        }\n    }\n\n});\n","// Geometry building functions\n\nimport Vector from '../utils/vector';\nimport Geo from '../utils/geo';\nimport {outsideTile, isCoordOutsideTile} from './common';\n\nconst zero_vec2 = [0, 0];\n\n// Build tessellated triangles for a polyline\nconst CAP_TYPE = {\n    butt: 0,\n    square: 1,\n    round: 2\n};\n\nconst JOIN_TYPE = {\n    miter: 0,\n    bevel: 1,\n    round: 2\n};\n\nconst DEFAULT_MITER_LIMIT = 3;\nconst MIN_FAN_WIDTH = 5; // Width of line in tile units to place 1 triangle per fan\nconst TEXCOORD_NORMALIZE = 65535; // Scaling factor for UV attribute values\n\n// Scaling factor to add precision to line texture V coordinate packed as normalized short\nconst V_SCALE_ADJUST = Geo.tile_scale;\nconst zero_v = [0, 0], one_v = [1, 0], mid_v = [0.5, 0]; // reusable instances, updated with V coordinate\n\nexport function buildPolylines (\n    lines,\n    style,\n    vertex_data,\n    vertex_template,\n    vindex,\n    closed_polygon,\n    remove_tile_edges,\n    tile_edge_tolerance) {\n\n    var cap_type = style.cap ? CAP_TYPE[style.cap] : CAP_TYPE.butt;\n    var join_type = style.join ? JOIN_TYPE[style.join] : JOIN_TYPE.miter;\n\n    // Configure miter limit\n    if (join_type === JOIN_TYPE.miter) {\n        const miter_limit = style.miter_limit || DEFAULT_MITER_LIMIT; // default miter limit\n        var miter_len_sq = miter_limit * miter_limit;\n    }\n\n    // Texture Variables\n    var v_scale;\n    if (vindex.a_texcoord) {\n        v_scale = 1 / (style.texcoord_width * V_SCALE_ADJUST); // scales line texture as a ratio of the line's width\n    }\n\n    // Values that are constant for each line and are passed to helper functions\n    var context = {\n        closed_polygon,\n        remove_tile_edges,\n        tile_edge_tolerance,\n        miter_len_sq,\n        join_type,\n        cap_type,\n        vertex_data,\n        vertex_template,\n        half_width: style.width / 2,\n        extrude_index: vindex.a_extrude,\n        offset_index: vindex.a_offset,\n        v_scale,\n        texcoord_index: vindex.a_texcoord,\n        texcoord_width: style.texcoord_width,\n        offset: style.offset,\n        geom_count: 0\n    };\n\n    // Process lines\n    for (let i = 0; i < lines.length; i++) {\n        buildPolyline(lines[i], context);\n    }\n\n    // Process extra lines (which are created above if lines need to be mutated for easier processing)\n    if (context.extra_lines) {\n        for (let i = 0; i < context.extra_lines.length; i++) {\n            buildPolyline(context.extra_lines[i], context);\n        }\n    }\n\n    return context.geom_count;\n}\n\nfunction buildPolyline(line, context){\n    // Skip if line is not valid\n    if (line.length < 2) {\n        return;\n    }\n\n    var coordCurr, coordNext, normPrev, normNext;\n    var {join_type, cap_type, closed_polygon, remove_tile_edges, tile_edge_tolerance, v_scale, miter_len_sq} = context;\n    var has_texcoord = (context.texcoord_index != null);\n    var v = 0; // Texture v-coordinate\n\n    // Loop backwards through line to a tile boundary if found\n    // since you need to draw lines that are only partially inside the tile,\n    // so we start at the first index where it is safe to loop through to the last index within the tile\n    if (closed_polygon && join_type === JOIN_TYPE.miter) {\n        var boundaryIndex = getTileBoundaryIndex(line);\n        if (boundaryIndex !== 0) {\n            // create new line that is a cyclic permutation of the original\n            var permutedLine = permuteLine(line, boundaryIndex);\n            context.extra_lines = context.extra_lines || [];\n            context.extra_lines.push(permutedLine);\n            return;\n        }\n    }\n\n    var index_start = 0;\n    var index_end = line.length - 1;\n    var ignored_indices_count = 0;\n\n    // FIRST POINT\n    // loop through beginning points if duplicates\n    coordCurr = line[index_start];\n    coordNext = line[index_start + 1];\n    while (Vector.isEqual(coordCurr, coordNext)) {\n        index_start++;\n        coordCurr = coordNext;\n        coordNext = line[index_start + 1];\n        ignored_indices_count++;\n        if (index_start === line.length - 1) {\n            return;\n        }\n    }\n\n    // loop through ending points to check for duplicates\n    while (Vector.isEqual(line[index_end], line[index_end - 1])) {\n        index_end--;\n        ignored_indices_count++;\n        if (index_end === 0) {\n            return;\n        }\n    }\n\n    if (line.length < 2 + ignored_indices_count) {\n        return;\n    }\n\n    normNext = Vector.normalize(Vector.perp(coordCurr, coordNext));\n\n    // Skip tile boundary lines and append a new line if needed\n    if (remove_tile_edges && outsideTile(coordCurr, coordNext, tile_edge_tolerance)) {\n        var nonBoundarySegment = getNextNonBoundarySegment(line, index_start, tile_edge_tolerance);\n        if (nonBoundarySegment) {\n            context.extra_lines = context.extra_lines || [];\n            context.extra_lines.push(nonBoundarySegment);\n        }\n        return;\n    }\n\n    if (closed_polygon){\n        // Begin the polygon with a join (connecting the first and last segments)\n        normPrev = Vector.normalize(Vector.perp(line[index_end - 1], coordCurr));\n        startPolygon(coordCurr, normPrev, normNext, join_type, context);\n    }\n    else {\n        // If line begins at edge, don't add a cap\n        if (!isCoordOutsideTile(coordCurr)) {\n            addCap(coordCurr, v, normNext, cap_type, true, context);\n            if (has_texcoord && cap_type !== CAP_TYPE.butt) {\n                v += 0.5 * v_scale * context.texcoord_width;\n            }\n        }\n\n        // Add first pair of points for the line strip\n        addVertex(coordCurr, normNext, normNext, 1, v, context, 1);\n        addVertex(coordCurr, normNext, normNext, 0, v, context, -1);\n    }\n\n    // INTERMEDIARY POINTS\n    if (has_texcoord) {\n        v += v_scale * Vector.length(Vector.sub(coordNext, coordCurr));\n    }\n\n    for (var i = index_start + 1; i < index_end; i++) {\n        var currIndex = i;\n        var nextIndex = i + 1;\n        coordCurr = line[currIndex];\n        coordNext = line[nextIndex];\n\n        // Skip redundant vertices\n        if (Vector.isEqual(coordCurr, coordNext)) {\n            continue;\n        }\n\n        // Remove tile boundaries\n        if (remove_tile_edges && outsideTile(coordCurr, coordNext, tile_edge_tolerance)) {\n            addVertex(coordCurr, normNext, normNext, 1, v, context, 1);\n            addVertex(coordCurr, normNext, normNext, 0, v, context, -1);\n\n            indexPairs(1, context);\n\n            var nonBoundaryLines = getNextNonBoundarySegment(line, currIndex + 1, tile_edge_tolerance);\n            if (nonBoundaryLines) {\n                context.extra_lines = context.extra_lines || [];\n                context.extra_lines.push(nonBoundaryLines);\n            }\n            return;\n        }\n\n        normPrev = normNext;\n        normNext = Vector.normalize(Vector.perp(coordCurr, coordNext));\n\n        // Add join\n        if (join_type === JOIN_TYPE.miter) {\n            addMiter(v, coordCurr, normPrev, normNext, miter_len_sq, false, context);\n        }\n        else {\n            addJoin(join_type, v, coordCurr, normPrev, normNext, false, context);\n        }\n\n        if (has_texcoord) {\n            v += v_scale * Vector.length(Vector.sub(coordNext, coordCurr));\n        }\n    }\n\n    // LAST POINT\n    coordCurr = coordNext;\n    normPrev = normNext;\n\n    if (closed_polygon) {\n        // Close the polygon with a miter joint or butt cap if on a tile boundary\n        normNext = Vector.normalize(Vector.perp(coordCurr, line[1]));\n        endPolygon(coordCurr, normPrev, normNext, join_type, v, context);\n    }\n    else {\n        // Finish the line strip\n        addVertex(coordCurr, normPrev, normNext, 1, v, context, 1);\n        addVertex(coordCurr, normPrev, normNext, 0, v, context, -1);\n\n        indexPairs(1, context);\n\n        // If line ends at edge, don't add a cap\n        if (!isCoordOutsideTile(coordCurr)) {\n            addCap(coordCurr, v, normPrev, cap_type, false, context);\n        }\n    }\n\n}\n\nfunction getTileBoundaryIndex(line){\n    if (isCoordOutsideTile(line[0])) {\n        return 0;\n    }\n\n    for (var backIndex = 0; backIndex < line.length; backIndex++) {\n        var coordCurr = line[line.length - 1 - backIndex];\n        if (isCoordOutsideTile(coordCurr)) {\n            return line.length - 1 - backIndex;\n        }\n    }\n\n    return 0;\n}\n\n// Iterate through line from startIndex to find a segment not on a tile boundary, if any.\nfunction getNextNonBoundarySegment (line, startIndex, tolerance) {\n    var endIndex = startIndex;\n    while (line[endIndex + 1] && outsideTile(line[endIndex], line[endIndex + 1], tolerance)) {\n        endIndex++;\n    }\n\n    // If there is a line segment remaining that is within the tile, push it to the lines array\n    return (line.length - endIndex >= 2) ? line.slice(endIndex) : false;\n}\n\n// Begin a polygon with a join connecting to the last segment (if valid join-type specified)\nfunction startPolygon(coordCurr, normPrev, normNext, join_type, context){\n    // If polygon starts on a tile boundary, don't add a join\n    if (join_type === undefined || isCoordOutsideTile(coordCurr)) {\n        addVertex(coordCurr, normNext, normNext, 1, 0, context, 1);\n        addVertex(coordCurr, normNext, normNext, 0, 0, context, -1);\n    }\n    else {\n        // If polygon starts within a tile, add a join\n        var v = 0;\n        if (join_type === JOIN_TYPE.miter) {\n            addMiter(v, coordCurr, normPrev, normNext, context.miter_len_sq, true, context);\n        }\n        else {\n            addJoin(join_type, v, coordCurr, normPrev, normNext, true, context);\n        }\n    }\n}\n\n// End a polygon appropriately\nfunction endPolygon(coordCurr, normPrev, normNext, join_type, v, context) {\n    // If polygon ends on a tile boundary, don't add a join\n    if (isCoordOutsideTile(coordCurr)) {\n        addVertex(coordCurr, normPrev, normPrev, 1, v, context, 1);\n        addVertex(coordCurr, normPrev, normPrev, 0, v, context, -1);\n        indexPairs(1, context);\n    }\n    else {\n        // If polygon ends within a tile, add Miter or no joint (join added on startPolygon)\n        var miterVec = createMiterVec(normPrev, normNext);\n\n        if (join_type === JOIN_TYPE.miter && Vector.lengthSq(miterVec) > context.miter_len_sq) {\n            join_type = JOIN_TYPE.bevel; // switch to bevel\n        }\n\n        if (join_type === JOIN_TYPE.miter) {\n            addVertex(coordCurr, miterVec, normPrev, 1, v, context, 1);\n            addVertex(coordCurr, miterVec, normPrev, 0, v, context, -1);\n            indexPairs(1, context);\n        }\n        else {\n            addVertex(coordCurr, normPrev, normPrev, 1, v, context, 1);\n            addVertex(coordCurr, normPrev, normPrev, 0, v, context, -1);\n            indexPairs(1, context);\n        }\n    }\n}\n\nfunction createMiterVec(normPrev, normNext) {\n    var miterVec = Vector.normalize(Vector.add(normPrev, normNext));\n    var scale = 2 / (1 + Math.abs(Vector.dot(normPrev, miterVec)));\n    return Vector.mult(miterVec, scale * scale);\n}\n\n// Add a miter vector or a join if the miter is too sharp\nfunction addMiter (v, coordCurr, normPrev, normNext, miter_len_sq, isBeginning, context) {\n    var miterVec = createMiterVec(normPrev, normNext);\n\n    //  Miter limit: if miter join is too sharp, convert to bevel instead\n    if (Vector.lengthSq(miterVec) > miter_len_sq) {\n        addJoin(JOIN_TYPE.bevel, v, coordCurr, normPrev, normNext, isBeginning, context);\n    }\n    else {\n        addVertex(coordCurr, miterVec, miterVec, 1, v, context, 1);\n        addVertex(coordCurr, miterVec, miterVec, 0, v, context, -1);\n        if (!isBeginning) {\n            indexPairs(1, context);\n        }\n    }\n}\n\n// Add a bevel or round join\nfunction addJoin(join_type, v, coordCurr, normPrev, normNext, isBeginning, context) {\n    var miterVec = createMiterVec(normPrev, normNext);\n    var isClockwise = (normNext[0] * normPrev[1] - normNext[1] * normPrev[0] > 0);\n\n    if (context.texcoord_index != null) {\n        zero_v[1] = v;\n        one_v[1] = v;\n    }\n\n    if (isClockwise){\n        addVertex(coordCurr, miterVec, miterVec, 1, v, context, 1);\n        addVertex(coordCurr, normPrev, miterVec, 0, v, context, -1);\n\n        if (!isBeginning) {\n            indexPairs(1, context);\n        }\n\n        addFan(coordCurr,\n            // extrusion vector of first vertex\n            Vector.neg(normPrev),\n            // controls extrude distance of pivot vertex\n            miterVec,\n            // extrusion vector of last vertex\n            Vector.neg(normNext),\n            // line normal (unused here)\n            miterVec,\n            // uv coordinates\n            zero_v, one_v, zero_v,\n            false, (join_type === JOIN_TYPE.bevel), context\n        );\n\n        addVertex(coordCurr, miterVec, miterVec, 1, v, context, 1);\n        addVertex(coordCurr, normNext, miterVec, 0, v, context, -1);\n    } else {\n        addVertex(coordCurr, normPrev, miterVec, 1, v, context, 1);\n        addVertex(coordCurr, miterVec, miterVec, 0, v, context, -1);\n\n        if (!isBeginning) {\n            indexPairs(1, context);\n        }\n\n        addFan(coordCurr,\n            // extrusion vector of first vertex\n            normPrev,\n            // extrusion vector of pivot vertex\n            Vector.neg(miterVec),\n            // extrusion vector of last vertex\n            normNext,\n            // line normal for offset\n            miterVec,\n            // uv coordinates\n            one_v, zero_v, one_v,\n            false, (join_type === JOIN_TYPE.bevel), context\n        );\n\n        addVertex(coordCurr, normNext, miterVec, 1, v, context, 1);\n        addVertex(coordCurr, miterVec, miterVec, 0, v, context, -1);\n    }\n}\n\n// Add indices to vertex_elements\nfunction indexPairs(num_pairs, context){\n    var vertex_elements = context.vertex_data.vertex_elements;\n    var num_vertices = context.vertex_data.vertex_count;\n    var offset = num_vertices - 2 * num_pairs - 2;\n\n    for (var i = 0; i < num_pairs; i++){\n        vertex_elements.push(offset + 2 * i + 2);\n        vertex_elements.push(offset + 2 * i + 1);\n        vertex_elements.push(offset + 2 * i + 0);\n        vertex_elements.push(offset + 2 * i + 2);\n        vertex_elements.push(offset + 2 * i + 3);\n        vertex_elements.push(offset + 2 * i + 1);\n        context.geom_count += 2;\n    }\n}\n\nfunction addVertex(position, extrude, normal, u, v, context, flip) {\n    var vertex_template = context.vertex_template;\n    var vertex_data = context.vertex_data;\n\n    // set vertex position\n    vertex_template[0] = position[0];\n    vertex_template[1] = position[1];\n\n    // set line extrusion vector\n    let len = context.half_width * flip;\n    vertex_template[context.extrude_index + 0] = extrude[0] * len;\n    vertex_template[context.extrude_index + 1] = extrude[1] * len;\n\n    // set line offset vector\n    if (context.offset) {\n        vertex_template[context.offset_index + 0] = normal[0] * context.offset;\n        vertex_template[context.offset_index + 1] = normal[1] * context.offset;\n    }\n\n    // set UVs\n    if (context.texcoord_index != null) {\n        vertex_template[context.texcoord_index + 0] = u * TEXCOORD_NORMALIZE;\n        vertex_template[context.texcoord_index + 1] = v * TEXCOORD_NORMALIZE;\n    }\n\n    vertex_data.addVertex(vertex_template);\n}\n\n//  Tesselate a fan geometry between points A ----- B\n//  using their normals from a center p      \\ . . /\n//  and interpolating their UVs               \\ p /\n//                                             \\./\n//                                              C\nvar uvCurr = [0, 0];\n\nfunction addFan (coord, eA, eC, eB, normal, uvA, uvC, uvB, isCap, isBevel, context) {\n    // eA = extrusion vector of first outer vertex\n    // eC = extrusion vector of inner vertex\n    // eA, eC, eB = extrusion vectors\n    // normal = line normal for calculating cap offsets\n    // coord = center point p - vertex connecting two line segments\n\n    var cross = eA[0] * eB[1] - eA[1] * eB[0];\n    var dot = Vector.dot(eA, eB);\n\n    var angle = Math.atan2(cross, dot);\n    while (angle >= Math.PI) {\n        angle -= 2*Math.PI;\n    }\n\n    if (isBevel) {\n        numTriangles = 1;\n    } else {\n        // vary number of triangles in fan with angle (based on MIN_FAN_WIDTH)\n        var numTriangles = trianglesPerArc(angle, context.half_width);\n        if (numTriangles < 1) {\n            return;\n        }\n    }\n\n    var pivotIndex = context.vertex_data.vertex_count;\n    var vertex_elements = context.vertex_data.vertex_elements;\n    if (angle < 0) { // cw\n        addVertex(coord, eC, normal, uvC[0], uvC[1], context, 1);\n        addVertex(coord, eA, normal, uvA[0], uvA[1], context, 1);\n    } else { // ccw\n        addVertex(coord, eC, normal, uvC[0], uvC[1], context, 1);\n        addVertex(coord, eA, normal, uvA[0], uvA[1], context, 1);\n    }\n\n    var blade = eA;\n\n    var has_texcoord = (context.texcoord_index != null);\n    if (has_texcoord) {\n        if (isCap){\n            var affine_uvCurr = Vector.sub(uvA, uvC);\n        }\n        else {\n            uvCurr = Vector.copy(uvA);\n            var uv_delta = Vector.div(Vector.sub(uvB, uvA), numTriangles);\n        }\n    }\n\n    var angle_step = angle / numTriangles;\n    let flip = ((angle < 0) ? -1 : 1); // if angle < 0, is cw - set 'flip' flag\n\n    // add outside vertices in reverse order depending on sign of angle\n    let v1, v2;\n    if (cross > 0) {\n        v1 = 2;\n        v2 = 1;\n    }\n    else {\n        v1 = 1;\n        v2 = 2;\n    }\n\n    for (var i = 0; i < numTriangles; i++) {\n        if (i === 0 && angle < 0) {\n            // if ccw, flip the extrusion vector so offsets work properly\n            blade = Vector.neg(blade);\n        }\n\n        blade = Vector.rot(blade, angle_step);\n\n        if (has_texcoord) {\n            if (isCap){\n                // UV textures go \"through\" the cap\n                affine_uvCurr = Vector.rot(affine_uvCurr, angle_step);\n                uvCurr[0] = affine_uvCurr[0] + uvC[0];\n                uvCurr[1] = affine_uvCurr[1] * context.texcoord_width * context.v_scale + uvC[1]; // scale the v-coordinate\n            }\n            else {\n                // UV textures go \"around\" the join\n                uvCurr = Vector.add(uvCurr, uv_delta);\n            }\n        }\n\n        addVertex(coord, blade, normal, uvCurr[0], uvCurr[1], context, flip);\n\n        vertex_elements.push(pivotIndex + i + v1);\n        vertex_elements.push(pivotIndex);\n        vertex_elements.push(pivotIndex + i + v2);\n    }\n}\n\n//  Function to add the vertices needed for line caps,\n//  because to re-use the buffers they need to be at the end\nfunction addCap (coord, v, normal, type, isBeginning, context) {\n    var neg_normal = Vector.neg(normal);\n    var has_texcoord = (context.texcoord_index != null);\n\n    switch (type){\n    case CAP_TYPE.square:\n        var tangent;\n        // first vertex on the lineString\n        if (isBeginning){\n            tangent = [normal[1], -normal[0]];\n\n            addVertex(coord, Vector.add(normal, tangent), normal, 1, v, context, 1);\n            addVertex(coord, Vector.add(neg_normal, tangent), normal, 0, v, context, 1);\n\n            if (has_texcoord) {\n                // Add length of square cap to texture coordinate\n                v += 0.5 * context.texcoord_width * context.v_scale;\n            }\n\n            addVertex(coord, normal, normal, 1, v, context, 1);\n            addVertex(coord, neg_normal, normal, 0, v, context, 1);\n\n        }\n        // last vertex on the lineString\n        else {\n            tangent = [-normal[1], normal[0]];\n\n            addVertex(coord, normal, normal, 1, v, context, 1);\n            addVertex(coord, neg_normal, normal, 0, v, context, 1);\n\n            if (has_texcoord) {\n                // Add length of square cap to texture coordinate\n                v += 0.5 * context.texcoord_width * context.v_scale;\n            }\n\n            addVertex(coord, Vector.add(normal, tangent), normal, 1, v, context, 1);\n            addVertex(coord, Vector.add(neg_normal, tangent), normal, 0, v, context, 1);\n        }\n\n        indexPairs(1, context);\n        break;\n    case CAP_TYPE.round:\n        // default for end cap, beginning cap will overwrite below (this way we're always passing a non-null value,\n        // even if texture coords are disabled)\n        var uvA = zero_v, uvB = one_v, uvC = mid_v;\n        var nA, nB;\n\n        // first vertex on the lineString\n        if (isBeginning) {\n            nA = normal;\n            nB = neg_normal;\n\n            if (has_texcoord){\n                v += 0.5 * context.texcoord_width * context.v_scale;\n                uvA = one_v, uvB = zero_v, uvC = mid_v; // update cap UV order\n            }\n        }\n        // last vertex on the lineString - flip the direction of the cap\n        else {\n            nA = neg_normal;\n            nB = normal;\n        }\n\n        if (has_texcoord) {\n            zero_v[1] = v, one_v[1] = v, mid_v[1] = v; // update cap UV values\n        }\n\n        addFan(coord,\n            nA, zero_vec2, nB,  // extrusion normal\n            normal,             // line normal, for offsets\n            uvA, uvC, uvB,      // texture coords (ignored if disabled)\n            true, false, context\n        );\n\n        break;\n    case CAP_TYPE.butt:\n        return;\n    }\n}\n\n// Calculate number of triangles for a fan given an angle and line width\nfunction trianglesPerArc (angle, width) {\n    if (angle < 0) {\n        angle = -angle;\n    }\n\n    var numTriangles = (width > 2 * MIN_FAN_WIDTH) ? Math.log2(width / MIN_FAN_WIDTH) : 1;\n    return Math.ceil(angle / Math.PI * numTriangles);\n}\n\n// Cyclically permute closed line starting at an index\nfunction permuteLine(line, startIndex){\n    var newLine = [];\n    for (let i = 0; i < line.length; i++){\n        var index = (i + startIndex) % line.length;\n        // skip the first (repeated) index\n        if (index !== 0) {\n            newLine.push(line[index]);\n        }\n    }\n    newLine.push(newLine[0]);\n    return newLine;\n}\n","// Renders an array specifying a line pattern of alternating dashes and spaces,\n// similar to an SVG `dasharray` or Canvas setLineDash(), into a byte array of RGBA pixels\n// Returns:\n// {\n//    pixel: rendered image in Uint8Array buffer\n//    length: pixel length of rendered dash pattern (sum of all dashes and spaces)\n// }\n//\n// https://www.w3.org/TR/SVG/painting.html#StrokeDasharrayProperty\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray\n// https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash\n\nconst default_dash_color = [255, 255, 255, 255];\nconst default_background_color = [0, 0, 0, 0];\n\nexport default function renderDashArray (pattern, options = {}) {\n    const dash_pixel = options.dash_color || default_dash_color;\n    const background_color = options.background_color || default_background_color;\n    const dashes = pattern;\n    const scale = options.scale || 1;\n\n    // If pattern is odd, repeat it to make it even (see SVG spec)\n    if (dashes.length % 2 === 1) {\n        Array.prototype.push.apply(dashes, dashes);\n    }\n\n    let dash = true;\n    let pixels = [];\n    for (let i=0; i < dashes.length; i++) {\n        let segment = Math.floor(dashes[i] * scale);\n        for (let s=0; s < segment; s++) {\n            Array.prototype.push.apply(pixels, dash ? dash_pixel : background_color);\n        }\n        dash = !dash; // alternate between dashes and spaces\n    }\n\n    pixels.reverse(); // flip Y (GL textures are upside down)\n    pixels = new Uint8Array(pixels); // convert to typed array\n    const length = pixels.length / 4; // one RGBA byte sequences to one pixel\n\n    return { pixels, length };\n}\n","// Line rendering style\n\nimport log from '../../utils/log';\nimport {Style} from '../style';\nimport StyleParser from '../style_parser';\nimport gl from '../../gl/constants'; // web workers don't have access to GL context, so import all GL constants\nimport Texture from '../../gl/texture';\nimport VertexLayout from '../../gl/vertex_layout';\nimport {buildPolylines} from '../../builders/polylines';\nimport renderDashArray from './dasharray';\nimport Geo from '../../utils/geo';\n\nimport WorkerBroker from '../../utils/worker_broker';\nimport hashString from '../../utils/hash';\n\nimport polygons_vs from '../polygons/polygons_vertex.glsl';\nimport polygons_fs from '../polygons/polygons_fragment.glsl';\n\nexport const Lines = Object.create(Style);\n\nconst DASH_SCALE = 20; // adjustment factor for UV scale to for line dash patterns w/fractional pixel width\n\nObject.assign(Lines, {\n    name: 'lines',\n    built_in: true,\n    vertex_shader_src: polygons_vs,\n    fragment_shader_src: polygons_fs,\n    selection: true, // enable feature selection\n\n    init() {\n        Style.init.apply(this, arguments);\n\n        // Tell the shader we want a order in vertex attributes, and to extrude lines\n        this.defines.TANGRAM_EXTRUDE_LINES = true;\n        this.defines.TANGRAM_TEXTURE_COORDS = true; // texcoords attribute is set to static when not needed\n\n        // Additional single-allocated object used for holding outline style as it is processed\n        // Separate from this.feature_style so that outline properties do not overwrite calculated\n        // inline properties (outline call is made *within* the inline call)\n        this.outline_feature_style = {};\n        this.inline_feature_style = this.feature_style; // save reference to main computed style object\n\n        this.dash_textures = {}; // cache previously rendered line dash pattern textures\n    },\n\n    // Calculate width or offset at zoom given in `context`\n    calcDistance (prop, context) {\n        return StyleParser.evalCachedDistanceProperty(prop, context) || 0;\n    },\n\n    // Calculate width or offset at next zoom (used for zoom-based interpolation in shader)\n    calcDistanceNextZoom (prop, context) {\n        context.zoom++;\n        let val = this.calcDistance(prop, context);\n        context.zoom--;\n        return val;\n    },\n\n    // Calculate width at current and next zoom, and scaling factor between\n    calcWidth (draw, style, context) {\n        // line width in meters\n        let width = this.calcDistance(draw.width, context);\n        if (width < 0) {\n            return; // skip lines with negative width\n        }\n\n        let next_width;\n        if (draw.next_width) {\n            next_width = this.calcDistanceNextZoom(draw.next_width, context);\n        }\n        else {\n            next_width = width / 2; // when width is static, width at next zoom is just half as many tile units\n        }\n\n        if ((width === 0 && next_width === 0) || next_width < 0) {\n            return false; // skip lines that don't interpolate to a positive value at next zoom\n        }\n\n        // these values are saved for later calculating the outline width, which needs to add the base line's width\n        style.width_unscaled = width;\n        style.next_width_unscaled = next_width;\n\n        // calculate relative change in line width between zooms\n        // interpolate from the line width at the zoom mid-point, towards/away from the previous/next integer zoom\n        if (draw.next_width) {\n            next_width *= 2; // NB: a given width is twice as big in screen space at the next zoom\n            let mid_width = (width + next_width) * 0.5;\n            style.width = mid_width * context.units_per_meter_overzoom; // width at zoom mid-point\n            style.width_scale = 1 - (next_width / mid_width);\n        }\n        else {\n            style.width = width * context.units_per_meter_overzoom;\n            style.width_scale = 0;\n        }\n\n        // optional adjustment to texcoord width based on scale\n        if (draw.texcoords) {\n            // when drawing an outline, use the inline's texture scale\n            // (e.g. keeps dashed outline pattern locked to inline pattern)\n            if (draw.inline_texcoord_width) {\n                style.texcoord_width = draw.inline_texcoord_width;\n            }\n            // when drawing an inline, calculate UVs based on line width\n            else {\n                // UVs can't calc for zero-width, use next zoom width in that case\n                style.texcoord_width = (style.width_unscaled || style.next_width_unscaled) * context.units_per_meter_overzoom / context.tile.overzoom2; // shorten calcs\n            }\n        }\n\n        return true;\n    },\n\n    // Calculate offset at current and next zoom, and scaling factor between\n    calcOffset (draw, style, context) {\n        // Pre-calculated offset passed\n        // This happens when a line passes pre-computed offset values to its outline\n        if (draw.offset_precalc) {\n            style.offset = draw.offset_precalc;\n            style.offset_scale = draw.offset_scale_precalc;\n        }\n        // Offset to calculate\n        else if (draw.offset) {\n            let offset = this.calcDistance(draw.offset, context);\n\n            if (draw.next_offset) {\n                let next_offset = this.calcDistanceNextZoom(draw.next_offset, context) * 2;\n\n                if (Math.abs(offset) >= Math.abs(next_offset)) {\n                    style.offset = offset * context.units_per_meter_overzoom;\n                    if (offset !== 0) {\n                        style.offset_scale = 1 - (next_offset / offset);\n                    }\n                    else {\n                        style.offset_scale = 0;\n                    }\n                }\n                else {\n                    style.offset = next_offset * context.units_per_meter_overzoom;\n                    if (next_offset !== 0) {\n                        style.offset_scale = (1 - (offset / next_offset)) * -1;\n                    }\n                    else {\n                        style.offset_scale = 0;\n                    }\n                }\n            }\n            else {\n                style.offset = offset * context.units_per_meter_overzoom;\n                style.offset_scale = 0;\n            }\n        }\n        // No offset\n        else {\n            style.offset = 0;\n            style.offset_scale = 0;\n        }\n    },\n\n    _parseFeature (feature, draw, context) {\n        var style = this.feature_style;\n\n        // calculate line width at current and next zoom\n        if (this.calcWidth(draw, style, context) === false) {\n            return; // missing or zero width\n        }\n\n        // calculate line offset at current and next zoom\n        this.calcOffset(draw, style, context);\n\n        style.color = this.parseColor(draw.color, context);\n        if (!style.color) {\n            return;\n        }\n\n        style.alpha = StyleParser.evalCachedProperty(draw.alpha, context); // optional alpha override\n\n        style.variant = draw.variant; // pre-calculated mesh variant\n\n        // height defaults to feature height, but extrude style can dynamically adjust height by returning a number or array (instead of a boolean)\n        style.z = StyleParser.evalCachedDistanceProperty(draw.z, context) || StyleParser.defaults.z;\n        style.height = feature.properties.height || StyleParser.defaults.height;\n        style.extrude = StyleParser.evalProperty(draw.extrude, context);\n        if (style.extrude) {\n            if (typeof style.extrude === 'number') {\n                style.height = style.extrude;\n            }\n            else if (Array.isArray(style.extrude)) {\n                style.height = style.extrude[1];\n            }\n        }\n\n        // Raise line height if extruded\n        if (style.extrude && style.height) {\n            style.z += style.height;\n        }\n\n        style.z *= Geo.height_scale;        // provide sub-meter precision of height values\n\n        style.cap = draw.cap;\n        style.join = draw.join;\n\n        style.miter_limit = draw.miter_limit;\n        style.tile_edges = draw.tile_edges; // usually activated for debugging, or rare visualization needs\n\n        // Construct an outline style\n        // Reusable outline style object, marked as already wrapped in cache objects (preprocessed = true)\n        style.outline = style.outline || {\n            width: {}, next_width: {},\n            preprocessed: true\n        };\n\n        if (draw.outline && draw.outline.visible !== false && draw.outline.color && draw.outline.width) {\n            // outline width in meters\n            // NB: multiply by 2 because outline is applied on both sides of line\n            let outline_width = this.calcDistance(draw.outline.width, context) * 2;\n            let outline_next_width = this.calcDistanceNextZoom(draw.outline.next_width, context) * 2;\n\n            if ((outline_width === 0 && outline_next_width === 0) || outline_width < 0 || outline_next_width < 0) {\n                // skip lines that don't interpolate between zero or greater width\n                style.outline.width.value = null;\n                style.outline.next_width.value = null;\n                style.outline.color = null;\n                style.outline.inline_texcoord_width = null;\n                style.outline.texcoords = false;\n            }\n            else {\n                // Maintain consistent outline width around the line fill\n                style.outline.width.value = outline_width + style.width_unscaled;\n                style.outline.next_width.value = outline_next_width + style.next_width_unscaled;\n                style.outline.inline_texcoord_width = style.texcoord_width;\n\n                // Offset is directly copied from fill to outline, no need to re-calculate it\n                style.outline.offset_precalc = style.offset;\n                style.outline.offset_scale_precalc = style.offset_scale;\n\n                style.outline.color = draw.outline.color;\n                style.outline.alpha = draw.outline.alpha;\n                style.outline.interactive = draw.outline.interactive;\n                style.outline.cap = draw.outline.cap;\n                style.outline.join = draw.outline.join;\n                style.outline.miter_limit = draw.outline.miter_limit;\n                style.outline.texcoords = draw.outline.texcoords;\n                style.outline.extrude = draw.outline.extrude;\n                style.outline.z = draw.outline.z;\n                style.outline.style = draw.outline.style;\n                style.outline.variant = draw.outline.variant;\n\n                // Explicitly defined outline order, or inherited from inner line\n                if (draw.outline.order) {\n                    style.outline.order = this.parseOrder(draw.outline.order, context);\n                }\n                else {\n                    style.outline.order = style.order;\n                }\n\n                // Don't let outline be above inner line\n                if (style.outline.order > style.order) {\n                    style.outline.order = style.order;\n                }\n\n                // Outlines are always at half-layer intervals to avoid conflicting with inner lines\n                style.outline.order -= 0.5;\n            }\n        }\n        else {\n            style.outline.width.value = null;\n            style.outline.next_width.value = null;\n            style.outline.color = null;\n            style.outline.inline_texcoord_width = null;\n        }\n\n        return style;\n    },\n\n    _preprocess (draw) {\n        draw.color = StyleParser.createColorPropertyCache(draw.color);\n        draw.alpha = StyleParser.createPropertyCache(draw.alpha);\n        draw.width = StyleParser.createPropertyCache(draw.width, StyleParser.parseUnits);\n        if (draw.width && draw.width.type !== StyleParser.CACHE_TYPE.STATIC) {\n            draw.next_width = StyleParser.createPropertyCache(draw.width, StyleParser.parseUnits);\n        }\n        draw.offset = draw.offset && StyleParser.createPropertyCache(draw.offset, StyleParser.parseUnits);\n        if (draw.offset && draw.offset.type !== StyleParser.CACHE_TYPE.STATIC) {\n            draw.next_offset = StyleParser.createPropertyCache(draw.offset, StyleParser.parseUnits);\n        }\n        draw.z = StyleParser.createPropertyCache(draw.z, StyleParser.parseUnits);\n\n        draw.dash = (draw.dash !== undefined ? draw.dash : this.dash);\n        draw.dash_key = draw.dash && this.dashTextureKey(draw.dash);\n        draw.dash_background_color = (draw.dash_background_color !== undefined ? draw.dash_background_color : this.dash_background_color);\n        draw.dash_background_color = draw.dash_background_color && StyleParser.parseColor(draw.dash_background_color);\n        draw.texture_merged = draw.dash_key || ((draw.texture !== undefined ? draw.texture : this.texture));\n        draw.texcoords = ((this.texcoords || draw.texture_merged) ? 1 : 0);\n        this.computeVariant(draw);\n\n        if (draw.outline) {\n            draw.outline.is_outline = true; // mark as outline (so mesh variant can be adjusted for render order, etc.)\n            draw.outline.style = draw.outline.style || this.name;\n            draw.outline.color = StyleParser.createColorPropertyCache(draw.outline.color);\n            draw.outline.alpha = StyleParser.createPropertyCache(draw.outline.alpha);\n            draw.outline.width = StyleParser.createPropertyCache(draw.outline.width, StyleParser.parseUnits);\n            draw.outline.next_width = StyleParser.createPropertyCache(draw.outline.width, StyleParser.parseUnits); // width re-computed for next zoom\n\n            draw.outline.interactive = (draw.outline.interactive != null) ? draw.outline.interactive : draw.interactive;\n            draw.outline.cap = draw.outline.cap || draw.cap;\n            draw.outline.join = draw.outline.join || draw.join;\n            draw.outline.miter_limit = (draw.outline.miter_limit != null) ? draw.outline.miter_limit : draw.miter_limit;\n\n            // always apply inline values for offset and extrusion/height to outline\n            draw.outline.offset = draw.offset;\n            draw.outline.extrude = draw.extrude;\n            draw.outline.z = draw.z;\n\n            // outline inherits dash pattern, but NOT explicit texture\n            let outline_style = this.styles[draw.outline.style];\n            if (outline_style) {\n                draw.outline.dash = (draw.outline.dash !== undefined ? draw.outline.dash : outline_style.dash);\n                draw.outline.texture = (draw.outline.texture !== undefined ? draw.outline.texture : outline_style.texture);\n\n                if (draw.outline.dash != null) {            // dash was defined by outline draw or style\n                    draw.outline.dash_key = draw.outline.dash && this.dashTextureKey(draw.outline.dash);\n                    draw.outline.texture_merged = draw.outline.dash_key;\n                }\n                else if (draw.outline.dash === null) {      // dash explicitly disabled by outline draw or style\n                    draw.outline.dash_key = null;\n                    draw.outline.texture_merged = draw.outline.texture;\n                }\n                else if (draw.outline.texture != null) {    // texture was defined by outline draw or style\n                    draw.outline.dash_key = null; // outline explicitly turning off dash\n                    draw.outline.texture_merged = draw.outline.texture;\n                }\n                else {                                      // no dash or texture defined for outline, inherit parent dash\n                    draw.outline.dash = draw.dash;\n                    draw.outline.dash_key = draw.outline.dash && this.dashTextureKey(draw.outline.dash);\n                    draw.outline.texture_merged = draw.outline.dash_key;\n                }\n                draw.outline.dash_background_color = (draw.outline.dash_background_color !== undefined ? draw.outline.dash_background_color : outline_style.dash_background_color);\n                draw.outline.dash_background_color = (draw.outline.dash_background_color !== undefined ? draw.outline.dash_background_color : draw.dash_background_color);\n                draw.outline.dash_background_color = draw.outline.dash_background_color && StyleParser.parseColor(draw.outline.dash_background_color);\n                draw.outline.texcoords = ((outline_style.texcoords || draw.outline.texture_merged) ? 1 : 0);\n\n                // outline inherits draw blend order from parent inline, unless explicitly turned off with null\n                if (draw.outline.blend_order === undefined && draw.blend_order != null) {\n                    draw.outline.blend_order = draw.blend_order;\n                }\n\n                outline_style.computeVariant(draw.outline);\n            }\n            else {\n                log({ level: 'warn', once: true }, `Layer group '${draw.layers.join(', ')}': ` +\n                    `line 'outline' specifies non-existent draw style '${draw.outline.style}' (or maybe the style is ` +\n                    'defined but is missing a \\'base\\' or has another error), skipping outlines for features matching this layer group');\n                draw.outline = null;\n            }\n        }\n        return draw;\n    },\n\n    // Unique string key for a dash pattern (used as texture name)\n    dashTextureKey (dash) {\n        return '__dash_' + JSON.stringify(dash);\n    },\n\n    // Return or render a dash pattern texture\n    getDashTexture (dash) {\n        let dash_key = this.dashTextureKey(dash);\n\n        if (this.dash_textures[dash_key] == null) {\n            this.dash_textures[dash_key] = true;\n            // Render line pattern\n            const dash_texture = renderDashArray(dash, { scale: DASH_SCALE });\n            Texture.create(this.gl, dash_key, {\n                data: dash_texture.pixels,\n                height: dash_texture.length,\n                width: 1,\n                filtering: 'nearest'\n            });\n        }\n    },\n\n    // Override\n    async endData (tile) {\n        const tile_data = await Style.endData.call(this, tile);\n        if (tile_data) {\n            tile_data.uniforms.u_has_line_texture = false;\n            tile_data.uniforms.u_texture = Texture.default;\n            tile_data.uniforms.u_v_scale_adjust = Geo.tile_scale;\n\n            let pending = [];\n            for (let m in tile_data.meshes) {\n                let variant = tile_data.meshes[m].variant;\n                if (variant.texture) {\n                    let uniforms = tile_data.meshes[m].uniforms = tile_data.meshes[m].uniforms || {};\n                    uniforms.u_has_line_texture = true;\n                    uniforms.u_texture = variant.texture;\n                    uniforms.u_texture_ratio = 1;\n\n                    if (variant.dash) {\n                        uniforms.u_v_scale_adjust = Geo.tile_scale * DASH_SCALE;\n                        uniforms.u_has_dash = (variant.dash_background_color != null ? 1 : 0);\n                        uniforms.u_dash_background_color = variant.dash_background_color || [0, 0, 0, 0];\n                    }\n\n                    if (variant.dash_key && this.dash_textures[variant.dash_key] == null) {\n                        this.dash_textures[variant.dash_key] = true;\n                        try {\n                            await WorkerBroker.postMessage(this.main_thread_target+'.getDashTexture', variant.dash);\n                        }\n                        catch (e) {\n                            log('trace', `${this.name}: line dash texture create failed because style no longer on main thread`);\n                        }\n                    }\n\n                    if (Texture.textures[variant.texture] == null) {\n                        pending.push(\n                            Texture.syncTexturesToWorker([variant.texture]).then(textures => {\n                                let texture = textures[variant.texture];\n                                if (texture) {\n                                    uniforms.u_texture_ratio = texture.height / texture.width;\n                                }\n                            })\n                        );\n                    }\n                    else {\n                        let texture = Texture.textures[variant.texture];\n                        uniforms.u_texture_ratio = texture.height / texture.width;\n                    }\n                }\n            }\n            await Promise.all(pending);\n        }\n        return tile_data;\n    },\n\n    // Calculate and store mesh variant (unique by draw group but not feature)\n    computeVariant (draw) {\n        // Factors that determine a unique mesh rendering variant\n        let key = (draw.offset ? 1 : 0); // whether feature has a line offset\n        key += '/' + draw.texcoords; // whether feature has texture UVs\n        key += '/' + (draw.interactive ? 1 : 0); // whether feature has interactivity\n        key += '/' + ((draw.extrude || draw.z) ? 1 : 0); // whether feature has a z coordinate\n        key += '/' + draw.is_outline; // whether this is an outline of a line feature\n\n        if (draw.dash_key) { // whether feature has a line dash pattern\n            key += draw.dash_key;\n            if (draw.dash_background_color) {\n                key += draw.dash_background_color;\n            }\n        }\n\n        if (draw.texture_merged) { // whether feature has a line texture\n            key += draw.texture_merged;\n        }\n\n        const blend_order = this.getBlendOrderForDraw(draw);\n        key += '/' + blend_order;\n\n        // Create unique key\n        key = hashString(key);\n        draw.variant = key;\n\n        if (this.variants[key] == null) {\n            this.variants[key] = {\n                key,\n                blend_order,\n                mesh_order: (draw.is_outline ? 0 : 1), // outlines should be drawn first, so inline is on top\n                selection: (draw.interactive ? 1 : 0),\n                offset: (draw.offset ? 1 : 0),\n                z_or_offset: ((draw.offset || draw.extrude || draw.z) ? 1 : 0),\n                texcoords: draw.texcoords,\n                texture: draw.texture_merged,\n                dash: draw.dash,\n                dash_key: draw.dash_key,\n                dash_background_color: draw.dash_background_color\n            };\n        }\n    },\n\n    // Override\n    // Create or return desired vertex layout permutation based on flags\n    vertexLayoutForMeshVariant (variant) {\n        if (this.vertex_layouts[variant.key] == null) {\n            // Attributes for this mesh variant\n            // Optional attributes have placeholder values assigned with `static` parameter\n            const attribs = [\n                { name: 'a_position', size: 4, type: gl.SHORT, normalized: false },\n                { name: 'a_extrude', size: 2, type: gl.SHORT, normalized: false },\n                { name: 'a_offset', size: 2, type: gl.SHORT, normalized: false, static: (variant.offset ? null : [0, 0]) },\n                { name: 'a_z_and_offset_scale', size: 2, type: gl.SHORT, normalized: false, static: (variant.z_or_offset ? null : [0, 0]) },\n                { name: 'a_texcoord', size: 2, type: gl.UNSIGNED_SHORT, normalized: true, static: (variant.texcoords ? null : [0, 0]) },\n                { name: 'a_color', size: 4, type: gl.UNSIGNED_BYTE, normalized: true },\n                { name: 'a_selection_color', size: 4, type: gl.UNSIGNED_BYTE, normalized: true, static: (variant.selection ? null : [0, 0, 0, 0]) }\n            ];\n\n            this.addCustomAttributesToAttributeList(attribs);\n            this.vertex_layouts[variant.key] = new VertexLayout(attribs);\n        }\n        return this.vertex_layouts[variant.key];\n    },\n\n    // Override\n    meshVariantTypeForDraw (draw) {\n        return this.variants[draw.variant]; // return pre-calculated mesh variant\n    },\n\n    /**\n     * A \"template\" that sets constant attibutes for each vertex, which is then modified per vertex or per feature.\n     * A plain JS array matching the order of the vertex layout.\n     */\n    makeVertexTemplate(style, mesh) {\n        let i = 0;\n\n        // a_position.xy - vertex position\n        // a_position.z - line width scaling factor\n        // a_position.w - layer order\n        this.vertex_template[i++] = 0;\n        this.vertex_template[i++] = 0;\n        this.vertex_template[i++] = style.width_scale * 1024;\n        this.vertex_template[i++] = this.scaleOrder(style.order);\n\n        // a_extrude.xy - extrusion vector (vertex extrusion away from center of line)\n        this.vertex_template[i++] = 0;\n        this.vertex_template[i++] = 0;\n\n        // a_offset.xy - normal vector\n        // offset can be static or dynamic depending on style\n        if (mesh.variant.offset) {\n            this.vertex_template[i++] = 0;\n            this.vertex_template[i++] = 0;\n        }\n\n        // a_z_and_offset_scale.xy\n        if (mesh.variant.z_or_offset) {\n            this.vertex_template[i++] = style.z || 0; // feature z position\n            this.vertex_template[i++] = style.offset_scale * 1024; // line offset scaling factor\n        }\n\n        // a_texcoord.uv - texture coordinates\n        if (mesh.variant.texcoords) {\n            this.vertex_template[i++] = 0;\n            this.vertex_template[i++] = 0;\n        }\n\n        // a_color.rgba - feature color\n        this.vertex_template[i++] = style.color[0] * 255;\n        this.vertex_template[i++] = style.color[1] * 255;\n        this.vertex_template[i++] = style.color[2] * 255;\n        this.vertex_template[i++] = (style.alpha != null ? style.alpha : style.color[3]) * 255;\n\n        // a_selection_color.rgba - selection color\n        if (mesh.variant.selection) {\n            this.vertex_template[i++] = style.selection_color[0] * 255;\n            this.vertex_template[i++] = style.selection_color[1] * 255;\n            this.vertex_template[i++] = style.selection_color[2] * 255;\n            this.vertex_template[i++] = style.selection_color[3] * 255;\n        }\n\n        this.addCustomAttributesToVertexTemplate(style, i);\n        return this.vertex_template;\n    },\n\n    buildLines(lines, style, context, options) {\n        // Outline (build first so that blended geometry without a depth test is drawn first/under the inner line)\n        this.feature_style = this.outline_feature_style; // swap in outline-specific style holder\n        if (style.outline && style.outline.color != null && style.outline.width.value != null) {\n            var outline_style = this.styles[style.outline.style];\n            if (outline_style) {\n                outline_style.addFeature(context.feature, style.outline, context);\n            }\n        }\n\n        // Main line\n        this.feature_style = this.inline_feature_style; // restore calculated style for inline\n        let mesh = this.getTileMesh(context.tile, this.meshVariantTypeForDraw(style));\n        let vertex_data = mesh.vertex_data;\n        let vertex_layout = vertex_data.vertex_layout;\n        let vertex_template = this.makeVertexTemplate(style, mesh);\n        return buildPolylines(\n            lines,\n            style,\n            vertex_data,\n            vertex_template,\n            vertex_layout.index,\n            (options && options.closed_polygon), // closed_polygon\n            (!style.tile_edges && options && options.remove_tile_edges), // remove_tile_edges\n            (Geo.tile_scale * context.tile.pad_scale * 2) // tile_edge_tolerance\n        );\n    },\n\n    buildPolygons(polygons, style, context) {\n        // Render polygons as individual lines\n        let geom_count = 0;\n        for (let p=0; p < polygons.length; p++) {\n            geom_count += this.buildLines(polygons[p], style, context, { closed_polygon: true, remove_tile_edges: true });\n        }\n        return geom_count;\n    }\n\n});\n","// Point builders\nimport { default_uvs } from './common';\n\n// Scaling values to encode fractional values with fixed-point integer attributes\nconst pre_angles_normalize = 128 / Math.PI;\nconst angles_normalize = 16384 / Math.PI;\nconst offsets_normalize = 64;\nconst texcoord_normalize = 65535;\nconst size_normalize = 128; // width/height are 8.8 fixed-point, but are halved (so multiply by 128 instead of 256)\n\n// These index values map a 4-element vertex position counter from this pattern (used for size and UVs):\n//  [min_x, min_y, max_x, max_y]\n// to this pattern:\n//  [min_x, min_y],\n//  [max_x, min_y],\n//  [max_x, max_y],\n//  [min_x, max_y]\nconst ix = [0, 2, 2, 0];\nconst iy = [1, 1, 3, 3];\nconst shape = new Array(4); // single, reusable allocation\n\n// Build a billboard sprite quad centered on a point. Sprites are intended to be drawn in screenspace, and have\n// properties for width, height, angle, and texture UVs. Curved label segment sprites have additional properties\n// for interpolating their position and angle across zooms.\nexport function buildQuadForPoint (\n    point,\n    vertex_data,\n    vertex_template,\n    vindex,\n    size,\n    offset,\n    offsets,\n    pre_angles,\n    angle,\n    angles,\n    texcoords,\n    curve) {\n\n    // Half-sized point dimensions in fixed point\n    const w2 = size[0] * size_normalize;\n    const h2 = size[1] * size_normalize;\n    shape[0] = -w2;\n    shape[1] = -h2;\n    shape[2] = w2;\n    shape[3] = h2;\n\n    const uvs = texcoords || default_uvs;\n\n    const vertex_elements = vertex_data.vertex_elements;\n    let element_offset = vertex_data.vertex_count;\n\n    for (let p=0; p < 4; p++) {\n        vertex_template[vindex.a_position + 0] = point[0];\n        vertex_template[vindex.a_position + 1] = point[1];\n\n        vertex_template[vindex.a_shape + 0] = shape[ix[p]];\n        vertex_template[vindex.a_shape + 1] = shape[iy[p]];\n        vertex_template[vindex.a_shape + 2] = angle;\n\n        vertex_template[vindex.a_offset + 0] = offset[0];\n        vertex_template[vindex.a_offset + 1] = offset[1];\n\n        // Add texcoords\n        if (vindex.a_texcoord) {\n            vertex_template[vindex.a_texcoord + 0] = uvs[ix[p]] * texcoord_normalize;\n            vertex_template[vindex.a_texcoord + 1] = uvs[iy[p]] * texcoord_normalize;\n        }\n\n        // Add curved label segment props\n        if (curve) {\n            // 1 byte (signed) range: [-127, 128]\n            // actual range: [-2pi, 2pi]\n            // total: multiply by 128 / (2 PI)\n            vertex_template[vindex.a_pre_angles + 0] = pre_angles_normalize * pre_angles[0];\n            vertex_template[vindex.a_pre_angles + 1] = pre_angles_normalize * pre_angles[1];\n            vertex_template[vindex.a_pre_angles + 2] = pre_angles_normalize * pre_angles[2];\n            vertex_template[vindex.a_pre_angles + 3] = pre_angles_normalize * pre_angles[3];\n\n            // 2 byte (signed) of resolution [-32767, 32768]\n            // actual range: [-2pi, 2pi]\n            // total: multiply by 32768 / (2 PI) = 16384 / PI\n            vertex_template[vindex.a_angles + 0] = angles_normalize * angles[0];\n            vertex_template[vindex.a_angles + 1] = angles_normalize * angles[1];\n            vertex_template[vindex.a_angles + 2] = angles_normalize * angles[2];\n            vertex_template[vindex.a_angles + 3] = angles_normalize * angles[3];\n\n            // offset range can be [0, 65535]\n            // actual range: [0, 1024]\n            vertex_template[vindex.a_offsets + 0] = offsets_normalize * offsets[0];\n            vertex_template[vindex.a_offsets + 1] = offsets_normalize * offsets[1];\n            vertex_template[vindex.a_offsets + 2] = offsets_normalize * offsets[2];\n            vertex_template[vindex.a_offsets + 3] = offsets_normalize * offsets[3];\n        }\n\n        vertex_data.addVertex(vertex_template);\n    }\n\n    vertex_elements.push(element_offset + 0);\n    vertex_elements.push(element_offset + 1);\n    vertex_elements.push(element_offset + 2);\n    vertex_elements.push(element_offset + 2);\n    vertex_elements.push(element_offset + 3);\n    vertex_elements.push(element_offset + 0);\n\n    return 2; // geom count is always two triangles, for one quad\n}\n","// Sets of values to match for directional and corner anchors\nconst lefts = ['left', 'top-left', 'bottom-left'];\nconst rights = ['right', 'top-right', 'bottom-right'];\nconst tops = ['top', 'top-left', 'top-right'];\nconst bottoms = ['bottom', 'bottom-left', 'bottom-right'];\n\nconst PointAnchor = {\n\n    computeOffset (offset, size, anchor, buffer = null) {\n        if (!anchor || anchor === 'center') {\n            return offset;\n        }\n\n        let offset2 = [offset[0], offset[1]];\n        buffer = buffer || this.default_buffer;\n\n        // An optional left/right offset\n        if (this.isLeftAnchor(anchor)) {\n            offset2[0] -= size[0] / 2;\n            if (anchor === 'left') {\n                offset2[0] -= buffer[0];\n            }\n        }\n        else if (this.isRightAnchor(anchor)) {\n            offset2[0] += size[0] / 2;\n            if (anchor === 'right') {\n                offset2[0] += buffer[1];\n            }\n        }\n\n        // An optional top/bottom offset\n        if (this.isTopAnchor(anchor)) {\n            offset2[1] -= size[1] / 2;\n            if (anchor === 'top') {\n                offset2[1] -= buffer[2];\n            }\n        }\n        else if (this.isBottomAnchor(anchor)) {\n            offset2[1] += size[1] / 2;\n            if (anchor === 'bottom') {\n                offset2[1] += buffer[3];\n            }\n        }\n\n        return offset2;\n    },\n\n    alignForAnchor (anchor) {\n        if (anchor && anchor !== 'center') {\n            if (this.isLeftAnchor(anchor)) {\n                return 'right';\n            }\n            else if (this.isRightAnchor(anchor)) {\n                return 'left';\n            }\n        }\n        return 'center';\n    },\n\n    isLeftAnchor (anchor) {\n        return (lefts.indexOf(anchor) > -1);\n    },\n\n    isRightAnchor (anchor) {\n        return (rights.indexOf(anchor) > -1);\n    },\n\n    isTopAnchor (anchor) {\n        return (tops.indexOf(anchor) > -1);\n    },\n\n    isBottomAnchor (anchor) {\n        return (bottoms.indexOf(anchor) > -1);\n    },\n\n    // Buffers: [left, right, top, bottom]\n    default_buffer: [2.5, 2.5, 1.5, 0.75],\n    zero_buffer: [0, 0, 0, 0]\n\n};\n\nexport default PointAnchor;\n","\n// Do AABB `a` and `b` intersect?\nexport function boxIntersectsBox (a, b) {\n    if (a[2] < b[0] || // a is left of b\n        a[0] > b[2] || // a is right of b\n        a[3] < b[1] || // a is above b\n        a[1] > b[3]) { // a is below b\n        return false;\n    }\n    return true; // boxes overlap\n}\n\n// Does AABB `a` intersect any of the AABBs in array `boxes`?\n// Invokes `callback` with index of intersecting box\n// Stops intersecting if `callback` returns non-null value (continues otherwise)\nexport function boxIntersectsList (a, boxes, callback) {\n    for (let i=0; i < boxes.length; i++) {\n        if (boxIntersectsBox(a, boxes[i])) {\n            if (callback(i) != null) {\n                break;\n            }\n        }\n    }\n}\n","import Vector from './vector';\n\n// single-allocation, reusable objects\nconst ZERO_AXES = [[1, 0], [0, 1]];\nconst proj_a = [], proj_b = [];\nlet d0, d1, d2, d3;\n\nexport default class OBB {\n\n    constructor (x, y, a, w, h) {\n        this.dimension = [w / 2, h / 2]; // store half-dimension as that's what's needed in calculations below\n        this.angle = a;\n        this.centroid = [x, y];\n        this.quad = null;\n        this.axis_0 = null;\n        this.axis_1 = null;\n\n        this.update();\n    }\n\n    toJSON () {\n        return {\n            x: this.centroid[0],\n            y: this.centroid[1],\n            a: this.angle,\n            w: this.dimension[0],\n            h: this.dimension[1]\n        };\n    }\n\n    getExtent () {\n        // special handling to skip calculations for 0-angle\n        if (this.angle === 0) {\n            return [\n                this.quad[0], this.quad[1], // lower-left\n                this.quad[4], this.quad[5]  // upper-right\n            ];\n        }\n\n        let aabb = [\n            Math.min(this.quad[0], this.quad[2], this.quad[4], this.quad[6]), // min x\n            Math.min(this.quad[1], this.quad[3], this.quad[5], this.quad[7]), // min y\n            Math.max(this.quad[0], this.quad[2], this.quad[4], this.quad[6]), // max x\n            Math.max(this.quad[1], this.quad[3], this.quad[5], this.quad[7])  // max y\n        ];\n\n        return aabb;\n    }\n\n    updateAxes () {\n        // upper-left to upper-right\n        this.axis_0 = Vector.normalize([this.quad[4] - this.quad[6], this.quad[5] - this.quad[7]]);\n\n        // lower-right to upper-right\n        this.axis_1 = Vector.normalize([this.quad[4] - this.quad[2], this.quad[5] - this.quad[3]]);\n    }\n\n    update () {\n        const c = this.centroid;\n        const w2 = this.dimension[0];\n        const h2 = this.dimension[1];\n\n        // special handling to skip calculations for 0-angle\n        if (this.angle === 0) {\n            // quad is a flat array storing 4 [x, y] vectors\n            this.quad = [\n                c[0] - w2, c[1] - h2, // lower-left\n                c[0] + w2, c[1] - h2, // lower-right\n                c[0] + w2, c[1] + h2, // upper-right\n                c[0] - w2, c[1] + h2  // upper-left\n            ];\n\n            this.axis_0 = ZERO_AXES[0];\n            this.axis_1 = ZERO_AXES[1];\n        }\n        // calculate axes and enclosing quad\n        else {\n            let x0 = Math.cos(this.angle) * w2;\n            let x1 = Math.sin(this.angle) * w2;\n\n            let y0 = -Math.sin(this.angle) * h2;\n            let y1 = Math.cos(this.angle) * h2;\n\n            // quad is a flat array storing 4 [x, y] vectors\n            this.quad = [\n                c[0] - x0 - y0, c[1] - x1 - y1, // lower-left\n                c[0] + x0 - y0, c[1] + x1 - y1, // lower-right\n                c[0] + x0 + y0, c[1] + x1 + y1, // upper-right\n                c[0] - x0 + y0, c[1] - x1 + y1  // upper-left\n            ];\n\n            this.updateAxes();\n        }\n    }\n\n    static projectToAxis (obb, axis, proj) {\n        // for each axis, project obb quad to it and find min and max values\n        let quad = obb.quad;\n        d0 = quad[0] * axis[0] + quad[1] * axis[1];\n        d1 = quad[2] * axis[0] + quad[3] * axis[1];\n        d2 = quad[4] * axis[0] + quad[5] * axis[1];\n        d3 = quad[6] * axis[0] + quad[7] * axis[1];\n\n        proj[0] = Math.min(d0, d1, d2, d3);\n        proj[1] = Math.max(d0, d1, d2, d3);\n        return proj;\n    }\n\n    static axisCollide(obb_a, obb_b, axis_0, axis_1) {\n        OBB.projectToAxis(obb_a, axis_0, proj_a);\n        OBB.projectToAxis(obb_b, axis_0, proj_b);\n        if (proj_b[0] > proj_a[1] || proj_b[1] < proj_a[0]) {\n            return false;\n        }\n\n        OBB.projectToAxis(obb_a, axis_1, proj_a);\n        OBB.projectToAxis(obb_b, axis_1, proj_b);\n        if (proj_b[0] > proj_a[1] || proj_b[1] < proj_a[0]) {\n            return false;\n        }\n\n        return true;\n    }\n\n    static intersect(obb_a, obb_b) {\n        return OBB.axisCollide(obb_a, obb_b, obb_a.axis_0, obb_a.axis_1) &&\n               OBB.axisCollide(obb_a, obb_b, obb_b.axis_0, obb_b.axis_1);\n    }\n\n}\n","import PointAnchor from './point_anchor';\nimport {boxIntersectsList} from './intersect';\nimport OBB from '../utils/obb';\nimport Geo from '../utils/geo';\n// import log from '../utils/log';\n\nexport default class Label {\n\n    constructor (size, layout = {}) {\n        this.id = Label.nextLabelId();\n        this.type = ''; // set by subclass\n        this.size = size;\n        this.layout = layout;\n        this.position = null;\n        this.angle = 0;\n        this.anchor = Array.isArray(this.layout.anchor) ? this.layout.anchor[0] : this.layout.anchor; // initial anchor\n        this.placed = null;\n        this.offset = layout.offset;\n        this.unit_scale = this.layout.units_per_pixel;\n        this.aabb = null;\n        this.obb = null;\n        this.align = 'center';\n        this.throw_away = false;    // if label does not fit (exceeds tile boundary, etc) this boolean will be true\n    }\n\n    // Minimal representation of label\n    toJSON () {\n        return {\n            id: this.id,\n            type: this.type,\n            obb: this.obb.toJSON(),\n            position: this.position,\n            angle: this.angle,\n            size: this.size,\n            offset: this.offset,\n            breach: this.breach,\n            may_repeat_across_tiles: this.may_repeat_across_tiles,\n            layout: textLayoutToJSON(this.layout)\n        };\n    }\n\n    update () {\n        this.align = this.layout.align || PointAnchor.alignForAnchor(this.anchor);\n    }\n\n    // check for overlaps with other labels in the tile\n    occluded (bboxes, exclude = null) {\n        let intersect = false;\n        let aabbs = bboxes.aabb;\n        let obbs = bboxes.obb;\n\n        // Broad phase\n        if (aabbs.length > 0) {\n            boxIntersectsList(this.aabb, aabbs, (j) => {\n                // log('trace', 'collision: broad phase collide', this.layout.id, this, this.aabb, aabbs[j]);\n\n                // Skip if colliding with excluded label\n                if (exclude && aabbs[j] === exclude.aabb) {\n                    // log('trace', 'collision: skipping due to explicit exclusion', this, exclude);\n                    return;\n                }\n\n                // Skip narrow phase collision if no rotation\n                if (this.obb.angle === 0 && obbs[j].angle === 0) {\n                    // log('trace', 'collision: skip narrow phase collide because neither is rotated', this.layout.id, this, this.obb, obbs[j]);\n                    intersect = true;\n                    return true;\n                }\n\n                // Narrow phase\n                if (OBB.intersect(this.obb, obbs[j])) {\n                    // log('trace', 'collision: narrow phase collide', this.layout.id, this, this.obb, obbs[j]);\n                    intersect = true;\n                    return true;\n                }\n            });\n        }\n        return intersect;\n    }\n\n    // checks whether the label is within the tile boundaries\n    inTileBounds () {\n        if ((this.aabb[0] >= 0 && this.aabb[1] > -Geo.tile_scale && this.aabb[0] < Geo.tile_scale && this.aabb[1] <= 0) ||\n            (this.aabb[2] >= 0 && this.aabb[3] > -Geo.tile_scale && this.aabb[2] < Geo.tile_scale && this.aabb[3] <= 0)) {\n            return true;\n        }\n        return false;\n    }\n\n    // some labels need further repeat culling checks on the main thread\n    // checks whether the label is within its repeat distance of the tile boundaries\n    mayRepeatAcrossTiles () {\n        if (this.layout.collide) {\n            return true; // additional collision pass will already apply, so skip further distance checks\n        }\n\n        const dist = this.layout.repeat_distance;\n        if (dist === 0) {\n            return false;\n        }\n\n        return (Math.abs(this.position[0]) < dist ||  Math.abs(this.position[0] - Geo.tile_scale) < dist) ||\n               (Math.abs(this.position[1]) < dist ||  Math.abs(-(this.position[1] - Geo.tile_scale)) < dist);\n    }\n\n    // Whether the label should be discarded\n    // Depends on whether label must fit in the tile bounds, and if so, can it be moved to fit there\n    discard(bboxes, exclude = null) {\n        if (this.throw_away) {\n            return true;\n        }\n        return this.occluded(bboxes, exclude);\n    }\n}\n\n// Generic label placement function, adds a label's bounding boxes to the currently placed set\n//  Supports single or multiple collision boxes\nLabel.add = function (label, bboxes) {\n    label.placed = true;\n\n    if (label.aabb) {\n        bboxes.aabb.push(label.aabb);\n        bboxes.obb.push(label.obb);\n    }\n\n    if (label.aabbs) {\n        for (let i = 0; i < label.aabbs.length; i++) {\n            bboxes.aabb.push(label.aabbs[i]);\n            bboxes.obb.push(label.obbs[i]);\n        }\n    }\n};\n\nLabel.id = 0;\nLabel.id_prefix = 0; // id prefix scoped to worker thread\nLabel.id_multiplier = 0; // multiplier to keep label ids distinct across threads\n\nLabel.nextLabelId = function () {\n    return Label.id_prefix + ((Label.id++) * Label.id_multiplier);\n};\n\nLabel.epsilon = 0.9999; // tolerance around collision boxes, prevent perfectly adjacent objects from colliding\n\n// Minimal representation of text layout, sent to main thread for label collisions\nexport function textLayoutToJSON (layout) {\n    return {\n        priority: layout.priority,\n        collide: layout.collide,\n        repeat_distance: layout.repeat_distance,\n        repeat_group: layout.repeat_group,\n        buffer: layout.buffer,\n        italic: layout.italic // affects bounding box size\n    };\n}\n","export default class RepeatGroup {\n\n    constructor (key, repeat_dist) {\n        this.key = key;\n        this.repeat_dist = repeat_dist;\n        this.repeat_dist_sq = this.repeat_dist * this.repeat_dist;\n        this.positions = [];\n    }\n\n    // Check an object to see if it's a repeat in this group\n    check (obj) {\n        // Check distance from new object to objects already in group\n        let p1 = obj.position;\n        for (let i=0; i < this.positions.length; i++) {\n            let p2 = this.positions[i];\n            let dx = p1[0] - p2[0];\n            let dy = p1[1] - p2[1];\n            let dist_sq = dx * dx + dy * dy;\n\n            // Found an existing object within allowed distance\n            if (dist_sq < this.repeat_dist_sq) {\n                return true;\n            }\n        }\n    }\n\n    // Add object to this group\n    add (obj) {\n        // only store object's position, to save space / prevent unnecessary references\n        if (obj && obj.position) {\n            this.positions.push(obj.position);\n        }\n    }\n\n    // Static methods are used to manage repeat groups, within and across tiles\n\n    // Reset all groups for this tile\n    static clear (tile) {\n        this.groups[tile] = {};\n    }\n\n    // Check an object to see if it's a repeat within its designated group\n    static check (obj, layout, tile) {\n        if (layout.repeat_distance && layout.repeat_group && this.groups[tile][layout.repeat_group]) {\n            return this.groups[tile][layout.repeat_group].check(obj);\n        }\n    }\n\n    // Add an object to its designated group\n    static add (obj, layout, tile) {\n        if (layout.repeat_distance && layout.repeat_group) {\n            if (this.groups[tile][layout.repeat_group] == null) {\n                this.groups[tile][layout.repeat_group] = new RepeatGroup(layout.repeat_group, layout.repeat_distance * layout.repeat_scale);\n            }\n            this.groups[tile][layout.repeat_group].add(obj);\n        }\n    }\n\n}\n\n// Current set of repeat groups, grouped and keyed by tile\nRepeatGroup.groups = {};\n","export default class CollisionGrid {\n    constructor (anchor, span) {\n        this.anchor = anchor;\n        this.span = span;\n        this.cells = {};\n    }\n\n    addLabel (label) {\n        if (label.aabb) {\n            this.addLabelBboxes(label, label.aabb);\n        }\n\n        if (label.aabbs) {\n            label.aabbs.forEach(aabb => this.addLabelBboxes(label, aabb));\n        }\n    }\n\n    addLabelBboxes (label, aabb) {\n        // min/max cells that the label falls into\n        // keep grid coordinates at zero or above so any labels that go \"below\" the anchor are in the lowest grid cell\n        const cell_bounds = [\n            Math.max(Math.floor((aabb[0] - this.anchor.x) / this.span), 0),\n            Math.max(Math.floor(-(aabb[1] - this.anchor.y) / this.span), 0),\n            Math.max(Math.floor((aabb[2] - this.anchor.x) / this.span), 0),\n            Math.max(Math.floor(-(aabb[3] - this.anchor.y) / this.span), 0)\n        ];\n\n        label.cells = []; // label knows which cells it falls in\n\n        // initialize each grid cell as necessary, and add to label's list of cells\n        for (let gy = cell_bounds[1]; gy <= cell_bounds[3]; gy++) {\n            this.cells[gy] = this.cells[gy] || {};\n            for (let gx = cell_bounds[0]; gx <= cell_bounds[2]; gx++) {\n                this.cells[gy][gx] = this.cells[gy][gx] || { aabb: [], obb: [] };\n                label.cells.push(this.cells[gy][gx]);\n            }\n        }\n    }\n\n}\n","import Label from './label';\nimport RepeatGroup from './repeat_group';\nimport CollisionGrid from './collision_grid';\nimport log from '../utils/log';\n\nconst Collision = {\n\n    tiles: {},\n    grid: null, // no collision grid by default\n\n    initGrid (options) {\n        if (options == null) {\n            this.grid = null;\n        }\n        else {\n            this.grid = new CollisionGrid(options.anchor, options.span);\n        }\n    },\n\n    startTile (tile, { apply_repeat_groups = true, return_hidden = false } = {}) {\n        let state = this.tiles[tile] = {\n            bboxes: {           // current set of placed bounding boxes\n                aabb: [],\n                obb: []\n            },\n            objects: {},        // objects to collide, grouped by priority, then by style\n            labels: {},         // objects post-collision, grouped by style, marked as show/hide\n            styles: {},         // styles contributing collision objects\n            repeat: apply_repeat_groups,\n            return_hidden\n        };\n\n        // Promise resolved when all registered styles have added objects\n        if (state.complete == null) {\n            state.complete = new Promise((resolve, reject) => {\n                state.resolve = resolve;\n                state.reject = reject;\n            });\n        }\n    },\n\n    resetTile (tile) {\n        delete this.tiles[tile];\n    },\n\n    abortTile (tile) {\n        if (this.tiles[tile] && this.tiles[tile].resolve) {\n            this.tiles[tile].resolve([]);\n        }\n        this.resetTile(tile);\n    },\n\n    // Add a style to the pending set, collision will block on all styles submitting to collision set\n    addStyle (style, tile) {\n        this.tiles[tile].styles[style] = true;\n    },\n\n    // Add collision objects for a style\n    collide (objects, style, tile) {\n        let state = this.tiles[tile];\n        if (!state) {\n            log('trace', 'Collision.collide() called with null tile', tile, this.tiles, style, objects);\n            return Promise.resolve([]);\n        }\n\n        // Group by priority and style\n        let tile_objects = state.objects;\n        for (let i=0; i < objects.length; i++) {\n            let obj = objects[i];\n            let priority = obj.label.layout.priority;\n            tile_objects[priority] = tile_objects[priority] || {};\n            tile_objects[priority][style] = tile_objects[priority][style] || [];\n            tile_objects[priority][style].push(obj);\n        }\n\n        // Remove from pending style set, if no more styles, do collision & finish tile\n        delete state.styles[style];\n        if (Object.keys(state.styles).length === 0) {\n            this.endTile(tile);\n        }\n\n        // Wait for objects to be added from all styles\n        return state.complete.then(() => {\n            state.resolve = null;\n            return state.labels[style] || [];\n        });\n    },\n\n    // Test labels for collisions, higher to lower priority\n    // When two collide, hide the lower-priority label\n    endTile (tile) {\n        let state = this.tiles[tile];\n        let labels = state.labels;\n\n        if (this.grid) {\n            this.addLabelsToGrid(tile);\n        }\n\n        if (state.repeat) {\n            RepeatGroup.clear(tile);\n        }\n\n        // Process labels by priority, then by style\n        let priorities = Object.keys(state.objects).sort((a, b) => a - b);\n        for (let p=0; p < priorities.length; p++) {\n            let style_objects = state.objects[priorities[p]];\n            if (!style_objects) { // no labels at this priority, skip to next\n                continue;\n            }\n\n            // For each style\n            for (let style in style_objects) {\n                let objects = style_objects[style];\n                labels[style] = labels[style] || [];\n\n                for (let i = 0; i < objects.length; i++) {\n                    let object = objects[i];\n                    if (this.canBePlaced(object, tile, object.linked, state)) {\n                        // show object if it isn't dependent on a parent object\n                        if (!object.linked) {\n                            object.show = true;\n                            labels[style].push(object);\n                            this.place(object, tile, state);\n                        }\n                        // If object is dependent on a parent, only show if both can be placed\n                        else if (this.canBePlaced(object.linked, tile, object, state)) {\n                            object.show = true;\n\n                            // If a label is breach, its linked label should be considered breach as well\n                            // (this keeps linked labels (in)visible in tandem)\n                            if (object.label.breach || object.linked.label.breach) {\n                                object.label.breach = true;\n                                object.linked.label.breach = true;\n                            }\n\n                            // Similarly for labels that need main thread repeat culling, keep linked labels in sync\n                            if (object.label.may_repeat_across_tiles || object.linked.label.may_repeat_across_tiles) {\n                                object.label.may_repeat_across_tiles = true;\n                                object.linked.label.may_repeat_across_tiles = true;\n                            }\n\n                            labels[style].push(object);\n                            this.place(object, tile, state);\n                            this.place(object.linked, tile, state);\n                        }\n                        else if (state.return_hidden) {\n                            object.show = false;\n                            labels[style].push(object);\n                        }\n                    }\n                    else if (state.return_hidden) {\n                        object.show = false;\n                        labels[style].push(object);\n                    }\n                }\n            }\n        }\n\n        delete this.tiles[tile];\n        state.resolve();\n    },\n\n    addLabelsToGrid (tile_id) {\n        // Process labels by priority, then by style\n        const tile = this.tiles[tile_id];\n        for (const priority in tile.objects) {\n            const style_objects = tile.objects[priority];\n            if (!style_objects) { // no labels at this priority, skip to next\n                continue;\n            }\n\n            // For each style\n            for (const style in style_objects) {\n                const objects = style_objects[style];\n                objects.forEach(object => this.grid.addLabel(object.label));\n            }\n        }\n    },\n\n    // Run collision and repeat check to see if label can currently be placed\n    canBePlaced (object, tile, exclude = null, { repeat = true } = {}) {\n        let label = object.label;\n        let layout = object.label.layout;\n\n        // Skip if already processed (e.g. by parent object)\n        if (label.placed != null) {\n            return label.placed;\n        }\n\n        let placeable = !layout.collide;\n        if (!placeable) {\n            // Test the label for intersections with other labels\n            if (this.grid && label.cells) {\n                // test label candidate against labels placed in each grid cell\n                placeable = label.cells.reduce((keep, cell) => {\n                    if (keep && label.discard(cell, exclude && exclude.label)) {\n                        keep = false;\n                    }\n                    return keep;\n                }, true);\n            }\n            else {\n                placeable = !label.discard(this.tiles[tile].bboxes, exclude && exclude.label);\n            }\n        }\n\n        if (placeable) {\n            // repeat culling with nearby labels\n            if (repeat && RepeatGroup.check(label, layout, tile)) {\n                label.placed = false;\n            }\n            else {\n                return true;\n            }\n        }\n        else if (layout.collide) {\n            // log('trace', `hide label '${label.text}' due to collision`);\n            label.placed = false;\n        }\n        return label.placed;\n    },\n\n    // Place label\n    place ({ label }, tile, { repeat = true }) {\n        // Skip if already processed (e.g. by parent object)\n        if (label.placed != null) {\n            return;\n        }\n\n        // Register as placed for future collision and repeat culling\n        if (repeat) {\n            RepeatGroup.add(label, label.layout, tile);\n        }\n\n        if (this.grid && label.cells) {\n            label.cells.forEach(cell => Label.add(label, cell));\n        }\n        else {\n            Label.add(label, this.tiles[tile].bboxes);\n        }\n    }\n\n};\n\nexport default Collision;\n","import Label from './label';\nimport PointAnchor from './point_anchor';\nimport OBB from '../utils/obb';\nimport StyleParser from '../styles/style_parser';\n\nexport default class LabelPoint extends Label {\n\n    constructor (position, size, layout, angle = 0) {\n        super(size, layout);\n        this.type = 'point';\n        this.position = [position[0], position[1]];\n        this.angle = angle;\n        this.parent = this.layout.parent;\n        this.update();\n\n        this.start_anchor_index = 1;\n        this.degenerate = !this.size[0] && !this.size[1] && !this.layout.buffer[0] && !this.layout.buffer[1];\n        this.throw_away = false;\n    }\n\n    update() {\n        super.update();\n        this.computeOffset();\n        this.updateBBoxes();\n    }\n\n    computeOffset () {\n        this.offset = [this.layout.offset[0], this.layout.offset[1]];\n\n        // Additional anchor/offset for point:\n        if (this.parent) {\n            let parent = this.parent;\n            // point's own anchor, text anchor applied to point, additional point offset\n            this.offset = PointAnchor.computeOffset(this.offset, parent.size, parent.anchor, PointAnchor.zero_buffer);\n            this.offset = PointAnchor.computeOffset(this.offset, parent.size, this.anchor, PointAnchor.zero_buffer);\n            if (parent.offset !== StyleParser.zeroPair) {        // point has an offset\n                if (this.offset === StyleParser.zeroPair) {      // no text offset, use point's\n                    this.offset = parent.offset;\n                }\n                else {                                           // text has offset, add point's\n                    this.offset[0] += parent.offset[0];\n                    this.offset[1] += parent.offset[1];\n                }\n            }\n        }\n\n        this.offset = PointAnchor.computeOffset(this.offset, this.size, this.anchor);\n    }\n\n    updateBBoxes () {\n        let width = (this.size[0] + this.layout.buffer[0] * 2) * this.unit_scale * Label.epsilon;\n        let height = (this.size[1] + this.layout.buffer[1] * 2) * this.unit_scale * Label.epsilon;\n\n        // fudge width value as text may overflow bounding box if it has italic, bold, etc style\n        if (this.layout.italic) {\n            width += 5 * this.unit_scale;\n        }\n\n        // make bounding boxes\n        this.obb = new OBB(\n            this.position[0] + (this.offset[0] * this.unit_scale),\n            this.position[1] - (this.offset[1] * this.unit_scale),\n            -this.angle, // angle is negative because tile system y axis is pointing down\n            width,\n            height\n        );\n        this.aabb = this.obb.getExtent();\n\n        if (this.inTileBounds) {\n            this.breach = !this.inTileBounds();\n        }\n\n        if (this.mayRepeatAcrossTiles) {\n            this.may_repeat_across_tiles = this.mayRepeatAcrossTiles();\n        }\n    }\n\n    discard (bboxes, exclude = null) {\n        if (this.degenerate) {\n            return false;\n        }\n\n        if (super.discard(bboxes, exclude)) {\n            // If more than one anchor specified, try them in order\n            if (Array.isArray(this.layout.anchor)) {\n                // Start on second anchor (first anchor was set on creation)\n                for (let i=this.start_anchor_index; i < this.layout.anchor.length; i++) {\n                    this.anchor = this.layout.anchor[i];\n                    this.update();\n\n                    if (!super.discard(bboxes, exclude)) {\n                        return false;\n                    }\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n\n}\n\n// Placement strategies\nLabelPoint.PLACEMENT = {\n    VERTEX: 0,          // place labels at endpoints of line segments\n    MIDPOINT: 1,        // place labels at midpoints of line segments\n    SPACED: 2,          // place labels equally spaced along line\n    CENTROID: 3         // place labels at center of polygons\n};\n","// Logic for placing point labels along a line geometry\n\nimport LabelPoint from './label_point';\nimport {isCoordOutsideTile} from '../builders/common';\n\nconst PLACEMENT = LabelPoint.PLACEMENT;\nconst default_spacing = 80; // spacing of points along line in pixels\n\nexport default function placePointsOnLine (line, size, layout) {\n    const labels = [];\n    const strategy = layout.placement;\n    const min_length = Math.max(size[0], size[1]) * layout.placement_min_length_ratio * layout.units_per_pixel;\n\n    if (strategy === PLACEMENT.SPACED) {\n        let result = getPositionsAndAngles(line, min_length, layout);\n        // false will be returned if line have no length\n        if (!result) {\n            return [];\n        }\n\n        let positions = result.positions;\n        let angles = result.angles;\n        for (let i = 0; i < positions.length; i++) {\n            let position = positions[i];\n            let angle = angles[i];\n            if (layout.tile_edges === true || !isCoordOutsideTile(position)) {\n                labels.push(new LabelPoint(position, size, layout, angle));\n            }\n        }\n    }\n    else if (strategy === PLACEMENT.VERTEX) {\n        let p, q;\n        for (let i = 0; i < line.length - 1; i++) {\n            p = line[i];\n            q = line[i + 1];\n            if (layout.tile_edges === true || !isCoordOutsideTile(p)) {\n                const angle = getAngle(p, q, layout.angle);\n                labels.push(new LabelPoint(p, size, layout, angle));\n            }\n        }\n\n        // add last endpoint\n        const angle = getAngle(p, q, layout.angle);\n        labels.push(new LabelPoint(q, size, layout, angle));\n    }\n    else if (strategy === PLACEMENT.MIDPOINT) {\n        for (let i = 0; i < line.length - 1; i++) {\n            let p = line[i];\n            let q = line[i + 1];\n            let position = [\n                0.5 * (p[0] + q[0]),\n                0.5 * (p[1] + q[1])\n            ];\n            if (layout.tile_edges === true || !isCoordOutsideTile(position)) {\n                if (!min_length || norm(p, q) > min_length) {\n                    const angle = getAngle(p, q, layout.angle);\n                    labels.push(new LabelPoint(position, size, layout, angle));\n                }\n            }\n        }\n    }\n    return labels;\n}\n\nfunction getPositionsAndAngles(line, min_length, layout) {\n    let upp = layout.units_per_pixel;\n    let spacing = (layout.placement_spacing || default_spacing) * upp;\n\n    let length = getLineLength(line);\n    if (length <= min_length) {\n        return false;\n    }\n\n    let num_labels = Math.max(Math.floor(length / spacing), 1);\n    let remainder = length - (num_labels - 1) * spacing;\n    let positions = [];\n    let angles = [];\n\n    let distance = 0.5 * remainder;\n    for (let i = 0; i < num_labels; i++) {\n        let {position, angle} = interpolateLine(line, distance, min_length, layout);\n        if (position != null && angle != null) {\n            positions.push(position);\n            angles.push(angle);\n        }\n        distance += spacing;\n    }\n\n    return {positions, angles};\n}\n\nfunction getAngle(p, q, angle = 0) {\n    return (angle === 'auto') ? Math.atan2(q[0] - p[0], q[1] - p[1]) : angle;\n}\n\nfunction getLineLength(line) {\n    let distance = 0;\n    for (let i = 0; i < line.length - 1; i++) {\n        distance += norm(line[i], line[i+1]);\n    }\n    return distance;\n}\n\nfunction norm(p, q) {\n    return Math.sqrt(Math.pow(p[0] - q[0], 2) + Math.pow(p[1] - q[1], 2));\n}\n\n// TODO: can be optimized.\n// you don't have to start from the first index every time for placement\nfunction interpolateLine(line, distance, min_length, layout) {\n    let sum = 0;\n    let position, angle;\n    for (let i = 0; i < line.length-1; i++) {\n        let p = line[i];\n        let q = line[i+1];\n\n        const length = norm(p, q);\n        if (length <= min_length) {\n            continue;\n        }\n\n        sum += length;\n\n        if (sum > distance) {\n            position = interpolateSegment(p, q, sum - distance);\n            angle = getAngle(p, q, layout.angle);\n            break;\n        }\n    }\n    return {position, angle};\n}\n\nfunction interpolateSegment(p, q, distance) {\n    let length = norm(p, q);\n    let ratio = distance / length;\n    return [\n        ratio * p[0] + (1 - ratio) * q[0],\n        ratio * p[1] + (1 - ratio) * q[1]\n    ];\n}\n","import Utils from '../../utils/utils';\nimport StyleParser from '../style_parser';\n\nconst TextSettings = {\n\n    // A key for grouping all labels of the same text style (e.g. same Canvas state, to minimize state changes)\n    key (settings) {\n        return [\n            settings.style,\n            settings.weight,\n            settings.family,\n            settings.px_size,\n            settings.fill,\n            settings.stroke,\n            settings.stroke_width,\n            settings.underline_width,\n            settings.background_color,\n            settings.background_width,\n            settings.background_stroke_color,\n            settings.background_stroke_width,\n            settings.transform,\n            settings.text_wrap,\n            settings.max_lines,\n            settings.supersample,\n            Utils.device_pixel_ratio\n        ].join('/');\n    },\n\n    defaults: {\n        style: 'normal',\n        weight: 'normal',\n        size: '12px',\n        px_size: 12,\n        family: 'Helvetica',\n        fill: [1, 1, 1, 1],\n        text_wrap: 15,\n        max_lines: 5,\n        align: 'center'\n    },\n\n    compute (draw, context) {\n        const style = {};\n\n        draw.font = draw.font || this.defaults;\n\n        style.supersample = draw.supersample_text ? 1.5 : 1; // optionally render text at 150% to improve clarity\n\n        // LineString labels can articulate while point labels cannot. Needed for future texture coordinate calculations.\n        style.can_articulate = draw.can_articulate;\n\n        // Text fill\n        style.fill = StyleParser.evalCachedColorPropertyWithAlpha(draw.font.fill, draw.font.alpha, context);\n        style.fill = Utils.toCSSColor(style.fill); // convert to CSS for Canvas\n\n        // Text stroke\n        if (draw.font.stroke && draw.font.stroke.color) {\n            style.stroke = StyleParser.evalCachedColorPropertyWithAlpha(draw.font.stroke.color, draw.font.stroke.alpha, context);\n            style.stroke = Utils.toCSSColor(style.stroke); // convert to CSS for Canvas\n            style.stroke_width = StyleParser.evalCachedProperty(draw.font.stroke.width, context);\n        }\n\n        // Text underline\n        if (draw.font.underline === true && !style.can_articulate) {\n            style.underline_width = 1.5 * style.supersample;\n        }\n\n        // Background box\n        if (draw.font.background && !style.can_articulate) { // supported for point labels only\n            // Background fill\n            style.background_color = StyleParser.evalCachedColorPropertyWithAlpha(draw.font.background.color, draw.font.background.alpha, context);\n            style.background_color = Utils.toCSSColor(style.background_color); // convert to CSS for Canvas\n            if (style.background_color) {\n                style.background_width = StyleParser.evalCachedProperty(draw.font.background.width, context);\n            }\n\n            // Background stroke\n            style.background_stroke_color =\n                draw.font.background.stroke &&\n                draw.font.background.stroke.color &&\n            StyleParser.evalCachedColorPropertyWithAlpha(draw.font.background.stroke.color, draw.font.background.stroke.alpha, context);\n            if (style.background_stroke_color) {\n                style.background_stroke_color = Utils.toCSSColor(style.background_stroke_color); // convert to CSS for Canvas\n\n                // default background stroke to 1px when stroke color but no stroke width specified\n                style.background_stroke_width = draw.font.background.stroke.width != null ?\n                    StyleParser.evalCachedProperty(draw.font.background.stroke.width, context) : 1;\n            }\n        }\n\n        // Font properties are modeled after CSS names:\n        // - family: Helvetica, Futura, etc.\n        // - size: in pt, px, or em\n        // - style: normal, italic, oblique\n        // - weight: normal, bold, etc.\n        // - transform: capitalize, uppercase, lowercase\n\n        // clamp weight to 1-1000 (see https://drafts.csswg.org/css-fonts-4/#valdef-font-weight-number)\n        style.weight = StyleParser.evalCachedProperty(draw.font.weight, context) || this.defaults.weight;\n        if (typeof style.weight === 'number') {\n            style.weight = Math.min(Math.max(style.weight, 1), 1000);\n        }\n\n        if (draw.font.family) {\n            style.family = draw.font.family;\n            if (style.family !== this.defaults.family) {\n                style.family += ', ' + this.defaults.family;\n            }\n        }\n        else {\n            style.family = this.defaults.family;\n        }\n\n        style.style = draw.font.style || this.defaults.style;\n        style.transform = draw.font.transform;\n\n        // calculated pixel size\n        style.px_size = StyleParser.evalCachedProperty(draw.font.px_size, context) * style.supersample;\n\n        style.font_css = this.fontCSS(style);\n\n        // Word wrap and text alignment\n        // Not a font properties, but affect atlas of unique text textures\n        let text_wrap = draw.text_wrap; // use explicitly set value\n\n        if (text_wrap == null && !style.can_articulate) {\n            // point labels (for point and polygon features) have word wrap on w/default max length,\n            // line labels default off\n            text_wrap = true;\n        }\n\n        // setting to 'true' causes default wrap value to be used\n        if (text_wrap === true) {\n            text_wrap = this.defaults.text_wrap;\n        }\n        style.text_wrap = text_wrap;\n\n        // max_lines setting to truncate very long labels with an ellipsis\n        style.max_lines = draw.max_lines || this.defaults.max_lines;\n\n        return style;\n    },\n\n    // Build CSS-style font string (to set Canvas draw state)\n    fontCSS ({ style, weight, px_size, family }) {\n        return [style, weight, px_size + 'px', family]\n            .filter(x => x) // remove null props\n            .join(' ');\n    }\n\n};\n\nexport default TextSettings;\n","(function(){function m(a,b){document.addEventListener?a.addEventListener(\"scroll\",b,!1):a.attachEvent(\"scroll\",b)}function n(a){document.body?a():document.addEventListener?document.addEventListener(\"DOMContentLoaded\",function c(){document.removeEventListener(\"DOMContentLoaded\",c);a()}):document.attachEvent(\"onreadystatechange\",function l(){if(\"interactive\"==document.readyState||\"complete\"==document.readyState)document.detachEvent(\"onreadystatechange\",l),a()})};function t(a){this.a=document.createElement(\"div\");this.a.setAttribute(\"aria-hidden\",\"true\");this.a.appendChild(document.createTextNode(a));this.b=document.createElement(\"span\");this.c=document.createElement(\"span\");this.h=document.createElement(\"span\");this.f=document.createElement(\"span\");this.g=-1;this.b.style.cssText=\"max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;\";this.c.style.cssText=\"max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;\";\nthis.f.style.cssText=\"max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;\";this.h.style.cssText=\"display:inline-block;width:200%;height:200%;font-size:16px;max-width:none;\";this.b.appendChild(this.h);this.c.appendChild(this.f);this.a.appendChild(this.b);this.a.appendChild(this.c)}\nfunction x(a,b){a.a.style.cssText=\"max-width:none;min-width:20px;min-height:20px;display:inline-block;overflow:hidden;position:absolute;width:auto;margin:0;padding:0;top:-999px;left:-999px;white-space:nowrap;font:\"+b+\";\"}function y(a){var b=a.a.offsetWidth,c=b+100;a.f.style.width=c+\"px\";a.c.scrollLeft=c;a.b.scrollLeft=a.b.scrollWidth+100;return a.g!==b?(a.g=b,!0):!1}function z(a,b){function c(){var a=l;y(a)&&a.a.parentNode&&b(a.g)}var l=a;m(a.b,c);m(a.c,c);y(a)};function A(a,b){var c=b||{};this.family=a;this.style=c.style||\"normal\";this.weight=c.weight||\"normal\";this.stretch=c.stretch||\"normal\"}var B=null,C=null,E=null,F=null;function I(){if(null===E){var a=document.createElement(\"div\");try{a.style.font=\"condensed 100px sans-serif\"}catch(b){}E=\"\"!==a.style.font}return E}function J(a,b){return[a.style,a.weight,I()?a.stretch:\"\",\"100px\",b].join(\" \")}\nA.prototype.load=function(a,b){var c=this,l=a||\"BESbswy\",r=0,D=b||3E3,G=(new Date).getTime();return new Promise(function(a,b){var e;null===F&&(F=!!document.fonts);if(e=F)null===C&&(C=/OS X.*Version\\/10\\..*Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor)),e=!C;if(e){e=new Promise(function(a,b){function f(){(new Date).getTime()-G>=D?b():document.fonts.load(J(c,'\"'+c.family+'\"'),l).then(function(c){1<=c.length?a():setTimeout(f,25)},function(){b()})}f()});var K=new Promise(function(a,\nc){r=setTimeout(c,D)});Promise.race([K,e]).then(function(){clearTimeout(r);a(c)},function(){b(c)})}else n(function(){function e(){var b;if(b=-1!=g&&-1!=h||-1!=g&&-1!=k||-1!=h&&-1!=k)(b=g!=h&&g!=k&&h!=k)||(null===B&&(b=/AppleWebKit\\/([0-9]+)(?:\\.([0-9]+))/.exec(window.navigator.userAgent),B=!!b&&(536>parseInt(b[1],10)||536===parseInt(b[1],10)&&11>=parseInt(b[2],10))),b=B&&(g==u&&h==u&&k==u||g==v&&h==v&&k==v||g==w&&h==w&&k==w)),b=!b;b&&(d.parentNode&&d.parentNode.removeChild(d),clearTimeout(r),a(c))}\nfunction H(){if((new Date).getTime()-G>=D)d.parentNode&&d.parentNode.removeChild(d),b(c);else{var a=document.hidden;if(!0===a||void 0===a)g=f.a.offsetWidth,h=p.a.offsetWidth,k=q.a.offsetWidth,e();r=setTimeout(H,50)}}var f=new t(l),p=new t(l),q=new t(l),g=-1,h=-1,k=-1,u=-1,v=-1,w=-1,d=document.createElement(\"div\");d.dir=\"ltr\";x(f,J(c,\"sans-serif\"));x(p,J(c,\"serif\"));x(q,J(c,\"monospace\"));d.appendChild(f.a);d.appendChild(p.a);d.appendChild(q.a);document.body.appendChild(d);u=f.a.offsetWidth;v=p.a.offsetWidth;\nw=q.a.offsetWidth;H();z(f,function(a){g=a;e()});x(f,J(c,'\"'+c.family+'\",sans-serif'));z(p,function(a){h=a;e()});x(p,J(c,'\"'+c.family+'\",serif'));z(q,function(a){k=a;e()});x(q,J(c,'\"'+c.family+'\",monospace'))})})};\"undefined\"!==typeof module?module.exports=A:(window.FontFaceObserver=A,window.FontFaceObserver.prototype.load=A.prototype.load);}());\n","import log from '../../utils/log';\nimport Utils from '../../utils/utils';\nimport FontFaceObserver from 'fontfaceobserver';\n\nconst FontManager = {\n\n    // Font detection\n    fonts_loaded: Promise.resolve(), // resolves when all requested fonts have been detected\n    last_loaded: null,               // tracks last set of fonts loaded\n\n    // Load set of custom font faces\n    // `fonts` is an object where the key is a font family name, and the value is one or more font face\n    // definitions. The value can be either a single object, or an array of such objects.\n    // If the special string value 'external' is used, it indicates the the font will be loaded via external CSS.\n    loadFonts (fonts) {\n        const same = (JSON.stringify(fonts) === this.last_loaded);\n        if (fonts && !same) {\n            const queue = [];\n            for (const family in fonts) {\n                if (Array.isArray(fonts[family])) {\n                    fonts[family].forEach(face => queue.push(this.loadFontFace(family, face)));\n                }\n                else {\n                    queue.push(this.loadFontFace(family, fonts[family]));\n                }\n            }\n\n            this.last_loaded = JSON.stringify(fonts);\n            this.fonts_loaded = Promise.all(queue.filter(x => x));\n        }\n        return this.fonts_loaded;\n    },\n\n    // Load a single font face\n    // `face` contains the font face definition, with optional parameters for `weight`, `style`, and `url`.\n    // If the `url` is defined, the font is injected into the document as a CSS font-face.\n    // If the object's value is the special string 'external', or if no `url` is defined, then the font face\n    // is assumed is assumed to been loaded via external CSS. In either case, the function returns a promise\n    // that resolves when the font face has loaded, or times out.\n    async loadFontFace (family, face) {\n        if (face == null || (typeof face !== 'object' && face !== 'external')) {\n            return;\n        }\n\n        const options = { family };\n\n        if (typeof face === 'object') {\n            Object.assign(options, face);\n\n            // If URL is defined, inject font into document\n            if (typeof face.url === 'string') {\n                await this.injectFontFace(options);\n            }\n        }\n\n        // Wait for font to load\n        try {\n            // FontFaceObserver does not directly support variable fonts syntax, which allows for ranges,\n            // e.g. `font-weight: 100 800`. FontFaceObserver will insert the entire string value into a\n            // CSS `font` shorthand property, causing an error. To get around this, we simply take the first\n            // value, because as soon as one variant of the variable font is available, they all should be.\n            // See https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Fonts/Variable_Fonts_Guide\n            options.weight = typeof options.weight === 'string' ? options.weight.split(' ')[0] : options.weight;\n            const observer = new FontFaceObserver(family, options);\n            await observer.load();\n            // Promise resolves, font is available\n            log('debug', `Font face '${family}' is available`, options);\n        }\n        catch (e) {\n            // Promise rejects, font is not available\n            log('warn', `Font face '${family}' is NOT available`, options, e);\n        }\n    },\n\n    // Loads a font face via either the native FontFace API, or CSS injection\n    // TODO: consider support for multiple format URLs per face, unicode ranges\n    async injectFontFace ({ family, url, weight, style }) {\n        if (this.supports_native_font_loading === undefined) {\n            this.supports_native_font_loading = (window.FontFace !== undefined);\n        }\n\n        // Convert blob URLs, depending on whether the native FontFace API will be used or not.\n        //\n        // When the FontFace API *is* supported, the blob URL is read into a raw data array.\n        // NB: it's inefficient to be converting blob URLs into typed arrays here, since they originated\n        // as raw data *before* they were converted into blob URLs. However, this process should be fast since\n        // these are native browser functions and all data is local (no network request), and it keeps the\n        // logic streamlined by allowing us to continue to use a URL-based interface for all scene resources.\n        //\n        // When the FontFace API is *not* supported, the blob URL data is converted to a base64 data URL.\n        // This avoids security restricions in some browsers.\n        // Also see https://github.com/bramstein/fontloader/blob/598e9399117bdc946ff786fa2c5007a6bd7d3b9e/src/fontface.js#L145-L153\n        let data = url;\n        if (url.slice(0, 5) === 'blob:') {\n            data = (await Utils.io(url, 60000, 'arraybuffer')).body;\n            let bytes = new Uint8Array(data);\n            if (this.supports_native_font_loading) {\n                data = bytes; // use raw binary data\n            }\n            else {\n                let str = '';\n                for (let i = 0; i < bytes.length; i++) {\n                    str += String.fromCharCode(bytes[i]);\n                }\n                data = 'data:font/opentype;base64,' + btoa(str); // base64 encode as data URL\n            }\n        }\n\n        if (this.supports_native_font_loading) {\n            // Use native FontFace API\n            let face;\n            if (typeof data === 'string') { // add as URL\n                face = new FontFace(family, `url(${encodeURI(data)})`, { weight, style });\n            }\n            else if (data instanceof Uint8Array) { // add as binary data\n                face = new FontFace(family, data, { weight, style });\n            }\n            document.fonts.add(face);\n            log('trace', 'Adding FontFace to document.fonts:', face);\n        }\n        else {\n            // Use CSS injection\n            let css = `\n                @font-face {\n                    font-family: '${family}';\n                    font-weight: ${weight || 'normal'};\n                    font-style: ${style || 'normal'};\n                    src: url(${encodeURI(data)});\n                }`;\n            let style_el = document.createElement('style');\n            style_el.appendChild(document.createTextNode(''));\n            document.head.appendChild(style_el);\n            style_el.sheet.insertRule(css, 0);\n            log('trace', 'Injecting CSS font face:', css);\n        }\n    }\n\n};\n\nexport default FontManager;\n","// Text directionality (right-to-left, bi-directional) and segmentation (curved labels, Arabic handling)\n\n// Right-to-left / bi-directional text handling\n// Taken from http://stackoverflow.com/questions/12006095/javascript-how-to-check-if-character-is-rtl\nconst rtl_test = new RegExp('[\\u0591-\\u07FF\\u200F\\u202B\\u202E\\uFB1D-\\uFDFD\\uFE70-\\uFEFC]');\nexport function isTextRTL(s){\n    return rtl_test.test(s);\n}\n\nconst neutral_chars = '\\u0000-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u00BF\\u00D7\\u00F7\\u02B9-\\u02FF\\u2000-\\u2BFF\\u2010-\\u2029\\u202C\\u202F-\\u2BFF';\nconst neutral_test = new RegExp('['+neutral_chars+']+');\nexport function isTextNeutral(s){\n    return neutral_test.test(s);\n}\n\nexport const RTL_MARKER = '\\u200F'; // explicit right-to-left marker\n\n// Arabic script ranges\n// test http://localhost:8000/#16.72917/30.08541/31.28466\nconst arabic_range = new RegExp('^['+neutral_chars+'\\u0600-\\u06FF]+'); // all characters are Arabic or neutral\nconst arabic_splitters = new RegExp('['+neutral_chars+'\\u0622-\\u0625\\u0627\\u062F-\\u0632\\u0648\\u0671-\\u0677\\u0688-\\u0699\\u06C4-\\u06CB\\u06CF\\u06D2\\u06D3\\u06EE\\u06EF]');\nconst arabic_vowels = new RegExp('^[\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED]+');\n\n// Complex script ranges (non-Arabic)\nconst accents_and_vowels = '[\\u0300-\\u036F' + // Combining Diacritical Marks\n'\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7' + // Hebrew\n'\\u07A6-\\u07B0' + // Thaana\n'\\u0900-\\u0903\\u093A-\\u094C\\u094E\\u094F\\u0951-\\u0957\\u0962\\u0963' + // Devanagari\n'\\u0981-\\u0983\\u09BC\\u09BE-\\u09CC\\u09D7\\u09E2\\u09E3' + // Bengali\n'\\u0A01-\\u0A03\\u0A3C-\\u0A4C\\u0A51' + // Gurmukhi\n'\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0ACC\\u0AE2\\u0AE3' + // Gujarati\n'\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B4C\\u0B56\\u0B57\\u0B62\\u0B63' + // Oriya\n'\\u0B82\\u0BBE-\\u0BCD\\u0BD7' + // Tamil\n'\\u0C00-\\u0C03\\u0C3E-\\u0C4C\\u0C55\\u0C56\\u0C62\\u0C63' + // Telugu\n'\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CCC\\u0CD5\\u0CD6\\u0CE2\\u0CE3' + // Kannada\n'\\u0D01-\\u0D03\\u0D3E-\\u0D4C\\u0D4E\\u0D57\\u0D62\\u0D63' + // Malayalam\n'\\u0D82\\u0D83\\u0DCA-\\u0DDF\\u0DF2\\u0DF3' + // Sinhala\n'\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E' + // Thai\n'\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECD' + // Lao\n'\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F83\\u0F86\\u0F87\\u0F8D-\\u0FBC\\u0FC6' + // Tibetan\n'\\u102B-\\u1038\\u103A-\\u103E\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F\\u109A-\\u109D' + // Burmese\n'\\u17B4-\\u17D1\\u17D3' + // Khmer\n'\\u1A55-\\u1A5E\\u1A61-\\u1A7C' + // Tai Tham\n'\\u1DC0-\\u1DFF' + // Combining Diacritical Marks Supplement\n'\\u20D0-\\u20FF' + // Combining Diacritical Marks for Symbols\n']';\nconst combo_characters = '[\\u094D\\u09CD\\u0A4D\\u0ACD\\u0B4D\\u0C4D\\u0CCD\\u0D4D\\u0F84\\u1039\\u17D2\\u1A60\\u1A7F]';\n\n// Find the next grapheme cluster (non-Arabic)\nconst grapheme_match = new RegExp(`^.(?:${accents_and_vowels}+)?(${combo_characters}\\\\W(?:${accents_and_vowels}+)?)*`); // eslint-disable-line no-misleading-character-class\n\n// Scripts that cannot be curved due (due to contextual shaping and/or layout complexity)\nconst curve_blacklist = {\n    Mongolian: '\\u1800-\\u18AF'\n};\nconst curve_blacklist_range = Object.keys(curve_blacklist).map(r => curve_blacklist[r]).join('');\nconst curve_blacklist_test = new RegExp('['+curve_blacklist_range+']');\nexport function isTextCurveBlacklisted(s){\n    return curve_blacklist_test.test(s);\n}\n\n// Splitting strategy for chopping a label into segments\nconst default_segment_length = 2; // character length of each segment when dividing up label text\n\nexport function splitLabelText(text, rtl, cache) {\n    // Use single-character segments for RTL, to avoid additional handling for neutral characters\n    // (see https://github.com/tangrams/tangram/issues/541)\n    const segment_length = rtl ? 1 : default_segment_length;\n\n    // Only one segment\n    if (text.length < segment_length) {\n        return [text];\n    }\n\n    // Check segment cache first (skips processing for labels we've seen before)\n    let key = text;\n    if (cache.segment[key]) {\n        cache.stats.segment_hits++;\n        return cache.segment[key];\n    }\n\n    let segments = [];\n\n    // Arabic-specific text handling\n    // NB: works for strings that are *only* Arabic; mixed-script labels may need more work\n    if (arabic_range.exec(text)) {\n        segments = text.split(arabic_splitters);\n        let offset = -1;\n        for (var s = 0; s < segments.length - 1; s++) {\n            if (s > 0) {\n                let carryover_vowels = arabic_vowels.exec(segments[s]);\n                if (carryover_vowels) {\n                    segments[s] = segments[s].substring(carryover_vowels[0].length);\n                    segments[s - 1] += carryover_vowels[0];\n                    offset += carryover_vowels[0].length;\n                }\n            }\n            offset += 1 + segments[s].length;\n            segments[s] += text.slice(offset, offset + 1);\n        }\n        text = ''; // will skip non-Arabic handling below\n    }\n\n    // Non-Arabic text handling\n    while (text.length) {\n        let segment = '';\n        let test_text = text;\n        let grapheme_count = 0;\n\n        for (grapheme_count; grapheme_count < segment_length && test_text.length; grapheme_count++) {\n            let grapheme_cluster = (grapheme_match.exec(test_text) || test_text)[0];\n            segment += grapheme_cluster;\n            test_text = test_text.substring(grapheme_cluster.length);\n        }\n\n        segments.push(segment);\n        text = text.substring(segment.length);\n    }\n\n    // Reverse segments if needed\n    if (rtl) {\n        segments.reverse();\n    }\n\n    // Cache and return\n    cache.stats.segment_misses++;\n    cache.segment[key] = segments;\n    return segments;\n}\n","// Word wrapping\n\nimport { isTextRTL, isTextNeutral, RTL_MARKER } from './text_segments';\n\n// Private class to arrange text labels into multiple lines based on\n// \"text wrap\" and \"max line\" values\nexport default class MultiLine {\n    constructor (context, max_lines = Infinity, text_wrap = Infinity) {\n        this.width = 0;\n        this.height = 0;\n        this.lines = [];\n\n        this.max_lines = max_lines;\n        this.text_wrap = text_wrap;\n        this.context = context;\n    }\n\n    createLine (line_height){\n        if (this.lines.length < this.max_lines){\n            return new Line(line_height, this.text_wrap);\n        }\n        else {\n            return false;\n        }\n    }\n\n    push (line){\n        if (this.lines.length < this.max_lines){\n            // measure line width\n            let line_width = this.context.measureText(line.text).width;\n            line.width = line_width;\n\n            if (line_width > this.width){\n                this.width = Math.ceil(line_width);\n            }\n\n            // add to lines and increment height\n            this.lines.push(line);\n            this.height += line.height;\n            return true;\n        }\n        else {\n            this.addEllipsis();\n            return false;\n        }\n    }\n\n    // pushes to the lines array and returns a new line if possible (false otherwise)\n    advance (line, line_height) {\n        let can_push = this.push(line);\n        if (can_push){\n            return this.createLine(line_height);\n        }\n        else {\n            return false;\n        }\n    }\n\n    addEllipsis (){\n        let last_line = this.lines[this.lines.length - 1];\n        let ellipsis_width = Math.ceil(this.context.measureText(MultiLine.ellipsis).width);\n\n        last_line.append(MultiLine.ellipsis);\n        last_line.width += ellipsis_width;\n\n        if (last_line.width > this.width) {\n            this.width = last_line.width;\n        }\n    }\n\n    finish (line){\n        if (line){\n            this.push(line);\n        }\n        else {\n            this.addEllipsis();\n        }\n    }\n\n    static parse (str, text_wrap, max_lines, line_height, ctx) {\n        // Word wrapping\n        // Line breaks can be caused by:\n        //  - implicit line break when a maximum character threshold is exceeded per line (text_wrap)\n        //  - explicit line break in the label text (\\n)\n        let words;\n        if (typeof text_wrap === 'number') {\n            words = str.split(' '); // split words on spaces\n        }\n        else {\n            words = [str]; // no max line word wrapping (but new lines will still be in effect)\n        }\n\n        let multiline = new MultiLine(ctx, max_lines, text_wrap);\n        let line = multiline.createLine(line_height);\n\n        // First iterate on space-break groups (will be one if max line length off), then iterate on line-break groups\n        for (let i = 0; i < words.length; i++) {\n            let breaks = words[i].split('\\n'); // split on line breaks\n            let new_line = (i === 0) ? true : false;\n\n            for (let n=0; n < breaks.length; n++) {\n                if (!line){\n                    break;\n                }\n\n                let word = breaks[n];\n\n                // force punctuation (neutral chars) at the end of a RTL line, so they stay attached to original word\n                if (isTextRTL(word) && isTextNeutral(word[word.length - 1])) {\n                    word += RTL_MARKER;\n                }\n\n                let spaced_word = (new_line) ? word : ' ' + word;\n\n                // if adding current word would overflow, add a new line instead\n                // first word (i === 0) always appends\n                if (text_wrap && i > 0 && line.exceedsTextwrap(spaced_word)) {\n                    line = multiline.advance(line, line_height);\n                    if (!line){\n                        break;\n                    }\n                    line.append(word);\n                    new_line = true;\n                }\n                else {\n                    line.append(spaced_word);\n                }\n\n                // if line breaks present, add new line (unless on last line)\n                if (n < breaks.length - 1) {\n                    line = multiline.advance(line, line_height);\n                    new_line = true;\n                }\n            }\n\n            if (i === words.length - 1){\n                multiline.finish(line);\n            }\n        }\n        return multiline;\n    }\n}\n\nMultiLine.ellipsis = '...';\n\n// A Private class used by MultiLine to contain the logic for a single line\n// including character count, width, height and text\nclass Line {\n    constructor (height = 0, text_wrap = 0){\n        this.chars = 0;\n        this.text = '';\n\n        this.height = Math.ceil(height);\n        this.text_wrap = text_wrap;\n    }\n\n    append (text){\n        this.chars += text.length;\n        this.text += text;\n    }\n\n    exceedsTextwrap (text){\n        return text.length + this.chars > this.text_wrap;\n    }\n}\n","import log from '../../utils/log';\nimport Utils from '../../utils/utils';\nimport Texture from '../../gl/texture';\nimport FontManager from './font_manager';\nimport Task from '../../utils/task';\nimport StyleParser from '../style_parser';\nimport MultiLine from './text_wrap';\nimport { splitLabelText, isTextRTL, isTextNeutral, isTextCurveBlacklisted } from './text_segments';\nimport debugSettings from '../../utils/debug_settings';\n\nexport default class TextCanvas {\n\n    constructor () {\n        this.createCanvas();                // create initial canvas and context\n        this.vertical_text_buffer = 8;      // vertical pixel padding around text\n        this.horizontal_text_buffer = 4;    // text styling such as italic emphasis is not measured by the Canvas API, so padding is necessary\n        this.background_size = 4;           // padding around label for optional background box (TODO: make configurable?)\n    }\n\n    createCanvas () {\n        this.canvas = document.createElement('canvas');\n        this.canvas.style.backgroundColor = 'transparent'; // render text on transparent background\n        this.context = this.canvas.getContext('2d');\n    }\n\n    resize (width, height) {\n        this.canvas.width = width;\n        this.canvas.height = height;\n        this.context.clearRect(0, 0, width, height);\n    }\n\n    // Set font style params for canvas drawing\n    setFont ({ font_css, fill, stroke, stroke_width, px_size, supersample }) {\n        this.px_size = px_size;\n        let ctx = this.context;\n        let dpr = Utils.device_pixel_ratio * supersample;\n\n        if (stroke && stroke_width > 0) {\n            ctx.strokeStyle = stroke;\n            ctx.lineWidth = stroke_width * dpr;\n        }\n        ctx.fillStyle = fill;\n\n        ctx.font = font_css;\n        ctx.miterLimit = 2;\n    }\n\n    async textSizes (tile_id, texts) {\n        await FontManager.loadFonts();\n        return Task.add({\n            type: 'textSizes',\n            run: this.processTextSizesTask.bind(this),\n            texts,\n            tile_id,\n            cursor: {\n                styles: Object.keys(texts),\n                texts: null,\n                style_idx: null,\n                text_idx: null\n            }\n        });\n    }\n\n    processTextSizesTask (task) {\n        let { cursor, texts  } = task;\n        cursor.style_idx = cursor.style_idx || 0;\n\n        while (cursor.style_idx < cursor.styles.length) {\n            let style = cursor.styles[cursor.style_idx];\n            if (cursor.text_idx == null) {\n                cursor.text_idx = 0;\n                cursor.texts = Object.keys(texts[style]);\n            }\n\n            let text_infos = texts[style];\n            let first = true;\n\n            while (cursor.text_idx < cursor.texts.length) {\n                let text = cursor.texts[cursor.text_idx];\n                let text_info = text_infos[text];\n                let text_settings = text_info.text_settings;\n\n                if (first) {\n                    this.setFont(text_settings);\n                    first = false;\n                }\n\n                // add size of full text string\n                text_info.size = this.textSize(style, text, text_settings).size;\n\n                // if text may curve, calculate per-segment as well\n                if (text_settings.can_articulate) {\n                    let rtl = false;\n                    let bidi = false;\n                    if (isTextRTL(text)) {\n                        if (!isTextNeutral(text)) {\n                            bidi = true;\n                        }\n                        else {\n                            rtl = true;\n                        }\n                    }\n\n                    text_info.isRTL = rtl;\n                    text_info.no_curving = bidi || isTextCurveBlacklisted(text); // used in LabelLine to prevent curved labels\n                    text_info.vertical_buffer = this.vertical_text_buffer;\n                    text_info.segment_sizes = [];\n\n                    if (!text_info.no_curving) {\n                        let segments = splitLabelText(text, rtl, TextCanvas.cache);\n                        text_info.segments = segments;\n                        for (let i = 0; i < segments.length; i++){\n                            text_info.segment_sizes.push(this.textSize(style, segments[i], text_settings).size);\n                        }\n                    }\n                }\n\n                cursor.text_idx++;\n\n                if (!Task.shouldContinue(task)) {\n                    return false;\n                }\n            }\n            cursor.text_idx = null;\n            cursor.style_idx++;\n        }\n\n        Task.finish(task, texts);\n        return true;\n    }\n\n    // Computes width and height of text based on current font style\n    // Includes word wrapping, returns size info for whole text block and individual lines\n    textSize(style, text, { transform, text_wrap, max_lines, stroke_width = 0, background_color, background_stroke_width = 0, background_width, underline_width = 0, supersample }) {\n        // Check cache first\n        TextCanvas.cache.text[style] = TextCanvas.cache.text[style] || {};\n        if (TextCanvas.cache.text[style][text]) {\n            TextCanvas.cache.stats.text_hits++;\n            return TextCanvas.cache.text[style][text];\n        }\n        TextCanvas.cache.stats.text_misses++;\n        TextCanvas.cache.text_count++;\n\n        // Calc and store in cache\n        const dpr = Utils.device_pixel_ratio * supersample;\n        const str = this.applyTextTransform(text, transform);\n        const ctx = this.context;\n        const vertical_buffer = this.vertical_text_buffer * dpr;\n        const horizontal_buffer = (stroke_width + this.horizontal_text_buffer) * dpr;\n\n        background_width = background_width != null ? background_width : this.background_size; // apply default background width\n        const background_size = (background_color || background_stroke_width) ? (background_width + background_stroke_width) * dpr : 0;\n\n        const leading = (2 + underline_width + (underline_width ? (stroke_width + 1) : 0)) * dpr; // adjust for underline and text stroke\n        const line_height = this.px_size + leading; // px_size already in device pixels\n\n        // Parse string into series of lines if it exceeds the text wrapping value or contains line breaks\n        // const multiline = MultiLine.parse(str, text_wrap, max_lines, line_height, ctx);\n        let { width, height, lines } = MultiLine.parse(str, text_wrap, max_lines, line_height, ctx);\n        width += background_size * 2;\n        height += background_size * 2;\n\n        let collision_size = [\n            width / dpr,\n            height / dpr\n        ];\n\n        let texture_size = [\n            width + 2 * horizontal_buffer,\n            height + 2 * vertical_buffer\n        ];\n\n        let logical_size = [\n            texture_size[0] / dpr,\n            texture_size[1] / dpr,\n        ];\n\n        // Returns lines (w/per-line info for drawing) and text's overall bounding box + canvas size\n        TextCanvas.cache.text[style][text] = {\n            lines,\n            size: {\n                collision_size, texture_size, logical_size,\n                horizontal_buffer, vertical_buffer, dpr, line_height, background_size\n            }\n        };\n        return TextCanvas.cache.text[style][text];\n    }\n\n    // Draw multiple lines of text\n    drawTextMultiLine (lines, [x, y], size, text_settings, label_type) {\n        const { dpr, collision_size, texture_size, line_height, horizontal_buffer, vertical_buffer } = size;\n\n        // draw optional background box\n        if (text_settings.background_color || text_settings.background_stroke_color) {\n            const background_stroke_color = text_settings.background_stroke_color;\n            const background_stroke_width = (text_settings.background_stroke_width || 0) * dpr;\n\n            this.context.save();\n\n            if (text_settings.background_color) {\n                this.context.fillStyle = text_settings.background_color;\n                this.context.fillRect(\n                    // shift to \"foreground\" stroke texture for curved labels (separate stroke and fill textures)\n                    x + horizontal_buffer + (label_type === 'curved' ? texture_size[0] : 0) + background_stroke_width,\n                    y + vertical_buffer + background_stroke_width,\n                    dpr * collision_size[0] - background_stroke_width * 2,\n                    dpr * collision_size[1] - background_stroke_width * 2\n                );\n            }\n\n            // optional stroke around background box\n            if (background_stroke_color && background_stroke_width) {\n                this.context.strokeStyle = background_stroke_color;\n                this.context.lineWidth = background_stroke_width;\n                this.context.strokeRect(\n                    // shift to \"foreground\" stroke texture for curved labels (separate stroke and fill textures)\n                    x + horizontal_buffer + (label_type === 'curved' ? texture_size[0] : 0) + background_stroke_width * 0.5,\n                    y + vertical_buffer + background_stroke_width * 0.5,\n                    dpr * collision_size[0] - background_stroke_width,\n                    dpr * collision_size[1] - background_stroke_width\n                );\n            }\n\n            this.context.restore();\n        }\n\n        // draw text\n        const underline_width = text_settings.underline_width || 0;\n        const stroke_width = text_settings.stroke_width || 0;\n        const voffset = underline_width ? // offset text position to account for underline and text stroke\n            ((underline_width + stroke_width + 1) * 0.5 * dpr) : 0;\n        let ty = y - voffset;\n        for (let line_num=0; line_num < lines.length; line_num++) {\n            let line = lines[line_num];\n            this.drawTextLine(line, [x, ty], size, text_settings, label_type);\n            ty += line_height;\n        }\n\n        this.drawTextDebug([x, y], size, label_type);\n    }\n\n    // Draw single line of text at specified location, adjusting for buffer and baseline\n    drawTextLine(line, [x, y], size, text_settings, type) {\n        const { stroke, stroke_width, transform, align = 'center' } = text_settings;\n        const { horizontal_buffer, vertical_buffer, texture_size, background_size, line_height, dpr } = size;\n        const underline_width = (text_settings.underline_width || 0) * dpr;\n        const text = this.applyTextTransform(line.text, transform);\n\n        // Text alignment\n        let tx;\n        if (align === 'left') {\n            tx = x + horizontal_buffer + background_size;\n        }\n        else if (align === 'center') {\n            tx = x + texture_size[0] / 2 - line.width / 2;\n        }\n        else if (align === 'right') {\n            tx = x + texture_size[0] - line.width - horizontal_buffer - background_size;\n        }\n\n        // In the absence of better Canvas TextMetrics (not supported by browsers yet),\n        // 0.75 buffer produces a better approximate vertical centering of text\n        const ty = y + vertical_buffer * 0.75 + line_height + background_size - underline_width * 0.5;\n\n        // Draw stroke and fill separately for curved text. Offset stroke in texture atlas by shift.\n        const shift = (stroke && stroke_width > 0 && type === 'curved') ? texture_size[0] : 0;\n\n        // optional text underline\n        if (underline_width) {\n            this.context.save();\n            this.context.strokeStyle = this.context.fillStyle;\n            this.context.lineWidth = underline_width;\n\n            // adjust the underline to account for the text stroke\n            const uy = ty + ((stroke_width * 0.5 + 2) * dpr) + this.context.lineWidth * 0.5;\n\n            this.context.beginPath();\n            this.context.moveTo(tx + shift, uy);\n            this.context.lineTo(tx + shift + line.width, uy);\n            this.context.stroke();\n            this.context.restore();\n        }\n\n        if (stroke && stroke_width > 0) {\n            this.context.strokeText(text, tx + shift, ty);\n        }\n        this.context.fillText(text, tx, ty);\n    }\n\n    // Draw optional text debug boxes\n    drawTextDebug ([x, y], size, label_type) {\n        const { dpr, horizontal_buffer, vertical_buffer, texture_size, collision_size } = size;\n        const line_width = 2;\n\n        if (debugSettings.draw_label_collision_boxes) {\n            this.context.save();\n            this.context.strokeStyle = 'blue';\n            this.context.lineWidth = line_width;\n            this.context.strokeRect(x + horizontal_buffer, y + vertical_buffer, dpr * collision_size[0], dpr * collision_size[1]);\n            if (label_type === 'curved'){\n                this.context.strokeRect(x + texture_size[0] + horizontal_buffer, y + vertical_buffer, dpr * collision_size[0], dpr * collision_size[1]);\n            }\n            this.context.restore();\n        }\n\n        if (debugSettings.draw_label_texture_boxes) {\n            this.context.save();\n            this.context.strokeStyle = 'green';\n            this.context.lineWidth = line_width;\n            // stroke is applied internally, so the outer border is the edge of the texture\n            this.context.strokeRect(x + line_width, y + line_width, texture_size[0] - 2 * line_width, texture_size[1] - 2 * line_width);\n            if (label_type === 'curved') {\n                this.context.strokeRect(x + line_width + texture_size[0], y + line_width, texture_size[0] - 2 * line_width, texture_size[1] - 2 * line_width);\n            }\n            this.context.restore();\n        }\n    }\n\n    rasterize (texts, textures, tile_id, texture_prefix, gl) {\n        return Task.add({\n            type: 'rasterizeLabels',\n            run: this.processRasterizeTask.bind(this),\n            cancel: this.cancelRasterizeTask.bind(this),\n            pause_factor: 2,         // pause 2 frames when task run past allowed time\n            user_moving_view: false, // don't run task when user is moving view\n            texts,\n            textures,\n            texture_prefix,\n            gl,\n            tile_id,\n            cursor: {\n                styles: Object.keys(texts),\n                texts: null,\n                style_idx: 0,\n                text_idx: null,\n                texture_idx: 0,\n                texture_resize: true,\n                texture_names: []\n            }\n        });\n    }\n\n    processRasterizeTask (task) {\n        let { cursor, texts, textures } = task;\n        let texture;\n\n        // Rasterize one texture at a time, so we only have to keep one canvas in memory (they can be large)\n        while (cursor.texture_idx < task.textures.length) {\n            texture = textures[cursor.texture_idx];\n\n            if (cursor.texture_resize) {\n                cursor.texture_resize = false;\n                this.resize(...texture.texture_size);\n            }\n\n            while (cursor.style_idx < cursor.styles.length) {\n                let style = cursor.styles[cursor.style_idx];\n                if (cursor.text_idx == null) {\n                    cursor.text_idx = 0;\n                    cursor.texts = Object.keys(texts[style]);\n                }\n\n                let text_infos = texts[style];\n                let first = true;\n\n                while (cursor.text_idx < cursor.texts.length) {\n                    let text = cursor.texts[cursor.text_idx];\n                    let text_info = text_infos[text];\n                    let text_settings = text_info.text_settings;\n\n                    // set font on first occurence of new font style\n                    if (first) {\n                        this.setFont(text_settings);\n                        first = false;\n                    }\n\n                    if (text_settings.can_articulate) {\n                        text_info.texcoords = text_info.texcoords || {};\n                        for (let t = 0; t < text_info.type.length; t++) {\n                            let type = text_info.type[t];\n                            if (type === 'straight') {\n                                // Only render for current texture\n                                if (text_info.textures[t] !== cursor.texture_idx) {\n                                    continue;\n                                }\n\n                                let word = (text_info.isRTL) ? text.split().reverse().join() : text;\n                                let cache = texture.texcoord_cache[style][word];\n\n                                let texcoord;\n                                if (cache.texcoord) {\n                                    texcoord = cache.texcoord;\n                                }\n                                else {\n                                    let texture_position = cache.texture_position;\n                                    let { size, lines } = this.textSize(style, word, text_settings);\n\n                                    this.drawTextMultiLine(lines, texture_position, size, text_settings, type);\n\n                                    texcoord = Texture.getTexcoordsForSprite(\n                                        texture_position,\n                                        size.texture_size,\n                                        texture.texture_size\n                                    );\n\n                                    cache.texcoord = texcoord;\n                                }\n\n                                text_info.texcoords[type] = {\n                                    texcoord,\n                                    texture_id: cache.texture_id\n                                };\n                            }\n                            else if (type === 'curved') {\n                                let words = text_info.segments;\n                                text_info.texcoords.curved = text_info.texcoords.curved || [];\n                                text_info.texcoords_stroke = text_info.texcoords_stroke || [];\n\n                                for (let w = 0; w < words.length; w++){\n                                    // Only render for current texture\n                                    if (text_info.textures[t][w] !== cursor.texture_idx) {\n                                        continue;\n                                    }\n\n                                    let word = words[w];\n                                    let cache = texture.texcoord_cache[style][word];\n\n                                    let texcoord;\n                                    let texcoord_stroke;\n                                    if (cache.texcoord){\n                                        texcoord = cache.texcoord;\n                                        texcoord_stroke = cache.texcoord_stroke;\n                                        text_info.texcoords_stroke.push(texcoord_stroke);\n                                    }\n                                    else {\n                                        let texture_position = cache.texture_position;\n                                        let { size, lines } = this.textSize(style, word, text_settings);\n\n                                        this.drawTextMultiLine(lines, texture_position, size, text_settings, type);\n\n                                        texcoord = Texture.getTexcoordsForSprite(\n                                            texture_position,\n                                            size.texture_size,\n                                            texture.texture_size\n                                        );\n\n                                        let texture_position_stroke = [\n                                            texture_position[0] + size.texture_size[0],\n                                            texture_position[1]\n                                        ];\n\n                                        texcoord_stroke = Texture.getTexcoordsForSprite(\n                                            texture_position_stroke,\n                                            size.texture_size,\n                                            texture.texture_size\n                                        );\n\n                                        cache.texcoord = texcoord;\n                                        cache.texcoord_stroke = texcoord_stroke;\n\n                                        // NB: texture_id is the same between stroke and fill, so it's not duplicated here\n                                        text_info.texcoords_stroke.push(texcoord_stroke);\n                                    }\n\n                                    text_info.texcoords.curved.push({\n                                        texcoord,\n                                        texture_id: cache.texture_id\n                                    });\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        let lines = this.textSize(style, text, text_settings).lines;\n                        const aligned_text_settings = { ...text_settings };\n\n                        for (let align in text_info.align) {\n                            // Only render for current texture\n                            if (text_info.align[align].texture_id !== cursor.texture_idx) {\n                                continue;\n                            }\n\n                            aligned_text_settings.align = align;\n                            this.drawTextMultiLine(lines, text_info.align[align].texture_position, text_info.size, aligned_text_settings);\n\n                            text_info.align[align].texcoords = Texture.getTexcoordsForSprite(\n                                text_info.align[align].texture_position,\n                                text_info.size.texture_size,\n                                texture.texture_size\n                            );\n                        }\n                    }\n\n                    cursor.text_idx++;\n\n                    if (!Task.shouldContinue(task)) {\n                        return false;\n                    }\n                }\n                cursor.text_idx = null;\n                cursor.style_idx++;\n            }\n\n            // Create GL texture (canvas element will be reused for next texture)\n            let tname = task.texture_prefix + cursor.texture_idx;\n            Texture.create(task.gl, tname, {\n                element: this.canvas,\n                filtering: 'linear',\n                UNPACK_PREMULTIPLY_ALPHA_WEBGL: true\n            });\n            Texture.retain(tname);\n            cursor.texture_names.push(tname);\n\n            cursor.texture_idx++;\n            cursor.texture_resize = true;\n            cursor.style_idx = 0;\n        }\n\n        Task.finish(task, cursor.texture_names);\n        return true;\n    }\n\n    // Free any textures that have been allocated part-way through label rasterization for a tile\n    cancelRasterizeTask (task) {\n        log('trace', `RasterizeTask: release textures [${task.cursor.texture_names.join(', ')}]`);\n        task.cursor.texture_names.forEach(t => Texture.release(t));\n    }\n\n    // Place text labels within an atlas of the given max size\n    setTextureTextPositions (texts, max_texture_size) {\n        let texture = {\n                cx: 0,\n                cy: 0,\n                width: 0,\n                height: 0,\n                column_width: 0,\n                texture_id: 0,\n                texcoord_cache: {}\n            },\n            textures = [];\n\n        for (let style in texts) {\n            let text_infos = texts[style];\n\n            for (let text in text_infos) {\n                let text_info = text_infos[text];\n                let texture_position;\n\n                if (text_info.text_settings.can_articulate) {\n                    text_info.textures = [];\n                    texture.texcoord_cache[style] = texture.texcoord_cache[style] || {};\n\n                    for (let t = 0; t < text_info.type.length; t++) {\n                        let type = text_info.type[t];\n\n                        if (type === 'straight') {\n                            let word = (text_info.isRTL) ? text.split().reverse().join() : text;\n\n                            if (!texture.texcoord_cache[style][word]) {\n                                let size = text_info.size.texture_size;\n                                texture_position = this.placeText(size[0], size[1], style, texture, textures, max_texture_size);\n                                texture.texcoord_cache[style][word] = {\n                                    texture_id: texture.texture_id,\n                                    texture_position\n                                };\n                            }\n\n                            text_info.textures[t] = texture.texture_id;\n                        }\n                        else if (type === 'curved') {\n                            text_info.textures[t] = [];\n\n                            for (let w = 0; w < text_info.segment_sizes.length; w++) {\n                                let word = text_info.segments[w];\n\n                                if (!texture.texcoord_cache[style][word]) {\n                                    let size = text_info.segment_sizes[w].texture_size;\n                                    let width = 2 * size[0]; // doubled to account for side-by-side rendering of fill and stroke\n                                    texture_position = this.placeText(width, size[1], style, texture, textures, max_texture_size);\n                                    texture.texcoord_cache[style][word] = {\n                                        texture_id: texture.texture_id,\n                                        texture_position\n                                    };\n                                }\n\n                                text_info.textures[t].push(texture.texture_id);\n                            }\n\n                        }\n                    }\n                }\n                else {\n                    // rendered size is same for all alignments\n                    let size = text_info.size.texture_size;\n\n                    // but each alignment needs to be rendered separately\n                    for (let align in text_info.align) {\n                        texture_position = this.placeText (size[0], size[1], style, texture, textures, max_texture_size);\n                        text_info.align[align].texture_id = texture.texture_id;\n                        text_info.align[align].texture_position = texture_position;\n                    }\n                }\n            }\n        }\n\n        // save final texture\n        if (texture.column_width > 0 && texture.height > 0) {\n            textures[texture.texture_id] = {\n                texture_size: [texture.width, texture.height],\n                texcoord_cache: texture.texcoord_cache\n            };\n        }\n\n        // return computed texture sizes and UV cache\n        return textures;\n    }\n\n    // Place text sprite in texture atlas, enlarging current texture, or starting new one if max texture size reached\n    placeText (text_width, text_height, style, texture, textures, max_texture_size) {\n        let texture_position;\n\n        // TODO: what if first label is wider than entire max texture?\n\n        if (texture.cy + text_height > max_texture_size) {\n            // start new column\n            texture.cx += texture.column_width;\n            texture.cy = 0;\n            texture.column_width = text_width;\n        }\n        else {\n            // expand current column\n            texture.column_width = Math.max(texture.column_width, text_width);\n        }\n\n        if (texture.cx + texture.column_width <= max_texture_size) {\n            // add label to current texture\n            texture_position = [texture.cx, texture.cy];\n\n            texture.cy += text_height;\n\n            // expand texture if needed\n            texture.height = Math.max(texture.height, texture.cy);\n            texture.width = Math.max(texture.width, texture.cx + texture.column_width);\n        }\n        else {\n            // start new texture\n            // save size and cache of last texture\n            textures[texture.texture_id] = {\n                texture_size: [texture.width, texture.height],\n                texcoord_cache: texture.texcoord_cache\n            };\n            texture.texcoord_cache = {}; // reset cache\n            texture.texcoord_cache[style] = {};\n\n            texture.texture_id++;\n            texture.cx = 0;\n            texture.cy = text_height;\n            texture.column_width = text_width;\n            texture.width = text_width;\n            texture.height = text_height;\n            texture_position = [0, 0]; // TODO: allocate zero array once\n        }\n\n        return texture_position;\n    }\n\n    // Called before rasterization\n    applyTextTransform (text, transform) {\n        if (transform === 'capitalize') {\n            return text.replace(/\\w\\S*/g, function (txt) {\n                return txt.charAt(0).toUpperCase() + txt.substr(1);\n            });\n        }\n        else if (transform === 'uppercase') {\n            return text.toUpperCase();\n        }\n        else if (transform === 'lowercase') {\n            return text.toLowerCase();\n        }\n        return text;\n    }\n\n    // Convert font CSS-style size ('12px', '14pt', '1.5em', etc.) to pixel size (adjusted for device pixel ratio)\n    // Defaults units to pixels if not specified\n    static fontPixelSize (size) {\n        if (size == null) {\n            return;\n        }\n        size = (typeof size === 'string') ? size : String(size); // need a string for regex\n\n        let [, px_size, units] = size.match(TextCanvas.font_size_re) || [];\n        units = units || 'px';\n\n        if (units === 'em') {\n            px_size *= 16;\n        } else if (units === 'pt') {\n            px_size /= 0.75;\n        } else if (units === '%') {\n            px_size /= 6.25;\n        }\n\n        px_size = StyleParser.parsePositiveNumber(px_size);\n        px_size *= Utils.device_pixel_ratio;\n        return px_size;\n    }\n\n    static pruneTextCache () {\n        if (TextCanvas.cache.text_count > TextCanvas.cache.text_count_max) {\n            TextCanvas.cache.text = {};\n            TextCanvas.cache.text_count = 0;\n            log('debug', 'TextCanvas: pruning text cache');\n        }\n\n        if (Object.keys(TextCanvas.cache.segment).length > TextCanvas.cache.segment_count_max) {\n            TextCanvas.cache.segment = {};\n            log('debug', 'TextCanvas: pruning segment cache');\n        }\n    }\n\n}\n\n// Extract font size and units\nTextCanvas.font_size_re = /((?:[0-9]*\\.)?[0-9]+)\\s*(px|pt|em|%)?/;\n\n// Cache sizes of rendered text\nTextCanvas.cache = {\n    text: {},                   // size and line parsing, by text style, then text string\n    text_count: 0,              // current size of cache (measured as # of entries)\n    text_count_max: 2000,       // prune cache when it exceeds this size\n    segment: {},                // segmentation of text (by run of characters or grapheme clusters), by text string\n    segment_count_max: 2000,    // prune cache when it exceeds this size\n    stats: { text_hits: 0, text_misses: 0, segment_hits: 0, segment_misses: 0 }\n};\n\n","// Text label rendering methods, can be mixed into a rendering style\n\nimport StyleParser from '../style_parser';\nimport Geo from '../../utils/geo';\nimport log from '../../utils/log';\nimport Thread from '../../utils/thread';\nimport WorkerBroker from '../../utils/worker_broker';\nimport Collision from '../../labels/collision';\nimport TextSettings from '../text/text_settings';\nimport TextCanvas from './text_canvas';\n\n// namespaces label textures (ensures new texture name when a tile is built multiple times)\nlet text_texture_id = 0;\n\nexport const TextLabels = {\n\n    resetText () {\n        if (Thread.is_main) {\n            this.canvas = new TextCanvas();\n        }\n        else if (Thread.is_worker) {\n            this.texts = {}; // unique texts, grouped by tile, by style\n        }\n    },\n\n    freeText (tile) {\n        delete this.texts[tile.id];\n    },\n\n    parseTextFeature (feature, draw, context, tile) {\n        // Compute label text\n        let text = this.parseTextSource(feature, draw, context);\n\n        if (text == null || text === '') {\n            return; // no text for this feature\n        }\n\n        // Compute text style and layout settings for this feature label\n        let text_settings = TextSettings.compute(draw, context);\n        let text_settings_key = TextSettings.key(text_settings);\n\n        // first label in tile, or with this style?\n        this.texts[tile.id] = this.texts[tile.id] || {};\n        let sizes = this.texts[tile.id][text_settings_key] = this.texts[tile.id][text_settings_key] || {};\n\n        if (text instanceof Object){\n            let results = [];\n\n            // add both left/right text elements to repeat group to improve repeat culling\n            // avoids one component of a boundary label (e.g. Colorado) being culled too aggressively when it also\n            // appears in nearby boundary labels (e.g. Colorado/Utah & Colorado/New Mexico repeat as separate groups)\n            let repeat_group_prefix = text.left + '-' + text.right; // NB: should be all text keys, not just left/right\n\n            for (let key in text){\n                let current_text = text[key];\n                if (!current_text) {\n                    continue;\n                }\n\n                let layout = this.computeTextLayout({}, feature, draw, context, tile, current_text, text_settings, repeat_group_prefix, key);\n                if (!sizes[current_text]) {\n                    // first label with this text/style/tile combination, make a new label entry\n                    sizes[current_text] = {\n                        text_settings,\n                        ref: 0 // # of times this text/style combo appears in tile\n                    };\n                }\n\n                results.push({\n                    draw, text : current_text, text_settings_key, layout\n                });\n            }\n\n            return (results.length > 0 && results); // return null if no boundary labels found\n        }\n        else {\n            // unique text strings, grouped by text drawing style\n            let layout = this.computeTextLayout({}, feature, draw, context, tile, text, text_settings);\n            if (!sizes[text]) {\n                // first label with this text/style/tile combination, make a new label entry\n                sizes[text] = {\n                    text_settings,\n                    ref: 0 // # of times this text/style combo appears in tile\n                };\n            }\n\n            return {\n                draw, text, text_settings_key, layout\n            };\n        }\n    },\n\n    // Compute the label text, default is value of feature.properties.name\n    // - String value indicates a feature property look-up, e.g. `short_name` means use feature.properties.short_name\n    // - Function will use the return value as the label text (for custom labels)\n    // - Array (of strings and/or functions) defines a list of fallbacks, evaluated according to the above rules,\n    //   with the first non-null value used as the label text\n    //   e.g. `[name:es, name:en, name]` prefers Spanish names, followed by English, and last the default local name\n    parseTextSource (feature, draw, context) {\n        let text;\n        let source = draw.text_source || 'name';\n\n        if (source != null && !Array.isArray(source) && typeof source === 'object') {\n            // left/right boundary labels\n            text = {};\n            for (let key in source) {\n                text[key] = this.parseTextSourceValue(source[key], feature, context);\n            }\n        }\n        else {\n            // single label\n            text = this.parseTextSourceValue(source, feature, context);\n        }\n\n        return text;\n    },\n\n    parseTextSourceValue (source, feature, context) {\n        let text;\n        if (Array.isArray(source)) {\n            for (let s=0; s < source.length; s++) {\n                if (typeof source[s] === 'string') {\n                    text = feature.properties[source[s]];\n                } else if (typeof source[s] === 'function') {\n                    text = source[s](context);\n                }\n\n                if (text) {\n                    return text; // stop if we found a text property\n                }\n            }\n        }\n        else if (typeof source === 'string') {\n            text = feature.properties[source];\n        }\n        else if (source instanceof Function) {\n            text = source(context);\n        }\n\n        return text;\n    },\n\n    async prepareTextLabels (tile, queue) {\n        if (Object.keys(this.texts[tile.id]||{}).length === 0) {\n            return [];\n        }\n\n        // first call to main thread, ask for text pixel sizes\n        try {\n            const texts = await WorkerBroker.postMessage(this.main_thread_target+'.calcTextSizes', tile.id, this.texts[tile.id]);\n            if (tile.canceled) {\n                log('trace', `Style ${this.name}: stop tile build because tile was canceled: ${tile.key}, post-calcTextSizes()`);\n                return [];\n            }\n\n            this.texts[tile.id] = texts || [];\n            if (!texts) {\n                Collision.abortTile(tile.id);\n                return [];\n            }\n\n            return this.buildTextLabels(tile, queue);\n        }\n        catch (e) { // error thrown if style has been removed from main thread\n            Collision.abortTile(tile.id);\n            return [];\n        }\n    },\n\n    async collideAndRenderTextLabels (tile, collision_group, queue) {\n        let labels = await this.prepareTextLabels(tile, queue);\n        if (labels.length === 0) {\n            Collision.collide([], collision_group, tile.id);\n            return {};\n        }\n\n        labels = await Collision.collide(labels, collision_group, tile.id);\n        if (tile.canceled) {\n            log('trace', `stop tile build because tile was canceled: ${tile.key}, post-collide()`);\n            return {};\n        }\n\n        let texts = this.texts[tile.id];\n        if (texts == null || labels.length === 0) {\n            return {};\n        }\n\n        this.cullTextStyles(texts, labels);\n\n        // set alignments\n        labels.forEach(q => {\n            let text_settings_key = q.text_settings_key;\n            let text_info = texts[text_settings_key] && texts[text_settings_key][q.text];\n            if (!text_info.text_settings.can_articulate){\n                text_info.align = text_info.align || {};\n                text_info.align[q.label.align] = {};\n            }\n            else {\n                // consider making it a set\n                if (!text_info.type) {\n                    text_info.type = [];\n                }\n\n                if (text_info.type.indexOf(q.label.type) === -1){\n                    text_info.type.push(q.label.type);\n                }\n            }\n        });\n\n        // second call to main thread, for rasterizing the set of texts\n        try {\n            const rasterized = await WorkerBroker.postMessage(this.main_thread_target+'.rasterizeTexts', tile.id, tile.key, texts);\n            if (tile.canceled) {\n                log('trace', `stop tile build because tile was canceled: ${tile.key}, post-rasterizeTexts()`);\n                return {};\n            }\n            return { labels, ...rasterized };\n        }\n        catch (e) { // error thrown if style has been removed from main thread\n            return {};\n        }\n    },\n\n    // Remove unused text/style combinations to avoid unnecessary rasterization\n    cullTextStyles(texts, labels) {\n        // Count how many times each text/style combination is used\n        for (let i=0; i < labels.length; i++) {\n            let label = labels[i];\n            texts[label.text_settings_key][label.text].ref++;\n        }\n\n        // Remove text/style combinations that have no visible labels\n        for (let style in texts) {\n            for (let text in texts[style]) {\n                // no labels for this text\n                if (texts[style][text].ref < 1) {\n                    delete texts[style][text];\n                }\n            }\n        }\n\n        for (let style in texts) {\n            // no labels for this style\n            if (Object.keys(texts[style]).length === 0) {\n                delete texts[style];\n            }\n        }\n    },\n\n    // Called on main thread from worker, to compute the size of each text string,\n    // were it to be rendered. This info is then used to perform initial label culling, *before*\n    // labels are actually rendered.\n    calcTextSizes (tile_id, texts) {\n        return this.canvas.textSizes(tile_id, texts);\n    },\n\n    // Called on main thread from worker, to create atlas of labels for a tile\n    async rasterizeTexts (tile_id, tile_key, texts) {\n        let canvas = new TextCanvas(); // one per style per tile (style may be rendering multiple tiles at once)\n        let max_texture_size = Math.min(this.max_texture_size, 2048); // cap each label texture at 2048x2048\n\n        let textures = canvas.setTextureTextPositions(texts, max_texture_size);\n        let texture_prefix = ['labels', this.name, tile_key, tile_id, text_texture_id, ''].join('-');\n        text_texture_id++;\n\n        textures = await canvas.rasterize(texts, textures, tile_id, texture_prefix, this.gl);\n        if (!textures) {\n            return {};\n        }\n        return { texts, textures };\n    },\n\n    preprocessText (draw) {\n        // Font settings are required\n        if (!draw || !draw.font || typeof draw.font !== 'object') {\n            return;\n        }\n\n        // Font weight\n        draw.font.weight = StyleParser.createPropertyCache(draw.font.weight);\n\n        // Colors\n        draw.font.fill = StyleParser.createPropertyCache(draw.font.fill || TextSettings.defaults.fill);\n        draw.font.alpha = StyleParser.createPropertyCache(draw.font.alpha);\n\n        if (draw.font.stroke) {\n            draw.font.stroke.color = StyleParser.createPropertyCache(draw.font.stroke.color);\n            draw.font.stroke.alpha = StyleParser.createPropertyCache(draw.font.stroke.alpha);\n        }\n\n        if (draw.font.background) {\n            draw.font.background.color = StyleParser.createPropertyCache(draw.font.background.color);\n            draw.font.background.alpha = StyleParser.createPropertyCache(draw.font.background.alpha);\n            draw.font.background.width = StyleParser.createPropertyCache(draw.font.background.width, StyleParser.parsePositiveNumber);\n            if (draw.font.background.stroke) {\n                draw.font.background.stroke.color = StyleParser.createPropertyCache(draw.font.background.stroke.color);\n                draw.font.background.stroke.alpha = StyleParser.createPropertyCache(draw.font.background.stroke.alpha);\n            }\n        }\n\n        // Convert font and text stroke sizes\n        draw.font.px_size = StyleParser.createPropertyCache(draw.font.size || TextSettings.defaults.size, TextCanvas.fontPixelSize, TextCanvas.fontPixelSize);\n\n        if (draw.font.stroke && draw.font.stroke.width != null) {\n            draw.font.stroke.width = StyleParser.createPropertyCache(draw.font.stroke.width, StyleParser.parsePositiveNumber);\n        }\n\n        if (draw.font.background && draw.font.background.stroke && draw.font.background.stroke.width != null) {\n            draw.font.background.stroke.width = StyleParser.createPropertyCache(draw.font.background.stroke.width, StyleParser.parsePositiveNumber);\n        }\n\n        // Offset (2d array)\n        draw.offset = StyleParser.createPropertyCache(draw.offset,\n            v => Array.isArray(v) && v.map(StyleParser.parseNumber)\n        );\n\n        // Buffer (1d value or or 2d array) - must be >= 0\n        draw.buffer = StyleParser.createPropertyCache(draw.buffer,\n            v => (Array.isArray(v) ? v : [v, v]).map(StyleParser.parsePositiveNumber)\n        );\n\n        // Repeat rules - for text labels, defaults to tile size\n        draw.repeat_distance = StyleParser.createPropertyCache(\n            draw.repeat_distance,\n            StyleParser.parsePositiveNumber\n        );\n\n        return draw;\n    },\n\n    // Additional text-specific layout settings\n    computeTextLayout (target, feature, draw, context, tile, text, text_settings, repeat_group_prefix, orientation) {\n        let layout = target || {};\n\n        // common settings w/points\n        layout = this.computeLayout(layout, feature, draw, context, tile);\n\n        // if draw group didn't specify repeat distance, override with text label-specific logic\n        if (draw.repeat_distance == null) {\n            // defaults: no limit on labels for point geometries,  tile size (256px) limit for other geometries\n            layout.repeat_distance = (context.geometry === 'point' ? 0 : Geo.tile_size);\n\n            if (layout.repeat_distance) {\n                layout.repeat_distance *= layout.units_per_pixel;\n                layout.repeat_scale = 1; // initial repeat pass in tile with full scale\n\n                if (typeof draw.repeat_group === 'function') {\n                    layout.repeat_group = draw.repeat_group(context); // dynamic repeat group\n                }\n                else {\n                    layout.repeat_group = draw.repeat_group; // pre-computed repeat group\n                }\n            }\n        }\n\n        // repeat rules include the text\n        if (layout.repeat_distance) {\n            if (repeat_group_prefix) {\n                layout.repeat_group += '/' + repeat_group_prefix;\n            }\n            layout.repeat_group += '/' + text;\n        }\n\n        // Max number of subdivisions to try\n        layout.subdiv = tile.overzoom2;\n\n        layout.align = draw.align;\n\n        // used to fudge width value as text may overflow bounding box if it has italic, bold, etc style\n        // TODO rename to more generic, not italic-specific (bold)\n        layout.italic = (text_settings.style !== 'normal');\n\n        // used to determine orientation of text if the text_source has a `left` or `right` key\n        if (orientation === 'right') {\n            layout.orientation = 1;\n        }\n        else if (orientation === 'left'){\n            layout.orientation = -1;\n        }\n\n        return layout;\n    }\n\n};\n","module.exports = normalFromMat4\n\n/**\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n*\n* @alias mat3.normalFromMat4\n* @param {mat3} out mat3 receiving operation result\n* @param {mat4} a Mat4 to derive the normal matrix from\n*\n* @returns {mat3} out\n*/\nfunction normalFromMat4(out, a) {\n  var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3]\n  var a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7]\n  var a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11]\n  var a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15]\n\n  var b00 = a00 * a11 - a01 * a10\n  var b01 = a00 * a12 - a02 * a10\n  var b02 = a00 * a13 - a03 * a10\n  var b03 = a01 * a12 - a02 * a11\n  var b04 = a01 * a13 - a03 * a11\n  var b05 = a02 * a13 - a03 * a12\n  var b06 = a20 * a31 - a21 * a30\n  var b07 = a20 * a32 - a22 * a30\n  var b08 = a20 * a33 - a23 * a30\n  var b09 = a21 * a32 - a22 * a31\n  var b10 = a21 * a33 - a23 * a31\n  var b11 = a22 * a33 - a23 * a32\n\n  // Calculate the determinant\n  var det = b00 * b11\n          - b01 * b10\n          + b02 * b09\n          + b03 * b08\n          - b04 * b07\n          + b05 * b06\n\n  if (!det) return null\n  det = 1.0 / det\n\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det\n\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det\n\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det\n\n  return out\n}\n","module.exports = invert\n\n/**\n * Inverts a mat3\n *\n * @alias mat3.invert\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nfunction invert(out, a) {\n  var a00 = a[0], a01 = a[1], a02 = a[2]\n  var a10 = a[3], a11 = a[4], a12 = a[5]\n  var a20 = a[6], a21 = a[7], a22 = a[8]\n\n  var b01 = a22 * a11 - a12 * a21\n  var b11 = -a22 * a10 + a12 * a20\n  var b21 = a21 * a10 - a11 * a20\n\n  // Calculate the determinant\n  var det = a00 * b01 + a01 * b11 + a02 * b21\n\n  if (!det) return null\n  det = 1.0 / det\n\n  out[0] = b01 * det\n  out[1] = (-a22 * a01 + a02 * a21) * det\n  out[2] = (a12 * a01 - a02 * a11) * det\n  out[3] = b11 * det\n  out[4] = (a22 * a00 - a02 * a20) * det\n  out[5] = (-a12 * a00 + a02 * a10) * det\n  out[6] = b21 * det\n  out[7] = (-a21 * a00 + a01 * a20) * det\n  out[8] = (a11 * a00 - a01 * a10) * det\n\n  return out\n}\n","module.exports = multiply;\n\n/**\n * Multiplies two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nfunction multiply(out, a, b) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n    // Cache only the current line of the second matrix\n    var b0  = b[0], b1 = b[1], b2 = b[2], b3 = b[3];  \n    out[0] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[1] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[2] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[3] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];\n    out[4] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[5] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[6] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[7] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];\n    out[8] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[9] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[10] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[11] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];\n    out[12] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[13] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[14] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[15] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n    return out;\n};","module.exports = translate;\n\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nfunction translate(out, a, v) {\n    var x = v[0], y = v[1], z = v[2],\n        a00, a01, a02, a03,\n        a10, a11, a12, a13,\n        a20, a21, a22, a23;\n\n    if (a === out) {\n        out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n        out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n        out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n        out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n    } else {\n        a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n        a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n        a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n        out[0] = a00; out[1] = a01; out[2] = a02; out[3] = a03;\n        out[4] = a10; out[5] = a11; out[6] = a12; out[7] = a13;\n        out[8] = a20; out[9] = a21; out[10] = a22; out[11] = a23;\n\n        out[12] = a00 * x + a10 * y + a20 * z + a[12];\n        out[13] = a01 * x + a11 * y + a21 * z + a[13];\n        out[14] = a02 * x + a12 * y + a22 * z + a[14];\n        out[15] = a03 * x + a13 * y + a23 * z + a[15];\n    }\n\n    return out;\n};","module.exports = scale;\n\n/**\n * Scales the mat4 by the dimensions in the given vec3\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nfunction scale(out, a, v) {\n    var x = v[0], y = v[1], z = v[2];\n\n    out[0] = a[0] * x;\n    out[1] = a[1] * x;\n    out[2] = a[2] * x;\n    out[3] = a[3] * x;\n    out[4] = a[4] * y;\n    out[5] = a[5] * y;\n    out[6] = a[6] * y;\n    out[7] = a[7] * y;\n    out[8] = a[8] * z;\n    out[9] = a[9] * z;\n    out[10] = a[10] * z;\n    out[11] = a[11] * z;\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};","module.exports = perspective;\n\n/**\n * Generates a perspective projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nfunction perspective(out, fovy, aspect, near, far) {\n    var f = 1.0 / Math.tan(fovy / 2),\n        nf = 1 / (near - far);\n    out[0] = f / aspect;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = f;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = (2 * far * near) * nf;\n    out[15] = 0;\n    return out;\n};","module.exports = identity;\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nfunction identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n};","var identity = require('./identity');\n\nmodule.exports = lookAt;\n\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nfunction lookAt(out, eye, center, up) {\n    var x0, x1, x2, y0, y1, y2, z0, z1, z2, len,\n        eyex = eye[0],\n        eyey = eye[1],\n        eyez = eye[2],\n        upx = up[0],\n        upy = up[1],\n        upz = up[2],\n        centerx = center[0],\n        centery = center[1],\n        centerz = center[2];\n\n    if (Math.abs(eyex - centerx) < 0.000001 &&\n        Math.abs(eyey - centery) < 0.000001 &&\n        Math.abs(eyez - centerz) < 0.000001) {\n        return identity(out);\n    }\n\n    z0 = eyex - centerx;\n    z1 = eyey - centery;\n    z2 = eyez - centerz;\n\n    len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n\n    x0 = upy * z2 - upz * z1;\n    x1 = upz * z0 - upx * z2;\n    x2 = upx * z1 - upy * z0;\n    len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n    if (!len) {\n        x0 = 0;\n        x1 = 0;\n        x2 = 0;\n    } else {\n        len = 1 / len;\n        x0 *= len;\n        x1 *= len;\n        x2 *= len;\n    }\n\n    y0 = z1 * x2 - z2 * x1;\n    y1 = z2 * x0 - z0 * x2;\n    y2 = z0 * x1 - z1 * x0;\n\n    len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n    if (!len) {\n        y0 = 0;\n        y1 = 0;\n        y2 = 0;\n    } else {\n        len = 1 / len;\n        y0 *= len;\n        y1 *= len;\n        y2 *= len;\n    }\n\n    out[0] = x0;\n    out[1] = y0;\n    out[2] = z0;\n    out[3] = 0;\n    out[4] = x1;\n    out[5] = y1;\n    out[6] = z1;\n    out[7] = 0;\n    out[8] = x2;\n    out[9] = y2;\n    out[10] = z2;\n    out[11] = 0;\n    out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n    out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n    out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n    out[15] = 1;\n\n    return out;\n};","module.exports = copy;\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nfunction copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};","// Partial import of gl-matrix via modularized stack-gl forks\n// https://github.com/toji/gl-matrix\n// https://github.com/stackgl\n\n// vec3\n\n// Substitute 64-bit version\n// We need the extra precision when multiplying matrices w/mercator projected values\nconst vec3 = {\n    fromValues (x, y, z) {\n        var out = new Float64Array(3);\n        out[0] = x;\n        out[1] = y;\n        out[2] = z;\n        return out;\n    }\n};\n\n\n// mat3\n\nimport {default as mat3_normalFromMat4} from 'gl-mat3/normal-from-mat4';\nimport {default as mat3_invert} from 'gl-mat3/invert';\n\nconst mat3 = {\n    normalFromMat4: mat3_normalFromMat4,\n    invert: mat3_invert\n};\n\n\n// mat4\n\nimport {default as mat4_multiply} from 'gl-mat4/multiply';\nimport {default as mat4_translate} from 'gl-mat4/translate';\nimport {default as mat4_scale} from 'gl-mat4/scale';\nimport {default as mat4_perspective} from 'gl-mat4/perspective';\nimport {default as mat4_lookAt} from 'gl-mat4/lookAt';\nimport {default as mat4_identity} from 'gl-mat4/identity';\nimport {default as mat4_copy} from 'gl-mat4/copy';\n\nconst mat4 = {\n    multiply: mat4_multiply,\n    translate: mat4_translate,\n    scale: mat4_scale,\n    perspective: mat4_perspective,\n    lookAt: mat4_lookAt,\n    identity: mat4_identity,\n    copy: mat4_copy\n};\n\n\nexport {vec3, mat3, mat4};\n","import Utils from '../utils/utils';\nimport ShaderProgram from '../gl/shader_program';\nimport {mat4, mat3, vec3} from '../utils/gl-matrix';\n\n// Abstract base class\nexport default class Camera {\n\n    constructor(name, view, options = {}) {\n        this.view = view;\n        this.position = options.position;\n        this.zoom = options.zoom;\n    }\n\n    // Create a camera by type name, factory-style\n    static create(name, view, config) {\n        switch (config.type) {\n        case 'isometric':\n            return new IsometricCamera(name, view, config);\n        case 'flat':\n            return new FlatCamera(name, view, config);\n        case 'perspective':\n            /* falls through */\n        default:\n            return new PerspectiveCamera(name, view, config);\n        }\n    }\n\n    // Update method called once per frame\n    update() {\n    }\n\n    // Called once per frame per program (e.g. for main render pass, then for each additional pass for feature selection, etc.)\n    setupProgram(/*program*/) {\n    }\n\n    // Sync camera position/zoom to scene view\n    updateView () {\n        if (this.position || this.zoom) {\n            var view = {};\n            if (this.position) {\n                view = { lng: this.position[0], lat: this.position[1], zoom: this.position[2] };\n            }\n            if (this.zoom) {\n                view.zoom = this.zoom;\n            }\n            this.view.setView(view);\n        }\n    }\n\n    // Set model-view and normal matrices\n    setupMatrices (matrices, program) {\n        // Model view matrix - transform tile space into view space (meters, relative to camera)\n        mat4.multiply(matrices.model_view32, this.view_matrix, matrices.model);\n        program.uniform('Matrix4fv', 'u_modelView', matrices.model_view32);\n\n        // Normal matrices - transforms surface normals into view space\n        mat3.normalFromMat4(matrices.normal32, matrices.model_view32);\n        mat3.invert(matrices.inverse_normal32, matrices.normal32);\n        program.uniform('Matrix3fv', 'u_normalMatrix', matrices.normal32);\n        program.uniform('Matrix3fv', 'u_inverseNormalMatrix', matrices.inverse_normal32);\n    }\n\n}\n\n/**\n    Perspective matrix projection\n\n    This is a specialized perspective camera that, given a desired camera focal length (which can also vary by zoom level),\n    constrains the camera height above the ground plane such that the displayed ground area of the map matches that of\n    a traditional web mercator map. This means you can set the camera location by [lat, lng, zoom] as you would a typical\n    web mercator map, then adjust the focal length as needed.\n\n    Vanishing point can also be adjusted to achieve different \"viewing angles\", e.g. instead of looking straight down into\n    the center of the viewport, the camera appears to be tilted at an angle. For example:\n\n    [0, 0] = looking towards center of viewport\n    [-250, -250] = looking 250 pixels from the viewport center to the lower-left corner\n    [400, 0] = looking 400 pixels to the right of the viewport center\n*/\nclass PerspectiveCamera extends Camera {\n\n    constructor(name, view, options = {}) {\n        super(name, view, options);\n        this.type = 'perspective';\n\n        // a single scalar, or pairs of stops mapping zoom levels, e.g. [zoom, focal length]\n        this.focal_length = options.focal_length;\n        this.fov = options.fov;\n        if (!this.focal_length && !this.fov) {\n            // Default focal length ranges by zoom\n            this.focal_length = [[16, 2], [17, 2.5], [18, 3], [19, 4], [20, 6]];\n        }\n\n        this.vanishing_point = options.vanishing_point || [0, 0]; // [x, y]\n        this.vanishing_point = this.vanishing_point.map(parseFloat); // we implicitly only support px units here\n        this.vanishing_point_skew = [];\n\n        this.position_meters = null;\n        this.view_matrix = new Float64Array(16);\n        this.projection_matrix = new Float32Array(16);\n\n        // 'camera' is the name of the shader block, e.g. determines where in the shader this code is injected\n        ShaderProgram.replaceBlock('camera', `\n            uniform mat4 u_projection;\n            uniform vec3 u_eye;\n            uniform vec2 u_vanishing_point;\n\n            void cameraProjection (inout vec4 position) {\n                position = u_projection * position;\n            }`\n        );\n    }\n\n    // Constrains the camera so that the viewable area matches given the viewport height\n    // (in world space, e.g. meters), given either a camera focal length or field-of-view\n    // (focal length is used if both are passed).\n    constrainCamera({ view_height, height, focal_length, fov }) {\n        // Solve for camera height\n        if (!height) {\n            // We have focal length, calculate FOV\n            if (focal_length) {\n                fov = Math.atan(1 / focal_length) * 2;\n            }\n            // We have FOV, calculate focal length\n            else if (fov) {\n                fov = fov * Math.PI / 180; // convert FOV degrees to radians\n                focal_length = 1 / Math.tan(fov / 2);\n            }\n\n            // Distance that camera should be from ground such that it fits the field of view expected\n            // for a conventional web mercator map at the current zoom level and camera focal length\n            height = view_height / 2 * focal_length;\n        }\n        // Solve for camera focal length / field-of-view\n        else {\n            focal_length = 2 * height / view_height;\n            fov = Math.atan(1 / focal_length) * 2;\n        }\n\n        return { view_height, height, focal_length, fov };\n    }\n\n    updateMatrices() {\n        // TODO: only re-calculate these vars when necessary\n\n        // Height of the viewport in meters at current zoom\n        var viewport_height = this.view.size.css.height * this.view.meters_per_pixel;\n\n        // Compute camera properties to fit desired view\n        var { height, fov } = this.constrainCamera({\n            view_height: viewport_height,\n            focal_length: Utils.interpolate(this.view.zoom, this.focal_length),\n            fov: Utils.interpolate(this.view.zoom, this.fov)\n        });\n\n        // View matrix\n        var position = [this.view.center.meters.x, this.view.center.meters.y, height];\n        this.position_meters = position;\n\n        // mat4.lookAt(this.view_matrix,\n        //     vec3.fromValues(...position),\n        //     vec3.fromValues(position[0], position[1], height - 1),\n        //     vec3.fromValues(0, 1, 0));\n        // Exclude camera height from view matrix\n        mat4.lookAt(this.view_matrix,\n            vec3.fromValues(position[0], position[1], 0),\n            vec3.fromValues(position[0], position[1], -1),\n            vec3.fromValues(0, 1, 0));\n\n        // Projection matrix\n        mat4.perspective(this.projection_matrix, fov, this.view.aspect, 1, height * 2);\n\n        // Convert vanishing point from pixels to viewport space\n        this.vanishing_point_skew[0] = this.vanishing_point[0] / this.view.size.css.width;\n        this.vanishing_point_skew[1] = this.vanishing_point[1] / this.view.size.css.height;\n\n        // Adjust projection matrix to include vanishing point skew\n        this.projection_matrix[8] = -this.vanishing_point_skew[0] * 2; // z column of x row, e.g. amount z skews x\n        this.projection_matrix[9] = -this.vanishing_point_skew[1] * 2; // z column of y row, e.g. amount z skews y\n\n        // Translate geometry into the distance so that camera is appropriate height above ground\n        // Additionally, adjust xy to compensate for any vanishing point skew, e.g. move geometry so that the displayed g\n        // plane of the map matches that expected by a traditional web mercator map at this [lat, lng, zoom].\n        mat4.translate(this.projection_matrix, this.projection_matrix,\n            vec3.fromValues(\n                viewport_height/2 * this.view.aspect * (-this.vanishing_point_skew[0] * 2),\n                viewport_height/2 * (-this.vanishing_point_skew[1] * 2),\n                0\n            )\n        );\n\n        // Include camera height in projection matrix\n        mat4.translate(this.projection_matrix, this.projection_matrix, vec3.fromValues(0, 0, -height));\n    }\n\n    update() {\n        super.update();\n        this.updateMatrices();\n    }\n\n    setupProgram(program) {\n        program.uniform('Matrix4fv', 'u_projection', this.projection_matrix);\n        program.uniform('3f', 'u_eye', [0, 0, this.position_meters[2]]);\n        program.uniform('2fv', 'u_vanishing_point', this.vanishing_point_skew);\n    }\n\n}\n\n// Isometric-style projection\n// Note: this is actually an \"axonometric\" projection, but I'm using the colloquial term isometric because it is more recognizable.\n// An isometric projection is a specific subset of axonometric projections.\n// 'axis' determines the xy skew applied to a vertex based on its z coordinate, e.g. [0, 1] axis causes buildings to be drawn\n// straight upwards on screen at their true height, [0, .5] would draw them up at half-height, [1, 0] would be sideways, etc.\nclass IsometricCamera extends Camera {\n\n    constructor(name, view, options = {}) {\n        super(name, view, options);\n        this.type = 'isometric';\n        this.axis = options.axis || { x: 0, y: 1 };\n        if (this.axis.length === 2) {\n            this.axis = { x: this.axis[0], y: this.axis[1] }; // allow axis to also be passed as 2-elem array\n        }\n\n        this.position_meters = null;\n        this.viewport_height = null;\n\n        this.view_matrix = new Float64Array(16);\n        this.projection_matrix = new Float32Array(16);\n\n        // 'camera' is the name of the shader block, e.g. determines where in the shader this code is injected\n        ShaderProgram.replaceBlock('camera', `\n            uniform mat4 u_projection;\n            uniform vec3 u_eye;\n            uniform vec2 u_vanishing_point;\n\n            void cameraProjection (inout vec4 position) {\n                position = u_projection * position;\n                // position.xy += position.z * u_isometric_axis;\n\n                // Reverse z for depth buffer so up is negative,\n                // and scale down values so objects higher than one screen height will not get clipped\n                // pull forward slightly to avoid going past far clipping plane\n                position.z = -position.z / 100. + 1. - 0.001;\n            }`\n        );\n    }\n\n    update() {\n        super.update();\n\n        this.viewport_height = this.view.size.css.height * this.view.meters_per_pixel;\n        var position = [this.view.center.meters.x, this.view.center.meters.y, this.viewport_height];\n        this.position_meters = position;\n\n        // View\n        mat4.identity(this.view_matrix);\n        mat4.translate(this.view_matrix, this.view_matrix, vec3.fromValues(-position[0], -position[1], 0));\n\n        // Projection\n        mat4.identity(this.projection_matrix);\n\n        // apply isometric skew\n        this.projection_matrix[8] = this.axis.x / this.view.aspect; // z column of x row, e.g. amount z skews x\n        this.projection_matrix[9] = this.axis.y;                    // z column of x row, e.g. amount z skews y\n\n        // convert meters to viewport\n        mat4.scale(this.projection_matrix, this.projection_matrix,\n            vec3.fromValues(\n                2 / this.view.size.meters.x,\n                2 / this.view.size.meters.y,\n                2 / this.view.size.meters.y\n            )\n        );\n    }\n\n    setupProgram(program) {\n        program.uniform('Matrix4fv', 'u_projection', this.projection_matrix);\n\n        program.uniform('3fv', 'u_eye', [0, 0, this.viewport_height]);\n        // program.uniform('3f', 'u_eye', this.viewport_height * this.axis.x, this.viewport_height * this.axis.y, this.viewport_height);\n        program.uniform('2fv', 'u_vanishing_point', [0, 0]);\n    }\n\n}\n\n// Flat projection (e.g. just top-down, no perspective) - a degenerate isometric camera\nclass FlatCamera extends IsometricCamera {\n\n    constructor(name, view, options = {}) {\n        super(name, view, options);\n        this.type = 'flat';\n    }\n\n    update() {\n        // Axis is fixed to (0, 0) for flat camera\n        this.axis.x = 0;\n        this.axis.y = 0;\n\n        super.update();\n    }\n\n}\n","import Geo from '../utils/geo';\nimport {TileID} from '../tile/tile_id';\nimport Camera from './camera';\nimport Utils from '../utils/utils';\nimport subscribeMixin from '../utils/subscribe';\nimport log from '../utils/log';\n\nexport const VIEW_PAN_SNAP_TIME = 0.5;\n\nexport default class View {\n\n    constructor (scene, options) {\n        subscribeMixin(this);\n\n        this.scene = scene;\n        this.createMatrices();\n\n        this.zoom = null;\n        this.center = null;\n        this.bounds = null;\n        this.meters_per_pixel = null;\n\n        this.panning = false;\n        this.panning_stop_at = 0;\n        this.pan_snap_timer = 0;\n        this.zoom_direction = 0;\n\n        this.user_input_at = 0;\n        this.user_input_timeout = 50;\n        this.user_input_active = false;\n\n        // Size of viewport in CSS pixels, device pixels, and mercator meters\n        this.size = {\n            css: {},\n            device: {},\n            meters: {}\n        };\n        this.aspect = null;\n\n        this.buffer = 0;\n        this.continuous_zoom = (typeof options.continuousZoom === 'boolean') ? options.continuousZoom : true;\n        this.wrap = (options.wrapView === false) ? false : true;\n        this.preserve_tiles_within_zoom = 1;\n\n        this.reset();\n    }\n\n    // Reset state before scene config is updated\n    reset () {\n        this.createCamera();\n    }\n\n    // Create camera\n    createCamera () {\n        let active_camera = this.getActiveCamera();\n        if (active_camera) {\n            this.camera = Camera.create(active_camera, this, this.scene.config.cameras[active_camera]);\n            this.camera.updateView();\n        }\n    }\n\n    // Get active camera - for public API\n    getActiveCamera () {\n        if (this.scene.config && this.scene.config.cameras) {\n            for (let name in this.scene.config.cameras) {\n                if (this.scene.config.cameras[name].active) {\n                    return name;\n                }\n            }\n\n            // If no camera set as active, use first one\n            let keys = Object.keys(this.scene.config.cameras);\n            return keys.length && keys[0];\n        }\n    }\n\n    // Set active camera and recompile - for public API\n    setActiveCamera (name) {\n        let prev = this.getActiveCamera();\n        if (prev === name) {\n            return name;\n        }\n\n        if (this.scene.config.cameras[name]) {\n            this.scene.config.cameras[name].active = true;\n\n            // Clear previously active camera\n            if (prev && this.scene.config.cameras[prev]) {\n                delete this.scene.config.cameras[prev].active;\n            }\n        }\n\n        this.scene.updateConfig({ rebuild: false, normalize: false });\n        return this.getActiveCamera();\n    }\n\n    // Update method called once per frame\n    update () {\n        if (this.camera != null && this.ready()) {\n            this.camera.update();\n        }\n        this.pan_snap_timer = ((+new Date()) - this.panning_stop_at) / 1000;\n        this.user_input_active = ((+new Date() - this.user_input_at) < this.user_input_timeout);\n    }\n\n    // Set logical pixel size of viewport\n    setViewportSize (width, height) {\n        this.size.css = { width, height };\n        this.size.device = {\n            width: Math.round(this.size.css.width * Utils.device_pixel_ratio),\n            height: Math.round(this.size.css.height * Utils.device_pixel_ratio)\n        };\n        this.aspect = this.size.css.width / this.size.css.height;\n        this.updateBounds();\n    }\n\n    // Set the map view, can be passed an object with lat/lng and/or zoom\n    setView ({ lng, lat, zoom } = {}) {\n        var changed = false;\n\n        // Set center\n        if (typeof lng === 'number' && typeof lat === 'number') {\n            if (!this.center || lng !== this.center.lng || lat !== this.center.lat) {\n                changed = true;\n                this.center = { lng, lat };\n            }\n        }\n\n        // Set zoom\n        if (typeof zoom === 'number' && zoom !== this.zoom) {\n            changed = true;\n            this.setZoom(zoom);\n        }\n\n        if (changed) {\n            this.updateBounds();\n        }\n        return changed;\n    }\n\n    setZoom (zoom) {\n        let last_tile_zoom = this.tile_zoom;\n        let tile_zoom = this.baseZoom(zoom);\n        if (!this.continuous_zoom) {\n            zoom = tile_zoom;\n        }\n\n        if (tile_zoom !== last_tile_zoom) {\n            this.zoom_direction = tile_zoom > last_tile_zoom ? 1 : -1;\n        }\n\n        this.zoom = zoom;\n        this.tile_zoom = tile_zoom;\n\n        this.updateBounds();\n        this.scene.requestRedraw();\n    }\n\n    // Choose the base zoom level to use for a given fractional zoom\n    baseZoom (zoom) {\n        return Math.floor(zoom);\n    }\n\n    setPanning (panning) {\n        this.panning = panning;\n        if (!this.panning) {\n            this.panning_stop_at = (+new Date());\n        }\n    }\n\n    markUserInput () {\n        this.user_input_at = (+new Date());\n    }\n\n    ready () {\n        // TODO: better concept of \"readiness\" state?\n        if (typeof this.size.css.width !== 'number' ||\n            typeof this.size.css.height !== 'number' ||\n            this.center == null ||\n            typeof this.zoom !== 'number') {\n            return false;\n        }\n        return true;\n    }\n\n    // Calculate viewport bounds based on current center and zoom\n    updateBounds () {\n        if (!this.ready()) {\n            return;\n        }\n\n        this.meters_per_pixel = Geo.metersPerPixel(this.zoom);\n\n        // Size of the half-viewport in meters at current zoom\n        this.size.meters = {\n            x: this.size.css.width * this.meters_per_pixel,\n            y: this.size.css.height * this.meters_per_pixel\n        };\n\n        // Center of viewport in meters, and tile\n        const m = Geo.latLngToMeters([this.center.lng, this.center.lat]);\n        this.center.meters = { x: m[0], y: m[1] };\n\n        this.center.tile = Geo.tileForMeters([this.center.meters.x, this.center.meters.y], this.tile_zoom);\n\n        // Bounds in meters\n        this.bounds = {\n            sw: {\n                x: this.center.meters.x - this.size.meters.x / 2,\n                y: this.center.meters.y - this.size.meters.y / 2\n            },\n            ne: {\n                x: this.center.meters.x + this.size.meters.x / 2,\n                y: this.center.meters.y + this.size.meters.y / 2\n            }\n        };\n\n        this.scene.tile_manager.updateTilesForView();\n\n        this.trigger('move');\n        this.scene.requestRedraw(); // TODO automate via move event?\n    }\n\n    findVisibleTileCoordinates () {\n        if (!this.bounds) {\n            return [];\n        }\n\n        let z = this.tile_zoom;\n        let sw = Geo.tileForMeters([this.bounds.sw.x, this.bounds.sw.y], z);\n        let ne = Geo.tileForMeters([this.bounds.ne.x, this.bounds.ne.y], z);\n\n        let range = [\n            sw.x - this.buffer, ne.x + this.buffer, // x\n            ne.y - this.buffer, sw.y + this.buffer  // y\n        ];\n\n        if (this.wrap === false) { // prevent tiles from wrapping across antimeridian\n            let tmax = (1 << z) - 1; // max xy tile number for this zoom\n            range = range.map(v => Math.min(Math.max(0, v), tmax));\n        }\n\n        let coords = [];\n        for (let x = range[0]; x <= range[1]; x++) {\n            for (let y = range[2]; y <= range[3]; y++) {\n                coords.push(TileID.coord({ x, y, z }));\n            }\n        }\n        return coords;\n    }\n\n    // Remove tiles too far outside of view\n    pruneTilesForView () {\n        // TODO: will this function ever be called when view isn't ready?\n        if (!this.ready()) {\n            return;\n        }\n\n        this.scene.tile_manager.removeTiles(tile => {\n            // Ignore visible tiles\n            if (tile.visible || tile.isProxy()) {\n                return false;\n            }\n\n            // Remove tiles outside given zoom that are still loading\n            if (tile.loading && tile.style_z !== this.tile_zoom) {\n                return true;\n            }\n\n            // Discard if too far from current zoom\n            const zdiff = Math.abs(tile.style_z - this.tile_zoom);\n            const preserve_tiles_within_zoom = (tile.preserve_tiles_within_zoom != null ?\n                tile.preserve_tiles_within_zoom : this.preserve_tiles_within_zoom); // optionally tile source specific\n            if (zdiff > preserve_tiles_within_zoom) {\n                return true;\n            }\n\n            // Discard tiles outside an area surrounding the viewport, handling tiles at different zooms\n            // Get min and max tiles for the viewport, at the scale of the tile currently being evaluated\n            const view_buffer = this.meters_per_pixel * Geo.tile_size; // buffer area to keep tiles surrounding viewport\n            const view_tile_min = TileID.coordAtZoom(\n                Geo.tileForMeters(\n                    [\n                        this.center.meters.x - this.size.meters.x/2 - view_buffer,\n                        this.center.meters.y + this.size.meters.y/2 + view_buffer\n                    ],\n                    this.tile_zoom),\n                tile.coords.z);\n            const view_tile_max = TileID.coordAtZoom(\n                Geo.tileForMeters(\n                    [\n                        this.center.meters.x + this.size.meters.x/2 + view_buffer,\n                        this.center.meters.y - this.size.meters.y/2 - view_buffer\n                    ],\n                    this.tile_zoom),\n                tile.coords.z);\n\n            if (tile.coords.x < view_tile_min.x || tile.coords.x > view_tile_max.x ||\n                tile.coords.y < view_tile_min.y || tile.coords.y > view_tile_max.y) {\n                log('trace', `View: remove tile ${tile.key} (as ${tile.coords.key}) ` +\n                    `for being too far out of visible area (${view_tile_min.key}, ${view_tile_max.key})`);\n                return true;\n            }\n            return false;\n        });\n    }\n\n    // Allocate model-view matrices\n    // 64-bit versions are for CPU calcuations\n    // 32-bit versions are downsampled and sent to GPU\n    createMatrices () {\n        this.matrices = {};\n        this.matrices.model = new Float64Array(16);\n        this.matrices.model32 = new Float32Array(16);\n        this.matrices.model_view = new Float64Array(16);\n        this.matrices.model_view32 = new Float32Array(16);\n        this.matrices.normal = new Float64Array(9);\n        this.matrices.normal32 = new Float32Array(9);\n        this.matrices.inverse_normal32 = new Float32Array(9);\n    }\n\n    // Calculate and set model/view and normal matrices for a tile\n    setupTile (tile, program) {\n        // Tile-specific state\n        // TODO: calc these once per tile (currently being needlessly re-calculated per-tile-per-style)\n        tile.setupProgram(this.matrices, program);\n\n        // Model-view and normal matrices\n        this.camera.setupMatrices(this.matrices, program);\n    }\n\n    // Set general uniforms that must be updated once per program\n    setupProgram (program) {\n        program.uniform('2fv', 'u_resolution', [this.size.device.width, this.size.device.height]);\n        program.uniform('3fv', 'u_map_position', [this.center.meters.x, this.center.meters.y, this.zoom]);\n        program.uniform('1f', 'u_meters_per_pixel', this.meters_per_pixel);\n        program.uniform('1f', 'u_device_pixel_ratio', Utils.device_pixel_ratio);\n        program.uniform('1f', 'u_view_pan_snap_timer', this.pan_snap_timer);\n        program.uniform('1i', 'u_view_panning', this.panning);\n\n        this.camera.setupProgram(program);\n    }\n\n    // View requires some animation, such as after panning stops\n    isAnimating () {\n        return (this.pan_snap_timer <= VIEW_PAN_SNAP_TIME);\n    }\n\n}\n","// Point + text label rendering style\n\nimport log from '../../utils/log';\nimport {Style} from '../style';\nimport StyleParser from '../style_parser';\nimport gl from '../../gl/constants'; // web workers don't have access to GL context, so import all GL constants\nimport VertexLayout from '../../gl/vertex_layout';\nimport { buildQuadForPoint } from '../../builders/points';\nimport Texture from '../../gl/texture';\nimport Geo from '../../utils/geo';\nimport Collision from '../../labels/collision';\nimport LabelPoint from '../../labels/label_point';\nimport placePointsOnLine from '../../labels/point_placement';\nimport {TextLabels} from '../text/text_labels';\nimport {VIEW_PAN_SNAP_TIME} from '../../scene/view';\nimport debugSettings from '../../utils/debug_settings';\n\nimport points_vs from './points_vertex.glsl';\nimport points_fs from './points_fragment.glsl';\n\nconst PLACEMENT = LabelPoint.PLACEMENT;\n\nexport const Points = Object.create(Style);\n\nconst SHADER_POINT_VARIANT = '__shader_point';\n\n// texture types\nconst TANGRAM_POINT_TYPE_TEXTURE = 1; // style texture/sprites (assigned by user)\nconst TANGRAM_POINT_TYPE_LABEL = 2;   // labels (generated by rendering labels to canvas)\nconst TANGRAM_POINT_TYPE_SHADER = 3;  // point (drawn in shader)\n\n// default point size in pixels\nconst DEFAULT_POINT_SIZE = 16;\n\n// Mixin text label methods\nObject.assign(Points, TextLabels);\n\nObject.assign(Points, {\n    name: 'points',\n    built_in: true,\n    vertex_shader_src: points_vs,\n    fragment_shader_src: points_fs,\n    selection: true,  // enable feature selection\n    collision: true,  // style includes a collision pass\n    blend: 'overlay', // overlays drawn on top of all other styles, with blending\n\n    init(options = {}) {\n        Style.init.call(this, options);\n\n        // Shader defines\n        this.setupDefines();\n\n        // Include code for SDF-drawn shader points\n        this.defines.TANGRAM_HAS_SHADER_POINTS = true;\n\n        // texture types\n        this.defines.TANGRAM_POINT_TYPE_TEXTURE = TANGRAM_POINT_TYPE_TEXTURE;\n        this.defines.TANGRAM_POINT_TYPE_LABEL = TANGRAM_POINT_TYPE_LABEL;\n        this.defines.TANGRAM_POINT_TYPE_SHADER = TANGRAM_POINT_TYPE_SHADER;\n\n        this.collision_group_points = this.name+'-points';\n        this.collision_group_text = this.name+'-text';\n\n        // Stenciling proxy tiles (to avoid compounding alpha artifacts) doesn't work well with\n        // points/text labels, which have pure transparent pixels that interfere with the stencil buffer,\n        // causing a \"cut-out\"/\"x-ray\" effect (preventing pixels that would usually be covered by proxy tiles\n        // underneath from being rendered).\n        this.stencil_proxy_tiles = false;\n\n        this.reset();\n    },\n\n    // Setup defines common to points base and child (text) styles\n    setupDefines () {\n        // If we're not rendering as overlay, we need a layer attribute\n        if (this.blend !== 'overlay') {\n            this.defines.TANGRAM_LAYER_ORDER = true;\n        }\n\n        // Fade in labels\n        if (debugSettings.suppress_label_fade_in === true) {\n            this.fade_in_time = 0;\n            this.defines.TANGRAM_FADE_IN_RATE = null;\n        }\n        else {\n            this.fade_in_time = 0.15; // time in seconds\n            this.defines.TANGRAM_FADE_IN_RATE = 1 / this.fade_in_time;\n        }\n\n        // Snap points to pixel grid after panning stop\n        if (debugSettings.suppress_label_snap_animation !== true) {\n            this.defines.TANGRAM_VIEW_PAN_SNAP_RATE = 1 / VIEW_PAN_SNAP_TIME; // inverse time in seconds\n        }\n\n        // Show hidden labels for debugging\n        if (debugSettings.show_hidden_labels === true) {\n            this.defines.TANGRAM_SHOW_HIDDEN_LABELS = true;\n        }\n\n        // Enable wireframe for debugging\n        if (debugSettings.wireframe === true) {\n            this.defines.TANGRAM_WIREFRAME = true;\n        }\n    },\n\n    reset () {\n        this.queues = {};\n        this.resetText();\n        this.texture_missing_sprites = {}; // track which missing sprites we've found (reduce dupe log messages)\n    },\n\n    // Override to queue features instead of processing immediately\n    addFeature (feature, draw, context) {\n        let tile = context.tile;\n        if (tile.generation !== this.generation) {\n            return;\n        }\n\n        // Point styling\n        let style = {};\n        style.color = this.parseColor(draw.color, context);\n        style.texture = draw.texture;   // optional point texture, specified in `draw` or at style level\n        style.label_texture = null;     // assigned by labelling code if needed\n        style.blend_order = draw.blend_order; // copy pre-computed blend order\n\n        // require color or texture\n        if (!style.color && !style.texture) {\n            return;\n        }\n\n        style.alpha = StyleParser.evalCachedProperty(draw.alpha, context); // optional alpha override\n\n        // optional sprite and texture\n        let sprite_info;\n        if (this.hasSprites(style)) {\n            // populate sprite_info object with used sprites\n            sprite_info = this.parseSprite(style, draw, context);\n\n            if (sprite_info) {\n                style.texcoords = sprite_info.texcoords;\n            }\n            else {\n                // sprites are defined in the style's texture, but none are used in the current layer\n                log({ level: 'debug', once: true }, `Layer group '${draw.layers.join(', ')}' ` +\n                    `uses a texture '${style.texture}', but doesn't specify which sprite to draw. ` +\n                    'Features that match this layer group won\\'t be drawn without specifying the sprite with the ' +\n                    '\\'sprite\\' or \\'sprite_default\\' properties. The merged draw parameters for this layer group are:', draw).then(logged => {\n                    if (logged) {\n                        log('debug', `Example feature for layer group '${draw.layers.join(', ')}'`, feature);\n                    }\n                });\n                return;\n            }\n        } else if (draw.sprite) {\n            // sprite specified in the draw layer but no sprites defined in the texture\n            log({ level: 'warn', once: true }, `Layer group '${draw.layers.join(', ')}' ` +\n                `specifies sprite '${draw.sprite}', but the texture '${draw.texture}' doesn't define any sprites. ` +\n                'Features that match this layer group won\\'t be drawn. The merged draw parameters for this layer group are:', draw);\n            return;\n        }\n\n        this.calcSize(draw, style, sprite_info, context);\n\n        // incorporate outline into size\n        if (draw.outline) {\n            style.outline_width = StyleParser.evalCachedProperty(draw.outline.width, context) || StyleParser.defaults.outline.width;\n            style.outline_color = this.parseColor(draw.outline.color, context);\n        }\n\n        style.outline_edge_pct = 0;\n        if (style.outline_width && style.outline_color) {\n            // adjust size and UVs for outline\n            let outline_width = style.outline_width;\n            style.size[0] += outline_width;\n            style.size[1] += outline_width;\n            style.outline_edge_pct = outline_width / Math.min(style.size[0], style.size[1]) * 2; // UV distance at which outline starts\n            style.outline_alpha = StyleParser.evalCachedProperty(draw.outline.alpha, context); // optional alpha override\n        }\n\n        // size will be scaled to 16-bit signed int, so max allowed width + height of 256 pixels\n        style.size[0] = Math.min(style.size[0], 256);\n        style.size[1] = Math.min(style.size[1], 256);\n\n        // Placement strategy\n        style.placement = draw.placement;\n        style.placement_min_length_ratio = StyleParser.evalCachedProperty(draw.placement_min_length_ratio, context);\n\n        // Spacing parameter (in pixels) to equally space points along a line\n        if (style.placement === PLACEMENT.SPACED && draw.placement_spacing) {\n            style.placement_spacing = StyleParser.evalCachedProperty(draw.placement_spacing, context);\n        }\n\n        // Angle parameter (can be a number or the string \"auto\")\n        style.angle = StyleParser.evalProperty(draw.angle, context) || 0;\n\n        // points can be placed off the ground\n        style.z = StyleParser.evalCachedDistanceProperty(draw.z, context) || StyleParser.defaults.z;\n\n        style.tile_edges = draw.tile_edges; // usually activated for debugging, or rare visualization needs\n\n        this.computeLayout(style, feature, draw, context, tile);\n\n        // Text styling\n        let tf =\n            draw.text &&\n            draw.text.visible !== false && // explicitly handle `visible` property for nested text\n            this.parseTextFeature(feature, draw.text, context, tile);\n\n        if (Array.isArray(tf)) {\n            tf = null; // NB: boundary labels not supported for point label attachments, should log warning\n            log({ level: 'warn', once: true }, `Layer group '${draw.layers.join(', ')}': ` +\n                'cannot use boundary labels (e.g. \\'text_source: { left: ..., right: ... }\\') for \\'text\\' labels attached to \\'points\\'; ' +\n                `provided 'text_source' value was ${JSON.stringify(draw.text.text_source)}`);\n        }\n\n        if (tf) {\n            tf.layout.parent = style; // parent point will apply additional anchor/offset to text\n\n            // Text labels have a default priority of 0.5 below their parent point (+0.5, priority is lower-is-better)\n            // This can be overriden, as long as it is less than or equal to the default\n            tf.layout.priority = draw.text.priority ? Math.max(tf.layout.priority, style.priority + 0.5) : (style.priority + 0.5);\n\n            Collision.addStyle(this.collision_group_text, tile.id);\n        }\n\n        this.queueFeature({ feature, draw, context, style, text_feature: tf }, tile); // queue the feature for later processing\n\n        // Register with collision manager\n        Collision.addStyle(this.collision_group_points, tile.id);\n    },\n\n    // Calcuate the size for the current point feature\n    calcSize (draw, style, sprite_info, context) {\n        // point size defined explicitly, or defaults to sprite size, or generic fallback\n        style.size = draw.size;\n        if (!style.size) {\n            // a 'size' property has not been set in the draw layer -\n            // use the sprite size if it exists and a generic fallback if it doesn't\n            style.size = (sprite_info && sprite_info.css_size) || [DEFAULT_POINT_SIZE, DEFAULT_POINT_SIZE];\n        }\n        else {\n            // check for a cached size, passing the texture and any sprite references\n            style.size = StyleParser.evalCachedPointSizeProperty(draw.size, sprite_info, Texture.textures[style.texture], context);\n            if (style.size == null) {\n                // the StyleParser couldn't evaluate a sprite size\n                log({ level: 'warn', once: true }, `Layer group '${draw.layers.join(', ')}': ` +\n                    `'size' (${JSON.stringify(draw.size.value)}) couldn't be interpreted, features that match ` +\n                    'this layer group won\\'t be drawn');\n                return;\n            }\n            else if (typeof style.size === 'number') {\n                style.size = [style.size, style.size]; // convert 1d size to 2d\n            }\n        }\n    },\n\n    hasSprites (style) {\n        return style.texture && Texture.textures[style.texture] && Texture.textures[style.texture].sprites;\n    },\n\n    // Generate a sprite_info object\n    getSpriteInfo (style, sprite) {\n        let info = Texture.textures[style.texture].sprites[sprite] && Texture.getSpriteInfo(style.texture, sprite);\n        if (sprite && !info) {\n            // track missing sprites (per texture)\n            this.texture_missing_sprites[style.texture] = this.texture_missing_sprites[style.texture] || {};\n            if (!this.texture_missing_sprites[style.texture][sprite]) { // only log each missing sprite once\n                log('debug', `Style: in style '${this.name}', could not find sprite '${sprite}' for texture '${style.texture}'`);\n                this.texture_missing_sprites[style.texture][sprite] = true;\n            }\n        }\n        else if (info) {\n            info.sprite = sprite;\n        }\n        return info;\n    },\n\n    // Check a sprite name against available sprites and return a sprite_info object\n    parseSprite (style, draw, context) {\n        // check for functions\n        let sprite = StyleParser.evalProperty(draw.sprite, context);\n        let sprite_info = this.getSpriteInfo(style, sprite) || this.getSpriteInfo(style, draw.sprite_default);\n        return sprite_info;\n    },\n\n    // Queue features for deferred processing (collect all features first so we can do collision on the whole group)\n    queueFeature (q, tile) {\n        if (!this.tile_data[tile.id] || !this.queues[tile.id]) {\n            this.startData(tile);\n        }\n        this.queues[tile.id] = this.queues[tile.id] || [];\n        this.queues[tile.id].push(q);\n    },\n\n    // Override\n    async endData (tile) {\n        if (tile.canceled) {\n            log('trace', `Style ${this.name}: stop tile build because tile was canceled: ${tile.key}`);\n            return null;\n        }\n\n        let queue = this.queues[tile.id];\n        delete this.queues[tile.id];\n\n        // For each point feature, create one or more labels\n        let text_objs = [];\n        let point_objs = [];\n\n        queue.forEach(q => {\n            let style = q.style;\n            let feature = q.feature;\n            let geometry = feature.geometry;\n            let feature_labels = this.buildLabels(style.size, geometry, style);\n            for (let i = 0; i < feature_labels.length; i++) {\n                let label = feature_labels[i];\n                let point_obj = {\n                    feature,\n                    draw: q.draw,\n                    context: q.context,\n                    style,\n                    label\n                };\n                point_objs.push(point_obj);\n\n                if (q.text_feature) {\n                    let text_obj = {\n                        feature,\n                        draw: q.text_feature.draw,\n                        context: q.context,\n                        text: q.text_feature.text,\n                        text_settings_key: q.text_feature.text_settings_key,\n                        layout: q.text_feature.layout,\n                        point_label: label,\n                        linked: point_obj   // link so text only renders when parent point is placed\n                    };\n                    text_objs.push(text_obj);\n\n                    // Unless text feature is optional, create a two-way link so that parent\n                    // point will only render when text is also placed\n                    if (!q.draw.text.optional) {\n                        point_obj.linked = text_obj; // two-way link\n                    }\n                }\n            }\n        });\n\n        // Collide both points and text, then build features\n        const [, { labels, texts, textures }] = await Promise.all([\n            // Points\n            Collision.collide(point_objs, this.collision_group_points, tile.id).then(point_objs => {\n                point_objs.forEach(q => {\n                    this.feature_style = q.style;\n                    this.feature_style.label = q.label;\n                    this.feature_style.linked = q.linked; // TODO: move linked into label to avoid extra prop tracking?\n                    Style.addFeature.call(this, q.feature, q.draw, q.context);\n                });\n            }),\n            // Labels\n            this.collideAndRenderTextLabels(tile, this.collision_group_text, text_objs)\n        ]);\n\n        // Process labels\n        if (labels && texts) {\n            // Build queued features\n            labels.forEach(q => {\n                let text_settings_key = q.text_settings_key;\n                let text_info = texts[text_settings_key] && texts[text_settings_key][q.text];\n\n                // setup styling object expected by Style class\n                let style = this.feature_style;\n                style.label = q.label;\n                style.linked = q.linked; // TODO: move linked into label to avoid extra prop tracking?\n                style.size = text_info.size.logical_size;\n                style.texcoords = text_info.align[q.label.align].texcoords;\n                style.label_texture = textures[text_info.align[q.label.align].texture_id];\n                style.blend_order = q.draw.blend_order; // copy blend order from parent point\n\n                Style.addFeature.call(this, q.feature, q.draw, q.context);\n            });\n        }\n        this.freeText(tile);\n\n        // Finish tile mesh\n        const tile_data = await Style.endData.call(this, tile);\n        // Attach tile-specific label atlas to mesh as a texture uniform\n        if (tile_data && textures && textures.length) {\n            tile_data.textures = tile_data.textures || [];\n            tile_data.textures.push(...textures); // assign texture ownership to tile\n        }\n        return tile_data;\n    },\n\n    _preprocess (draw) {\n        draw.color = StyleParser.createColorPropertyCache(draw.color);\n        draw.alpha = StyleParser.createPropertyCache(draw.alpha);\n        draw.texture = (draw.texture !== undefined ? draw.texture : this.texture); // optional or default texture\n        draw.blend_order = this.getBlendOrderForDraw(draw); // from draw block, or fall back on default style blend order\n\n        if (draw.outline) {\n            draw.outline.color = StyleParser.createColorPropertyCache(draw.outline.color);\n            draw.outline.alpha = StyleParser.createPropertyCache(draw.outline.alpha);\n            draw.outline.width = StyleParser.createPropertyCache(draw.outline.width, StyleParser.parsePositiveNumber);\n        }\n\n        draw.z = StyleParser.createPropertyCache(draw.z, StyleParser.parseUnits);\n\n        // Size (1d value or 2d array)\n        try {\n            draw.size = StyleParser.createPointSizePropertyCache(draw.size, draw.texture);\n        }\n        catch(e) {\n            log({ level: 'warn', once: true }, `Layer group '${draw.layers.join(', ')}': ` +\n                `${e} (${JSON.stringify(draw.size)}), features that match this layer group won't be drawn.`);\n            return null;\n        }\n\n        // Offset (2d array)\n        draw.offset = StyleParser.createPropertyCache(draw.offset,\n            v => Array.isArray(v) && v.map(StyleParser.parseNumber)\n        );\n\n        // Buffer (1d value or or 2d array) - must be >= 0\n        draw.buffer = StyleParser.createPropertyCache(draw.buffer,\n            v => (Array.isArray(v) ? v : [v, v]).map(StyleParser.parsePositiveNumber)\n        );\n\n        // Repeat rules - no repeat limitation for points by default\n        draw.repeat_distance = StyleParser.createPropertyCache(draw.repeat_distance, StyleParser.parseNumber);\n\n        // Placement strategies\n        draw.placement = PLACEMENT[draw.placement && draw.placement.toUpperCase()];\n        if (draw.placement == null) {\n            draw.placement = PLACEMENT.VERTEX;\n        }\n\n        draw.placement_spacing = draw.placement_spacing != null ? draw.placement_spacing : 80; // default spacing\n        draw.placement_spacing = StyleParser.createPropertyCache(draw.placement_spacing, StyleParser.parsePositiveNumber);\n\n        draw.placement_min_length_ratio = draw.placement_min_length_ratio != null ? draw.placement_min_length_ratio : 1;\n        draw.placement_min_length_ratio = StyleParser.createPropertyCache(draw.placement_min_length_ratio, StyleParser.parsePositiveNumber);\n\n        if (typeof draw.angle === 'number') {\n            draw.angle = draw.angle * Math.PI / 180; // convert static value to radians\n        }\n        else if (typeof draw.angle === 'function') {\n            // convert function return value to radians\n            const angle_func = draw.angle;\n            draw.angle = context => angle_func(context) * Math.PI / 180;\n        }\n        else {\n            draw.angle = draw.angle || 0; // angle can be a string like \"auto\" (use angle of geometry)\n        }\n\n        // Optional text styling\n        draw.text = this.preprocessText(draw.text); // will return null if valid text styling wasn't provided\n        if (draw.text) {\n            draw.text.key = draw.key; // inherits parent properties\n            draw.text.group = draw.group;\n            draw.text.layers = draw.layers;\n            draw.text.order = draw.order;\n            draw.text.blend_order = draw.blend_order;\n            draw.text.repeat_group = (draw.text.repeat_group != null ? draw.text.repeat_group : draw.repeat_group);\n            draw.text.anchor = draw.text.anchor || this.default_anchor;\n            draw.text.optional = (typeof draw.text.optional === 'boolean') ? draw.text.optional : false; // default text to required\n            draw.text.interactive = draw.text.interactive || draw.interactive; // inherits from point\n        }\n\n        return draw;\n    },\n\n    // Default to trying all anchor placements\n    default_anchor: ['bottom', 'top', 'right', 'left'],\n\n    // Compute label layout-related properties\n    computeLayout (target, feature, draw, context, tile) {\n        let layout = target || {};\n        layout.id = feature;\n        layout.units_per_pixel = tile.units_per_pixel || 1;\n\n        // collision flag\n        layout.collide = (draw.collide === false) ? false : true;\n\n        // label anchors (point labels only)\n        // label position will be adjusted in the given direction, relative to its original point\n        // one of: left, right, top, bottom, top-left, top-right, bottom-left, bottom-right\n        layout.anchor = draw.anchor;\n\n        // label offset and buffer in pixel (applied in screen space)\n        layout.offset = StyleParser.evalCachedProperty(draw.offset, context) || StyleParser.zeroPair;\n        layout.buffer = StyleParser.evalCachedProperty(draw.buffer, context) || StyleParser.zeroPair;\n\n        // repeat rules\n        layout.repeat_distance = StyleParser.evalCachedProperty(draw.repeat_distance, context);\n        if (layout.repeat_distance) {\n            layout.repeat_distance *= layout.units_per_pixel;\n            layout.repeat_scale = 1; // initial repeat pass in tile with full scale\n\n            if (typeof draw.repeat_group === 'function') {\n                layout.repeat_group = draw.repeat_group(context); // dynamic repeat group\n            }\n            else {\n                // default to top-level layer name\n                // (e.g. all labels under `roads` layer, including sub-layers, are in one repeat group)\n                layout.repeat_group = draw.repeat_group || context.layer;\n            }\n        }\n\n        // label priority (lower is higher)\n        let priority = draw.priority;\n        if (priority != null) {\n            if (typeof priority === 'function') {\n                priority = priority(context);\n            }\n        }\n        else {\n            priority = -1 >>> 0; // default to max priority value if none set\n        }\n        layout.priority = priority;\n\n        return layout;\n    },\n\n    // Implements label building for TextLabels mixin\n    buildTextLabels (tile, feature_queue) {\n        let labels = [];\n        for (let f=0; f < feature_queue.length; f++) {\n            let fq = feature_queue[f];\n            let text_info = this.texts[tile.id][fq.text_settings_key][fq.text];\n            let size = text_info.size.collision_size;\n            fq.label = new LabelPoint(fq.point_label.position, size, fq.layout);\n            labels.push(fq);\n        }\n        return labels;\n    },\n\n    // Builds one or more point labels for a geometry\n    buildLabels (size, geometry, layout) {\n        let labels = [];\n\n        if (geometry.type === 'Point') {\n            labels.push(new LabelPoint(geometry.coordinates, size, layout, layout.angle));\n        }\n        else if (geometry.type === 'MultiPoint') {\n            let points = geometry.coordinates;\n            for (let i = 0; i < points.length; ++i) {\n                let point = points[i];\n                labels.push(new LabelPoint(point, size, layout, layout.angle));\n            }\n        }\n        else if (geometry.type === 'LineString') {\n            let line = geometry.coordinates;\n            let point_labels = placePointsOnLine(line, size, layout);\n            for (let i = 0; i < point_labels.length; ++i) {\n                labels.push(point_labels[i]);\n            }\n        }\n        else if (geometry.type === 'MultiLineString') {\n            let lines = geometry.coordinates;\n            for (let ln = 0; ln < lines.length; ln++) {\n                let line = lines[ln];\n                let point_labels = placePointsOnLine(line, size, layout);\n                for (let i = 0; i < point_labels.length; ++i) {\n                    labels.push(point_labels[i]);\n                }\n            }\n        }\n        else if (geometry.type === 'Polygon') {\n            // Point at polygon centroid (of outer ring)\n            if (layout.placement === PLACEMENT.CENTROID) {\n                let centroid = Geo.centroid(geometry.coordinates);\n                if (centroid) { // skip degenerate polygons\n                    labels.push(new LabelPoint(centroid, size, layout, layout.angle));\n                }\n            }\n            // Point at each polygon vertex (all rings)\n            else {\n                let rings = geometry.coordinates;\n                for (let ln = 0; ln < rings.length; ln++) {\n                    let point_labels = placePointsOnLine(rings[ln], size, layout);\n                    for (let i = 0; i < point_labels.length; ++i) {\n                        labels.push(point_labels[i]);\n                    }\n                }\n            }\n        }\n        else if (geometry.type === 'MultiPolygon') {\n            if (layout.placement === PLACEMENT.CENTROID) {\n                let centroid = Geo.multiCentroid(geometry.coordinates);\n                if (centroid) { // skip degenerate polygons\n                    labels.push(new LabelPoint(centroid, size, layout, layout.angle));\n                }\n            }\n            else {\n                let polys = geometry.coordinates;\n                for (let p = 0; p < polys.length; p++) {\n                    let rings = polys[p];\n                    for (let ln = 0; ln < rings.length; ln++) {\n                        let point_labels = placePointsOnLine(rings[ln], size, layout);\n                        for (let i = 0; i < point_labels.length; ++i) {\n                            labels.push(point_labels[i]);\n                        }\n                    }\n                }\n            }\n        }\n\n        return labels;\n    },\n\n    /**\n     * A \"template\" that sets constant attibutes for each vertex, which is then modified per vertex or per feature.\n     * A plain JS array matching the order of the vertex layout.\n     */\n    makeVertexTemplate(style, mesh, add_custom_attribs = true) {\n        let i = 0;\n\n        // a_position.xyz - vertex position\n        // a_position.w - layer order\n        this.vertex_template[i++] = 0;\n        this.vertex_template[i++] = 0;\n        this.vertex_template[i++] = style.z || 0;\n        this.vertex_template[i++] = this.scaleOrder(style.order);\n\n        // a_shape.xy - size of point in pixels (scaling vector)\n        // a_shape.z - angle of point\n        // a_shape.w - show/hide flag\n        this.vertex_template[i++] = 0;\n        this.vertex_template[i++] = 0;\n        this.vertex_template[i++] = 0;\n        this.vertex_template[i++] = style.label.layout.collide ? 0 : 1; // set initial label hide/show state\n\n        // a_texcoord.xy - texture coords\n        if (!mesh.variant.shader_point) {\n            this.vertex_template[i++] = 0;\n            this.vertex_template[i++] = 0;\n        }\n\n        // a_offset.xy - offset of point from center, in pixels\n        this.vertex_template[i++] = 0;\n        this.vertex_template[i++] = 0;\n\n        // a_color.rgba - feature color\n        const color = style.color || StyleParser.defaults.color;\n        this.vertex_template[i++] = color[0] * 255;\n        this.vertex_template[i++] = color[1] * 255;\n        this.vertex_template[i++] = color[2] * 255;\n        this.vertex_template[i++] = (style.alpha != null ? style.alpha : color[3]) * 255;\n\n        // a_selection_color.rgba - selection color\n        if (mesh.variant.selection) {\n            this.vertex_template[i++] = style.selection_color[0] * 255;\n            this.vertex_template[i++] = style.selection_color[1] * 255;\n            this.vertex_template[i++] = style.selection_color[2] * 255;\n            this.vertex_template[i++] = style.selection_color[3] * 255;\n        }\n\n        // point outline\n        if (mesh.variant.shader_point) {\n            // a_outline_color.rgba - outline color\n            const outline_color = style.outline_color || StyleParser.defaults.outline.color;\n            this.vertex_template[i++] = outline_color[0] * 255;\n            this.vertex_template[i++] = outline_color[1] * 255;\n            this.vertex_template[i++] = outline_color[2] * 255;\n            this.vertex_template[i++] = (style.outline_alpha != null ? style.outline_alpha : outline_color[3]) * 255;\n\n            // a_outline_edge - point outline edge (as % of point size where outline begins)\n            this.vertex_template[i++] = style.outline_edge_pct || StyleParser.defaults.outline.width;\n        }\n\n        if (add_custom_attribs) {\n            this.addCustomAttributesToVertexTemplate(style, i);\n        }\n        return this.vertex_template;\n    },\n\n    buildQuad(point, size, angle, angles, pre_angles, offset, offsets, texcoords, curve, vertex_data, vertex_template) {\n        if (size[0] <= 0 || size[1] <= 0) {\n            return 0; // size must be positive\n        }\n\n        return buildQuadForPoint(\n            point,\n            vertex_data,\n            vertex_template,\n            vertex_data.vertex_layout.index,\n            size,\n            offset,\n            offsets,\n            pre_angles,\n            angle * 4096, // angle values have a 12-bit fraction\n            angles,\n            texcoords,\n            curve\n        );\n    },\n\n    // Build quad for point sprite\n    build (style, context) {\n        let label = style.label;\n        if (label.type === 'curved') {\n            return this.buildCurvedLabel(label, style, context);\n        }\n        else {\n            return this.buildStraightLabel(label, style, context);\n        }\n    },\n\n    buildStraightLabel (label, style, context) {\n        let mesh = this.getTileMesh(context.tile, this.meshVariantTypeForDraw(style));\n        let vertex_template = this.makeVertexTemplate(style, mesh);\n\n        let size, texcoords;\n        if (label.type !== 'point') {\n            size = style.size[label.type];\n            texcoords = style.texcoords[label.type].texcoord;\n        }\n        else {\n            size = style.size;\n            texcoords = style.texcoords;\n        }\n\n        // setup style or label texture if applicable\n        mesh.uniforms = mesh.uniforms || {};\n        if (style.label_texture) {\n            mesh.uniforms.u_texture = style.label_texture;\n            mesh.uniforms.u_point_type = TANGRAM_POINT_TYPE_LABEL;\n            mesh.uniforms.u_apply_color_blocks = false;\n        }\n        else if (style.texture) {\n            mesh.uniforms.u_texture = style.texture;\n            mesh.uniforms.u_point_type = TANGRAM_POINT_TYPE_TEXTURE;\n            mesh.uniforms.u_apply_color_blocks = true;\n        }\n        else {\n            mesh.uniforms.u_texture = Texture.default; // ensure a tetxure is always bound to avoid GL warnings ('no texture bound to unit' in Chrome)\n            mesh.uniforms.u_point_type = TANGRAM_POINT_TYPE_SHADER;\n            mesh.uniforms.u_apply_color_blocks = true;\n        }\n\n        let offset = label.offset;\n\n        // TODO: instead of passing null, pass arrays with fingerprintable values\n        // This value is checked in the shader to determine whether to apply curving logic\n        let geom_count = this.buildQuad(\n            label.position,                 // position\n            size,                           // size in pixels\n            label.angle,                    // angle in radians\n            null,                           // placeholder for multiple angles\n            null,                           // placeholder for multiple pre_angles\n            offset,                         // offset from center in pixels\n            null,                           // placeholder for multiple offsets\n            texcoords,                      // texture UVs\n            false,                          // if curved boolean\n            mesh.vertex_data, vertex_template    // VBO and data for current vertex\n        );\n\n        // track label mesh buffer data\n        const linked = (style.linked && style.linked.label.id);\n        this.trackLabel(label, linked, mesh, geom_count, context);\n\n        return geom_count;\n    },\n\n    buildCurvedLabel (label, style, context) {\n        let mesh, vertex_template;\n        let geom_count = 0;\n\n        // two passes for stroke and fill, where stroke needs to be drawn first (painter's algorithm)\n        // this ensures strokes don't overlap on other fills\n\n        // pass for stroke\n        for (let i = 0; i < label.num_segments; i++){\n            let size = style.size[label.type][i];\n            let texcoord_stroke = style.texcoords_stroke[i];\n\n            // re-point to correct label texture\n            style.label_texture = style.label_textures[i];\n            mesh = this.getTileMesh(context.tile, this.meshVariantTypeForDraw(style));\n            vertex_template = this.makeVertexTemplate(style, mesh);\n\n            // add label texture uniform if needed\n            mesh.uniforms = mesh.uniforms || {};\n            mesh.uniforms.u_texture = style.label_texture;\n            mesh.uniforms.u_point_type = TANGRAM_POINT_TYPE_LABEL;\n            mesh.uniforms.u_apply_color_blocks = false;\n\n            let offset = label.offset || [0,0];\n            let position = label.position;\n\n            let angles = label.angles[i];\n            let offsets = label.offsets[i];\n            let pre_angles = label.pre_angles[i];\n\n            let seg_count = this.buildQuad(\n                position,                       // position\n                size,                           // size in pixels\n                label.angle,                    // angle in degrees\n                angles,                         // angles per segment\n                pre_angles,                     // pre_angle array (rotation applied before offseting)\n                offset,                         // offset from center in pixels\n                offsets,                        // offsets per segment\n                texcoord_stroke,                // texture UVs for stroked text\n                true,                           // if curved\n                mesh.vertex_data, vertex_template    // VBO and data for current vertex\n            );\n            geom_count += seg_count;\n\n            // track label mesh buffer data\n            const linked = (style.linked && style.linked.label.id);\n            this.trackLabel(label, linked, mesh, seg_count, context);\n        }\n\n        // pass for fill\n        for (let i = 0; i < label.num_segments; i++){\n            let size = style.size[label.type][i];\n            let texcoord = style.texcoords[label.type][i].texcoord;\n\n            // re-point to correct label texture\n            style.label_texture = style.label_textures[i];\n            mesh = this.getTileMesh(context.tile, this.meshVariantTypeForDraw(style));\n            vertex_template = this.makeVertexTemplate(style, mesh);\n\n            // add label texture uniform if needed\n            mesh.uniforms = mesh.uniforms || {};\n            mesh.uniforms.u_texture = style.label_texture;\n            mesh.uniforms.u_point_type = TANGRAM_POINT_TYPE_LABEL;\n            mesh.uniforms.u_apply_color_blocks = false;\n\n            let offset = label.offset || [0,0];\n            let position = label.position;\n\n            let angles = label.angles[i];\n            let offsets = label.offsets[i];\n            let pre_angles = label.pre_angles[i];\n\n            let seg_count = this.buildQuad(\n                position,                       // position\n                size,                           // size in pixels\n                label.angle,                    // angle in degrees\n                angles,                         // angles per segment\n                pre_angles,                     // pre_angle array (rotation applied before offseting)\n                offset,                         // offset from center in pixels\n                offsets,                        // offsets per segment\n                texcoord,                       // texture UVs for fill text\n                true,                           // if curved\n                mesh.vertex_data, vertex_template    // VBO and data for current vertex\n            );\n            geom_count += seg_count;\n\n            // track label mesh buffer data\n            const linked = (style.linked && style.linked.label.id);\n            this.trackLabel(label, linked, mesh, seg_count, context);\n        }\n\n        return geom_count;\n    },\n\n    // track mesh data for label on main thread, for additional cross-tile collision/repeat passes\n    trackLabel (label, linked, mesh, geom_count/*, context*/) {\n        // track if collision is enabled, or if the label is near enough to the tile edge to\n        // necessitate further repeat checking\n        if (label.layout.collide || label.may_repeat_across_tiles) {\n            mesh.labels = mesh.labels || {};\n            mesh.labels[label.id] = mesh.labels[label.id] || {\n                container: {\n                    label: label.toJSON(),\n                    linked,\n                },\n                ranges: [],\n                // debug: { // uncomment and pass in context for debugging\n                //     id: context.feature.properties.id,\n                //     name: context.feature.properties.name,\n                //     props: JSON.stringify(context.feature.properties),\n                //     point_type: mesh.uniforms.u_point_type\n                // }\n            };\n\n            // store byte ranges occupied by label in VBO, so they can be updated on main thread\n            const vertex_count = geom_count * 2; // geom count is triangles: 2 triangles = 1 quad = 4 vertices\n            const start = mesh.vertex_data.offset - mesh.vertex_data.stride * vertex_count; // start offset of byte range\n            mesh.labels[label.id].ranges.push([\n                start,\n                vertex_count\n            ]);\n        }\n    },\n\n    // Override to pass-through to generic point builder\n    buildLines (lines, style, context) {\n        return this.build(style, context);\n    },\n\n    buildPoints (points, style, context) {\n        return this.build(style, context);\n    },\n\n    buildPolygons (points, style, context) {\n        return this.build(style, context);\n    },\n\n    // Override\n    // Create or return desired vertex layout permutation based on flags\n    vertexLayoutForMeshVariant (variant) {\n        // Vertex layout only depends on shader point flag, so using it as layout key to avoid duplicate layouts\n        if (this.vertex_layouts[variant.shader_point] == null) {\n            // Attributes for this mesh variant\n            // Optional attributes have placeholder values assigned with `static` parameter\n            // TODO: could support optional attributes for selection and offset, but may not be worth it\n            // since points generally don't consume much memory anyway\n            const attribs = [\n                { name: 'a_position', size: 4, type: gl.SHORT, normalized: false },\n                { name: 'a_shape', size: 4, type: gl.SHORT, normalized: false },\n                { name: 'a_texcoord', size: 2, type: gl.UNSIGNED_SHORT, normalized: true, static: (variant.shader_point ? [0, 0] : null) },\n                { name: 'a_offset', size: 2, type: gl.SHORT, normalized: false },\n                { name: 'a_color', size: 4, type: gl.UNSIGNED_BYTE, normalized: true },\n                { name: 'a_selection_color', size: 4, type: gl.UNSIGNED_BYTE, normalized: true, static: (variant.selection ? null : [0, 0, 0, 0]) },\n                { name: 'a_outline_color', size: 4, type: gl.UNSIGNED_BYTE, normalized: true, static: (variant.shader_point ? null : [0, 0, 0, 0]) },\n                { name: 'a_outline_edge', size: 1, type: gl.FLOAT, normalized: false, static: (variant.shader_point ? null : 0) }\n            ];\n\n            this.addCustomAttributesToAttributeList(attribs);\n            this.vertex_layouts[variant.shader_point] = new VertexLayout(attribs);\n        }\n        return this.vertex_layouts[variant.shader_point];\n\n    },\n\n    // Override\n    meshVariantTypeForDraw (draw) {\n        const texture = draw.label_texture || draw.texture || SHADER_POINT_VARIANT; // unique key by texture name\n        const key = texture + '/' + draw.blend_order;\n        if (this.variants[key] == null) {\n            this.variants[key] = {\n                key,\n                selection: 1, // TODO: make this vary by draw params\n                shader_point: (texture === SHADER_POINT_VARIANT), // is shader point\n                blend_order: draw.blend_order,\n                mesh_order: (draw.label_texture ? 1 : 0) // put text on top of points (e.g. for highway shields, etc.)\n            };\n        }\n        return this.variants[key]; // return pre-calculated mesh variant\n    },\n\n    // Override\n    makeMesh (vertex_data, vertex_elements, options = {}) {\n        // Add label fade time\n        options = Object.assign({}, options, { fade_in_time: this.fade_in_time });\n        return Style.makeMesh.call(this, vertex_data, vertex_elements, options);\n    }\n\n});\n","import Label, {textLayoutToJSON} from './label';\nimport Vector from '../utils/vector';\nimport OBB from '../utils/obb';\n\nconst STOPS = [0, 0.33, 0.66, 0.99];        // zoom levels for curved label snapshot data (offsets and angles)\nconst LINE_EXCEED_STRAIGHT = 1.5;           // minimal ratio for straight labels (label length) / (line length)\nconst LINE_EXCEED_STRAIGHT_NO_CURVE = 1.8;  // minimal ratio for straight labels that have no curved option (like Arabic)\nconst LINE_EXCEED_STAIGHT_LOOSE = 2.3;      // 2nd pass minimal ratio for straight labels\nconst STRAIGHT_ANGLE_TOLERANCE = 0.1;       // multiple \"almost straight\" segments within this angle tolerance can be considered one straight segment (in radians)\nconst CURVE_MIN_TOTAL_COST = 1.3;           // curved line total curvature tolerance (sum in radians)\nconst CURVE_MIN_AVG_COST = 0.4;             // curved line average curvature tolerance (mean)\nconst CURVE_MAX_ANGLE = 1;                  // curved line singular curvature tolerance (value in radians)\nconst ORIENTED_LABEL_OFFSET_FACTOR = 1.2;   // multiply offset by this amount to avoid linked label collision\nconst VERTICAL_ANGLE_TOLERANCE = 0.01;      // nearly vertical lines considered vertical within this angle tolerance\n\nlet LabelLine = {\n    // Given a label's bounding box size and size of broken up individual segments\n    // return a label that fits along the line geometry that is either straight (preferred) or curved (if straight tolerances aren't met)\n    create : function(segment_sizes, total_size, line, layout){\n        // The passes done for fitting a label, and provided tolerances for each pass\n        // First straight is chosen with a low tolerance. Then curved. Then straight with a higher tolerance.\n        const passes = [\n            { type: 'straight', tolerance : (layout.no_curving) ? LINE_EXCEED_STRAIGHT_NO_CURVE : LINE_EXCEED_STRAIGHT },\n            { type: 'curved' },\n            { type: 'straight', tolerance : LINE_EXCEED_STAIGHT_LOOSE }\n        ];\n\n        // loop through passes. first label found wins.\n        for (let i = 0; i < passes.length; i++){\n            let check = passes[i];\n            let label;\n            if (check.type === 'straight'){\n                label = new LabelLineStraight(total_size, line, layout, check.tolerance);\n            }\n            else if (check.type === 'curved' && !layout.no_curving && line.length > 2){\n                label = new LabelLineCurved(segment_sizes, line, layout);\n            }\n\n            if (label && !label.throw_away) {\n                return label;\n            }\n        }\n\n        return false;\n    }\n};\n\nexport default LabelLine;\n\n// Base class for a labels.\nexport class LabelLineBase {\n    constructor (layout) {\n        this.id = Label.nextLabelId();\n        this.layout = layout;\n        this.position = [];\n        this.angle = 0;\n        this.offset = layout.offset.slice();\n        this.unit_scale = this.layout.units_per_pixel;\n        this.obbs = [];\n        this.aabbs = [];\n        this.type = ''; // \"curved\" or \"straight\" to be set by child class\n        this.throw_away = false; // boolean that determines if label should be discarded\n    }\n\n    // Minimal representation of label\n    toJSON () {\n        return {\n            id: this.id,\n            type: this.type,\n            position: this.position,\n            size: this.size,\n            offset: this.offset,\n            angle: this.angle,\n            breach: this.breach,\n            may_repeat_across_tiles: this.may_repeat_across_tiles,\n            layout: textLayoutToJSON(this.layout)\n        };\n    }\n\n    // Given a line, find the longest series of segments that maintains a constant orientation in the x-direction.\n    // This assures us that the line has no orientation flip, so text would not appear upside-down.\n    // If the line's orientation is reversed, the flip return value will be true, otherwise false\n    static splitLineByOrientation(line){\n        let current_line = [line[0]];\n        let current_length = 0;\n        let max_length = 0;\n        let orientation = 0;\n        let longest_line = current_line;\n        let flip = false;\n\n        for (let i = 1; i < line.length; i++) {\n            let pt = line[i];\n            let prev_pt = line[i - 1];\n            let length = Vector.length(Vector.sub(pt, prev_pt));\n\n            if (pt[0] > prev_pt[0]){\n                // positive orientation\n                if (orientation === 1){\n                    current_line.push(pt);\n                    current_length += length;\n                    if (current_length > max_length){\n                        longest_line = current_line;\n                        max_length = current_length;\n                        flip = false;\n                    }\n                }\n                else {\n                    current_line = [prev_pt, pt];\n                    current_length = length;\n                    if (current_length > max_length){\n                        longest_line = current_line;\n                        max_length = current_length;\n                        flip = false;\n                    }\n                    orientation = 1;\n                }\n            }\n            else if (pt[0] < prev_pt[0]) {\n                // negative orientation\n                if (orientation === -1){\n                    current_line.unshift(pt);\n                    current_length += length;\n                    if (current_length > max_length){\n                        longest_line = current_line;\n                        max_length = current_length;\n                        flip = true;\n                    }\n                }\n                else {\n                    // prepend points (reverse order)\n                    current_line = [pt, prev_pt];\n                    current_length = length;\n                    if (current_length > max_length){\n                        longest_line = current_line;\n                        max_length = current_length;\n                        flip = true;\n                    }\n                    orientation = -1;\n                }\n            }\n            else {\n                // vertical line (doesn't change previous orientation)\n                if (orientation === -1){\n                    current_line.unshift(pt);\n                }\n                else {\n                    current_line.push(pt);\n                    orientation = 1;\n                }\n\n                current_length += length;\n                if (current_length > max_length){\n                    longest_line = current_line;\n                    max_length = current_length;\n\n                    flip = (orientation === -1);\n                }\n            }\n        }\n\n        return [longest_line, flip];\n    }\n\n    // Checks each segment to see if it should be discarded (via collision). If any segment fails this test, they all fail.\n    discard(bboxes, exclude = null) {\n        if (this.throw_away) {\n            return true;\n        }\n\n        for (let i = 0; i < this.obbs.length; i++){\n            let aabb = this.aabbs[i];\n            let obb = this.obbs[i];\n            let obj = { aabb, obb };\n\n            let shouldDiscard = Label.prototype.occluded.call(obj, bboxes, exclude);\n            if (shouldDiscard) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    // Checks each segment to see if it is within the tile. If any segment fails this test, they all fail.\n    inTileBounds() {\n        for (let i = 0; i < this.aabbs.length; i++) {\n            let aabb = this.aabbs[i];\n            let obj = { aabb };\n            let in_bounds = Label.prototype.inTileBounds.call(obj);\n            if (!in_bounds) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    // Method to calculate oriented bounding box\n    // \"angle\" is the angle of the text segment, \"angle_offset\" is the angle applied to the offset.\n    // Offset angle is constant for the entire label, while segment angles are not.\n    static createOBB (position, width, height, angle, angle_offset, offset, upp) {\n        let p0 = position[0];\n        let p1 = position[1];\n\n        // apply offset, x positive, y pointing down\n        if (offset && (offset[0] !== 0 || offset[1] !== 0)) {\n            offset = Vector.rot(offset, angle_offset);\n            p0 += offset[0] * upp;\n            p1 -= offset[1] * upp;\n        }\n\n        // the angle of the obb is negative since it's the tile system y axis is pointing down\n        return new OBB(p0, p1, -angle, width, height);\n    }\n}\n\n// Class for straight labels.\n// Extends base LabelLine class.\nexport class LabelLineStraight extends LabelLineBase {\n    constructor (size, line, layout, tolerance){\n        super(layout);\n        this.type = 'straight';\n        this.size = size;\n        this.throw_away = !this.fit(size, line, layout, tolerance);\n    }\n\n    // Determine if the label can fit the geometry within provided tolerance\n    // A straight label is generally placed at segment midpoints, but can \"look ahead\" to further segments\n    // if they are within an angle bound given by STRAIGHT_ANGLE_TOLERANCE and place at the midpoint between non-consecutive segments\n    fit (size, line, layout, tolerance){\n        let upp = this.unit_scale;\n        let flipped; // boolean indicating if orientation of line is changed\n\n        // Make new copy of line, with consistent orientation\n        [line, flipped] = LabelLineBase.splitLineByOrientation(line);\n\n        // matches for \"left\" or \"right\" labels where the offset angle is dependent on the geometry\n        if (typeof layout.orientation === 'number'){\n            this.offset[1] += ORIENTED_LABEL_OFFSET_FACTOR * (size[1] - layout.vertical_buffer);\n\n            // if line is flipped, or the orientation is \"left\" (-1), flip the offset's y-axis\n            if (flipped){\n                this.offset[1] *= -1;\n            }\n\n            if (layout.orientation === -1){\n                this.offset[1] *= -1;\n            }\n        }\n\n        let line_lengths = getLineLengths(line);\n        let label_length = size[0] * upp;\n\n        // loop through line looking for a placement for the label\n        for (let i = 0; i < line.length - 1; i++){\n            let curr = line[i];\n\n            let curve_tolerance = 0;\n            let length = 0;\n            let ahead_index = i + 1;\n            let prev_angle;\n\n            // look ahead to further line segments within an angle tolerance\n            while (ahead_index < line.length){\n                let ahead_curr = line[ahead_index - 1];\n                let ahead_next = line[ahead_index];\n\n                let next_angle = getAngleForSegment(ahead_curr, ahead_next);\n\n                if (ahead_index !== i + 1){\n                    curve_tolerance += getAbsAngleDiff(next_angle, prev_angle);\n                }\n\n                // if curve tolerance is exceeded, break out of loop\n                if (Math.abs(curve_tolerance) > STRAIGHT_ANGLE_TOLERANCE){\n                    break;\n                }\n\n                length += line_lengths[ahead_index - 1];\n\n                // check if label fits geometry\n                if (calcFitness(length, label_length) < tolerance){\n                    let curr_midpt = Vector.mult(Vector.add(curr, ahead_next), 0.5);\n\n                    // TODO: modify angle if line chosen within curve_angle_tolerance\n                    // Currently line angle is the same as the starting angle, perhaps it should average across segments?\n                    this.angle = -next_angle;\n\n                    // ensure that all vertical labels point up (not down) by snapping angles close to pi/2 to -pi/2\n                    if (Math.abs(this.angle - Math.PI/2) < VERTICAL_ANGLE_TOLERANCE) {\n                        // flip angle and offset\n                        this.angle = -Math.PI/2;\n\n                        if (typeof layout.orientation === 'number'){\n                            this.offset[1] *= -1;\n                        }\n                    }\n\n                    this.position = curr_midpt;\n                    this.updateBBoxes(this.position, size, this.angle, this.angle, this.offset);\n                    return true; // use this placement\n                }\n\n                prev_angle = next_angle;\n                ahead_index++;\n            }\n        }\n\n        return false;\n    }\n\n    // Calculate bounding boxes\n    updateBBoxes(position, size, angle, angle_offset, offset) {\n        let upp = this.unit_scale;\n\n        // reset bounding boxes\n        this.obbs = [];\n        this.aabbs = [];\n\n        let width = (size[0] + 2 * this.layout.buffer[0]) * upp * Label.epsilon;\n        let height = (size[1] + 2 * this.layout.buffer[1]) * upp * Label.epsilon;\n\n        let obb = LabelLineBase.createOBB(position, width, height, angle, angle_offset, offset, upp);\n        let aabb = obb.getExtent();\n\n        this.obbs.push(obb);\n        this.aabbs.push(aabb);\n\n        if (this.inTileBounds) {\n            this.breach = !this.inTileBounds();\n        }\n\n        if (this.mayRepeatAcrossTiles) {\n            this.may_repeat_across_tiles = this.mayRepeatAcrossTiles();\n        }\n    }\n}\n\n// Class for curved labels\n// Extends base LabelLine class to support angles, pre_angles, offsets as arrays for each segment\nclass LabelLineCurved extends LabelLineBase {\n    constructor (segment_sizes, line, layout) {\n        super(layout);\n        this.type = 'curved';\n\n        // extra data for curved labels\n        this.angles = [];\n        this.pre_angles = [];\n        this.offsets = [];\n        this.num_segments = segment_sizes.length;\n        this.sizes = segment_sizes;\n\n        this.throw_away = !this.fit(this.sizes, line, layout);\n    }\n\n    // Minimal representation of label\n    toJSON () {\n        return {\n            id: this.id,\n            type: this.type,\n            obbs: this.obbs.map(o => o.toJSON()),\n            position: this.position,\n            breach: this.breach,\n            may_repeat_across_tiles: this.may_repeat_across_tiles,\n            layout: textLayoutToJSON(this.layout)\n        };\n    }\n\n    // Determine if the curved label can fit the geometry.\n    // No tolerance is provided because the label must fit entirely within the line geometry.\n    fit (size, line, layout){\n        let upp = this.unit_scale;\n        let flipped; // boolean determining if the line orientation is reversed\n\n        let height_px = Math.max(...size.map(s => s[1])); // use max segment height\n        let height = height_px * upp;\n\n        // Make new copy of line, with consistent orientation\n        [line, flipped] = LabelLineBase.splitLineByOrientation(line);\n\n        // matches for \"left\" or \"right\" labels where the offset angle is dependent on the geometry\n        if (typeof layout.orientation === 'number'){\n            this.offset[1] += ORIENTED_LABEL_OFFSET_FACTOR * (height_px - layout.vertical_buffer);\n\n            // if line is flipped, or the orientation is \"left\" (-1), flip the offset's y-axis\n            if (flipped){\n                this.offset[1] *= -1;\n            }\n\n            if (layout.orientation === -1){\n                this.offset[1] *= -1;\n            }\n        }\n\n        let line_lengths = getLineLengths(line);\n        let label_lengths = size.map(size => size[0] * upp);\n\n        let total_line_length = line_lengths.reduce((prev, next) => prev + next, 0);\n        let total_label_length = label_lengths.reduce((prev, next) => prev + next, 0);\n\n        // if label displacement is longer than the line, no fit can be possible\n        if (total_label_length > total_line_length){\n            return false;\n        }\n\n        // need two line segments for a curved label\n        // NB: single segment lines should still be labeled if possible during straight label placement pass\n        let start_index = 0, end_index = line.length-1;\n        if (end_index - start_index < 2){\n            return false;\n        }\n\n        // all positional offsets of the label are relative to the anchor\n        let anchor_index = LabelLineCurved.curvaturePlacement(line, total_line_length, line_lengths, total_label_length, start_index, end_index);\n        let anchor = line[anchor_index];\n\n        // if anchor not found, or greater than the end_index, no fit possible\n        if (anchor_index === -1 || end_index - anchor_index < 2){\n            return false;\n        }\n\n        // set start position at anchor position\n        this.position = anchor;\n\n        // Loop through labels at each zoom level stop\n        // TODO: Can be made faster since we are computing every segment for every zoom stop\n        // We can skip a segment's calculation once a segment's angle equals its fully zoomed angle\n        for (var i = 0; i < label_lengths.length; i++){\n            this.offsets[i] = [];\n            this.angles[i] = [];\n            this.pre_angles[i] = [];\n\n            // loop through stops (z = [0, .33, .66, .99] + base zoom)\n            for (var j = 0; j < STOPS.length; j++){\n                let stop = STOPS[j];\n\n                // scale the line geometry by the zoom magnification\n                let [new_line, line_lengths] = LabelLineCurved.scaleLine(stop, line);\n                anchor = new_line[anchor_index];\n\n                // calculate label data relative to anchor position\n                let {positions, offsets, angles, pre_angles} = LabelLineCurved.placeAtIndex(anchor_index, new_line, line_lengths, label_lengths);\n\n                // translate 2D offsets into \"polar coordinates\"\" (1D distances with angles)\n                let offsets1d = offsets.map(offset => {\n                    return Math.sqrt(offset[0] * offset[0] + offset[1] * offset[1]) / upp;\n                });\n\n                // Calculate everything that is independent of zoom level (angle for offset, bounding boxes, etc)\n                if (stop === 0){\n                    // use average angle for a global label offset (if offset is specified)\n                    this.angle = 1 / angles.length * angles.reduce((prev, next) => prev + next);\n\n                    // calculate bounding boxes for collision at zoom level 0\n                    for (let i = 0; i < positions.length; i++){\n                        let position = positions[i];\n                        let pre_angle = pre_angles[i];\n                        let width = label_lengths[i];\n                        let angle_segment = pre_angle + angles[i];\n                        let angle_offset = this.angle;\n\n                        let obb = LabelLineBase.createOBB(position, width, height, angle_segment, angle_offset, this.offset, upp);\n                        let aabb = obb.getExtent();\n\n                        this.obbs.push(obb);\n                        this.aabbs.push(aabb);\n                    }\n                }\n\n                // push offsets/angles/pre_angles for each zoom and for each label segment\n                this.offsets[i].push(offsets1d[i]);\n                this.angles[i].push(angles[i]);\n                this.pre_angles[i].push(pre_angles[i]);\n            }\n        }\n\n        return true;\n    }\n\n    // Find optimal starting segment for placing a curved label along a line within provided tolerances\n    // This is determined by calculating the curvature at each interior vertex of a line\n    // then construct a \"window\" whose breadth is the length of the label. Place this label at each vertex\n    // and add the curvatures of each vertex within the window. The vertex mimimizing this value is the \"best\" placement.\n    // Return -1 is no placement found.\n    static curvaturePlacement(line, total_line_length, line_lengths, label_length, start_index, end_index){\n        start_index = start_index || 0;\n        end_index = end_index || line.length - 1;\n\n        var curvatures = []; // array of curvature values per line vertex\n\n        // calculate curvature values\n        for (let i = start_index + 1; i < end_index; i++){\n            var prev = line[i - 1];\n            var curr = line[i];\n            var next = line[i + 1];\n\n            var norm_1 = Vector.perp(curr, prev);\n            var norm_2 = Vector.perp(next, curr);\n\n            var curvature = Vector.angleBetween(norm_1, norm_2);\n\n            // If curvature at a vertex is greater than the tolerance, remove it from consideration\n            // by giving it an infinite penalty\n            if (curvature > CURVE_MAX_ANGLE) {\n                curvature = Infinity;\n            }\n\n            curvatures.push(curvature);\n        }\n\n        curvatures.push(Infinity); // Infinite penalty for going off end of line\n\n        // calculate curvature costs\n        var total_costs = [];\n        var avg_costs = [];\n        var line_index = start_index;\n        var position = 0;\n\n        for (let i = 0; i < start_index; i++){\n            position += line_lengths[i];\n        }\n\n        // move window along line, starting at first vertex\n        while (position + label_length < total_line_length){\n            // define window breadth\n            var window_start = position;\n            var window_end = window_start + label_length;\n\n            var line_position = window_start;\n            var ahead_index = line_index;\n            var cost = 0;\n\n            // iterate through points on line intersecting window\n            while (ahead_index < end_index && line_position + line_lengths[ahead_index] < window_end){\n                cost += curvatures[ahead_index];\n                if (cost === Infinity) {\n                    break; // no further progress can be made\n                }\n\n                line_position += line_lengths[ahead_index];\n                ahead_index++;\n            }\n\n            // if optimal cost, break out\n            if (cost === 0) {\n                return line_index;\n            }\n\n            var avg_cost = cost / (ahead_index - line_index);\n\n            total_costs.push(cost);\n            avg_costs.push(avg_cost);\n\n            position += line_lengths[line_index];\n            line_index++;\n        }\n\n        if (total_costs.length === 0) {\n            return -1;\n        }\n\n        // calculate min cost and avg cost to determine if label can fit within curvatures tolerances\n        var min_total_cost = Math.min.apply(null, total_costs);\n        var min_index = total_costs.indexOf(min_total_cost);\n        var min_avg_cost = avg_costs[min_index];\n\n        if (min_total_cost < CURVE_MIN_TOTAL_COST && min_avg_cost < CURVE_MIN_AVG_COST){\n            // return index with best placement (least curvature)\n            return total_costs.indexOf(min_total_cost);\n        }\n        else {\n            // if tolerances aren't satisfied, throw away tile\n            return -1;\n        }\n    }\n\n    // Scale the line by a scale factor (used for computing the angles and offsets at fractional zoom levels)\n    // Return the new line positions and their lengths\n    static scaleLine(scale, line){\n        var new_line = [line[0]];\n        var line_lengths = [];\n\n        line.forEach((pt, i) => {\n            if (i === line.length - 1) {\n                return;\n            }\n            var v = Vector.sub(line[i+1], line[i]);\n            var delta = Vector.mult(v, 1 + scale);\n\n            new_line.push(Vector.add(new_line[i], delta));\n            line_lengths.push(Vector.length(delta));\n        });\n\n        return [new_line, line_lengths];\n    }\n\n    // Place a label at a given line index\n    static placeAtIndex(anchor_index, line, line_lengths, label_lengths){\n        let anchor = line[anchor_index];\n\n        // Use flat coordinates. Get nearest line vertex index, and offset from the vertex for all labels.\n        let [indices, relative_offsets] = LabelLineCurved.getIndicesAndOffsets(anchor_index, line_lengths, label_lengths);\n\n        // get 2D positions based on \"flat\" indices and offsets\n        let positions = LabelLineCurved.getPositionsFromIndicesAndOffsets(line, indices, relative_offsets);\n\n        // get 2d offsets, angles and pre_angles relative to anchor\n        let [offsets, angles, pre_angles] = LabelLineCurved.getAnglesFromIndicesAndOffsets(anchor, indices, line, positions);\n\n        return {positions, offsets, angles, pre_angles};\n    }\n\n    // Given label lengths to place along a line broken into several lengths, computer what indices and at which offsets\n    // the labels will appear on the line. Assume the line is straight, as it is not necessary to consider angles.\n    //\n    // Label lengths:\n    // |-----|----|-----|-----------------|-------------|\n    //\n    // Line Lengths;\n    // |---------|---------|-------------|------------|----------|-------|\n    //\n    // Result: indices: [0,0,1,1,3,4]\n    static getIndicesAndOffsets(line_index, line_lengths, label_lengths){\n        let num_labels = label_lengths.length;\n\n        let indices = [];\n        let offsets = [];\n\n        let label_index = 0;\n        let label_offset = 0;\n        let line_offset = 0;\n\n        // iterate along line\n        while (label_index < num_labels){\n            let label_length = label_lengths[label_index];\n\n            // iterate along labels within the line segment\n            while (label_index < num_labels && label_offset + 0.5 * label_length <= line_offset + line_lengths[line_index]){\n                let offset = label_offset - line_offset + 0.5 * label_length;\n                offsets.push(offset);\n                indices.push(line_index);\n\n                label_offset += label_length;\n                label_index++;\n                label_length = label_lengths[label_index];\n            }\n\n            line_offset += line_lengths[line_index];\n            line_index++;\n        }\n\n        return [indices, offsets];\n    }\n\n    // Given indices and 1D offsets on a line, compute their 2D positions\n    static getPositionsFromIndicesAndOffsets(line, indices, offsets){\n        let positions = [];\n        for (let i = 0; i < indices.length; i++){\n            let index = indices[i];\n            let offset = offsets[i];\n\n            let angle = getAngleForSegment(line[index], line[index + 1]);\n\n            let offset2d = Vector.rot([offset, 0], angle);\n            let position = Vector.add(line[index], offset2d);\n\n            positions.push(position);\n        }\n\n        return positions;\n    }\n\n    // Given indices and 1D offsets on a line, compute their angles and pre-angles from a reference anchor point\n    static getAnglesFromIndicesAndOffsets(anchor, indices, line, positions){\n        let angles = [];\n        let pre_angles = [];\n        let offsets = [];\n\n        for (let i = 0; i < positions.length; i++){\n            let position = positions[i];\n            let index = indices[i];\n\n            let offset = Vector.sub(position, anchor);\n            let offset_angle = -Vector.angle(offset);\n\n            let angle = getTextAngleForSegment(line[index], line[index + 1]);\n            let pre_angle = angle - offset_angle;\n\n            if (i > 0){\n                let prev_angle = angles[i - 1];\n                let prev_pre_angle = pre_angles[i - 1];\n                if (Math.abs(offset_angle - prev_angle) > Math.PI) {\n                    offset_angle += (offset_angle > prev_angle) ? -2 * Math.PI : 2 * Math.PI;\n                }\n                if (Math.abs(prev_pre_angle - pre_angle) > Math.PI) {\n                    pre_angle += (pre_angle > prev_pre_angle) ? -2 * Math.PI : 2 * Math.PI;\n                }\n            }\n\n            angles.push(offset_angle);\n            pre_angles.push(pre_angle);\n            offsets.push(offset);\n        }\n\n        return [offsets, angles, pre_angles];\n    }\n}\n\n// Fitness function (label length / line length)\nfunction calcFitness(line_length, label_length) {\n    return label_length / line_length;\n}\n\nfunction getAngleForSegment(p, q){\n    let pq = Vector.sub(q,p);\n    return Vector.angle(pq);\n}\n\nfunction getTextAngleForSegment(pt1, pt2) {\n    return -getAngleForSegment(pt1, pt2);\n}\n\nfunction getLineLengths(line){\n    let lengths = [];\n    for (let i = 0; i < line.length - 1; i++){\n        let p = line[i];\n        let q = line[i+1];\n        let length = Math.hypot(p[0] - q[0], p[1] - q[1]);\n        lengths.push(length);\n    }\n    return lengths;\n}\n\nfunction getAbsAngleDiff(angle1, angle2){\n    let small, big;\n    if (angle1 > angle2){\n        small = angle2;\n        big = angle1;\n    }\n    else {\n        small = angle1;\n        big = angle2;\n    }\n\n    while (big - small > Math.PI){\n        small += 2 * Math.PI;\n    }\n\n    return Math.abs(big - small);\n}\n","// Text rendering style\n\nimport Geo from '../../utils/geo';\nimport {Style} from '../style';\nimport {Points} from '../points/points';\nimport Collision from '../../labels/collision';\nimport LabelPoint from '../../labels/label_point';\nimport LabelLine from '../../labels/label_line';\nimport gl from '../../gl/constants'; // web workers don't have access to GL context, so import all GL constants\nimport VertexLayout from '../../gl/vertex_layout';\n\nexport let TextStyle = Object.create(Points);\n\nObject.assign(TextStyle, {\n    name: 'text',\n    super: Points,\n    built_in: true,\n\n    init(options = {}) {\n        Style.init.call(this, options);\n\n        // Shader defines\n        this.setupDefines();\n\n        // Omit some code for SDF-drawn shader points\n        this.defines.TANGRAM_HAS_SHADER_POINTS = false;\n\n        // Indicate vertex shader should apply zoom-interpolated offsets and angles for curved labels\n        this.defines.TANGRAM_CURVED_LABEL = true;\n\n        this.reset();\n    },\n\n    /**\n     * A \"template\" that sets constant attibutes for each vertex, which is then modified per vertex or per feature.\n     * A plain JS array matching the order of the vertex layout.\n     */\n    makeVertexTemplate(style, mesh) {\n        this.super.makeVertexTemplate.call(this, style, mesh, /* add_custom_attribs */ false);\n        let vertex_layout = mesh.vertex_data.vertex_layout;\n        let i = vertex_layout.index.a_pre_angles;\n\n        // a_pre_angles.xyzw - rotation of entire curved label\n        // a_angles.xyzw - angle of each curved label segment\n        // a_offsets.xyzw - offset of each curved label segment\n        for (let j=0; j < 12; j++) {\n            this.vertex_template[i++] = 0;\n        }\n\n        this.addCustomAttributesToVertexTemplate(style, i);\n        return this.vertex_template;\n    },\n\n    reset() {\n        this.queues = {};\n        this.resetText();\n    },\n\n    // Override to queue features instead of processing immediately\n    addFeature (feature, draw, context) {\n        let tile = context.tile;\n        if (tile.generation !== this.generation) {\n            return;\n        }\n\n        let type = feature.geometry.type;\n        draw.can_articulate = (type === 'LineString' || type === 'MultiLineString');\n\n        // supersample text rendering for angled labels, to improve clarity\n        draw.supersample_text = (type === 'LineString' || type === 'MultiLineString');\n\n        let q = this.parseTextFeature(feature, draw, context, tile);\n        if (!q) {\n            return;\n        }\n\n        // text can be an array if a `left` or `right` orientation key is defined for the text source\n        // in which case, push both text sources to the queue\n        if (q instanceof Array){\n            q.forEach(q => {\n                q.feature = feature;\n                q.context = context;\n                q.layout.vertex = false; // vertex placement option not applicable to standalone labels\n                this.queueFeature(q, tile); // queue the feature for later processing\n            });\n        }\n        else {\n            q.feature = feature;\n            q.context = context;\n            q.layout.vertex = false; // vertex placement option not applicable to standalone labels\n            this.queueFeature(q, tile); // queue the feature for later processing\n        }\n\n        // Register with collision manager\n        Collision.addStyle(this.name, tile.id);\n    },\n\n    // Override\n    async endData (tile) {\n        let queue = this.queues[tile.id];\n        delete this.queues[tile.id];\n\n        const { labels, texts, textures } = await this.collideAndRenderTextLabels(tile, this.name, queue);\n\n        if (labels && texts) {\n            this.texts[tile.id] = texts;\n\n            // Build queued features\n            labels.forEach(q => {\n                let text_settings_key = q.text_settings_key;\n                let text_info =\n                    this.texts[tile.id][text_settings_key] &&\n                    this.texts[tile.id][text_settings_key][q.text];\n\n                // setup styling object expected by Style class\n                let style = this.feature_style;\n                style.label = q.label;\n\n                if (text_info.text_settings.can_articulate){\n                    // unpack logical sizes of each segment into an array for the style\n                    style.size = {};\n                    style.texcoords = {};\n\n                    if (q.label.type === 'straight'){\n                        style.size.straight = text_info.size.logical_size;\n                        style.texcoords.straight = text_info.texcoords.straight;\n                        style.label_texture = textures[text_info.texcoords.straight.texture_id];\n                    }\n                    else{\n                        style.size.curved = text_info.segment_sizes.map(function(size){ return size.logical_size; });\n                        style.texcoords_stroke = text_info.texcoords_stroke;\n                        style.texcoords.curved = text_info.texcoords.curved;\n                        style.label_textures = text_info.texcoords.curved.map(t => textures[t.texture_id]);\n                    }\n                }\n                else {\n                    style.size = text_info.size.logical_size;\n                    style.texcoords = text_info.align[q.label.align].texcoords;\n                    style.label_texture = textures[text_info.align[q.label.align].texture_id];\n                }\n\n                style.blend_order = q.draw.blend_order; // copy pre-computed blend order\n                Style.addFeature.call(this, q.feature, q.draw, q.context);\n            });\n        }\n        this.freeText(tile);\n\n        // Finish tile mesh\n        const tile_data = await Style.endData.call(this, tile);\n        if (tile_data) {\n            // Attach tile-specific label atlas to mesh as a texture uniform\n            if (textures && textures.length) {\n                tile_data.textures.push(...textures); // assign texture ownership to tile\n            }\n\n            // Always apply shader blocks to standalone text\n            for (let m in tile_data.meshes) {\n                tile_data.meshes[m].uniforms.u_apply_color_blocks = true;\n            }\n        }\n\n        return tile_data;\n    },\n\n    // Sets up caching for draw properties\n    _preprocess (draw) {\n        draw.blend_order = this.getBlendOrderForDraw(draw); // from draw block, or fall back on default style blend order\n        return this.preprocessText(draw);\n    },\n\n    // Implements label building for TextLabels mixin\n    buildTextLabels (tile, feature_queue) {\n        let labels = [];\n        for (let f=0; f < feature_queue.length; f++) {\n            let fq = feature_queue[f];\n            let text_info = this.texts[tile.id][fq.text_settings_key][fq.text];\n            let feature_labels;\n\n            fq.layout.vertical_buffer = text_info.vertical_buffer;\n\n            if (text_info.text_settings.can_articulate){\n                var sizes = text_info.segment_sizes.map(size => size.collision_size);\n                fq.layout.no_curving = text_info.no_curving;\n                feature_labels = this.buildLabels(sizes, fq.feature.geometry, fq.layout, text_info.size.collision_size);\n            }\n            else {\n                feature_labels = this.buildLabels(text_info.size.collision_size, fq.feature.geometry, fq.layout);\n            }\n            for (let i = 0; i < feature_labels.length; i++) {\n                let fql = Object.create(fq);\n                fql.label = feature_labels[i];\n                labels.push(fql);\n            }\n        }\n        return labels;\n    },\n\n    // Builds one or more labels for a geometry\n    buildLabels (size, geometry, layout, total_size) {\n        let labels = [];\n\n        if (geometry.type === 'LineString') {\n            Array.prototype.push.apply(labels, this.buildLineLabels(geometry.coordinates, size, layout, total_size));\n        } else if (geometry.type === 'MultiLineString') {\n            let lines = geometry.coordinates;\n            for (let i = 0; i < lines.length; ++i) {\n                Array.prototype.push.apply(labels, this.buildLineLabels(lines[i], size, layout, total_size));\n            }\n        } else if (geometry.type === 'Point') {\n            labels.push(new LabelPoint(geometry.coordinates, size, layout));\n        } else if (geometry.type === 'MultiPoint') {\n            let points = geometry.coordinates;\n            for (let i = 0; i < points.length; ++i) {\n                labels.push(new LabelPoint(points[i], size, layout));\n            }\n        } else if (geometry.type === 'Polygon') {\n            let centroid = Geo.centroid(geometry.coordinates);\n            if (centroid) { // skip degenerate polygons\n                labels.push(new LabelPoint(centroid, size, layout));\n            }\n        } else if (geometry.type === 'MultiPolygon') {\n            let centroid = Geo.multiCentroid(geometry.coordinates);\n            if (centroid) { // skip degenerate polygons\n                labels.push(new LabelPoint(centroid, size, layout));\n            }\n        }\n\n        return labels;\n    },\n\n    // Build one or more labels for a line geometry\n    buildLineLabels (line, size, layout, total_size) {\n        let labels = [];\n        let subdiv = Math.min(layout.subdiv, line.length - 1);\n        if (subdiv > 1) {\n            // Create multiple labels for line, with each allotted a range of segments\n            // in which it will attempt to place\n            let seg_per_div = (line.length - 1) / subdiv;\n            for (let i = 0; i < subdiv; i++) {\n                let start = Math.floor(i * seg_per_div);\n                let end = Math.floor((i + 1) * seg_per_div) + 1;\n                let line_segment = line.slice(start, end);\n\n                let label = LabelLine.create(size, total_size, line_segment, layout);\n                if (label){\n                    labels.push(label);\n                }\n            }\n        }\n\n        // Consider full line for label placement if no subdivisions requested, or as last resort if not enough\n        // labels placed (e.g. fewer than requested subdivisions)\n        // TODO: refactor multiple label placements per line / move into label placement class for better effectiveness\n        if (labels.length < subdiv) {\n            let label = LabelLine.create(size, total_size, line, layout);\n            if (label){\n                labels.push(label);\n            }\n        }\n        return labels;\n    },\n\n    // Override\n    // Create or return vertex layout\n    vertexLayoutForMeshVariant(variant) {\n        // Vertex layout only depends on shader point flag, so using it as layout key to avoid duplicate layouts\n        if (this.vertex_layouts[variant.shader_point] == null) {\n            // TODO: could make selection, offset, and curved label attribs optional, but may not be worth it\n            // since text points generally don't consume much memory anyway\n            const attribs = [\n                { name: 'a_position', size: 4, type: gl.SHORT, normalized: false },\n                { name: 'a_shape', size: 4, type: gl.SHORT, normalized: false },\n                { name: 'a_texcoord', size: 2, type: gl.UNSIGNED_SHORT, normalized: true },\n                { name: 'a_offset', size: 2, type: gl.SHORT, normalized: false },\n                { name: 'a_color', size: 4, type: gl.UNSIGNED_BYTE, normalized: true },\n                { name: 'a_selection_color', size: 4, type: gl.UNSIGNED_BYTE, normalized: true, static: (variant.selection ? null : [0, 0, 0, 0]) },\n                { name: 'a_pre_angles', size: 4, type: gl.BYTE, normalized: false },\n                { name: 'a_angles', size: 4, type: gl.SHORT, normalized: false },\n                { name: 'a_offsets', size: 4, type: gl.UNSIGNED_SHORT, normalized: false },\n            ];\n\n            this.addCustomAttributesToAttributeList(attribs);\n            this.vertex_layouts[variant.shader_point] = new VertexLayout(attribs);\n        }\n        return this.vertex_layouts[variant.shader_point];\n    },\n});\n\nTextStyle.texture_id = 0; // namespaces per-tile label textures\n","// Raster tile rendering style\n\nimport StyleParser from '../style_parser';\nimport {Polygons} from '../polygons/polygons';\n\nexport let RasterStyle = Object.create(Polygons);\n\nObject.assign(RasterStyle, {\n    name: 'raster',\n    super: Polygons,\n    built_in: true,\n\n    init() {\n        // Required for raster tiles\n        this.raster = this.raster || 'color';\n\n        this.super.init.apply(this, arguments);\n\n        this.selection = false; // raster styles can't support feature selection\n    },\n\n    _preprocess (draw) {\n        // Raster tiles default to white vertex color, as this color will tint the underlying texture\n        draw.color = draw.color || StyleParser.defaults.color;\n        return this.super._preprocess.apply(this, arguments);\n    }\n\n});\n","// Manage rendering styles\nimport ShaderProgram from '../gl/shader_program';\nimport mergeObjects from '../utils/merge';\nimport Geo from '../utils/geo';\nimport WorkerBroker from '../utils/worker_broker';\nimport log from '../utils/log';\n\nimport {Polygons} from './polygons/polygons';\nimport {Lines} from './lines/lines';\nimport {Points} from './points/points';\nimport {TextStyle} from './text/text';\nimport {RasterStyle} from './raster/raster';\n\nimport style_globals_source from './style_globals.glsl';\nimport selection_globals_source from '../selection/selection_globals.glsl';\nimport selection_vertex_source from '../selection/selection_vertex.glsl';\n\nexport class StyleManager {\n\n    constructor () {\n        this.styles = {};\n        this.base_styles = {};\n        this.active_styles = [];\n        this.active_blend_orders = [];\n\n        // Add built-in rendering styles\n        this.register(Object.create(Polygons));\n        this.register(Object.create(Lines));\n        this.register(Object.create(Points));\n        this.register(Object.create(TextStyle));\n        this.register(Object.create(RasterStyle));\n    }\n\n    // Global configuration for all styles\n    init () {\n        ShaderProgram.removeBlock('global');\n        ShaderProgram.removeBlock('setup');\n\n        // Model and world position accessors, layer re-ordering function\n        ShaderProgram.addBlock('global', style_globals_source);\n\n        // Feature selection global\n        ShaderProgram.addBlock('global', selection_globals_source);\n\n        // Feature selection vertex shader support\n        ShaderProgram.replaceBlock('setup', selection_vertex_source);\n\n        // Minimum value for float comparisons\n        ShaderProgram.defines.TANGRAM_EPSILON = 0.00001;\n\n        // Minimum depth buffer value separating each `order` unit\n        // Assume min 16-bit depth buffer, in practice uses 14-bits, 1 extra bit to handle virtual half-layers\n        // for outlines (inserted in between layers), another extra bit to prevent precision loss\n        ShaderProgram.defines.TANGRAM_LAYER_DELTA = 1 / (1 << 14);\n\n        // Internal tile scale\n        ShaderProgram.defines.TANGRAM_TILE_SCALE =\n            `vec3(${Geo.tile_scale}., ${Geo.tile_scale}., u_meters_per_pixel * ${Geo.tile_size}.)`;\n\n        // Increases precision for height values\n        ShaderProgram.defines.TANGRAM_HEIGHT_SCALE = Geo.height_scale;\n\n        // Alpha discard threshold (substitute for alpha blending)\n        ShaderProgram.defines.TANGRAM_ALPHA_TEST = 0.5;\n    }\n\n    // Destroy all styles for a given GL context\n    destroy (gl) {\n        Object.keys(this.styles).forEach((_name) => {\n            let style = this.styles[_name];\n            if (style.gl === gl) {\n                log('trace', `StyleManager.destroy: destroying render style ${style.name}`);\n\n                if (style.base) {\n                    this.remove(style.name);\n                }\n                style.destroy();\n            }\n        });\n    }\n\n    // Register a style\n    register (style) {\n        this.styles[style.name] = style;\n        this.base_styles[style.name] = style;\n    }\n\n    // Remove a style\n    remove (name) {\n        delete this.styles[name];\n    }\n\n    getActiveStyles () {\n        return this.active_styles;\n    }\n\n    // Get list of active styles based on a set of tiles\n    updateActiveStyles (tiles) {\n        this.active_styles = Object.keys(\n            tiles.reduce((active, tile) => {\n                Object.keys(tile.meshes).forEach(s => active[s] = true);\n                return active;\n            }, {})\n        );\n        return this.active_styles;\n    }\n\n    getActiveBlendOrders () {\n        return this.active_blend_orders;\n    }\n\n    updateActiveBlendOrders (tiles) {\n        const orders = [];\n        tiles.forEach(tile => {\n            Object.entries(tile.meshes)\n                .forEach(([style, style_meshes]) => { // for each tile's set of meshes, keyed by style name\n                    style_meshes.forEach(mesh => { // for each style's list of meshes\n                        // find entry for this mesh's blend order, insert if first entry\n                        const blend_order = mesh.variant.blend_order;\n                        let oi = orders.findIndex(x => x.blend_order === blend_order);\n                        oi = oi > -1 ? oi : orders.push({ blend_order, styles: [] }) - 1;\n\n                        // add style to list for this blend order\n                        if (orders[oi].styles.indexOf(style) === -1) {\n                            orders[oi].styles.push(style);\n                        }\n                    });\n                });\n        });\n\n        // sort ascending by blend order\n        this.active_blend_orders = orders.sort((a, b) => a.blend_order - b.blend_order);\n    }\n\n    mix (style, styles) {\n        // Exit early if we have already applied mixins to this style\n        if (style.mixed) {\n            return style;\n        }\n        style.mixed = {};\n\n        // Mixin sources, in order\n        let sources = [];\n        if (style.mix) {\n            if (Array.isArray(style.mix)) {\n                sources.push(...style.mix);\n            }\n            else {\n                sources.push(style.mix);\n            }\n            sources = sources.map(x => styles[x]).filter(x => x && x !== style); // TODO: warning on trying to mix into self\n\n            // Track which styles were mixed into this one\n            sources.forEach(s => style.mixed[s.name] = true);\n        }\n        sources.push(style);\n\n        // Flags - OR'd, true if any style has it set\n        style.animated = sources.some(x => x && x.animated);\n        style.texcoords = sources.some(x => x && x.texcoords);\n\n        // Overwrites - last definition wins\n        style.base = sources.map(x => x.base).filter(x => x).pop();\n        style.lighting = sources.map(x => x.lighting).filter(x => x != null).pop();\n        style.texture = sources.map(x => x.texture).filter(x => x).pop();\n        style.raster = sources.map(x => x.raster).filter(x => x != null).pop();\n        style.dash = sources.map(x => x.dash).filter(x => x != null).pop();\n        style.dash_background_color = sources.map(x => x.dash_background_color).filter(x => x != null).pop();\n        if (sources.some(x => Object.prototype.hasOwnProperty.call(x, 'blend') && x.blend)) {\n            // only mix blend if explicitly set, otherwise let base style choose blending mode\n            // hasOwnProperty check gives preference to base style prototype\n            style.blend = sources.map(x => Object.prototype.hasOwnProperty.call(x, 'blend') && x.blend).filter(x => x).pop();\n        }\n        style.blend_order = sources.map(x => x.blend_order).filter(x => x != null).pop();\n\n        // Merges - property-specific rules for merging values\n        style.defines = Object.assign({}, ...sources.map(x => x.defines).filter(x => x)); // internal defines (not user-defined)\n        style.material = Object.assign({}, ...sources.map(x => x.material).filter(x => x));\n\n        let draws = sources.map(x => x.draw).filter(x => x); // draw defaults\n        if (draws.length > 0) {\n            style.draw = mergeObjects({}, ...draws);\n        }\n\n        // Mix shader properties\n        this.mixShaders(style, styles, sources);\n        return style;\n    }\n\n    // Mix the propertes in the \"shaders\" block\n    mixShaders (style, styles, sources) {\n        let shaders = {}; // newly mixed shaders properties\n        let shader_merges = sources.map(x => x.shaders).filter(x => x); // just the source styles with shader properties\n\n        // Defines\n        shaders.defines = Object.assign({}, ...shader_merges.map(x => x.defines).filter(x => x));\n\n        // Attributes\n        shaders.attributes = Object.assign({}, ...shader_merges.map(x => x.attributes).filter(x => x));\n\n        // Uniforms\n        shaders.uniforms = {};  // uniforms for this style, both explicitly defined, and mixed from other styles\n        shaders._uniforms = (style.shaders && style.shaders.uniforms) || {}; // uniforms explicitly defined by *this* style\n        shaders._uniform_scopes = {}; // tracks which style each uniform originated from (this one, or ancestor)\n\n        // Mix in uniforms from ancestors, providing means to access\n        sources\n            .filter(x => x.shaders && x.shaders.uniforms)\n            .forEach(x => {\n                for (let u in x.shaders.uniforms) {\n                    shaders._uniform_scopes[u] = x.name;\n\n                    // Define getter and setter for this uniform\n                    // Getter returns value for this style if present, otherwise asks appropriate ancestor for it\n                    // Setter sets the value for this style (whether previously present in this style or not)\n                    // Mimics JS prototype/hasOwnProperty behavior, but with multiple ancestors (via mixins)\n                    Object.defineProperty(shaders.uniforms, u, {\n                        enumerable: true,\n                        configurable: true,\n                        get: function () {\n                            // Uniform is explicitly defined on this style\n                            if (shaders._uniforms[u] !== undefined) {\n                                return shaders._uniforms[u];\n                            }\n                            // Uniform was mixed from another style, forward request there\n                            // Identity check is needed to prevent infinite recursion if a previously defined uniform\n                            // is set to undefined\n                            else if (styles[shaders._uniform_scopes[u]].shaders.uniforms !== shaders.uniforms) {\n                                return styles[shaders._uniform_scopes[u]].shaders.uniforms[u];\n                            }\n                            return undefined;\n                        },\n                        set: function (v) {\n                            shaders._uniforms[u] = v;\n                        }\n                    });\n                }\n            });\n\n        // Extensions: build a list of unique extensions\n        shaders.extensions = Object.keys(shader_merges\n            .map(x => x.extensions)\n            .filter(x => x)\n            .reduce((prev, cur) => {\n                // single extension\n                if (typeof cur === 'string') {\n                    prev[cur] = true;\n                }\n                // array of extensions\n                else {\n                    cur.forEach(x => prev[x] = true);\n                }\n                return prev;\n            }, {}) || {}\n        );\n\n        // Shader blocks\n        // Mark all shader blocks for the target style as originating with its own name\n        if (style.shaders && style.shaders.blocks) {\n            style.shaders.block_scopes = style.shaders.block_scopes || {};\n            for (let k in style.shaders.blocks) {\n                let block = style.shaders.blocks[k];\n                style.shaders.block_scopes[k] = style.shaders.block_scopes[k] || [];\n                if (Array.isArray(block)) {\n                    style.shaders.block_scopes[k].push(...block.map(() => style.name));\n                }\n                else {\n                    style.shaders.block_scopes[k].push(style.name);\n                }\n            }\n        }\n\n        // Merge shader blocks, keeping track of which style each block originated from\n        let mixed = {}; // all scopes mixed so far\n        shader_merges.forEach(source => {\n            if (!source.blocks) {\n                return;\n            }\n\n            shaders.blocks = shaders.blocks || {};\n            shaders.block_scopes = shaders.block_scopes || {};\n            let mixed_source = {}; // scopes mixed for this source style\n\n            for (let t in source.blocks) {\n                let block = source.blocks[t];\n                let block_scope = source.block_scopes[t];\n\n                shaders.blocks[t] = shaders.blocks[t] || [];\n                shaders.block_scopes[t] = shaders.block_scopes[t] || [];\n\n                // standardize on arrays (block can be single or multi-value)\n                block = Array.isArray(block) ? block : [block];\n                block_scope = Array.isArray(block_scope) ? block_scope : [block_scope];\n\n                for (let b=0; b < block.length; b++) {\n                    // Skip blocks we've already mixed in from the same scope\n                    // Repeating scope indicates a diamond pattern where a style is being mixed multiple times\n                    if (mixed[block_scope[b]]) {\n                        continue;\n                    }\n                    mixed_source[block_scope[b]] = true;\n\n                    shaders.blocks[t].push(block[b]);\n                    shaders.block_scopes[t].push(block_scope[b]);\n                }\n            }\n\n            // Add styles mixed in from this source - they could be multi-level ancestors,\n            // beyond the first-level \"parents\" defined in this style's `mix` list\n            Object.assign(mixed, mixed_source);\n        });\n\n        Object.assign(style.mixed, mixed); // add all newly mixed styles\n\n        style.shaders = shaders; // assign back to style\n        return style;\n    }\n\n    // Create a new style\n    // name: name of new style\n    // config: properties of new style\n    // styles: working set of styles being built (used for mixing in existing styles)\n    create (name, config, styles = {}) {\n        let style = mergeObjects({}, config); // deep copy\n        style.name = name;\n\n        // Style mixins\n        style = this.mix(style, styles);\n\n        // Has base style?\n        // Only renderable (instantiated) styles should be included for run-time use\n        // Others are intermediary/abstract, used during style composition but not execution\n        if (style.base && this.base_styles[style.base]) {\n            this.styles[name] = style = Object.assign(Object.create(this.base_styles[style.base]), style);\n        }\n        else {\n            style.base = null; // null out invalid base style\n        }\n\n        return style;\n    }\n\n    // Called to create and initialize styles\n    build (styles_defs) {\n        const styles = { ...styles_defs }; // copy to avoid modifying underlying object\n\n        // Un-register existing styles from cross-thread communication\n        if (this.styles) {\n            Object.values(this.styles)\n                .forEach(s => WorkerBroker.removeTarget(s.main_thread_target));\n        }\n\n        // Add default blend/base style pairs as needed\n        const blends = ['opaque', 'add', 'multiply', 'overlay', 'inlay', 'translucent'];\n        const bases = ['polygons', 'lines', 'points', 'text', 'raster'];\n        for (const blend of blends) {\n            for (const base of bases) {\n                const style = blend + '_' + base;\n                if (styles[style] == null) {\n                    styles[style] = { base, blend };\n                }\n            }\n        }\n\n        // Sort styles by dependency, then build them\n        let style_deps = Object.keys(styles).sort(\n            (a, b) => this.inheritanceDepth(a, styles) - this.inheritanceDepth(b, styles)\n        );\n\n        // Only keep built-in base styles\n        for (let sname in this.styles) {\n            if (!this.base_styles[sname]) {\n                delete this.styles[sname];\n            }\n            else {\n                this.styles[sname].reset();\n            }\n        }\n\n        // Working set of styles being built\n        let ws = {};\n        style_deps.forEach(sname => {\n            ws[sname] = this.create(sname, styles[sname], ws);\n        });\n\n        return this.styles;\n    }\n\n    // Initialize all styles\n    initStyles (scene = {}) {\n        // Initialize all\n        for (let sname in this.styles) {\n            this.styles[sname].init(scene);\n        }\n    }\n\n    // Given a style key in a set of styles to add, count the length of the inheritance chain\n    inheritanceDepth (key, styles) {\n        let parents = 0;\n\n        for (;;) {\n            let style = styles[key];\n            if (!style) {\n                // this is a scene def error, trying to extend a style that doesn't exist\n                break;\n            }\n\n            // Dependency chain ends when this style isn't mixing in any others\n            if (!style.mix) {\n                break;\n            }\n\n            // Traverse next parent style\n            parents++;\n\n            if (Array.isArray(style.mix)) {\n                // If multiple mixins, find the deepest one\n                parents += Math.max(...style.mix.map(s => {\n                    // Trying to mix into itself!\n                    if (key === s) {\n                        return;\n                    }\n\n                    return this.inheritanceDepth(s, styles);\n                }));\n                break;\n            }\n            else {\n                // Trying to mix into itself!\n                if (key === style.mix) {\n                    break;\n                }\n\n                // If single mixin, continue loop up the tree\n                key = style.mix;\n            }\n        }\n        return parents;\n    }\n\n}\n","function notNull(x)  { return x != null; }\nfunction wrap(x)     { return '(' + x + ')';}\n\nfunction maybeQuote(value) {\n    if (typeof value === 'string') {\n        return '\"' + value + '\"';\n    }\n    return value;\n}\n\nfunction lookUp(key) {\n    if (key[0] === '$') {\n        // keys prefixed with $ are special properties in the context object (not feature properties)\n        return 'context[\\'' + key.substring(1) + '\\']';\n    }\n    else if (key.indexOf('.') > -1) {\n        if (key.indexOf('\\\\.') === -1) { // no escaped dot notation\n            // un-escaped dot notation indicates a nested feature property\n            return `context.feature.properties${key.split('.').map(k => '[\\'' + k + '\\']').join('')}`;\n        }\n        else { // mixed escaped/unescaped dot notation\n            // escaped dot notation will be interpreted as a single-level feature property with dots in the name\n            // this splits on unescaped dots, which requires a temporary swap of escaped and unescaped dots\n            let keys = key\n                .replace(/\\\\\\./g, '__TANGRAM_DELIMITER__')\n                .split('.')\n                .map(s => s.replace(/__TANGRAM_DELIMITER__/g, '.'));\n            return `context.feature.properties${keys.map(k => '[\\'' + k + '\\']').join('')}`;\n        }\n    }\n    // single-level feature property\n    return 'context.feature.properties[\\'' + key + '\\']';\n}\n\nfunction nullValue(/*key, value*/) {\n    return ' true ';\n}\n\nfunction propertyEqual(key, value) {\n    return wrap(maybeQuote(value) + ' === ' + lookUp(key));\n}\n\nfunction propertyOr(key, values) {\n    const arr = '[' + values.map(maybeQuote).join(',') + ']';\n    return wrap(`${arr}.indexOf(${lookUp(key)}) > -1`);\n}\n\nfunction printNested(values, joiner) {\n    return wrap(values.filter(notNull).map(function (x) {\n        return wrap(x.join(' && '));\n    }).join(' ' + joiner + ' '));\n}\n\nfunction any(_, values, options) {\n    return (values && values.length > 0) ? printNested(values.map(function(v) { return parseFilter(v, options); }), '||') : 'true';\n}\n\nfunction all(_, values, options) {\n    return (values && values.length > 0) ? printNested(values.map(function(v) { return parseFilter(v, options); }), '&&') : 'true';\n}\n\nfunction not(key, value, options) {\n    return '!' + wrap(parseFilter(value, options).join(' && '));\n}\n\nfunction none(key, values, options) {\n    return '!' + wrap(any(null, values, options));\n}\n\nfunction propertyMatchesBoolean(key, value) {\n    return wrap(lookUp(key) + (value ? ' != ' : ' == ')  + 'null');\n}\n\nfunction rangeMatch(key, value, options) {\n    var expressions = [];\n    var transform = options && (typeof options.rangeTransform === 'function') && options.rangeTransform;\n\n    if (value.max) {\n        var max = transform ? transform(value.max) : value.max;\n        expressions.push('' + lookUp(key) + ' < ' + max);\n    }\n\n    if (value.min) {\n        var min = transform ? min = transform(value.min) : value.min;\n        expressions.push('' + lookUp(key) + ' >= ' + min);\n    }\n\n    return wrap(expressions.join(' && '));\n}\n\nfunction includesMatch(key, value) {\n    let expressions = [];\n\n    // the array includes ONE OE MORE of the provided values (a single value is converted to an array)\n    if (value.includes_any) {\n        const vals = Array.isArray(value.includes_any) ? value.includes_any : [value.includes_any];\n        const arr = '['+ vals.map(maybeQuote).join(',') + ']';\n        expressions.push(`${lookUp(key)} != null && ${arr}.some(function(v) { return ${lookUp(key)}.indexOf(v) > -1 })`);\n    }\n\n    // the array includes ALL of the provided values (a single value is converted to an array)\n    if (value.includes_all) {\n        const vals = Array.isArray(value.includes_all) ? value.includes_all : [value.includes_all];\n        const arr = '[' + vals.map(maybeQuote).join(',') + ']';\n        expressions.push(`${lookUp(key)} != null && ${arr}.every(function(v) { return ${lookUp(key)}.indexOf(v) > -1 })`);\n    }\n\n    return wrap(expressions.join(' && '));\n}\n\nfunction parseFilter(filter, options) {\n    var filterAST = [];\n\n    // Function filter\n    if (typeof filter === 'function') {\n        return [wrap(filter.toString() + '(context)')];\n    }\n    // Array filter, implicit 'any'\n    else if (Array.isArray(filter)) {\n        return [any(null, filter, options)];\n    }\n    // Null filter object\n    else if (filter == null) {\n        return ['true'];\n    }\n\n    // Object filter, e.g. implicit 'all'\n    var keys = Object.keys(filter);\n    for (var k=0; k < keys.length; k++) {\n        var key = keys[k];\n\n        var value = filter[key],\n            type  = typeof value;\n        if (type === 'string' || type === 'number') {\n            filterAST.push(propertyEqual(key, value));\n        } else if (type === 'boolean') {\n            filterAST.push(propertyMatchesBoolean(key, value));\n        } else if (key === 'not') {\n            filterAST.push(not(key, value, options));\n        } else if (key === 'any') {\n            filterAST.push(any(key, value, options));\n        } else if (key === 'all') {\n            filterAST.push(all(key, value, options));\n        } else if (key === 'none') {\n            filterAST.push(none(key, value, options));\n        } else if (Array.isArray(value)) {\n            filterAST.push(propertyOr(key, value));\n        } else if (type === 'object' && value != null) {\n            if (value.max || value.min) {\n                filterAST.push(rangeMatch(key, value, options));\n            }\n            else if (value.includes_any || value.includes_all) {\n                filterAST.push(includesMatch(key, value, options));\n            }\n        } else if (value == null) {\n            filterAST.push(nullValue(key, value));\n        } else {\n            throw new Error('Unknown Query syntax: ' + value);\n        }\n    }\n\n    return keys.length === 0 ? ['true'] : filterAST;\n}\n\nfunction filterToString(filterAST) {\n    return wrap(filterAST.join(' && '));\n}\n\nexport function buildFilter(filter, options) {\n    if (filter == null) { return function () { return true; }; }\n    // jshint evil: true\n    return new Function('context', 'return ' + filterToString(parseFilter(filter, options)) + ';');\n}\n","import StyleParser from './style_parser';\nimport { compileFunctionStrings } from '../utils/functions';\nimport log from '../utils/log';\nimport mergeObjects from '../utils/merge';\nimport Geo from '../utils/geo';\nimport { buildFilter } from './filter';\n\n// N.B.: 'visible' is legacy compatibility for 'enabled'\nconst reserved = ['filter', 'draw', 'visible', 'enabled', 'data', 'exclusive', 'priority'];\n\nlet layer_cache = {};\nexport function layerCache () {\n    return layer_cache;\n}\n\nfunction cacheKey (layers) {\n    if (layers.length > 1) {\n        var k = layers[0];\n        for (var i=1; i < layers.length; i++) {\n            k += '/' + layers[i];\n        }\n\n        return k;\n    }\n    return layers[0];\n}\n\n// Merge matching layer trees into a final draw group\nexport function mergeTrees(matchingTrees, group) {\n    let draws, treeDepth = 0;\n\n    // Find deepest tree\n    for (let t=0; t < matchingTrees.length; t++) {\n        if (matchingTrees[t].length > treeDepth) {\n            treeDepth = matchingTrees[t].length;\n        }\n    }\n\n    // No layers to parse\n    if (treeDepth === 0) {\n        return null;\n    }\n\n    // Merged draw group object\n    let draw = {\n        visible: true, // visible by default\n    };\n\n    // Iterate trees in parallel\n    for (let x=0; x < treeDepth; x++) {\n        // Pull out the requested draw group, for each tree, at this depth (avoiding duplicates at the same level in tree)\n        draws = [];\n        matchingTrees.forEach(tree => {\n            if (tree[x] && tree[x][group] && draws.indexOf(tree[x][group]) === -1) {\n                draws.push(tree[x][group]);\n            }\n        });\n        if (draws.length === 0) {\n            continue;\n        }\n\n        // Merge draw objects\n        mergeObjects(draw, ...draws);\n    }\n\n    // Short-circuit if not visible\n    if (draw.visible === false) {\n        return null;\n    }\n\n    return draw;\n}\n\nconst blacklist = ['any', 'all', 'not', 'none'];\n\nclass Layer {\n\n    constructor({ layer, name, parent, draw, visible, enabled, filter, exclusive, priority, styles }) {\n        this.id = Layer.id++;\n        this.config_data = layer.data;\n        this.parent = parent;\n        this.name = name;\n        this.full_name = this.parent ? (this.parent.full_name + ':' + this.name) : this.name;\n        this.draw = draw;\n        this.filter = filter;\n        this.exclusive = (exclusive === true);\n        this.priority = (priority != null ? priority : Number.MAX_SAFE_INTEGER);\n        this.styles = styles;\n        this.is_built = false;\n\n        enabled = (enabled === undefined) ? visible : enabled; // `visible` property is backwards compatible for `enabled`\n        this.enabled = (enabled !== false); // layer is enabled unless explicitly set to disabled\n\n        // Denormalize layer name to draw groups\n        if (this.draw) {\n            for (let group in this.draw) {\n                this.draw[group] = (this.draw[group] == null) ? {} : this.draw[group];\n                if (typeof this.draw[group] !== 'object') {\n                    // Invalid draw group\n                    let msg = `Draw group '${group}' for layer ${this.full_name} is invalid, must be an object, `;\n                    msg += `but was set to \\`${group}: ${this.draw[group]}\\` instead`;\n                    log('warn', msg); // TODO: fire external event that clients to subscribe to\n\n                    delete this.draw[group];\n                }\n            }\n        }\n    }\n\n    build () {\n        log('trace', `Building layer '${this.full_name}'`);\n        this.buildFilter();\n        this.buildDraw();\n        this.is_built = true;\n    }\n\n    buildDraw() {\n        this.draw = compileFunctionStrings(this.draw, StyleParser.wrapFunction);\n        this.calculatedDraw = calculateDraw(this);\n    }\n\n    buildFilter() {\n        this.filter_original = this.filter;\n        this.filter = compileFunctionStrings(this.filter, StyleParser.wrapFunction);\n\n        let type = typeof this.filter;\n        if (this.filter != null && type !== 'object' && type !== 'function') {\n            // Invalid filter\n            let msg = `Filter for layer ${this.full_name} is invalid, filter value must be an object or function, `;\n            msg += `but was set to \\`filter: ${this.filter}\\` instead`;\n            log('warn', msg); // TODO: fire external event that clients to subscribe to\n            return;\n        }\n\n        try {\n            this.buildZooms();\n            this.buildPropMatches();\n            if (this.filter != null && (typeof this.filter === 'function' || Object.keys(this.filter).length > 0)) {\n                this.filter = buildFilter(this.filter, FilterOptions);\n            }\n            else {\n                this.filter = null;\n            }\n        }\n        catch(e) {\n            // Invalid filter\n            let msg = `Filter for layer ${this.full_name} is invalid, \\`filter: ${JSON.stringify(this.filter)}\\` `;\n            msg += `failed with error '${e.message}', stack trace: ${e.stack}`;\n            log('warn', msg); // TODO: fire external event that clients to subscribe to\n        }\n    }\n\n    // Zooms often cull large swaths of the layer tree, so they get special treatment and are checked first\n    buildZooms() {\n        let zoom = this.filter && this.filter.$zoom; // has an explicit zoom filter\n        let ztype = typeof zoom;\n        if (zoom != null) {\n            this.zooms = {};\n\n            if (ztype === 'number') {\n                this.zooms[zoom] = true;\n            }\n            else if (Array.isArray(zoom)) {\n                for (let z=0; z < zoom.length; z++) {\n                    this.zooms[zoom[z]] = true;\n                }\n            }\n            else if (ztype === 'object' && (zoom.min != null || zoom.max != null)) {\n                let zmin = zoom.min || 0;\n                let zmax = zoom.max || Geo.max_style_zoom;\n                for (let z=zmin; z < zmax; z++) {\n                    this.zooms[z] = true;\n                }\n            }\n\n            delete this.filter.$zoom; // don't process zoom through usual generic filter logic\n        }\n    }\n\n    buildPropMatches() {\n        if (!this.filter || Array.isArray(this.filter) || typeof this.filter === 'function') {\n            return;\n        }\n\n        Object.keys(this.filter).forEach(key => {\n            if (blacklist.indexOf(key) === -1) {\n                let val = this.filter[key];\n                let type = typeof val;\n                let array = Array.isArray(val);\n\n                if (!(array || type === 'string' || type === 'number')) {\n                    return;\n                }\n\n                if (key[0] === '$') {\n                    // Context property\n                    this.context_prop_matches = this.context_prop_matches || [];\n                    this.context_prop_matches.push([key.substring(1), array ? val : [val]]);\n                    delete this.filter[key];\n                }\n                else if (key.indexOf('.') === -1) { // exclude nested feature properties\n                    // Single-level feature property\n                    this.feature_prop_matches = this.feature_prop_matches || [];\n                    this.feature_prop_matches.push([key, array ? val : [val]]);\n                    delete this.filter[key];\n                }\n            }\n        });\n    }\n\n    doPropMatches (context) {\n        if (this.feature_prop_matches) {\n            for (let r=0; r < this.feature_prop_matches.length; r++) {\n                let match = this.feature_prop_matches[r];\n                let val = context.feature.properties[match[0]];\n                if (val == null || match[1].indexOf(val) === -1) {\n                    return false;\n                }\n            }\n        }\n\n        if (this.context_prop_matches) {\n            for (let r=0; r < this.context_prop_matches.length; r++) {\n                let match = this.context_prop_matches[r];\n                let val = context[match[0]];\n                if (val == null || match[1].indexOf(val) === -1) {\n                    return false;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    doesMatch (context) {\n        if (!this.enabled) {\n            return false;\n        }\n\n        if (!this.is_built) {\n            this.build();\n        }\n\n        // zoom pre-filter: skip rest of filter if out of layer zoom range\n        if (this.zooms != null && !this.zooms[context.zoom]) {\n            return false;\n        }\n\n        // direct feature property matches\n        if (!this.doPropMatches(context)) {\n            return false;\n        }\n\n        // any remaining filter (more complex matches or dynamic function)\n        let match;\n        if (this.filter instanceof Function){\n            try {\n                match = this.filter(context);\n            }\n            catch (error) {\n                // Filter function error\n                let msg = `Filter for this ${this.full_name}: \\`filter: ${this.filter_original}\\` `;\n                msg += `failed with error '${error.message}', stack trace: ${error.stack}`;\n                log('error', msg, context.feature);\n            }\n        }\n        else {\n            match = this.filter == null;\n        }\n\n        if (match) {\n            if (this.children_to_parse) {\n                parseLayerChildren(this, this.children_to_parse, this.styles);\n                delete this.children_to_parse;\n            }\n\n            return true;\n        }\n        return false;\n    }\n\n}\n\nLayer.id = 0;\n\n\nexport class LayerLeaf extends Layer {\n    constructor (config) {\n        super(config);\n        this.is_leaf = true;\n    }\n\n}\n\nexport class LayerTree extends Layer {\n    constructor (config) {\n        super(config);\n        this.is_tree = true;\n        this.layers = config.layers || [];\n    }\n\n    addLayer (layer) {\n        this.layers.push(layer);\n    }\n\n    buildDrawGroups (context) {\n        let layers = [], layer_ids = [];\n        matchFeature(context, [this], layers, layer_ids);\n\n        if (layers.length > 0) {\n            let cache_key = cacheKey(layer_ids);\n\n            // Only evaluate each layer combination once (undefined means not yet evaluated,\n            // null means evaluated with no draw object)\n            if (layer_cache[cache_key] === undefined) {\n                // Find all the unique visible draw blocks for this layer tree\n                let draw_groups = layers.map(x => x && x.visible !== false && x.calculatedDraw);\n                let draw_keys = {};\n\n                for (let r=0; r < draw_groups.length; r++) {\n                    let stack = draw_groups[r];\n                    if (!stack) {\n                        continue;\n                    }\n                    for (let g=0; g < stack.length; g++) {\n                        let group = stack[g];\n                        for (let key in group) {\n                            draw_keys[key] = true;\n                        }\n                    }\n                }\n\n                // Calculate each draw group\n                for (let draw_key in draw_keys) {\n                    layer_cache[cache_key] = layer_cache[cache_key] || {};\n                    layer_cache[cache_key][draw_key] = mergeTrees(draw_groups, draw_key);\n\n                    // Only save the ones that weren't null\n                    if (!layer_cache[cache_key][draw_key]) {\n                        delete layer_cache[cache_key][draw_key];\n                    }\n                    else {\n                        layer_cache[cache_key][draw_key].key = cache_key + '/' + draw_key;\n                        layer_cache[cache_key][draw_key].layers = layers.map(x => x && x.full_name);\n                        layer_cache[cache_key][draw_key].group = draw_key;\n                    }\n                }\n\n                // No layers evaluated\n                if (layer_cache[cache_key] && Object.keys(layer_cache[cache_key]).length === 0) {\n                    layer_cache[cache_key] = null;\n                }\n            }\n            return layer_cache[cache_key];\n        }\n    }\n\n}\n\nexport const FilterOptions = {\n    // Handle unit conversions on filter ranges\n    rangeTransform(val) {\n        if (typeof val === 'string' && val.trim().slice(-3) === 'px2') {\n            return `${parseFloat(val)} * context.meters_per_pixel_sq`;\n        }\n        return val;\n    }\n};\n\nexport function isReserved(key) {\n    return reserved.indexOf(key) > -1;\n}\n\nfunction isEmpty(obj) {\n    return Object.keys(obj).length === 0;\n}\n\nexport function groupProps(obj) {\n    let reserved = {}, children = {};\n\n    for (let key in obj) {\n        if (isReserved(key)) {\n            reserved[key] = obj[key];\n        } else {\n            children[key] = obj[key];\n        }\n    }\n    return [reserved, children];\n}\n\nexport function calculateDraw(layer) {\n\n    let draw  = [];\n\n    if (layer.parent) {\n        let cs = layer.parent.calculatedDraw || [];\n        draw.push(...cs);\n    }\n\n    draw.push(layer.draw);\n    return draw;\n}\n\nexport function parseLayerNode(name, layer, parent, styles) {\n\n    layer = (layer == null) ? {} : layer;\n\n    let properties = { name, layer, parent, styles };\n    let [reserved, children] = groupProps(layer);\n    let empty = isEmpty(children);\n    let Create;\n\n    if (empty && parent != null) {\n        Create = LayerLeaf;\n    } else {\n        Create = LayerTree;\n    }\n\n    let r = new Create(Object.assign(properties, reserved));\n\n    // only process child layers if this layer is enabled\n    if (r.enabled) {\n        if (parent) {\n            parent.addLayer(r);\n        }\n        r.children_to_parse = empty ? null : children;\n    }\n\n    return r;\n}\n\nfunction parseLayerChildren (parent, children, styles) {\n    for (let key in children) {\n        let child = children[key];\n        if (typeof child === 'object' && !Array.isArray(child)) {\n            parseLayerNode(key, child, parent, styles);\n        } else {\n            // Invalid layer\n            let msg = `Layer value must be an object: cannot create layer '${key}: ${JSON.stringify(child)}'`;\n            msg += `, under parent layer '${parent.full_name}'.`;\n\n            // If the parent is a style name, this may be an incorrectly nested layer\n            if (styles[parent.name]) {\n                msg += ` The parent name '${parent.name}' is also the name of a style, did you mean to create a 'draw' group`;\n                if (parent.parent) {\n                    msg += ` under '${parent.parent.name}'`;\n                }\n                msg += ' instead?';\n            }\n            log('warn', msg); // TODO: fire external event that clients to subscribe to\n        }\n    }\n\n    // Sort sub-layers so they are applied deterministically when multiple layers modify the same properties\n    // Sort order is: exclusive layers first, then by explicit layer priority, then by layer name\n    parent.layers.sort((a, b) => {\n        // Exclusive layers come first\n        // If an exclusive layer matches, no further sibling layers are matched\n        if (a.exclusive < b.exclusive) return 1;\n        else if (a.exclusive > b.exclusive) return -1;\n\n        // When sub-sorting exclusive layers, sort the higher priority layers first, since only one exlcusive layer\n        // can match and the first one that matches should be the highest priority.\n        // When sub-sorting non-exclusive layers, sort the lower priority layers first, since multiple layers may\n        // match, and when they are merged in order, the later layers will overwrite the earlier ones -- so we want\n        // the higher priority ones to match last so that they \"win\".\n        const direction = (a.exclusive ? 1 : -1);\n\n        // Sub-sort by explicit priority\n        if (a.priority > b.priority) return direction;\n        else if (a.priority < b.priority) return -direction;\n\n        // Sub-sort by layer name as last resort\n        if (a.full_name < b.full_name) return direction;\n        else if (a.full_name > b.full_name) return -direction;\n    });\n}\n\n\nexport function parseLayers (layers, styles) {\n    layer_cache = {}; // clear layer cache\n    let layer_trees = {};\n\n    for (let key in layers) {\n        let layer = layers[key];\n        if (layer) {\n            layer_trees[key] = parseLayerNode(key, layer, null, styles);\n        }\n    }\n\n    return layer_trees;\n}\n\nexport function matchFeature(context, layers, collected_layers, collected_layers_ids) {\n    let matched = false;\n    let child_matched = false;\n\n    if (layers.length === 0) {\n        return;\n    }\n\n    for (let r=0; r < layers.length; r++) {\n        let current = layers[r];\n\n        if (current.is_leaf) {\n            if (current.doesMatch(context)) {\n                matched = true;\n                collected_layers.push(current);\n                collected_layers_ids.push(current.id);\n\n                if (current.exclusive) {\n                    break; // only one exclusive layer can match, stop matching further sibling layers\n                }\n            }\n\n        } else if (current.is_tree) {\n            if (current.doesMatch(context)) {\n                matched = true;\n\n                child_matched = matchFeature(\n                    context,\n                    current.layers,\n                    collected_layers,\n                    collected_layers_ids\n                );\n\n                if (!child_matched) {\n                    collected_layers.push(current);\n                    collected_layers_ids.push(current.id);\n                }\n\n                if (current.exclusive) {\n                    break; // only one exclusive layer can match, stop matching further sibling layers\n                }\n            }\n        }\n    }\n\n    return matched;\n}\n","import log from '../utils/log';\nimport Utils from '../utils/utils';\nimport mergeObjects from '../utils/merge';\nimport Geo from '../utils/geo';\nimport {TileID} from './tile_id';\nimport {addLayerDebugEntry} from '../styles/style';\nimport StyleParser from '../styles/style_parser';\nimport Collision from '../labels/collision';\nimport WorkerBroker from '../utils/worker_broker';\nimport Task from '../utils/task';\nimport Texture from '../gl/texture';\n\nimport {mat4, vec3} from '../utils/gl-matrix';\n\nlet id = 0; // unique tile id\nlet build_id = 0; // id tracking order in which tiles were build\n\nexport default class Tile {\n\n    /**\n        Tile\n        @constructor\n        Required properties:\n        coords: object with {x, y, z} properties identifying tile coordinate location\n        worker: web worker to handle tile construction\n    */\n    constructor({ coords, style_z, source, workers, view }) {\n        this.id = id++;\n        this.view = view;\n        this.source = source;\n        this.generation = null;\n        this.valid = true;\n\n        this.visible = false;\n        this.proxy_for = null;\n        this.proxied_as = null;\n        this.proxy_level = 0;\n        this.proxy_order_offset = 0;\n        this.fade_in = true;\n        this.loading = false;\n        this.loaded = false;\n        this.built = false;\n        this.labeled = false;\n        this.error = null;\n        this.debug = {};\n\n        this.style_z = style_z; // zoom level to be used for styling\n        this.coords = TileID.normalizedCoord(coords, this.source);\n        this.key = TileID.key(this.coords, this.source, this.style_z);\n        this.overzoom = Math.max(this.style_z - this.coords.z, 0); // number of levels of overzooming\n        this.overzoom2 = Math.pow(2, this.overzoom);\n        this.min = Geo.metersForTile(this.coords);\n        this.max = Geo.metersForTile({x: this.coords.x + 1, y: this.coords.y + 1, z: this.coords.z }),\n        this.span = { x: (this.max.x - this.min.x), y: -(this.max.y - this.min.y) };\n        this.bounds = { sw: { x: this.min.x, y: this.max.y }, ne: { x: this.max.x, y: this.min.y } };\n\n        this.meters_per_pixel = Geo.metersPerPixel(this.style_z);\n        this.meters_per_pixel_sq = this.meters_per_pixel * this.meters_per_pixel;\n        this.units_per_pixel = Geo.units_per_pixel / this.overzoom2; // adjusted for overzoom\n        this.units_per_meter_overzoom = Geo.unitsPerMeter(this.coords.z) * this.overzoom2; // adjusted for overzoom\n        this.preserve_tiles_within_zoom = this.source.preserve_tiles_within_zoom; // source-specific tile retention policy\n\n        this.meshes = {}; // renderable VBO meshes keyed by style\n        this.new_mesh_styles = []; // meshes that have been built so far in current build generation\n        this.pending_label_meshes = null; // meshes that are pending collision (shouldn't be displayed yet)\n\n        this.setWorker(workers);\n    }\n\n    // Free resources owned by tile\n    freeResources () {\n        for (let m in this.meshes) {\n            this.meshes[m].forEach(m => m.destroy());\n        }\n        this.meshes = {};\n\n        if (this.pending_label_meshes) {\n            for (let m in this.pending_label_meshes) {\n                this.pending_label_meshes[m].forEach(m => m.destroy());\n            }\n        }\n        this.pending_label_meshes = null;\n    }\n\n    destroy() {\n        Task.removeForTile(this.id);\n        this.workerMessage('self.removeTile', this.key);\n        this.freeResources();\n        this.worker = null;\n        this.valid = false;\n    }\n\n    buildAsMessage() {\n        return {\n            id: this.id,\n            key: this.key,\n            source: this.source.name,\n            coords: this.coords,\n            min: this.min,\n            max: this.max,\n            units_per_pixel: this.units_per_pixel,\n            meters_per_pixel: this.meters_per_pixel,\n            meters_per_pixel_sq: this.meters_per_pixel_sq,\n            units_per_meter_overzoom: this.units_per_meter_overzoom,\n            style_z: this.style_z,\n            overzoom: this.overzoom,\n            overzoom2: this.overzoom2,\n            generation: this.generation,\n            debug: this.debug\n        };\n    }\n\n    // Find the appropriate worker thread for this tile\n    setWorker (workers) {\n        if (this.source.tiled) {\n            // Pin tile to a worker thread based on its coordinates\n            this.worker_id = Math.abs(this.coords.x + this.coords.y + this.coords.z) % workers.length;\n        }\n        else {\n            // Pin all tiles from each non-tiled source to a single worker\n            // Prevents data for these sources from being loaded more than once\n            this.worker_id = this.source.id % workers.length;\n        }\n\n        this.worker = workers[this.worker_id];\n    }\n\n    workerMessage (...message) {\n        return WorkerBroker.postMessage(this.worker, ...message);\n    }\n\n    build(generation, { fade_in = true } = {}) {\n        this.generation = generation;\n        this.fade_in = fade_in;\n        if (!this.loaded) {\n            this.loading = true;\n            this.built = false;\n            this.labeled = false;\n        }\n        return this.workerMessage('self.buildTile', { tile: this.buildAsMessage() }).catch(e => { throw e; });\n    }\n\n    /**\n        Called on worker to cancel loading\n        Static method because the worker only has object representations of tile data, there is no\n        tile instance created yet.\n    */\n    static cancel(tile) {\n        if (tile) {\n            tile.canceled = true;\n            if (tile.source_data && tile.source_data.request_id) {\n                Utils.cancelRequest(tile.source_data.request_id); // cancel pending tile network request\n                tile.source_data.request_id = null;\n            }\n\n            Tile.abortBuild(tile);\n        }\n    }\n\n    // Process geometry for tile - called by web worker\n    // Returns a set of tile keys that should be sent to the main thread (so that we can minimize data exchange between worker and main thread)\n    static buildGeometry (tile, { scene_id, layers, styles, global }) {\n        let data = tile.source_data;\n\n        tile.debug.building = +new Date();\n        tile.debug.feature_count = 0;\n        tile.debug.layers = null;\n\n        Collision.startTile(tile.id, { apply_repeat_groups: true });\n\n        // Process each top-level layer\n        for (let layer_name in layers) {\n            let layer = layers[layer_name];\n            // Skip layers with no data source defined\n            if (!layer || !layer.config_data) {\n                log('warn', `Layer ${layer_name} was defined without a geometry data source and will not be rendered.`);\n                continue;\n            }\n\n            // Source names don't match\n            if (layer.config_data.source !== tile.source) {\n                continue;\n            }\n\n            // Get data for one or more layers from source\n            let source_layers = Tile.getDataForSource(data, layer.config_data, layer_name);\n\n            // Build features in layer\n            for (let s=0; s < source_layers.length; s++) {\n                let source_layer = source_layers[s];\n                let geom = source_layer.geom;\n                if (!geom) {\n                    continue;\n                }\n\n                for (let f = 0; f < geom.features.length; f++) {\n                    let feature = geom.features[f];\n                    if (feature.geometry == null) {\n                        continue; // skip features w/o geometry (valid GeoJSON)\n                    }\n\n                    let context = StyleParser.getFeatureParseContext(feature, tile, global);\n                    context.winding = tile.default_winding;\n                    context.source = tile.source;        // add data source name\n                    context.layer = source_layer.layer;  // add data source layer name\n\n                    // Get draw groups for this feature\n                    let draw_groups = layer.buildDrawGroups(context, true);\n                    if (!draw_groups) {\n                        continue;\n                    }\n\n                    // Build draw groups\n                    for (let group_name in draw_groups) {\n                        let group = draw_groups[group_name];\n\n                        // Add to style\n                        let style_name = group.style || group_name;\n                        let style = styles[style_name];\n\n                        if (!style) {\n                            log('warn', `Style '${style_name}' not found, skipping layer '${layer_name}':`, group, feature);\n                            continue;\n                        }\n\n                        group = style.preprocess(group);\n                        if (group == null || group.visible === false) {\n                            continue;\n                        }\n\n                        context.layers = group.layers;  // add matching draw layers\n\n                        style.addFeature(feature, group, context);\n                    }\n\n                    tile.debug.feature_count++;\n                }\n            }\n        }\n        tile.debug.building = +new Date() - tile.debug.building;\n\n        // Send styles back to main thread as they finish building, in two groups: collision vs. non-collision\n        let tile_styles = this.stylesForTile(tile, styles).map(s => styles[s]);\n        Tile.buildStyleGroups(tile, tile_styles, scene_id, style => style.collision ? 'collision' : 'non-collision');\n        // Tile.buildStyleGroups(tile, tile_styles, scene_id, style => style.name); // call for each style\n        // Tile.buildStyleGroups(tile, tile_styles, scene_id, style => 'styles'); // all styles in single call (previous behavior)\n    }\n\n    static stylesForTile (tile, styles) {\n        let tile_styles = [];\n        for (let s in styles) {\n            if (styles[s].hasDataForTile(tile)) {\n                tile_styles.push(s);\n            }\n        }\n        return tile_styles;\n    }\n\n    // Build styles (grouped by the provided function) and send back to main thread as they finish building\n    static buildStyleGroups(tile, styles, scene_id, group_by) {\n        // Group the styles; each group will be sent to the main thread when the styles in the group finish building.\n        const groups = styles.reduce((groups, style) => {\n            const group = group_by(style);\n            groups[group] = groups[group] || [];\n            groups[group].push(style);\n            return groups;\n        }, {});\n\n        // If nothing to build, return empty tile to main thread\n        if (Object.keys(groups).length === 0) {\n            WorkerBroker.postMessage(\n                `TileManager_${scene_id}.buildTileStylesCompleted`,\n                WorkerBroker.withTransferables({ tile: Tile.slice(tile), progress: { start: true, done: true } })\n            );\n            Collision.resetTile(tile.id); // clear collision if we're done with the tile\n            return;\n        }\n\n        // Build each group of styles\n        const progress = {};\n        for (const group_name in groups) {\n            Tile.buildStyleGroup({ group_name, groups, tile, progress, scene_id });\n        }\n    }\n\n    // Build a single group of styles\n    static async buildStyleGroup({ group_name, groups, tile, progress, scene_id }) {\n        const group = groups[group_name];\n        const mesh_data = {};\n        try {\n            // For each group, build all styles in the group\n            await Promise.all(group.map(async (style) => {\n                const style_data = await style.endData(tile);\n                if (style_data) {\n                    mesh_data[style.name] = style_data;\n                }\n            }));\n\n            // Mark the group as done, and check if all groups have finished\n            log('trace', `Finished style group '${group_name}' for tile ${tile.key}`);\n            groups[group_name] = null;\n            if (Object.keys(groups).every(g => groups[g] == null)) {\n                progress.done = true;\n            }\n\n            // Send meshes to main thread\n            WorkerBroker.postMessage(\n                `TileManager_${scene_id}.buildTileStylesCompleted`,\n                WorkerBroker.withTransferables({ tile: { ...Tile.slice(tile), mesh_data }, progress })\n            );\n            if (progress.done) {\n                Collision.resetTile(tile.id); // clear collision if we're done with the tile\n            }\n        }\n        catch (e) {\n            log('error', `Error for style group '${group_name}' for tile ${tile.key}`, (e && e.stack) || e);\n        }\n    }\n\n    /**\n        Retrieves geometry from a tile according to a data source definition\n        Returns an array of objects with:\n            layer: source layer name\n            geom: GeoJSON FeatureCollection\n    */\n    static getDataForSource (source_data, source_config, scene_layer_name) {\n        var layers = [];\n\n        if (source_config != null && source_data != null && source_data.layers != null) {\n            // If source wildcard is specified, combine all source layers\n            if (source_config.all_layers === true) {\n                // Wildcard takes precedence over explicit source layer(s)\n                if (source_config.layer != null) {\n                    const msg = `Layer ${scene_layer_name} includes both 'all_layers: true' and an explicit ` +\n                        '\\'layer\\' keyword in its \\'data\\' block. \\'all_layers: true\\' takes precedence, \\'layer\\' ' +\n                        'will be ignored.';\n                    log({ level: 'warn', once: true }, msg);\n                }\n\n                for (const layer in source_data.layers) {\n                    layers.push({ layer, geom: source_data.layers[layer] });\n                }\n            }\n            // If no source layer specified, and a default data source layer exists\n            else if (!source_config.layer && source_data.layers._default) {\n                layers.push({\n                    geom: source_data.layers._default\n                });\n            }\n            // If no source layer is specified, and a layer for the scene layer name exists\n            else if (!source_config.layer && scene_layer_name) {\n                layers.push({\n                    layer: scene_layer_name,\n                    geom: source_data.layers[scene_layer_name]\n                });\n            }\n            // If a source layer is specified by name, use it\n            else if (typeof source_config.layer === 'string') {\n                layers.push({\n                    layer: source_config.layer,\n                    geom: source_data.layers[source_config.layer]\n                });\n            }\n            // If multiple source layers are specified by name, combine them\n            else if (Array.isArray(source_config.layer)) {\n                source_config.layer.forEach(layer => {\n                    layers.push({ layer, geom: source_data.layers[layer] });\n                });\n            }\n        }\n\n        return layers;\n    }\n\n    /**\n       Called on main thread when a web worker completes processing\n       for a single tile.\n    */\n    buildMeshes(styles, progress) {\n        if (this.error) {\n            return;\n        }\n\n        this.build_id = build_id++; // record order in which tile was built\n\n        // Debug\n        if (progress.start) {\n            this.debug.geometry_count = 0;\n            this.debug.buffer_size = 0;\n        }\n\n        // Create VBOs\n        let meshes = {}; // new data to be added to tile\n        let mesh_data = this.mesh_data;\n        if (mesh_data) {\n            for (let s in mesh_data) {\n                for (let variant in mesh_data[s].meshes) {\n                    let mesh_variant = mesh_data[s].meshes[variant];\n                    if (mesh_variant.vertex_data) {\n                        if (!styles[s]) {\n                            log('warn', `Could not create mesh because style '${s}' not found, for tile ${this.key}, aborting tile`);\n                            break;\n                        }\n\n                        // first add style-level uniforms, then add any mesh-specific ones\n                        let mesh_options = Object.assign({}, mesh_data[s]);\n                        mesh_options.uniforms = Object.assign({}, mesh_options.uniforms, mesh_variant.uniforms);\n                        mesh_options.variant = mesh_variant.variant;\n\n                        // for labels, keep buffer data on CPU so they can be modified later\n                        if (mesh_variant.labels) {\n                            mesh_options.retain = true;\n                        }\n\n                        let mesh = styles[s].makeMesh(mesh_variant.vertex_data, mesh_variant.vertex_elements, mesh_options);\n                        mesh.variant = mesh_options.variant;\n                        mesh.labels = mesh_variant.labels;\n                        meshes[s] = meshes[s] || [];\n                        meshes[s].push(mesh);\n                        if (mesh.variant.mesh_order == null) {\n                            mesh.variant.mesh_order = meshes[s].length - 1; // assign default variant render order\n                        }\n\n                        this.debug.buffer_size += mesh.buffer_size;\n                        this.debug.geometry_count += mesh.geometry_count;\n                    }\n                }\n\n                // Sort mesh variants by explicit render order (if present)\n                if (meshes[s]) {\n                    meshes[s].sort((a, b) => {\n                        // Sort variant order ascending if present, then all null values (where order is unspecified)\n                        let ao = a.variant.mesh_order, bo = b.variant.mesh_order;\n                        return (ao == null ? 1 : (bo == null ? -1 : (ao < bo ? -1 : 1)));\n                    });\n                }\n            }\n        }\n        delete this.mesh_data;\n\n        // New meshes\n        for (let m in meshes) {\n            // swap in non-collision meshes right away\n            if (!styles[m].collision) {\n                if (this.meshes[m]) {\n                    this.meshes[m].forEach(m => m.destroy()); // free old meshes\n                }\n\n                this.meshes[m] = meshes[m]; // set new mesh\n                this.new_mesh_styles.push(m);\n            }\n            // keep label meshes out of view until collision is complete\n            else {\n                this.pending_label_meshes = this.pending_label_meshes || {};\n                this.pending_label_meshes[m] = meshes[m];\n            }\n        }\n\n        if (progress.done) {\n            // Release un-replaced meshes (existing in previous generation, but weren't built for this one)\n            for (let m in this.meshes) {\n                if (this.new_mesh_styles.indexOf(m) === -1 && (!this.pending_label_meshes || this.pending_label_meshes[m] == null)) {\n                    this.meshes[m].forEach(m => m.destroy());\n                    delete this.meshes[m];\n                }\n            }\n            this.new_mesh_styles = [];\n\n            this.debug.geometry_ratio = (this.debug.geometry_count / this.debug.feature_count).toFixed(1);\n        }\n        this.printDebug(progress);\n    }\n\n    // How many styles are currently pending label collision\n    pendingLabelStyleCount () {\n        return this.pending_label_meshes ? Object.keys(this.pending_label_meshes).length : 0;\n    }\n\n    // Swap label style meshes after collision is complete\n    swapPendingLabels () {\n        this.labeled = true; // mark as labeled\n\n        if (this.pending_label_meshes) {\n            for (let m in this.pending_label_meshes) {\n                if (this.meshes[m]) {\n                    this.meshes[m].forEach(m => m.destroy()); // free old meshes\n                }\n\n                this.meshes[m] = this.pending_label_meshes[m]; // set new mesh\n            }\n            this.pending_label_meshes = null;\n        }\n    }\n\n    /**\n        Called on main thread when web worker completes processing, but tile has since been discarded\n        Frees resources that would have been transferred to the tile object.\n        Static method because the tile object no longer exists (the tile data returned by the worker is passed instead).\n    */\n    static abortBuild (tile) {\n        Task.removeForTile(tile.id);\n        Collision.abortTile(tile.id);\n\n        // Releases meshes\n        if (tile.mesh_data) {\n            for (let s in tile.mesh_data) {\n                let textures = tile.mesh_data[s].textures;\n                if (textures) {\n                    textures.forEach(t => {\n                        let texture = Texture.textures[t];\n                        if (texture) {\n                            log('trace', `releasing texture ${t} for tile ${tile.key}`);\n                            texture.release();\n                        }\n                    });\n                }\n            }\n        }\n    }\n\n    // Set as a proxy tile for another tile\n    setProxyFor (tile) {\n        if (tile) {\n            this.visible = true;\n            this.proxy_for = this.proxy_for || [];\n            this.proxy_for.push(tile);\n            this.proxy_order_offset = 1; // draw proxies a half-layer back (order is scaled 2x to avoid integer truncation)\n            tile.proxied_as = (tile.style_z > this.style_z ? 'child' : 'parent');\n            this.proxy_level = Math.abs(tile.style_z - this.style_z); // # of zoom levels proxy is above/below target tile\n        }\n        else {\n            this.proxy_for = null;\n            this.proxy_order_offset = 0;\n            this.proxy_level = 0;\n        }\n    }\n\n    isProxy () {\n        return this.proxy_for != null;\n    }\n\n    // Proxy tiles only need to render a specific style if any of the tiles they are proxying *for*\n    // haven't finished loading that style yet. If all proxied tiles *have* data for that style, then it's\n    // safe to hide the proxy tile's version.\n    shouldProxyForStyle (style) {\n        return !this.proxy_for || this.proxy_for.some(t => t.meshes[style] == null);\n    }\n\n    // Update model matrix and tile uniforms\n    setupProgram ({ model, model32 }, program) {\n        // Tile origin\n        program.uniform('4fv', 'u_tile_origin', [this.min.x, this.min.y, this.style_z, this.coords.z]);\n        program.uniform('1f', 'u_tile_proxy_order_offset', this.proxy_order_offset);\n\n        // Model - transform tile space into world space (meters, absolute mercator position)\n        mat4.identity(model);\n        mat4.translate(model, model, vec3.fromValues(this.min.x, this.min.y, 0));\n        mat4.scale(model, model, vec3.fromValues(this.span.x / Geo.tile_scale, this.span.y / Geo.tile_scale, 1)); // scale tile local coords to meters\n        mat4.copy(model32, model);\n        program.uniform('Matrix4fv', 'u_model', model32);\n\n        // Fade in labels according to proxy status, avoiding \"flickering\" where\n        // labels quickly go from invisible back to visible\n        program.uniform('1i', 'u_tile_fade_in', this.fade_in && this.proxied_as !== 'child');\n    }\n\n    // Slice a subset of keys out of a tile\n    // Includes a minimum set of pre-defined keys for load state, debug. etc.\n    // We use this to send a subset of the tile back to the main thread, to minimize unnecessary data transfer\n    // (e.g. very large items like feature geometry are not needed on the main thread)\n    static slice (tile, keys) {\n        let keep = [\n            'id',\n            'key',\n            'loading',\n            'loaded',\n            'generation',\n            'error',\n            'debug'\n        ];\n        if (Array.isArray(keys)) {\n            keep.push(...keys);\n        }\n\n        // Build the tile subset\n        var tile_subset = {};\n        for (let k=0; k < keep.length; k++) {\n            const key = keep[k];\n            tile_subset[key] = tile[key];\n        }\n\n        return tile_subset;\n    }\n\n    merge (other) {\n        this.loading = other.loading;\n        this.loaded = other.loaded;\n        this.generation = other.generation;\n        this.error = other.error;\n        this.mesh_data = other.mesh_data;\n        this.debug = mergeObjects(this.debug, other.debug);\n        return this;\n    }\n\n    printDebug (progress) {\n        const exclude = ['layers'];\n        let copy = {};\n        for (let key in this.debug) {\n            if (exclude.indexOf(key) === -1) {\n                copy[key] = this.debug[key];\n            }\n        }\n\n        log('debug', `Tile ${progress.done ? '(done)' : ''}: debug for ${this.key}: [  ${JSON.stringify(copy)} ]`);\n    }\n\n}\n\nTile.coord_children = {}; // only allocate children coordinates once per coordinate\n\n// Sum up layer feature/geometry stats from a set of tiles\nexport function debugSumLayerStats(tiles) {\n    let list = {}, tree = {};\n\n    tiles.filter(tile => tile.debug.layers).forEach(tile => {\n        // layer list\n        Object.keys(tile.debug.layers.list).forEach(layer => {\n            let counts = tile.debug.layers.list[layer];\n            addLayerDebugEntry(list, layer, counts.features, counts.geoms, counts.styles, counts.base);\n        });\n\n        // layer tree\n        addDebugLayers(tile.debug.layers.tree, tree);\n    });\n\n    return { list, tree };\n}\n\n// build debug stats layer tree\nfunction addDebugLayers (node, tree) {\n    for (let layer in node) {\n        let counts = node[layer];\n        addLayerDebugEntry(tree, layer, counts.features, counts.geoms, counts.styles, counts.base);\n        if (counts.layers) {\n            tree[layer].layers = tree[layer].layers || {};\n            addDebugLayers(counts.layers, tree[layer].layers); // process child layers\n        }\n    }\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos,\n            str = readUtf8(this.buf, this.pos, end);\n        this.pos = end;\n        return str;\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.ceil(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","'use strict';\n\nmodule.exports = Point;\n\n/**\n * A standalone point geometry with useful accessor, comparison, and\n * modification methods.\n *\n * @class Point\n * @param {Number} x the x-coordinate. this could be longitude or screen\n * pixels, or any other sort of unit.\n * @param {Number} y the y-coordinate. this could be latitude or screen\n * pixels, or any other sort of unit.\n * @example\n * var point = new Point(-77, 38);\n */\nfunction Point(x, y) {\n    this.x = x;\n    this.y = y;\n}\n\nPoint.prototype = {\n\n    /**\n     * Clone this point, returning a new point that can be modified\n     * without affecting the old one.\n     * @return {Point} the clone\n     */\n    clone: function() { return new Point(this.x, this.y); },\n\n    /**\n     * Add this point's x & y coordinates to another point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    add:     function(p) { return this.clone()._add(p); },\n\n    /**\n     * Subtract this point's x & y coordinates to from point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    sub:     function(p) { return this.clone()._sub(p); },\n\n    /**\n     * Multiply this point's x & y coordinates by point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    multByPoint:    function(p) { return this.clone()._multByPoint(p); },\n\n    /**\n     * Divide this point's x & y coordinates by point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    divByPoint:     function(p) { return this.clone()._divByPoint(p); },\n\n    /**\n     * Multiply this point's x & y coordinates by a factor,\n     * yielding a new point.\n     * @param {Point} k factor\n     * @return {Point} output point\n     */\n    mult:    function(k) { return this.clone()._mult(k); },\n\n    /**\n     * Divide this point's x & y coordinates by a factor,\n     * yielding a new point.\n     * @param {Point} k factor\n     * @return {Point} output point\n     */\n    div:     function(k) { return this.clone()._div(k); },\n\n    /**\n     * Rotate this point around the 0, 0 origin by an angle a,\n     * given in radians\n     * @param {Number} a angle to rotate around, in radians\n     * @return {Point} output point\n     */\n    rotate:  function(a) { return this.clone()._rotate(a); },\n\n    /**\n     * Rotate this point around p point by an angle a,\n     * given in radians\n     * @param {Number} a angle to rotate around, in radians\n     * @param {Point} p Point to rotate around\n     * @return {Point} output point\n     */\n    rotateAround:  function(a,p) { return this.clone()._rotateAround(a,p); },\n\n    /**\n     * Multiply this point by a 4x1 transformation matrix\n     * @param {Array<Number>} m transformation matrix\n     * @return {Point} output point\n     */\n    matMult: function(m) { return this.clone()._matMult(m); },\n\n    /**\n     * Calculate this point but as a unit vector from 0, 0, meaning\n     * that the distance from the resulting point to the 0, 0\n     * coordinate will be equal to 1 and the angle from the resulting\n     * point to the 0, 0 coordinate will be the same as before.\n     * @return {Point} unit vector point\n     */\n    unit:    function() { return this.clone()._unit(); },\n\n    /**\n     * Compute a perpendicular point, where the new y coordinate\n     * is the old x coordinate and the new x coordinate is the old y\n     * coordinate multiplied by -1\n     * @return {Point} perpendicular point\n     */\n    perp:    function() { return this.clone()._perp(); },\n\n    /**\n     * Return a version of this point with the x & y coordinates\n     * rounded to integers.\n     * @return {Point} rounded point\n     */\n    round:   function() { return this.clone()._round(); },\n\n    /**\n     * Return the magitude of this point: this is the Euclidean\n     * distance from the 0, 0 coordinate to this point's x and y\n     * coordinates.\n     * @return {Number} magnitude\n     */\n    mag: function() {\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n    },\n\n    /**\n     * Judge whether this point is equal to another point, returning\n     * true or false.\n     * @param {Point} other the other point\n     * @return {boolean} whether the points are equal\n     */\n    equals: function(other) {\n        return this.x === other.x &&\n               this.y === other.y;\n    },\n\n    /**\n     * Calculate the distance from this point to another point\n     * @param {Point} p the other point\n     * @return {Number} distance\n     */\n    dist: function(p) {\n        return Math.sqrt(this.distSqr(p));\n    },\n\n    /**\n     * Calculate the distance from this point to another point,\n     * without the square root step. Useful if you're comparing\n     * relative distances.\n     * @param {Point} p the other point\n     * @return {Number} distance\n     */\n    distSqr: function(p) {\n        var dx = p.x - this.x,\n            dy = p.y - this.y;\n        return dx * dx + dy * dy;\n    },\n\n    /**\n     * Get the angle from the 0, 0 coordinate to this point, in radians\n     * coordinates.\n     * @return {Number} angle\n     */\n    angle: function() {\n        return Math.atan2(this.y, this.x);\n    },\n\n    /**\n     * Get the angle from this point to another point, in radians\n     * @param {Point} b the other point\n     * @return {Number} angle\n     */\n    angleTo: function(b) {\n        return Math.atan2(this.y - b.y, this.x - b.x);\n    },\n\n    /**\n     * Get the angle between this point and another point, in radians\n     * @param {Point} b the other point\n     * @return {Number} angle\n     */\n    angleWith: function(b) {\n        return this.angleWithSep(b.x, b.y);\n    },\n\n    /*\n     * Find the angle of the two vectors, solving the formula for\n     * the cross product a x b = |a||b|sin(Î¸) for Î¸.\n     * @param {Number} x the x-coordinate\n     * @param {Number} y the y-coordinate\n     * @return {Number} the angle in radians\n     */\n    angleWithSep: function(x, y) {\n        return Math.atan2(\n            this.x * y - this.y * x,\n            this.x * x + this.y * y);\n    },\n\n    _matMult: function(m) {\n        var x = m[0] * this.x + m[1] * this.y,\n            y = m[2] * this.x + m[3] * this.y;\n        this.x = x;\n        this.y = y;\n        return this;\n    },\n\n    _add: function(p) {\n        this.x += p.x;\n        this.y += p.y;\n        return this;\n    },\n\n    _sub: function(p) {\n        this.x -= p.x;\n        this.y -= p.y;\n        return this;\n    },\n\n    _mult: function(k) {\n        this.x *= k;\n        this.y *= k;\n        return this;\n    },\n\n    _div: function(k) {\n        this.x /= k;\n        this.y /= k;\n        return this;\n    },\n\n    _multByPoint: function(p) {\n        this.x *= p.x;\n        this.y *= p.y;\n        return this;\n    },\n\n    _divByPoint: function(p) {\n        this.x /= p.x;\n        this.y /= p.y;\n        return this;\n    },\n\n    _unit: function() {\n        this._div(this.mag());\n        return this;\n    },\n\n    _perp: function() {\n        var y = this.y;\n        this.y = this.x;\n        this.x = -y;\n        return this;\n    },\n\n    _rotate: function(angle) {\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle),\n            x = cos * this.x - sin * this.y,\n            y = sin * this.x + cos * this.y;\n        this.x = x;\n        this.y = y;\n        return this;\n    },\n\n    _rotateAround: function(angle, p) {\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle),\n            x = p.x + cos * (this.x - p.x) - sin * (this.y - p.y),\n            y = p.y + sin * (this.x - p.x) + cos * (this.y - p.y);\n        this.x = x;\n        this.y = y;\n        return this;\n    },\n\n    _round: function() {\n        this.x = Math.round(this.x);\n        this.y = Math.round(this.y);\n        return this;\n    }\n};\n\n/**\n * Construct a point from an array if necessary, otherwise if the input\n * is already a Point, or an unknown type, return it unchanged\n * @param {Array<Number>|Point|*} a any kind of input value\n * @return {Point} constructed point, or passed-through value.\n * @example\n * // this\n * var point = Point.convert([0, 1]);\n * // is equivalent to\n * var point = new Point(0, 1);\n */\nPoint.convert = function (a) {\n    if (a instanceof Point) {\n        return a;\n    }\n    if (Array.isArray(a)) {\n        return new Point(a[0], a[1]);\n    }\n    return a;\n};\n","'use strict';\n\nvar Point = require('@mapbox/point-geometry');\n\nmodule.exports = VectorTileFeature;\n\nfunction VectorTileFeature(pbf, end, extent, keys, values) {\n    // Public\n    this.properties = {};\n    this.extent = extent;\n    this.type = 0;\n\n    // Private\n    this._pbf = pbf;\n    this._geometry = -1;\n    this._keys = keys;\n    this._values = values;\n\n    pbf.readFields(readFeature, this, end);\n}\n\nfunction readFeature(tag, feature, pbf) {\n    if (tag == 1) feature.id = pbf.readVarint();\n    else if (tag == 2) readTag(pbf, feature);\n    else if (tag == 3) feature.type = pbf.readVarint();\n    else if (tag == 4) feature._geometry = pbf.pos;\n}\n\nfunction readTag(pbf, feature) {\n    var end = pbf.readVarint() + pbf.pos;\n\n    while (pbf.pos < end) {\n        var key = feature._keys[pbf.readVarint()],\n            value = feature._values[pbf.readVarint()];\n        feature.properties[key] = value;\n    }\n}\n\nVectorTileFeature.types = ['Unknown', 'Point', 'LineString', 'Polygon'];\n\nVectorTileFeature.prototype.loadGeometry = function() {\n    var pbf = this._pbf;\n    pbf.pos = this._geometry;\n\n    var end = pbf.readVarint() + pbf.pos,\n        cmd = 1,\n        length = 0,\n        x = 0,\n        y = 0,\n        lines = [],\n        line;\n\n    while (pbf.pos < end) {\n        if (!length) {\n            var cmdLen = pbf.readVarint();\n            cmd = cmdLen & 0x7;\n            length = cmdLen >> 3;\n        }\n\n        length--;\n\n        if (cmd === 1 || cmd === 2) {\n            x += pbf.readSVarint();\n            y += pbf.readSVarint();\n\n            if (cmd === 1) { // moveTo\n                if (line) lines.push(line);\n                line = [];\n            }\n\n            line.push(new Point(x, y));\n\n        } else if (cmd === 7) {\n\n            // Workaround for https://github.com/mapbox/mapnik-vector-tile/issues/90\n            if (line) {\n                line.push(line[0].clone()); // closePolygon\n            }\n\n        } else {\n            throw new Error('unknown command ' + cmd);\n        }\n    }\n\n    if (line) lines.push(line);\n\n    return lines;\n};\n\nVectorTileFeature.prototype.bbox = function() {\n    var pbf = this._pbf;\n    pbf.pos = this._geometry;\n\n    var end = pbf.readVarint() + pbf.pos,\n        cmd = 1,\n        length = 0,\n        x = 0,\n        y = 0,\n        x1 = Infinity,\n        x2 = -Infinity,\n        y1 = Infinity,\n        y2 = -Infinity;\n\n    while (pbf.pos < end) {\n        if (!length) {\n            var cmdLen = pbf.readVarint();\n            cmd = cmdLen & 0x7;\n            length = cmdLen >> 3;\n        }\n\n        length--;\n\n        if (cmd === 1 || cmd === 2) {\n            x += pbf.readSVarint();\n            y += pbf.readSVarint();\n            if (x < x1) x1 = x;\n            if (x > x2) x2 = x;\n            if (y < y1) y1 = y;\n            if (y > y2) y2 = y;\n\n        } else if (cmd !== 7) {\n            throw new Error('unknown command ' + cmd);\n        }\n    }\n\n    return [x1, y1, x2, y2];\n};\n\nVectorTileFeature.prototype.toGeoJSON = function(x, y, z) {\n    var size = this.extent * Math.pow(2, z),\n        x0 = this.extent * x,\n        y0 = this.extent * y,\n        coords = this.loadGeometry(),\n        type = VectorTileFeature.types[this.type],\n        i, j;\n\n    function project(line) {\n        for (var j = 0; j < line.length; j++) {\n            var p = line[j], y2 = 180 - (p.y + y0) * 360 / size;\n            line[j] = [\n                (p.x + x0) * 360 / size - 180,\n                360 / Math.PI * Math.atan(Math.exp(y2 * Math.PI / 180)) - 90\n            ];\n        }\n    }\n\n    switch (this.type) {\n    case 1:\n        var points = [];\n        for (i = 0; i < coords.length; i++) {\n            points[i] = coords[i][0];\n        }\n        coords = points;\n        project(coords);\n        break;\n\n    case 2:\n        for (i = 0; i < coords.length; i++) {\n            project(coords[i]);\n        }\n        break;\n\n    case 3:\n        coords = classifyRings(coords);\n        for (i = 0; i < coords.length; i++) {\n            for (j = 0; j < coords[i].length; j++) {\n                project(coords[i][j]);\n            }\n        }\n        break;\n    }\n\n    if (coords.length === 1) {\n        coords = coords[0];\n    } else {\n        type = 'Multi' + type;\n    }\n\n    var result = {\n        type: \"Feature\",\n        geometry: {\n            type: type,\n            coordinates: coords\n        },\n        properties: this.properties\n    };\n\n    if ('id' in this) {\n        result.id = this.id;\n    }\n\n    return result;\n};\n\n// classifies an array of rings into polygons with outer rings and holes\n\nfunction classifyRings(rings) {\n    var len = rings.length;\n\n    if (len <= 1) return [rings];\n\n    var polygons = [],\n        polygon,\n        ccw;\n\n    for (var i = 0; i < len; i++) {\n        var area = signedArea(rings[i]);\n        if (area === 0) continue;\n\n        if (ccw === undefined) ccw = area < 0;\n\n        if (ccw === area < 0) {\n            if (polygon) polygons.push(polygon);\n            polygon = [rings[i]];\n\n        } else {\n            polygon.push(rings[i]);\n        }\n    }\n    if (polygon) polygons.push(polygon);\n\n    return polygons;\n}\n\nfunction signedArea(ring) {\n    var sum = 0;\n    for (var i = 0, len = ring.length, j = len - 1, p1, p2; i < len; j = i++) {\n        p1 = ring[i];\n        p2 = ring[j];\n        sum += (p2.x - p1.x) * (p1.y + p2.y);\n    }\n    return sum;\n}\n","'use strict';\n\nvar VectorTileFeature = require('./vectortilefeature.js');\n\nmodule.exports = VectorTileLayer;\n\nfunction VectorTileLayer(pbf, end) {\n    // Public\n    this.version = 1;\n    this.name = null;\n    this.extent = 4096;\n    this.length = 0;\n\n    // Private\n    this._pbf = pbf;\n    this._keys = [];\n    this._values = [];\n    this._features = [];\n\n    pbf.readFields(readLayer, this, end);\n\n    this.length = this._features.length;\n}\n\nfunction readLayer(tag, layer, pbf) {\n    if (tag === 15) layer.version = pbf.readVarint();\n    else if (tag === 1) layer.name = pbf.readString();\n    else if (tag === 5) layer.extent = pbf.readVarint();\n    else if (tag === 2) layer._features.push(pbf.pos);\n    else if (tag === 3) layer._keys.push(pbf.readString());\n    else if (tag === 4) layer._values.push(readValueMessage(pbf));\n}\n\nfunction readValueMessage(pbf) {\n    var value = null,\n        end = pbf.readVarint() + pbf.pos;\n\n    while (pbf.pos < end) {\n        var tag = pbf.readVarint() >> 3;\n\n        value = tag === 1 ? pbf.readString() :\n            tag === 2 ? pbf.readFloat() :\n            tag === 3 ? pbf.readDouble() :\n            tag === 4 ? pbf.readVarint64() :\n            tag === 5 ? pbf.readVarint() :\n            tag === 6 ? pbf.readSVarint() :\n            tag === 7 ? pbf.readBoolean() : null;\n    }\n\n    return value;\n}\n\n// return feature `i` from this layer as a `VectorTileFeature`\nVectorTileLayer.prototype.feature = function(i) {\n    if (i < 0 || i >= this._features.length) throw new Error('feature index out of bounds');\n\n    this._pbf.pos = this._features[i];\n\n    var end = this._pbf.readVarint() + this._pbf.pos;\n    return new VectorTileFeature(this._pbf, end, this.extent, this._keys, this._values);\n};\n","'use strict';\n\nvar VectorTileLayer = require('./vectortilelayer');\n\nmodule.exports = VectorTile;\n\nfunction VectorTile(pbf, end) {\n    this.layers = pbf.readFields(readTile, {}, end);\n}\n\nfunction readTile(tag, layers, pbf) {\n    if (tag === 3) {\n        var layer = new VectorTileLayer(pbf, pbf.readVarint() + pbf.pos);\n        if (layer.length) layers[layer.name] = layer;\n    }\n}\n\n","module.exports.VectorTile = require('./lib/vectortile.js');\nmodule.exports.VectorTileFeature = require('./lib/vectortilefeature.js');\nmodule.exports.VectorTileLayer = require('./lib/vectortilelayer.js');\n","import DataSource, {NetworkTileSource} from './data_source';\nimport Geo from '../utils/geo';\nimport log from '../utils/log';\n\nimport Pbf from 'pbf';\nimport {VectorTile, VectorTileFeature} from '@mapbox/vector-tile';\n\nconst PARSE_JSON_TYPE = {\n    NONE: 0,\n    ALL: 1,\n    SOME: 2\n};\n\nconst PARSE_JSON_TEST = ['{', '[']; // one-time allocated array/strings\n\n/**\n Mapbox Vector Tile format\n @class MVTSource\n*/\nexport class MVTSource extends NetworkTileSource {\n\n    constructor (source, sources) {\n        super(source, sources);\n        this.response_type = 'arraybuffer'; // binary data\n\n        // Optionally parse some or all properties from JSON strings\n        if (source.parse_json === true) {\n            // try to parse all properties (least efficient)\n            this.parse_json_type = PARSE_JSON_TYPE.ALL;\n        }\n        else if (Array.isArray(source.parse_json)) {\n            // try to parse a specific list of property names (more efficient)\n            this.parse_json_type = PARSE_JSON_TYPE.SOME;\n            this.parse_json_prop_list = source.parse_json;\n        }\n        else {\n            if (source.parse_json != null) {\n                let msg = `Data source '${this.name}': 'parse_json' parameter should be 'true', or an array of ` +\n                    `property names (was '${JSON.stringify(source.parse_json)}')`;\n                log({ level: 'warn', once: true }, msg);\n            }\n\n            // skip parsing entirely (default behavior)\n            this.parse_json_type = PARSE_JSON_TYPE.NONE;\n        }\n    }\n\n    parseSourceData (tile, source, response) {\n        // Convert Mapbox vector tile to GeoJSON\n        var data = new Uint8Array(response);\n        var buffer = new Pbf(data);\n        source.data = new VectorTile(buffer);\n        source.layers = this.toGeoJSON(source.data);\n\n        // Apply optional data transform\n        if (typeof this.transform === 'function') {\n            const tile_data = {\n                min: Object.assign({}, tile.min),\n                max: Object.assign({}, tile.max),\n                coords: Object.assign({}, tile.coords)\n            };\n            source.layers = this.transform(source.layers, this.extra_data, tile_data);\n        }\n\n        delete source.data; // comment out to save raw data for debugging\n    }\n\n    // Loop through layers/features using Mapbox lib API, convert to GeoJSON features\n    // Returns an object with keys for each layer, e.g. { layer: geojson }\n    toGeoJSON (tile) {\n        var layers = {};\n        for (var l in tile.layers) {\n            var layer = tile.layers[l];\n            var scale = Geo.tile_scale / layer.extent;\n            var layer_geojson = {\n                type: 'FeatureCollection',\n                features: []\n            };\n\n            for (var f=0; f < layer.length; f++) {\n                var feature = layer.feature(f);\n                var feature_geojson = {\n                    type: 'Feature',\n                    geometry: {},\n                    id: feature.id,\n                    properties: feature.properties\n                };\n\n                this.parseJSONProperties(feature_geojson);\n\n                var geometry = feature_geojson.geometry;\n                var coordinates = feature.loadGeometry();\n                for (var r=0; r < coordinates.length; r++) {\n                    var ring = coordinates[r];\n                    for (var c=0; c < ring.length; c++) {\n                        ring[c] = [\n                            ring[c].x * scale,\n                            ring[c].y * scale\n                        ];\n                    }\n                }\n                geometry.coordinates = coordinates;\n\n                if (VectorTileFeature.types[feature.type] === 'Point') {\n                    if (coordinates.length === 1) {\n                        geometry.type = 'Point';\n                        geometry.coordinates = geometry.coordinates[0][0];\n                    }\n                    else {\n                        geometry.type = 'MultiPoint';\n                        geometry.coordinates = geometry.coordinates[0];\n                    }\n                }\n                else if (VectorTileFeature.types[feature.type] === 'LineString') {\n                    if (coordinates.length === 1) {\n                        geometry.type = 'LineString';\n                        geometry.coordinates = geometry.coordinates[0];\n                    }\n                    else {\n                        geometry.type = 'MultiLineString';\n                    }\n                }\n                else if (VectorTileFeature.types[feature.type] === 'Polygon') {\n                    geometry = decodeMultiPolygon(geometry); // un-flatten rings\n                }\n\n                layer_geojson.features.push(feature_geojson);\n            }\n            layers[l] = layer_geojson;\n        }\n        return layers;\n    }\n\n    // Optionally parse some or all feature properties from JSON strings\n    parseJSONProperties (feature) {\n        if (this.parse_json_type !== PARSE_JSON_TYPE.NONE) {\n            const props = feature.properties;\n\n            // if specified, check list of explicit properties to parse\n            if (this.parse_json_type === PARSE_JSON_TYPE.SOME) {\n                this.parse_json_prop_list.forEach(p => {\n                    try {\n                        props[p] = JSON.parse(props[p]);\n                    } catch (e) {\n                        // continue with original value if couldn't parse as JSON\n                    }\n                });\n            }\n            // otherwise try to parse all properties\n            else {\n                for (const p in props) {\n                    // check if this property looks like JSON, and parse if so\n                    if (PARSE_JSON_TEST.indexOf(props[p][0]) > -1) {\n                        try {\n                            props[p] = JSON.parse(props[p]);\n                        } catch (e) {\n                            // continue with original value if couldn't parse as JSON\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\n// Decode multipolygons, which are encoded as a single set of rings\n// Winding order of first ring is assumed to indicate exterior ring,\n// the opposite winding order indicates the start of a new polygon.\nexport function decodeMultiPolygon (geom) {\n    let polys = [];\n    let poly = [];\n    let outer_winding;\n    for (let r=0; r < geom.coordinates.length; r++) {\n        let ring = geom.coordinates[r];\n        let winding = Geo.ringWinding(ring);\n        if (winding == null) {\n            continue; // skip zero-area rings\n        }\n\n        outer_winding = outer_winding || winding; // assume first ring indicates outer ring winding\n\n        if (winding === outer_winding && poly.length > 0) {\n            polys.push(poly);\n            poly = [];\n        }\n        poly.push(ring);\n    }\n    if (poly.length > 0) {\n        polys.push(poly);\n    }\n\n    // Single or multi?\n    if (polys.length === 1) {\n        geom.type = 'Polygon';\n        geom.coordinates = polys[0];\n    }\n    else if (polys.length > 1) {\n        geom.type = 'MultiPolygon';\n        geom.coordinates = polys;\n    }\n    else {\n        geom = null;\n    }\n\n    return geom;\n}\n\nDataSource.register('MVT', () => MVTSource);\n","\n// calculate simplification data using optimized Douglas-Peucker algorithm\n\nexport default function simplify(coords, first, last, sqTolerance) {\n    var maxSqDist = sqTolerance;\n    var mid = (last - first) >> 1;\n    var minPosToMid = last - first;\n    var index;\n\n    var ax = coords[first];\n    var ay = coords[first + 1];\n    var bx = coords[last];\n    var by = coords[last + 1];\n\n    for (var i = first + 3; i < last; i += 3) {\n        var d = getSqSegDist(coords[i], coords[i + 1], ax, ay, bx, by);\n\n        if (d > maxSqDist) {\n            index = i;\n            maxSqDist = d;\n\n        } else if (d === maxSqDist) {\n            // a workaround to ensure we choose a pivot close to the middle of the list,\n            // reducing recursion depth, for certain degenerate inputs\n            // https://github.com/mapbox/geojson-vt/issues/104\n            var posToMid = Math.abs(i - mid);\n            if (posToMid < minPosToMid) {\n                index = i;\n                minPosToMid = posToMid;\n            }\n        }\n    }\n\n    if (maxSqDist > sqTolerance) {\n        if (index - first > 3) simplify(coords, first, index, sqTolerance);\n        coords[index + 2] = maxSqDist;\n        if (last - index > 3) simplify(coords, index, last, sqTolerance);\n    }\n}\n\n// square distance from a point to a segment\nfunction getSqSegDist(px, py, x, y, bx, by) {\n\n    var dx = bx - x;\n    var dy = by - y;\n\n    if (dx !== 0 || dy !== 0) {\n\n        var t = ((px - x) * dx + (py - y) * dy) / (dx * dx + dy * dy);\n\n        if (t > 1) {\n            x = bx;\n            y = by;\n\n        } else if (t > 0) {\n            x += dx * t;\n            y += dy * t;\n        }\n    }\n\n    dx = px - x;\n    dy = py - y;\n\n    return dx * dx + dy * dy;\n}\n","\nexport default function createFeature(id, type, geom, tags) {\n    var feature = {\n        id: typeof id === 'undefined' ? null : id,\n        type: type,\n        geometry: geom,\n        tags: tags,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n    calcBBox(feature);\n    return feature;\n}\n\nfunction calcBBox(feature) {\n    var geom = feature.geometry;\n    var type = feature.type;\n\n    if (type === 'Point' || type === 'MultiPoint' || type === 'LineString') {\n        calcLineBBox(feature, geom);\n\n    } else if (type === 'Polygon' || type === 'MultiLineString') {\n        for (var i = 0; i < geom.length; i++) {\n            calcLineBBox(feature, geom[i]);\n        }\n\n    } else if (type === 'MultiPolygon') {\n        for (i = 0; i < geom.length; i++) {\n            for (var j = 0; j < geom[i].length; j++) {\n                calcLineBBox(feature, geom[i][j]);\n            }\n        }\n    }\n}\n\nfunction calcLineBBox(feature, geom) {\n    for (var i = 0; i < geom.length; i += 3) {\n        feature.minX = Math.min(feature.minX, geom[i]);\n        feature.minY = Math.min(feature.minY, geom[i + 1]);\n        feature.maxX = Math.max(feature.maxX, geom[i]);\n        feature.maxY = Math.max(feature.maxY, geom[i + 1]);\n    }\n}\n","\nimport simplify from './simplify';\nimport createFeature from './feature';\n\n// converts GeoJSON feature into an intermediate projected JSON vector format with simplification data\n\nexport default function convert(data, options) {\n    var features = [];\n    if (data.type === 'FeatureCollection') {\n        for (var i = 0; i < data.features.length; i++) {\n            convertFeature(features, data.features[i], options, i);\n        }\n\n    } else if (data.type === 'Feature') {\n        convertFeature(features, data, options);\n\n    } else {\n        // single geometry or a geometry collection\n        convertFeature(features, {geometry: data}, options);\n    }\n\n    return features;\n}\n\nfunction convertFeature(features, geojson, options, index) {\n    if (!geojson.geometry) return;\n\n    var coords = geojson.geometry.coordinates;\n    var type = geojson.geometry.type;\n    var tolerance = Math.pow(options.tolerance / ((1 << options.maxZoom) * options.extent), 2);\n    var geometry = [];\n    var id = geojson.id;\n    if (options.promoteId) {\n        id = geojson.properties[options.promoteId];\n    } else if (options.generateId) {\n        id = index || 0;\n    }\n    if (type === 'Point') {\n        convertPoint(coords, geometry);\n\n    } else if (type === 'MultiPoint') {\n        for (var i = 0; i < coords.length; i++) {\n            convertPoint(coords[i], geometry);\n        }\n\n    } else if (type === 'LineString') {\n        convertLine(coords, geometry, tolerance, false);\n\n    } else if (type === 'MultiLineString') {\n        if (options.lineMetrics) {\n            // explode into linestrings to be able to track metrics\n            for (i = 0; i < coords.length; i++) {\n                geometry = [];\n                convertLine(coords[i], geometry, tolerance, false);\n                features.push(createFeature(id, 'LineString', geometry, geojson.properties));\n            }\n            return;\n        } else {\n            convertLines(coords, geometry, tolerance, false);\n        }\n\n    } else if (type === 'Polygon') {\n        convertLines(coords, geometry, tolerance, true);\n\n    } else if (type === 'MultiPolygon') {\n        for (i = 0; i < coords.length; i++) {\n            var polygon = [];\n            convertLines(coords[i], polygon, tolerance, true);\n            geometry.push(polygon);\n        }\n    } else if (type === 'GeometryCollection') {\n        for (i = 0; i < geojson.geometry.geometries.length; i++) {\n            convertFeature(features, {\n                id: id,\n                geometry: geojson.geometry.geometries[i],\n                properties: geojson.properties\n            }, options, index);\n        }\n        return;\n    } else {\n        throw new Error('Input data is not a valid GeoJSON object.');\n    }\n\n    features.push(createFeature(id, type, geometry, geojson.properties));\n}\n\nfunction convertPoint(coords, out) {\n    out.push(projectX(coords[0]));\n    out.push(projectY(coords[1]));\n    out.push(0);\n}\n\nfunction convertLine(ring, out, tolerance, isPolygon) {\n    var x0, y0;\n    var size = 0;\n\n    for (var j = 0; j < ring.length; j++) {\n        var x = projectX(ring[j][0]);\n        var y = projectY(ring[j][1]);\n\n        out.push(x);\n        out.push(y);\n        out.push(0);\n\n        if (j > 0) {\n            if (isPolygon) {\n                size += (x0 * y - x * y0) / 2; // area\n            } else {\n                size += Math.sqrt(Math.pow(x - x0, 2) + Math.pow(y - y0, 2)); // length\n            }\n        }\n        x0 = x;\n        y0 = y;\n    }\n\n    var last = out.length - 3;\n    out[2] = 1;\n    simplify(out, 0, last, tolerance);\n    out[last + 2] = 1;\n\n    out.size = Math.abs(size);\n    out.start = 0;\n    out.end = out.size;\n}\n\nfunction convertLines(rings, out, tolerance, isPolygon) {\n    for (var i = 0; i < rings.length; i++) {\n        var geom = [];\n        convertLine(rings[i], geom, tolerance, isPolygon);\n        out.push(geom);\n    }\n}\n\nfunction projectX(x) {\n    return x / 360 + 0.5;\n}\n\nfunction projectY(y) {\n    var sin = Math.sin(y * Math.PI / 180);\n    var y2 = 0.5 - 0.25 * Math.log((1 + sin) / (1 - sin)) / Math.PI;\n    return y2 < 0 ? 0 : y2 > 1 ? 1 : y2;\n}\n","\nimport createFeature from './feature';\n\n/* clip features between two axis-parallel lines:\n *     |        |\n *  ___|___     |     /\n * /   |   \\____|____/\n *     |        |\n */\n\nexport default function clip(features, scale, k1, k2, axis, minAll, maxAll, options) {\n\n    k1 /= scale;\n    k2 /= scale;\n\n    if (minAll >= k1 && maxAll < k2) return features; // trivial accept\n    else if (maxAll < k1 || minAll >= k2) return null; // trivial reject\n\n    var clipped = [];\n\n    for (var i = 0; i < features.length; i++) {\n\n        var feature = features[i];\n        var geometry = feature.geometry;\n        var type = feature.type;\n\n        var min = axis === 0 ? feature.minX : feature.minY;\n        var max = axis === 0 ? feature.maxX : feature.maxY;\n\n        if (min >= k1 && max < k2) { // trivial accept\n            clipped.push(feature);\n            continue;\n        } else if (max < k1 || min >= k2) { // trivial reject\n            continue;\n        }\n\n        var newGeometry = [];\n\n        if (type === 'Point' || type === 'MultiPoint') {\n            clipPoints(geometry, newGeometry, k1, k2, axis);\n\n        } else if (type === 'LineString') {\n            clipLine(geometry, newGeometry, k1, k2, axis, false, options.lineMetrics);\n\n        } else if (type === 'MultiLineString') {\n            clipLines(geometry, newGeometry, k1, k2, axis, false);\n\n        } else if (type === 'Polygon') {\n            clipLines(geometry, newGeometry, k1, k2, axis, true);\n\n        } else if (type === 'MultiPolygon') {\n            for (var j = 0; j < geometry.length; j++) {\n                var polygon = [];\n                clipLines(geometry[j], polygon, k1, k2, axis, true);\n                if (polygon.length) {\n                    newGeometry.push(polygon);\n                }\n            }\n        }\n\n        if (newGeometry.length) {\n            if (options.lineMetrics && type === 'LineString') {\n                for (j = 0; j < newGeometry.length; j++) {\n                    clipped.push(createFeature(feature.id, type, newGeometry[j], feature.tags));\n                }\n                continue;\n            }\n\n            if (type === 'LineString' || type === 'MultiLineString') {\n                if (newGeometry.length === 1) {\n                    type = 'LineString';\n                    newGeometry = newGeometry[0];\n                } else {\n                    type = 'MultiLineString';\n                }\n            }\n            if (type === 'Point' || type === 'MultiPoint') {\n                type = newGeometry.length === 3 ? 'Point' : 'MultiPoint';\n            }\n\n            clipped.push(createFeature(feature.id, type, newGeometry, feature.tags));\n        }\n    }\n\n    return clipped.length ? clipped : null;\n}\n\nfunction clipPoints(geom, newGeom, k1, k2, axis) {\n    for (var i = 0; i < geom.length; i += 3) {\n        var a = geom[i + axis];\n\n        if (a >= k1 && a <= k2) {\n            newGeom.push(geom[i]);\n            newGeom.push(geom[i + 1]);\n            newGeom.push(geom[i + 2]);\n        }\n    }\n}\n\nfunction clipLine(geom, newGeom, k1, k2, axis, isPolygon, trackMetrics) {\n\n    var slice = newSlice(geom);\n    var intersect = axis === 0 ? intersectX : intersectY;\n    var len = geom.start;\n    var segLen, t;\n\n    for (var i = 0; i < geom.length - 3; i += 3) {\n        var ax = geom[i];\n        var ay = geom[i + 1];\n        var az = geom[i + 2];\n        var bx = geom[i + 3];\n        var by = geom[i + 4];\n        var a = axis === 0 ? ax : ay;\n        var b = axis === 0 ? bx : by;\n        var exited = false;\n\n        if (trackMetrics) segLen = Math.sqrt(Math.pow(ax - bx, 2) + Math.pow(ay - by, 2));\n\n        if (a < k1) {\n            // ---|-->  | (line enters the clip region from the left)\n            if (b > k1) {\n                t = intersect(slice, ax, ay, bx, by, k1);\n                if (trackMetrics) slice.start = len + segLen * t;\n            }\n        } else if (a > k2) {\n            // |  <--|--- (line enters the clip region from the right)\n            if (b < k2) {\n                t = intersect(slice, ax, ay, bx, by, k2);\n                if (trackMetrics) slice.start = len + segLen * t;\n            }\n        } else {\n            addPoint(slice, ax, ay, az);\n        }\n        if (b < k1 && a >= k1) {\n            // <--|---  | or <--|-----|--- (line exits the clip region on the left)\n            t = intersect(slice, ax, ay, bx, by, k1);\n            exited = true;\n        }\n        if (b > k2 && a <= k2) {\n            // |  ---|--> or ---|-----|--> (line exits the clip region on the right)\n            t = intersect(slice, ax, ay, bx, by, k2);\n            exited = true;\n        }\n\n        if (!isPolygon && exited) {\n            if (trackMetrics) slice.end = len + segLen * t;\n            newGeom.push(slice);\n            slice = newSlice(geom);\n        }\n\n        if (trackMetrics) len += segLen;\n    }\n\n    // add the last point\n    var last = geom.length - 3;\n    ax = geom[last];\n    ay = geom[last + 1];\n    az = geom[last + 2];\n    a = axis === 0 ? ax : ay;\n    if (a >= k1 && a <= k2) addPoint(slice, ax, ay, az);\n\n    // close the polygon if its endpoints are not the same after clipping\n    last = slice.length - 3;\n    if (isPolygon && last >= 3 && (slice[last] !== slice[0] || slice[last + 1] !== slice[1])) {\n        addPoint(slice, slice[0], slice[1], slice[2]);\n    }\n\n    // add the final slice\n    if (slice.length) {\n        newGeom.push(slice);\n    }\n}\n\nfunction newSlice(line) {\n    var slice = [];\n    slice.size = line.size;\n    slice.start = line.start;\n    slice.end = line.end;\n    return slice;\n}\n\nfunction clipLines(geom, newGeom, k1, k2, axis, isPolygon) {\n    for (var i = 0; i < geom.length; i++) {\n        clipLine(geom[i], newGeom, k1, k2, axis, isPolygon, false);\n    }\n}\n\nfunction addPoint(out, x, y, z) {\n    out.push(x);\n    out.push(y);\n    out.push(z);\n}\n\nfunction intersectX(out, ax, ay, bx, by, x) {\n    var t = (x - ax) / (bx - ax);\n    out.push(x);\n    out.push(ay + (by - ay) * t);\n    out.push(1);\n    return t;\n}\n\nfunction intersectY(out, ax, ay, bx, by, y) {\n    var t = (y - ay) / (by - ay);\n    out.push(ax + (bx - ax) * t);\n    out.push(y);\n    out.push(1);\n    return t;\n}\n","\nimport clip from './clip';\nimport createFeature from './feature';\n\nexport default function wrap(features, options) {\n    var buffer = options.buffer / options.extent;\n    var merged = features;\n    var left  = clip(features, 1, -1 - buffer, buffer,     0, -1, 2, options); // left world copy\n    var right = clip(features, 1,  1 - buffer, 2 + buffer, 0, -1, 2, options); // right world copy\n\n    if (left || right) {\n        merged = clip(features, 1, -buffer, 1 + buffer, 0, -1, 2, options) || []; // center world copy\n\n        if (left) merged = shiftFeatureCoords(left, 1).concat(merged); // merge left into center\n        if (right) merged = merged.concat(shiftFeatureCoords(right, -1)); // merge right into center\n    }\n\n    return merged;\n}\n\nfunction shiftFeatureCoords(features, offset) {\n    var newFeatures = [];\n\n    for (var i = 0; i < features.length; i++) {\n        var feature = features[i],\n            type = feature.type;\n\n        var newGeometry;\n\n        if (type === 'Point' || type === 'MultiPoint' || type === 'LineString') {\n            newGeometry = shiftCoords(feature.geometry, offset);\n\n        } else if (type === 'MultiLineString' || type === 'Polygon') {\n            newGeometry = [];\n            for (var j = 0; j < feature.geometry.length; j++) {\n                newGeometry.push(shiftCoords(feature.geometry[j], offset));\n            }\n        } else if (type === 'MultiPolygon') {\n            newGeometry = [];\n            for (j = 0; j < feature.geometry.length; j++) {\n                var newPolygon = [];\n                for (var k = 0; k < feature.geometry[j].length; k++) {\n                    newPolygon.push(shiftCoords(feature.geometry[j][k], offset));\n                }\n                newGeometry.push(newPolygon);\n            }\n        }\n\n        newFeatures.push(createFeature(feature.id, type, newGeometry, feature.tags));\n    }\n\n    return newFeatures;\n}\n\nfunction shiftCoords(points, offset) {\n    var newPoints = [];\n    newPoints.size = points.size;\n\n    if (points.start !== undefined) {\n        newPoints.start = points.start;\n        newPoints.end = points.end;\n    }\n\n    for (var i = 0; i < points.length; i += 3) {\n        newPoints.push(points[i] + offset, points[i + 1], points[i + 2]);\n    }\n    return newPoints;\n}\n","\n// Transforms the coordinates of each feature in the given tile from\n// mercator-projected space into (extent x extent) tile space.\nexport default function transformTile(tile, extent) {\n    if (tile.transformed) return tile;\n\n    var z2 = 1 << tile.z,\n        tx = tile.x,\n        ty = tile.y,\n        i, j, k;\n\n    for (i = 0; i < tile.features.length; i++) {\n        var feature = tile.features[i],\n            geom = feature.geometry,\n            type = feature.type;\n\n        feature.geometry = [];\n\n        if (type === 1) {\n            for (j = 0; j < geom.length; j += 2) {\n                feature.geometry.push(transformPoint(geom[j], geom[j + 1], extent, z2, tx, ty));\n            }\n        } else {\n            for (j = 0; j < geom.length; j++) {\n                var ring = [];\n                for (k = 0; k < geom[j].length; k += 2) {\n                    ring.push(transformPoint(geom[j][k], geom[j][k + 1], extent, z2, tx, ty));\n                }\n                feature.geometry.push(ring);\n            }\n        }\n    }\n\n    tile.transformed = true;\n\n    return tile;\n}\n\nfunction transformPoint(x, y, extent, z2, tx, ty) {\n    return [\n        Math.round(extent * (x * z2 - tx)),\n        Math.round(extent * (y * z2 - ty))];\n}\n","\nexport default function createTile(features, z, tx, ty, options) {\n    var tolerance = z === options.maxZoom ? 0 : options.tolerance / ((1 << z) * options.extent);\n    var tile = {\n        features: [],\n        numPoints: 0,\n        numSimplified: 0,\n        numFeatures: 0,\n        source: null,\n        x: tx,\n        y: ty,\n        z: z,\n        transformed: false,\n        minX: 2,\n        minY: 1,\n        maxX: -1,\n        maxY: 0\n    };\n    for (var i = 0; i < features.length; i++) {\n        tile.numFeatures++;\n        addFeature(tile, features[i], tolerance, options);\n\n        var minX = features[i].minX;\n        var minY = features[i].minY;\n        var maxX = features[i].maxX;\n        var maxY = features[i].maxY;\n\n        if (minX < tile.minX) tile.minX = minX;\n        if (minY < tile.minY) tile.minY = minY;\n        if (maxX > tile.maxX) tile.maxX = maxX;\n        if (maxY > tile.maxY) tile.maxY = maxY;\n    }\n    return tile;\n}\n\nfunction addFeature(tile, feature, tolerance, options) {\n\n    var geom = feature.geometry,\n        type = feature.type,\n        simplified = [];\n\n    if (type === 'Point' || type === 'MultiPoint') {\n        for (var i = 0; i < geom.length; i += 3) {\n            simplified.push(geom[i]);\n            simplified.push(geom[i + 1]);\n            tile.numPoints++;\n            tile.numSimplified++;\n        }\n\n    } else if (type === 'LineString') {\n        addLine(simplified, geom, tile, tolerance, false, false);\n\n    } else if (type === 'MultiLineString' || type === 'Polygon') {\n        for (i = 0; i < geom.length; i++) {\n            addLine(simplified, geom[i], tile, tolerance, type === 'Polygon', i === 0);\n        }\n\n    } else if (type === 'MultiPolygon') {\n\n        for (var k = 0; k < geom.length; k++) {\n            var polygon = geom[k];\n            for (i = 0; i < polygon.length; i++) {\n                addLine(simplified, polygon[i], tile, tolerance, true, i === 0);\n            }\n        }\n    }\n\n    if (simplified.length) {\n        var tags = feature.tags || null;\n        if (type === 'LineString' && options.lineMetrics) {\n            tags = {};\n            for (var key in feature.tags) tags[key] = feature.tags[key];\n            tags['mapbox_clip_start'] = geom.start / geom.size;\n            tags['mapbox_clip_end'] = geom.end / geom.size;\n        }\n        var tileFeature = {\n            geometry: simplified,\n            type: type === 'Polygon' || type === 'MultiPolygon' ? 3 :\n                type === 'LineString' || type === 'MultiLineString' ? 2 : 1,\n            tags: tags\n        };\n        if (feature.id !== null) {\n            tileFeature.id = feature.id;\n        }\n        tile.features.push(tileFeature);\n    }\n}\n\nfunction addLine(result, geom, tile, tolerance, isPolygon, isOuter) {\n    var sqTolerance = tolerance * tolerance;\n\n    if (tolerance > 0 && (geom.size < (isPolygon ? sqTolerance : tolerance))) {\n        tile.numPoints += geom.length / 3;\n        return;\n    }\n\n    var ring = [];\n\n    for (var i = 0; i < geom.length; i += 3) {\n        if (tolerance === 0 || geom[i + 2] > sqTolerance) {\n            tile.numSimplified++;\n            ring.push(geom[i]);\n            ring.push(geom[i + 1]);\n        }\n        tile.numPoints++;\n    }\n\n    if (isPolygon) rewind(ring, isOuter);\n\n    result.push(ring);\n}\n\nfunction rewind(ring, clockwise) {\n    var area = 0;\n    for (var i = 0, len = ring.length, j = len - 2; i < len; j = i, i += 2) {\n        area += (ring[i] - ring[j]) * (ring[i + 1] + ring[j + 1]);\n    }\n    if (area > 0 === clockwise) {\n        for (i = 0, len = ring.length; i < len / 2; i += 2) {\n            var x = ring[i];\n            var y = ring[i + 1];\n            ring[i] = ring[len - 2 - i];\n            ring[i + 1] = ring[len - 1 - i];\n            ring[len - 2 - i] = x;\n            ring[len - 1 - i] = y;\n        }\n    }\n}\n","\nimport convert from './convert';     // GeoJSON conversion and preprocessing\nimport clip from './clip';           // stripe clipping algorithm\nimport wrap from './wrap';           // date line processing\nimport transform from './transform'; // coordinate transformation\nimport createTile from './tile';     // final simplified tile generation\n\nexport default function geojsonvt(data, options) {\n    return new GeoJSONVT(data, options);\n}\n\nfunction GeoJSONVT(data, options) {\n    options = this.options = extend(Object.create(this.options), options);\n\n    var debug = options.debug;\n\n    if (debug) console.time('preprocess data');\n\n    if (options.maxZoom < 0 || options.maxZoom > 24) throw new Error('maxZoom should be in the 0-24 range');\n    if (options.promoteId && options.generateId) throw new Error('promoteId and generateId cannot be used together.');\n\n    var features = convert(data, options);\n\n    this.tiles = {};\n    this.tileCoords = [];\n\n    if (debug) {\n        console.timeEnd('preprocess data');\n        console.log('index: maxZoom: %d, maxPoints: %d', options.indexMaxZoom, options.indexMaxPoints);\n        console.time('generate tiles');\n        this.stats = {};\n        this.total = 0;\n    }\n\n    features = wrap(features, options);\n\n    // start slicing from the top tile down\n    if (features.length) this.splitTile(features, 0, 0, 0);\n\n    if (debug) {\n        if (features.length) console.log('features: %d, points: %d', this.tiles[0].numFeatures, this.tiles[0].numPoints);\n        console.timeEnd('generate tiles');\n        console.log('tiles generated:', this.total, JSON.stringify(this.stats));\n    }\n}\n\nGeoJSONVT.prototype.options = {\n    maxZoom: 14,            // max zoom to preserve detail on\n    indexMaxZoom: 5,        // max zoom in the tile index\n    indexMaxPoints: 100000, // max number of points per tile in the tile index\n    tolerance: 3,           // simplification tolerance (higher means simpler)\n    extent: 4096,           // tile extent\n    buffer: 64,             // tile buffer on each side\n    lineMetrics: false,     // whether to calculate line metrics\n    promoteId: null,        // name of a feature property to be promoted to feature.id\n    generateId: false,      // whether to generate feature ids. Cannot be used with promoteId\n    debug: 0                // logging level (0, 1 or 2)\n};\n\nGeoJSONVT.prototype.splitTile = function (features, z, x, y, cz, cx, cy) {\n\n    var stack = [features, z, x, y],\n        options = this.options,\n        debug = options.debug;\n\n    // avoid recursion by using a processing queue\n    while (stack.length) {\n        y = stack.pop();\n        x = stack.pop();\n        z = stack.pop();\n        features = stack.pop();\n\n        var z2 = 1 << z,\n            id = toID(z, x, y),\n            tile = this.tiles[id];\n\n        if (!tile) {\n            if (debug > 1) console.time('creation');\n\n            tile = this.tiles[id] = createTile(features, z, x, y, options);\n            this.tileCoords.push({z: z, x: x, y: y});\n\n            if (debug) {\n                if (debug > 1) {\n                    console.log('tile z%d-%d-%d (features: %d, points: %d, simplified: %d)',\n                        z, x, y, tile.numFeatures, tile.numPoints, tile.numSimplified);\n                    console.timeEnd('creation');\n                }\n                var key = 'z' + z;\n                this.stats[key] = (this.stats[key] || 0) + 1;\n                this.total++;\n            }\n        }\n\n        // save reference to original geometry in tile so that we can drill down later if we stop now\n        tile.source = features;\n\n        // if it's the first-pass tiling\n        if (!cz) {\n            // stop tiling if we reached max zoom, or if the tile is too simple\n            if (z === options.indexMaxZoom || tile.numPoints <= options.indexMaxPoints) continue;\n\n        // if a drilldown to a specific tile\n        } else {\n            // stop tiling if we reached base zoom or our target tile zoom\n            if (z === options.maxZoom || z === cz) continue;\n\n            // stop tiling if it's not an ancestor of the target tile\n            var m = 1 << (cz - z);\n            if (x !== Math.floor(cx / m) || y !== Math.floor(cy / m)) continue;\n        }\n\n        // if we slice further down, no need to keep source geometry\n        tile.source = null;\n\n        if (features.length === 0) continue;\n\n        if (debug > 1) console.time('clipping');\n\n        // values we'll use for clipping\n        var k1 = 0.5 * options.buffer / options.extent,\n            k2 = 0.5 - k1,\n            k3 = 0.5 + k1,\n            k4 = 1 + k1,\n            tl, bl, tr, br, left, right;\n\n        tl = bl = tr = br = null;\n\n        left  = clip(features, z2, x - k1, x + k3, 0, tile.minX, tile.maxX, options);\n        right = clip(features, z2, x + k2, x + k4, 0, tile.minX, tile.maxX, options);\n        features = null;\n\n        if (left) {\n            tl = clip(left, z2, y - k1, y + k3, 1, tile.minY, tile.maxY, options);\n            bl = clip(left, z2, y + k2, y + k4, 1, tile.minY, tile.maxY, options);\n            left = null;\n        }\n\n        if (right) {\n            tr = clip(right, z2, y - k1, y + k3, 1, tile.minY, tile.maxY, options);\n            br = clip(right, z2, y + k2, y + k4, 1, tile.minY, tile.maxY, options);\n            right = null;\n        }\n\n        if (debug > 1) console.timeEnd('clipping');\n\n        stack.push(tl || [], z + 1, x * 2,     y * 2);\n        stack.push(bl || [], z + 1, x * 2,     y * 2 + 1);\n        stack.push(tr || [], z + 1, x * 2 + 1, y * 2);\n        stack.push(br || [], z + 1, x * 2 + 1, y * 2 + 1);\n    }\n};\n\nGeoJSONVT.prototype.getTile = function (z, x, y) {\n    var options = this.options,\n        extent = options.extent,\n        debug = options.debug;\n\n    if (z < 0 || z > 24) return null;\n\n    var z2 = 1 << z;\n    x = ((x % z2) + z2) % z2; // wrap tile x coordinate\n\n    var id = toID(z, x, y);\n    if (this.tiles[id]) return transform(this.tiles[id], extent);\n\n    if (debug > 1) console.log('drilling down to z%d-%d-%d', z, x, y);\n\n    var z0 = z,\n        x0 = x,\n        y0 = y,\n        parent;\n\n    while (!parent && z0 > 0) {\n        z0--;\n        x0 = Math.floor(x0 / 2);\n        y0 = Math.floor(y0 / 2);\n        parent = this.tiles[toID(z0, x0, y0)];\n    }\n\n    if (!parent || !parent.source) return null;\n\n    // if we found a parent tile containing the original geometry, we can drill down from it\n    if (debug > 1) console.log('found parent tile z%d-%d-%d', z0, x0, y0);\n\n    if (debug > 1) console.time('drilling down');\n    this.splitTile(parent.source, z0, x0, y0, z, x, y);\n    if (debug > 1) console.timeEnd('drilling down');\n\n    return this.tiles[id] ? transform(this.tiles[id], extent) : null;\n};\n\nfunction toID(z, x, y) {\n    return (((1 << z) * y + x) * 32) + z;\n}\n\nfunction extend(dest, src) {\n    for (var i in src) dest[i] = src[i];\n    return dest;\n}\n","import log from '../utils/log';\nimport DataSource, {NetworkSource, NetworkTileSource} from './data_source';\nimport {decodeMultiPolygon} from './mvt';\nimport Geo from '../utils/geo';\n\n// For tiling GeoJSON client-side\nimport geojsonvt from 'geojson-vt';\n\n/**\n GeoJSON standalone (non-tiled) source\n Uses geojson-vt split into tiles client-side\n*/\n\nexport class GeoJSONSource extends NetworkSource {\n\n    constructor(source, sources) {\n        super(source, sources);\n        this.load_data = null;\n        this.tile_indexes = {}; // geojson-vt tile indices, by layer name\n        this.setTileSize(512); // auto-tile to 512px tiles for fewer internal tiles\n        this.pad_scale = 0; // we don't want padding on auto-tiled sources\n    }\n\n    _load(dest) {\n        if (!this.load_data) {\n            this.load_data = super._load({ source_data: { layers: {} } }).then(data => {\n                // Warn and continue on data source error\n                if (data.source_data.error) {\n                    log('warn', `data source load error(s) for source '${this.name}', URL '${this.url}': ${data.source_data.error}`);\n                }\n\n                let layers = data.source_data.layers;\n                for (let layer_name in layers) {\n                    this.tile_indexes[layer_name] = geojsonvt(layers[layer_name], {\n                        maxZoom: this.max_zoom,  // max zoom to preserve detail on\n                        tolerance: 1.5, // simplification tolerance (higher means simpler) NB: half the default to accomodate 512px tiles\n                        extent: Geo.tile_scale, // tile extent (both width and height)\n                        buffer: 0.0001     // tile buffer on each side\n                    });\n                }\n\n                this.loaded = true;\n                return data;\n            });\n        }\n\n        return this.load_data.then(() => {\n            for (let layer_name in this.tile_indexes) {\n                dest.source_data.layers[layer_name] = this.getTileFeatures(dest, layer_name);\n            }\n            return dest;\n        });\n    }\n\n    getTileFeatures(tile, layer_name) {\n        let coords = Geo.wrapTile(tile.coords, { x: true });\n\n        // request a particular tile\n        let t = this.tile_indexes[layer_name].getTile(coords.z, coords.x, coords.y);\n\n        // Convert from MVT-style JSON struct to GeoJSON\n        let collection;\n        if (t && t.features) {\n            collection = {\n                type: 'FeatureCollection',\n                features: []\n            };\n\n            for (let i=0; i < t.features.length; i++) {\n                const feature = t.features[i];\n\n                // GeoJSON feature\n                let f = {\n                    type: 'Feature',\n                    geometry: {},\n                    id: feature.id,\n                    properties: feature.tags\n                };\n\n                if (feature.type === 1) {\n                    f.geometry.coordinates = feature.geometry.map(coord => [coord[0], coord[1]]);\n                    f.geometry.type = 'MultiPoint';\n                }\n                else if (feature.type === 2 || feature.type === 3) {\n                    f.geometry.coordinates = feature.geometry.map(ring =>\n                        ring.map(coord => [coord[0], coord[1]])\n                    );\n\n                    if (feature.type === 2) {\n                        f.geometry.type = 'MultiLineString';\n                    }\n                    else  {\n                        f.geometry = decodeMultiPolygon(f.geometry); // un-flatten rings\n                        if (f.geometry == null) { // skip polys that couldn't be decoded (e.g. degenerate)\n                            continue;\n                        }\n                    }\n                }\n                else {\n                    continue;\n                }\n\n                collection.features.push(f);\n            }\n        }\n\n        return collection;\n    }\n\n    formatURL () {\n        return this.url;\n    }\n\n    parseSourceData (tile, source, response) {\n        let data = typeof response === 'string' ? JSON.parse(response) : response;\n        let layers = this.getLayers(data);\n        source.layers = this.preprocessLayers(layers, tile);\n    }\n\n    preprocessLayers (layers, tile){\n        for (let key in layers) {\n            let layer = layers[key];\n            layer.features = this.preprocessFeatures(layer.features);\n        }\n\n        // Apply optional data transform\n        if (typeof this.transform === 'function') {\n            const tile_data = {\n                min: Object.assign({}, tile.min),\n                max: Object.assign({}, tile.max),\n                coords: Object.assign({}, tile.coords)\n            };\n            if (Object.keys(layers).length === 1 && layers._default) {\n                layers._default = this.transform(layers._default, this.extra_data, tile_data); // single-layer\n            }\n            else {\n                layers = this.transform(layers, this.extra_data, tile_data); // multiple layers\n            }\n        }\n\n        return layers;\n    }\n\n    // Preprocess features. Currently used to add a new \"centroid\" feature for polygon labeling\n    preprocessFeatures (features) {\n        // Remove features without geometry (which is valid GeoJSON)\n        features = features.filter(f => f.geometry != null);\n\n        // Define centroids for polygons for centroid label placement\n        // Avoids redundant label placement for each generated tile at higher zoom levels\n        if (this.config.generate_label_centroids){\n            let features_centroid = [];\n            let centroid_properties = {'label_placement' : true};\n\n            features.forEach(feature => {\n                let coordinates, centroid_feature;\n                if (feature.geometry.type === 'Polygon') {\n                    coordinates = feature.geometry.coordinates;\n                    centroid_feature = getCentroidFeatureForPolygon(coordinates, feature.id, feature.properties, centroid_properties);\n                    features_centroid.push(centroid_feature);\n                }\n                else if (feature.geometry.type === 'MultiPolygon') {\n                    // Add centroid feature for largest polygon\n                    coordinates = feature.geometry.coordinates;\n                    let max_area = -Infinity;\n                    let max_area_index = 0;\n                    for (let index = 0; index < coordinates.length; index++) {\n                        let area = Geo.polygonArea(coordinates[index]);\n                        if (area > max_area) {\n                            max_area = area;\n                            max_area_index = index;\n                        }\n                    }\n                    centroid_feature = getCentroidFeatureForPolygon(coordinates[max_area_index], feature.id, feature.properties, centroid_properties);\n                    features_centroid.push(centroid_feature);\n                }\n            });\n\n            // append centroid features to features array\n            features_centroid = features_centroid.filter(x => x); // remove null features\n            Array.prototype.push.apply(features, features_centroid);\n        }\n\n        return features;\n    }\n\n    // Detect single or multiple layers in returned data\n    getLayers (data) {\n        if (data.type === 'Feature') {\n            return {\n                _default: {\n                    type: 'FeatureCollection',\n                    features: [data]\n                }\n            };\n        }\n        else if (data.type === 'FeatureCollection') {\n            return {\n                _default: data\n            };\n        }\n        else {\n            return data;\n        }\n    }\n\n}\n\n/**\n GeoJSON vector tiles\n @class GeoJSONTileSource\n*/\nexport class GeoJSONTileSource extends NetworkTileSource {\n\n    constructor(source, sources) {\n        super(source, sources);\n    }\n\n    parseSourceData (tile, source, response) {\n        let data = typeof response === 'string' ? JSON.parse(response) : response;\n        this.prepareGeoJSON(data, tile, source);\n    }\n\n    prepareGeoJSON (data, tile, source) {\n        // Apply optional data transform\n        if (typeof this.transform === 'function') {\n            const tile_data = {\n                min: Object.assign({}, tile.min),\n                max: Object.assign({}, tile.max),\n                coords: Object.assign({}, tile.coords)\n            };\n            data = this.transform(data, this.extra_data, tile_data);\n        }\n\n        source.layers = GeoJSONSource.prototype.getLayers(data);\n\n        // A \"synthetic\" tile that adjusts the tile min anchor to account for tile longitude wrapping\n        let anchor = {\n            coords: tile.coords,\n            min: Geo.metersForTile(Geo.wrapTile(tile.coords, { x: true }))\n        };\n\n        DataSource.projectData(source); // mercator projection\n        DataSource.scaleData(source, anchor); // re-scale from meters to local tile coords\n    }\n\n}\n\n// Check for URL tile pattern, if not found, treat as standalone GeoJSON/TopoJSON object\nDataSource.register('GeoJSON', source => {\n    return GeoJSONTileSource.urlHasTilePattern(source.url) ? GeoJSONTileSource : GeoJSONSource;\n});\n\n\n// Helper function to create centroid point feature from polygon coordinates and provided feature meta-data\nfunction getCentroidFeatureForPolygon (coordinates, id, properties, newProperties) {\n    let centroid = Geo.centroid(coordinates);\n    if (!centroid) {\n        return;\n    }\n\n    // clone properties and mixix newProperties\n    let centroid_properties = {};\n    Object.assign(centroid_properties, properties, newProperties);\n\n    return {\n        type: 'Feature',\n        id,\n        properties: centroid_properties,\n        geometry: {\n            type: 'Point',\n            coordinates: centroid\n        }\n    };\n}\n","export default function(array, n) {\n  var t, j = array.length, i = j - n;\n  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n}\n","export default function(x) {\n  return x;\n}\n","import identity from \"./identity\";\n\nexport default function(topology) {\n  if ((transform = topology.transform) == null) return identity;\n  var transform,\n      x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(point, i) {\n    if (!i) x0 = y0 = 0;\n    point[0] = (x0 += point[0]) * kx + dx;\n    point[1] = (y0 += point[1]) * ky + dy;\n    return point;\n  };\n}\n","import reverse from \"./reverse\";\nimport transform from \"./transform\";\n\nexport default function(topology, o) {\n  return o.type === \"GeometryCollection\"\n      ? {type: \"FeatureCollection\", features: o.geometries.map(function(o) { return feature(topology, o); })}\n      : feature(topology, o);\n}\n\nexport function feature(topology, o) {\n  var id = o.id,\n      bbox = o.bbox,\n      properties = o.properties == null ? {} : o.properties,\n      geometry = object(topology, o);\n  return id == null && bbox == null ? {type: \"Feature\", properties: properties, geometry: geometry}\n      : bbox == null ? {type: \"Feature\", id: id, properties: properties, geometry: geometry}\n      : {type: \"Feature\", id: id, bbox: bbox, properties: properties, geometry: geometry};\n}\n\nexport function object(topology, o) {\n  var transformPoint = transform(topology),\n      arcs = topology.arcs;\n\n  function arc(i, points) {\n    if (points.length) points.pop();\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length; k < n; ++k) {\n      points.push(transformPoint(a[k].slice(), k));\n    }\n    if (i < 0) reverse(points, n);\n  }\n\n  function point(p) {\n    return transformPoint(p.slice());\n  }\n\n  function line(arcs) {\n    var points = [];\n    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n    if (points.length < 2) points.push(points[0].slice());\n    return points;\n  }\n\n  function ring(arcs) {\n    var points = line(arcs);\n    while (points.length < 4) points.push(points[0].slice());\n    return points;\n  }\n\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n\n  function geometry(o) {\n    var type = o.type, coordinates;\n    switch (type) {\n      case \"GeometryCollection\": return {type: type, geometries: o.geometries.map(geometry)};\n      case \"Point\": coordinates = point(o.coordinates); break;\n      case \"MultiPoint\": coordinates = o.coordinates.map(point); break;\n      case \"LineString\": coordinates = line(o.arcs); break;\n      case \"MultiLineString\": coordinates = o.arcs.map(line); break;\n      case \"Polygon\": coordinates = polygon(o.arcs); break;\n      case \"MultiPolygon\": coordinates = o.arcs.map(polygon); break;\n      default: return null;\n    }\n    return {type: type, coordinates: coordinates};\n  }\n\n  return geometry(o);\n}\n","import DataSource from './data_source';\nimport {GeoJSONSource, GeoJSONTileSource} from './geojson';\n\nimport * as topojson from 'topojson-client';\n\n/**\n TopoJSON standalone (non-tiled) source\n Uses geojson-vt split into tiles client-side\n*/\n\nexport class TopoJSONSource extends GeoJSONSource {\n\n    parseSourceData (tile, source, response) {\n        let data = typeof response === 'string' ? JSON.parse(response) : response;\n        data = this.toGeoJSON(data);\n\n        let layers = this.getLayers(data);\n        super.preprocessLayers(layers, tile);\n        source.layers = layers;\n    }\n\n    toGeoJSON (data) {\n        // Single layer\n        if (data.objects &&\n            Object.keys(data.objects).length === 1) {\n            let layer = Object.keys(data.objects)[0];\n            data = getTopoJSONFeature(data, data.objects[layer]);\n        }\n        // Multiple layers\n        else {\n            let layers = {};\n            for (let key in data.objects) {\n                layers[key] = getTopoJSONFeature(data, data.objects[key]);\n            }\n            data = layers;\n        }\n        return data;\n    }\n\n}\n\nfunction getTopoJSONFeature (topology, object) {\n    let feature = topojson.feature(topology, object);\n\n    // Convert single feature to a feature collection\n    if (feature.type === 'Feature') {\n        feature = {\n            type: 'FeatureCollection',\n            features: [feature]\n        };\n    }\n    return feature;\n}\n\n\n/**\n TopoJSON vector tiles\n @class TopoJSONTileSource\n*/\nexport class TopoJSONTileSource extends GeoJSONTileSource {\n\n    constructor(source, sources) {\n        super(source, sources);\n    }\n\n    parseSourceData (tile, source, response) {\n        let data = typeof response === 'string' ? JSON.parse(response) : response;\n        data = TopoJSONSource.prototype.toGeoJSON(data);\n        this.prepareGeoJSON(data, tile, source);\n    }\n\n}\n\n// Check for URL tile pattern, if not found, treat as standalone GeoJSON/TopoJSON object\nDataSource.register('TopoJSON', source => {\n    return TopoJSONTileSource.urlHasTilePattern(source.url) ? TopoJSONTileSource : TopoJSONSource;\n});\n","/*jshint worker: true*/\n\nimport Utils from '../utils/utils';\nimport {compileFunctionStrings, functionStringCache, clearFunctionStringCache} from '../utils/functions';\nimport debugSettings, {mergeDebugSettings} from '../utils/debug_settings';\nimport log from '../utils/log';\nimport mergeObjects from '../utils/merge';\nimport WorkerBroker from '../utils/worker_broker'; // jshint ignore:line\nimport Tile from '../tile/tile';\nimport Geo from '../utils/geo';\nimport DataSource from '../sources/data_source';\nimport '../sources/sources';\nimport FeatureSelection from '../selection/selection';\nimport StyleParser from '../styles/style_parser';\nimport {StyleManager} from '../styles/style_manager';\nimport {parseLayers, FilterOptions, layerCache} from '../styles/layer';\nimport {buildFilter} from '../styles/filter';\nimport Texture from '../gl/texture';\nimport VertexElements from '../gl/vertex_elements';\nimport Label from '../labels/label';\n\nconst SceneWorker = Object.assign(self, {\n\n    FeatureSelection,\n\n    sources: {},\n    styles: {},\n    layers: {},\n    tiles: {},\n\n    // Initialize worker\n    init (scene_id, worker_id, num_workers, log_level, device_pixel_ratio, has_element_index_unit, external_scripts) {\n        this.scene_id = scene_id;\n        this._worker_id = worker_id;\n        this.num_workers = num_workers;\n        log.setLevel(log_level);\n        Utils.device_pixel_ratio = device_pixel_ratio;\n        VertexElements.setElementIndexUint(has_element_index_unit);\n        FeatureSelection.setPrefix(this._worker_id);\n        this.style_manager = new StyleManager();\n        this.importExternalScripts(external_scripts);\n        Label.id_prefix = worker_id;\n        Label.id_multiplier = num_workers;\n        return worker_id;\n    },\n\n    // Import custom external scripts\n    importExternalScripts(scripts) {\n        if (scripts.length === 0) {\n            return;\n        }\n        log('debug', 'loading custom data source scripts in worker:', scripts);\n\n        // `window` is already shimmed to allow compatibility with some other libraries (e.g. FontFaceObserver)\n        // So there's an extra dance here to look for any additional `window` properties added by these script imports,\n        // then add them to the worker `self` scope.\n        let prev_names = Object.getOwnPropertyNames(window);\n\n        importScripts(...scripts);\n\n        Object.getOwnPropertyNames(window).forEach(prop => {\n            if (prev_names.indexOf(prop) === -1) {\n                this[prop] = window[prop]; // new property added to window, also add it to self\n            }\n        });\n    },\n\n    // Starts a config refresh\n    updateConfig ({ config, generation, introspection }, debug) {\n        config = JSON.parse(config);\n        mergeDebugSettings(debug);\n\n        this.generation = generation;\n        this.introspection = introspection;\n\n        // Expand global properties\n        this.global = compileFunctionStrings(config.global);\n\n        // Create data sources\n        this.createDataSources(config);\n\n        // Expand styles\n        config.styles = compileFunctionStrings(config.styles, StyleParser.wrapFunction);\n        this.styles = this.style_manager.build(config.styles);\n        this.style_manager.initStyles({\n            generation: this.generation,\n            styles: this.styles,\n            sources: this.sources,\n            introspection: this.introspection\n        });\n\n        // Parse each top-level layer as a separate tree\n        this.layers = parseLayers(config.layers, this.style_manager.styles);\n\n        // Sync tetxure info from main thread\n        this.syncing_textures = this.syncTextures(config.textures);\n\n        // Return promise for when config refresh finishes\n        this.configuring = this.syncing_textures.then(() => {\n            log('debug', 'updated config');\n        });\n\n        return this.configuring;\n    },\n\n    // Create data sources and clear tile cache if necessary\n    createDataSources (config) {\n        // Save and compare previous sources\n        this.last_config_sources = this.config_sources || {};\n        this.config_sources = mergeObjects({}, config.sources); // deep copy the serialized config for the later existence comparison\n        let last_sources = this.sources;\n        let changed = [];\n\n        // Parse new sources\n        this.sources = {}; // clear previous sources\n        for (let name in config.sources) {\n            if (JSON.stringify(this.last_config_sources[name]) === JSON.stringify(config.sources[name])) {\n                this.sources[name] = last_sources[name];\n                continue;\n            }\n\n            // compile any user-defined JS functions\n            config.sources[name] = compileFunctionStrings(config.sources[name]);\n\n            let source;\n            try {\n                source = DataSource.create(Object.assign({}, config.sources[name], {name}), this.sources);\n            }\n            catch(e) {\n                continue;\n            }\n\n            if (!source) {\n                continue;\n            }\n            this.sources[name] = source;\n            changed.push(name);\n        }\n\n        // Clear tile cache for data sources that changed\n        changed.forEach(source => {\n            for (let t in this.tiles) {\n                if (this.tiles[t].source === source) {\n                    delete this.tiles[t];\n                }\n            }\n        });\n    },\n\n    // Returns a promise that fulfills when config refresh is finished\n    awaitConfiguration () {\n        return this.configuring;\n    },\n\n    // Build a tile: load from tile source if building for first time, otherwise rebuild with existing data\n    buildTile ({ tile }) {\n        // Tile cached?\n        if (this.getTile(tile.key) != null) {\n            // Already loading?\n            if (this.getTile(tile.key).loading === true) {\n                return;\n            }\n        }\n\n        // Update tile cache\n        tile = this.tiles[tile.key] = Object.assign(this.getTile(tile.key) || {}, tile);\n\n        // Update config (styles, etc.), then build tile\n        return this.awaitConfiguration().then(() => {\n            // First time building the tile\n            if (tile.loaded !== true) {\n\n                tile.loading = true;\n                tile.loaded = false;\n                tile.error = null;\n\n                this.loadTileSourceData(tile).then(() => {\n                    if (!this.getTile(tile.key)) {\n                        log('trace', `stop tile build after data source load because tile was removed: ${tile.key}`);\n                        return;\n                    }\n\n                    // Warn and continue on data source error\n                    if (tile.source_data.error) {\n                        log('warn', `tile load error(s) for ${tile.key}: ${tile.source_data.error}`);\n                    }\n\n                    tile.loading = false;\n                    tile.loaded = true;\n                    Tile.buildGeometry(tile, this);\n                }).catch((error) => {\n                    tile.loading = false;\n                    tile.loaded = false;\n                    tile.error = error.stack;\n                    log('error', `tile load error for ${tile.key}: ${tile.error}`);\n\n                    // Send error to main thread\n                    WorkerBroker.postMessage(`TileManager_${this.scene_id}.buildTileError`, Tile.slice(tile));\n                });\n            }\n            // Tile already loaded, just rebuild\n            else {\n                log('trace', `used worker cache for tile ${tile.key}`);\n\n                // Build geometry\n                try {\n                    Tile.buildGeometry(tile, this);\n                }\n                catch(error) {\n                    // Send error to main thread\n                    tile.error = error.toString();\n                    WorkerBroker.postMessage(`TileManager_${this.scene_id}.buildTileError`, Tile.slice(tile));\n                }\n            }\n        });\n    },\n\n    // Load this tile's data source, or copy from an existing tile's data\n    loadTileSourceData (tile) {\n        const source = this.sources[tile.source];\n        if (source) {\n            // Search existing tiles to see if we can reuse existing source data for this coordinate\n            for (const t in this.tiles) {\n                const ref = this.tiles[t];\n                if (ref.source === tile.source &&\n                    ref.coords.key === tile.coords.key &&\n                    ref.loaded) {\n                    return Promise.resolve(source.copyTileData(ref, tile));\n                }\n            }\n\n            // Load new tile data (no existing data found)\n            return source.load(tile);\n        }\n        else {\n            tile.source_data = {};\n            return Promise.resolve(tile);\n        }\n    },\n\n    getTile(key) {\n        return this.tiles[key];\n    },\n\n    // Remove tile\n    removeTile (key) {\n        var tile = this.tiles[key];\n\n        if (tile != null) {\n            // Cancel if loading\n            if (tile.loading === true) {\n                log('trace', `cancel tile load for ${key}`);\n                tile.loading = false;\n                Tile.cancel(tile);\n            }\n\n            // Remove from cache\n            FeatureSelection.clearTile(key);\n            delete this.tiles[key];\n            log('trace', `remove tile from cache for ${key}`);\n        }\n    },\n\n    // Query features within visible tiles, with optional filter conditions\n    queryFeatures ({ filter, visible, geometry, tile_keys }) {\n        let features = [];\n        let tiles = tile_keys\n            .map(t => this.tiles[t])\n            .filter(t => t && t.loaded);\n\n        // Compile feature filter\n        if (filter != null) {\n            filter = ['{', '['].indexOf(filter[0]) > -1 ? JSON.parse(filter) : filter; // de-serialize if looks like an object\n            filter = compileFunctionStrings(filter, StyleParser.wrapFunction);\n        }\n        filter = buildFilter(filter, FilterOptions);\n\n        tiles.forEach(tile => {\n            for (let layer in tile.source_data.layers) {\n                let data = tile.source_data.layers[layer];\n\n                if (data == null) {\n                    return;\n                }\n\n                data.features.forEach(feature => {\n                    // Optionally check if feature is visible (e.g. was rendered for current generation)\n                    const feature_visible = (feature.generation === this.generation);\n                    if ((visible === true && !feature_visible) ||\n                        (visible === false && feature_visible)) {\n                        return;\n                    }\n\n                    // Apply feature filter\n                    let context = StyleParser.getFeatureParseContext(feature, tile, this.global);\n                    context.source = tile.source;  // add data source name\n                    context.layer = layer;         // add data source layer name\n                    context.id = feature.id;       // add feature id\n\n                    if (!filter(context)) {\n                        return;\n                    }\n\n                    // Info to return with each feature\n                    let subset = {\n                        type: feature.type,\n                        id: feature.id,\n                        properties: Object.assign({}, feature.properties, {\n                            $source: context.source,\n                            $layer: context.layer,\n                            $geometry: context.geometry,\n                            $visible: feature_visible\n                        })\n                    };\n\n                    // Optionally include geometry in response\n                    if (geometry === true) {\n                        // Transform back to lat lng (copy geometry to avoid local modification)\n                        subset.geometry = Geo.copyGeometry(feature.geometry);\n                        Geo.tileSpaceToLatlng(subset.geometry, tile.coords.z, tile.min);\n                    }\n\n                    features.push(subset);\n                });\n            }\n        });\n        return features;\n    },\n\n    // Get a feature from the selection map\n    getFeatureSelection ({ id, key } = {}) {\n        var selection = FeatureSelection.map[key];\n\n        return {\n            id: id,\n            feature: (selection && selection.feature)\n        };\n    },\n\n    // Resets the feature selection state\n    resetFeatureSelection (sources = null) {\n        FeatureSelection.reset(sources);\n    },\n\n    // Selection map size for this worker\n    getFeatureSelectionMapSize () {\n        return FeatureSelection.getMapSize();\n    },\n\n    // Texture info needs to be synced from main thread, e.g. width/height, which we only know after the texture loads\n    syncTextures (tex_config) {\n        let textures = [];\n        if (tex_config) {\n            textures.push(...Object.keys(tex_config));\n        }\n\n        log('trace', 'sync textures to worker:', textures);\n        if (textures.length > 0) {\n            return Texture.syncTexturesToWorker(textures);\n        }\n        return Promise.resolve();\n    },\n\n    // Sync device pixel ratio from main thread\n    updateDevicePixelRatio (device_pixel_ratio) {\n        Utils.device_pixel_ratio = device_pixel_ratio;\n    },\n\n    clearFunctionStringCache () {\n        clearFunctionStringCache();\n    },\n\n    // Profiling helpers\n    profile (name) {\n        console.profile(`worker ${this._worker_id}: ${name}`); // eslint-disable-line no-console\n    },\n\n    profileEnd (name) {\n        console.profileEnd(`worker ${this._worker_id}: ${name}`); // eslint-disable-line no-console\n    },\n\n    debug: {\n        debugSettings,\n        layerCache,\n        functionStringCache\n    }\n\n});\n\nWorkerBroker.addTarget('self', SceneWorker);\n","// WebGL context wrapper\n\nvar Context;\nexport default Context = {};\n\nlet context_id = 0;\n\n// Setup a WebGL context\n// If no canvas element is provided, one is created and added to the document body\nContext.getContext = function getContext (canvas, options)\n{\n    var fullscreen = false;\n    if (canvas == null) {\n        canvas = document.createElement('canvas');\n        canvas.style.position = 'absolute';\n        canvas.style.top = 0;\n        canvas.style.left = 0;\n        canvas.style.zIndex = -1;\n        document.body.appendChild(canvas);\n        fullscreen = true;\n    }\n\n    // powerPreference context option spec requires listeners for context loss/restore,\n    // though it's not clear these are required in practice.\n    // https://www.khronos.org/registry/webgl/specs/latest/1.0/#5.2.1\n    canvas.addEventListener('webglcontextlost', () => {});\n    canvas.addEventListener('webglcontextrestored', () => {});\n\n    var gl = canvas.getContext('webgl', options) || canvas.getContext('experimental-webgl', options);\n    if (!gl) {\n        throw new Error('Couldn\\'t create WebGL context.');\n    }\n    gl._tangram_id = context_id++;\n\n    if (!fullscreen) {\n        Context.resize(gl, parseFloat(canvas.style.width), parseFloat(canvas.style.height), options.device_pixel_ratio);\n    }\n    else {\n        Context.resize(gl, window.innerWidth, window.innerHeight, options.device_pixel_ratio);\n        window.addEventListener('resize', function () {\n            Context.resize(gl, window.innerWidth, window.innerHeight, options.device_pixel_ratio);\n        });\n    }\n\n    return gl;\n};\n\nContext.resize = function (gl, width, height, device_pixel_ratio)\n{\n    device_pixel_ratio = device_pixel_ratio || window.devicePixelRatio || 1;\n    gl.canvas.style.width = width + 'px';\n    gl.canvas.style.height = height + 'px';\n    gl.canvas.width = Math.round(width * device_pixel_ratio);\n    gl.canvas.height = Math.round(height * device_pixel_ratio);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n};\n","// Get a value for a nested property with path provided as an array (`a.b.c` => ['a', 'b', 'c'])\nexport function getPropertyPath (object, path) {\n    const prop = path[path.length - 1];\n    return getPropertyPathTarget(object, path)?.[prop];\n}\n\n// Set a value for a nested property with path provided as an array (`a.b.c` => ['a', 'b', 'c'])\nexport function setPropertyPath (object, path, value) {\n    const prop = path[path.length - 1];\n    const target = getPropertyPathTarget(object, path);\n    if (target) {\n        target[prop] = value;\n    }\n}\n\n// Get the immediate parent object for a property path name provided as an array\n// e.g. for a single-depth path, this is just `object`, for path ['a', 'b'], this is `object[a]`\nexport function getPropertyPathTarget (object, path) {\n    if (path.length === 0) {\n        return;\n    }\n\n    let target = object;\n    for (let i = 0; i < path.length - 1; i++) {\n        const prop = path[i];\n        target = target[prop];\n        if (target == null) {\n            return;\n        }\n    }\n    return target;\n}\n","import log from '../utils/log';\nimport { getPropertyPathTarget } from '../utils/props';\n\n// prefix used to identify global property references\nconst GLOBAL_PREFIX = 'global.';\nconst GLOBAL_PREFIX_LENGTH = GLOBAL_PREFIX.length;\n\n// name of 'hidden' (non-enumerable) property used to track global property references on an object\nconst GLOBAL_REGISTRY = '__global_prop';\n\n// Property name references a global property?\nexport function isGlobalReference (val) {\n    return val?.slice(0, GLOBAL_PREFIX_LENGTH) === GLOBAL_PREFIX;\n}\n\n// Has object property been substitued with a value from a global reference?\n// Property provided as a single-depth string name, or nested path array (`a.b.c` => ['a', 'b', 'c'])\nexport function isGlobalSubstitution (object, prop_or_path) {\n    const path = Array.isArray(prop_or_path) ? prop_or_path : [prop_or_path];\n    const target = getPropertyPathTarget(object, path);\n    const prop = path[path.length - 1];\n    return target?.[GLOBAL_REGISTRY]?.[prop] !== undefined;\n}\n\n// Flatten nested global properties for simpler string look-ups\nexport function flattenGlobalProperties (obj, prefix = null, globals = {}) {\n    prefix = prefix ? (prefix + '.') : GLOBAL_PREFIX;\n\n    for (const p in obj) {\n        const key = prefix + p;\n        const val = obj[p];\n        globals[key] = val;\n\n        if (typeof val === 'object' && !Array.isArray(val)) {\n            flattenGlobalProperties(val, key, globals);\n        }\n    }\n    return globals;\n}\n\n// Find and apply new global properties (and re-apply old ones)\nexport function applyGlobalProperties (globals, obj, target, key) {\n    let prop;\n\n    // Check for previously applied global substitution\n    if (target?.[GLOBAL_REGISTRY]?.[key]) {\n        prop = target[GLOBAL_REGISTRY][key];\n    }\n    // Check string for new global substitution\n    else if (typeof obj === 'string' && obj.slice(0, GLOBAL_PREFIX_LENGTH) === GLOBAL_PREFIX) {\n        prop = obj;\n    }\n\n    // Found global property to substitute\n    if (prop) {\n        // Mark property as global substitution\n        if (target[GLOBAL_REGISTRY] == null) {\n            Object.defineProperty(target, GLOBAL_REGISTRY, { value: {} });\n        }\n        target[GLOBAL_REGISTRY][key] = prop;\n\n        // Get current global value\n        let val = globals[prop];\n        let stack;\n        while (typeof val === 'string' && val.slice(0, GLOBAL_PREFIX_LENGTH) === GLOBAL_PREFIX) {\n            // handle globals that refer to other globals, detecting any cyclical references\n            stack = stack || [prop];\n            if (stack.indexOf(val) > -1) {\n                log({ level: 'warn', once: true }, 'Global properties: cyclical reference detected', stack);\n                val = null;\n                break;\n            }\n            stack.push(val);\n            val = globals[val];\n        }\n\n        // Create getter/setter\n        Object.defineProperty(target, key, {\n            enumerable: true,\n            get: function () {\n                return val; // return substituted value\n            },\n            set: function (v) {\n                // clear the global substitution and remove the getter/setter\n                delete target[GLOBAL_REGISTRY][key];\n                delete target[key];\n                target[key] = v; // save the new value\n            }\n        });\n    }\n    // Loop through object keys or array indices\n    else if (Array.isArray(obj)) {\n        for (let p = 0; p < obj.length; p++) {\n            applyGlobalProperties(globals, obj[p], obj, p);\n        }\n    }\n    else if (typeof obj === 'object') {\n        for (const p in obj) {\n            applyGlobalProperties(globals, obj[p], obj, p);\n        }\n    }\n    return obj;\n}\n","export default (typeof global !== \"undefined\" ? global :\n            typeof self !== \"undefined\" ? self :\n            typeof window !== \"undefined\" ? window : {});\n","\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\nvar inited = false;\nfunction init () {\n  inited = true;\n  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n  for (var i = 0, len = code.length; i < len; ++i) {\n    lookup[i] = code[i]\n    revLookup[code.charCodeAt(i)] = i\n  }\n\n  revLookup['-'.charCodeAt(0)] = 62\n  revLookup['_'.charCodeAt(0)] = 63\n}\n\nexport function toByteArray (b64) {\n  if (!inited) {\n    init();\n  }\n  var i, j, l, tmp, placeHolders, arr\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n\n  // base64 is 4/3 + up to two characters of the original data\n  arr = new Arr(len * 3 / 4 - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nexport function fromByteArray (uint8) {\n  if (!inited) {\n    init();\n  }\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n","\nexport function read (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexport function write (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nexport default Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\nimport * as base64 from './base64'\nimport * as ieee754 from './ieee754'\nimport isArray from './isArray'\n\nexport var INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : true\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nvar _kMaxLength = kMaxLength()\nexport {_kMaxLength as kMaxLength};\nfunction typedArraySupport () {\n  return true;\n  // rollup issues\n  // try {\n  //   var arr = new Uint8Array(1)\n  //   arr.__proto__ = {\n  //     __proto__: Uint8Array.prototype,\n  //     foo: function () { return 42 }\n  //   }\n  //   return arr.foo() === 42 && // typed array instances can be augmented\n  //       typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n  //       arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  // } catch (e) {\n  //   return false\n  // }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nexport function Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    // Object.defineProperty(Buffer, Symbol.species, {\n    //   value: null,\n    //   configurable: true\n    // })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (internalIsBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nexport function SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\nBuffer.isBuffer = isBuffer;\nfunction internalIsBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!internalIsBuffer(a) || !internalIsBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!internalIsBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (internalIsBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!internalIsBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!internalIsBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (internalIsBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!internalIsBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = internalIsBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n// the following is from is-buffer, also by Feross Aboukhadijeh and with same lisence\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nexport function isBuffer(obj) {\n  return obj != null && (!!obj._isBuffer || isFastBuffer(obj) || isSlowBuffer(obj))\n}\n\nfunction isFastBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isFastBuffer(obj.slice(0, 0))\n}\n","// shim for using process in browser\n// based off https://github.com/defunctzombie/node-process/blob/master/browser.js\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\nvar cachedSetTimeout = defaultSetTimout;\nvar cachedClearTimeout = defaultClearTimeout;\nif (typeof global.setTimeout === 'function') {\n    cachedSetTimeout = setTimeout;\n}\nif (typeof global.clearTimeout === 'function') {\n    cachedClearTimeout = clearTimeout;\n}\n\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\nexport function nextTick(fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n}\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nexport var title = 'browser';\nexport var platform = 'browser';\nexport var browser = true;\nexport var env = {};\nexport var argv = [];\nexport var version = ''; // empty string to avoid regexp issues\nexport var versions = {};\nexport var release = {};\nexport var config = {};\n\nfunction noop() {}\n\nexport var on = noop;\nexport var addListener = noop;\nexport var once = noop;\nexport var off = noop;\nexport var removeListener = noop;\nexport var removeAllListeners = noop;\nexport var emit = noop;\n\nexport function binding(name) {\n    throw new Error('process.binding is not supported');\n}\n\nexport function cwd () { return '/' }\nexport function chdir (dir) {\n    throw new Error('process.chdir is not supported');\n};\nexport function umask() { return 0; }\n\n// from https://github.com/kumavis/browser-process-hrtime/blob/master/index.js\nvar performance = global.performance || {}\nvar performanceNow =\n  performance.now        ||\n  performance.mozNow     ||\n  performance.msNow      ||\n  performance.oNow       ||\n  performance.webkitNow  ||\n  function(){ return (new Date()).getTime() }\n\n// generate timestamp or delta\n// see http://nodejs.org/api/process.html#process_process_hrtime\nexport function hrtime(previousTimestamp){\n  var clocktime = performanceNow.call(performance)*1e-3\n  var seconds = Math.floor(clocktime)\n  var nanoseconds = Math.floor((clocktime%1)*1e9)\n  if (previousTimestamp) {\n    seconds = seconds - previousTimestamp[0]\n    nanoseconds = nanoseconds - previousTimestamp[1]\n    if (nanoseconds<0) {\n      seconds--\n      nanoseconds += 1e9\n    }\n  }\n  return [seconds,nanoseconds]\n}\n\nvar startTime = new Date();\nexport function uptime() {\n  var currentTime = new Date();\n  var dif = currentTime - startTime;\n  return dif / 1000;\n}\n\nexport default {\n  nextTick: nextTick,\n  title: title,\n  browser: browser,\n  env: env,\n  argv: argv,\n  version: version,\n  versions: versions,\n  on: on,\n  addListener: addListener,\n  once: once,\n  off: off,\n  removeListener: removeListener,\n  removeAllListeners: removeAllListeners,\n  emit: emit,\n  binding: binding,\n  cwd: cwd,\n  chdir: chdir,\n  umask: umask,\n  hrtime: hrtime,\n  platform: platform,\n  release: release,\n  config: config,\n  uptime: uptime\n};\n","/*!\n\nJSZip v3.10.1 - A JavaScript class for generating and reading zip files\n<http://stuartk.com/jszip>\n\n(c) 2009-2016 Stuart Knightley <stuart [at] stuartk.com>\nDual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/main/LICENSE.markdown.\n\nJSZip uses the library pako released under the MIT license :\nhttps://github.com/nodeca/pako/blob/main/LICENSE\n*/\n\n!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{(\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this).JSZip=e()}}(function(){return function s(a,o,h){function u(r,e){if(!o[r]){if(!a[r]){var t=\"function\"==typeof require&&require;if(!e&&t)return t(r,!0);if(l)return l(r,!0);var n=new Error(\"Cannot find module '\"+r+\"'\");throw n.code=\"MODULE_NOT_FOUND\",n}var i=o[r]={exports:{}};a[r][0].call(i.exports,function(e){var t=a[r][1][e];return u(t||e)},i,i.exports,s,a,o,h)}return o[r].exports}for(var l=\"function\"==typeof require&&require,e=0;e<h.length;e++)u(h[e]);return u}({1:[function(e,t,r){\"use strict\";var d=e(\"./utils\"),c=e(\"./support\"),p=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";r.encode=function(e){for(var t,r,n,i,s,a,o,h=[],u=0,l=e.length,f=l,c=\"string\"!==d.getTypeOf(e);u<e.length;)f=l-u,n=c?(t=e[u++],r=u<l?e[u++]:0,u<l?e[u++]:0):(t=e.charCodeAt(u++),r=u<l?e.charCodeAt(u++):0,u<l?e.charCodeAt(u++):0),i=t>>2,s=(3&t)<<4|r>>4,a=1<f?(15&r)<<2|n>>6:64,o=2<f?63&n:64,h.push(p.charAt(i)+p.charAt(s)+p.charAt(a)+p.charAt(o));return h.join(\"\")},r.decode=function(e){var t,r,n,i,s,a,o=0,h=0,u=\"data:\";if(e.substr(0,u.length)===u)throw new Error(\"Invalid base64 input, it looks like a data url.\");var l,f=3*(e=e.replace(/[^A-Za-z0-9+/=]/g,\"\")).length/4;if(e.charAt(e.length-1)===p.charAt(64)&&f--,e.charAt(e.length-2)===p.charAt(64)&&f--,f%1!=0)throw new Error(\"Invalid base64 input, bad content length.\");for(l=c.uint8array?new Uint8Array(0|f):new Array(0|f);o<e.length;)t=p.indexOf(e.charAt(o++))<<2|(i=p.indexOf(e.charAt(o++)))>>4,r=(15&i)<<4|(s=p.indexOf(e.charAt(o++)))>>2,n=(3&s)<<6|(a=p.indexOf(e.charAt(o++))),l[h++]=t,64!==s&&(l[h++]=r),64!==a&&(l[h++]=n);return l}},{\"./support\":30,\"./utils\":32}],2:[function(e,t,r){\"use strict\";var n=e(\"./external\"),i=e(\"./stream/DataWorker\"),s=e(\"./stream/Crc32Probe\"),a=e(\"./stream/DataLengthProbe\");function o(e,t,r,n,i){this.compressedSize=e,this.uncompressedSize=t,this.crc32=r,this.compression=n,this.compressedContent=i}o.prototype={getContentWorker:function(){var e=new i(n.Promise.resolve(this.compressedContent)).pipe(this.compression.uncompressWorker()).pipe(new a(\"data_length\")),t=this;return e.on(\"end\",function(){if(this.streamInfo.data_length!==t.uncompressedSize)throw new Error(\"Bug : uncompressed data size mismatch\")}),e},getCompressedWorker:function(){return new i(n.Promise.resolve(this.compressedContent)).withStreamInfo(\"compressedSize\",this.compressedSize).withStreamInfo(\"uncompressedSize\",this.uncompressedSize).withStreamInfo(\"crc32\",this.crc32).withStreamInfo(\"compression\",this.compression)}},o.createWorkerFrom=function(e,t,r){return e.pipe(new s).pipe(new a(\"uncompressedSize\")).pipe(t.compressWorker(r)).pipe(new a(\"compressedSize\")).withStreamInfo(\"compression\",t)},t.exports=o},{\"./external\":6,\"./stream/Crc32Probe\":25,\"./stream/DataLengthProbe\":26,\"./stream/DataWorker\":27}],3:[function(e,t,r){\"use strict\";var n=e(\"./stream/GenericWorker\");r.STORE={magic:\"\\0\\0\",compressWorker:function(){return new n(\"STORE compression\")},uncompressWorker:function(){return new n(\"STORE decompression\")}},r.DEFLATE=e(\"./flate\")},{\"./flate\":7,\"./stream/GenericWorker\":28}],4:[function(e,t,r){\"use strict\";var n=e(\"./utils\");var o=function(){for(var e,t=[],r=0;r<256;r++){e=r;for(var n=0;n<8;n++)e=1&e?3988292384^e>>>1:e>>>1;t[r]=e}return t}();t.exports=function(e,t){return void 0!==e&&e.length?\"string\"!==n.getTypeOf(e)?function(e,t,r,n){var i=o,s=n+r;e^=-1;for(var a=n;a<s;a++)e=e>>>8^i[255&(e^t[a])];return-1^e}(0|t,e,e.length,0):function(e,t,r,n){var i=o,s=n+r;e^=-1;for(var a=n;a<s;a++)e=e>>>8^i[255&(e^t.charCodeAt(a))];return-1^e}(0|t,e,e.length,0):0}},{\"./utils\":32}],5:[function(e,t,r){\"use strict\";r.base64=!1,r.binary=!1,r.dir=!1,r.createFolders=!0,r.date=null,r.compression=null,r.compressionOptions=null,r.comment=null,r.unixPermissions=null,r.dosPermissions=null},{}],6:[function(e,t,r){\"use strict\";var n=null;n=\"undefined\"!=typeof Promise?Promise:e(\"lie\"),t.exports={Promise:n}},{lie:37}],7:[function(e,t,r){\"use strict\";var n=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Uint32Array,i=e(\"pako\"),s=e(\"./utils\"),a=e(\"./stream/GenericWorker\"),o=n?\"uint8array\":\"array\";function h(e,t){a.call(this,\"FlateWorker/\"+e),this._pako=null,this._pakoAction=e,this._pakoOptions=t,this.meta={}}r.magic=\"\\b\\0\",s.inherits(h,a),h.prototype.processChunk=function(e){this.meta=e.meta,null===this._pako&&this._createPako(),this._pako.push(s.transformTo(o,e.data),!1)},h.prototype.flush=function(){a.prototype.flush.call(this),null===this._pako&&this._createPako(),this._pako.push([],!0)},h.prototype.cleanUp=function(){a.prototype.cleanUp.call(this),this._pako=null},h.prototype._createPako=function(){this._pako=new i[this._pakoAction]({raw:!0,level:this._pakoOptions.level||-1});var t=this;this._pako.onData=function(e){t.push({data:e,meta:t.meta})}},r.compressWorker=function(e){return new h(\"Deflate\",e)},r.uncompressWorker=function(){return new h(\"Inflate\",{})}},{\"./stream/GenericWorker\":28,\"./utils\":32,pako:38}],8:[function(e,t,r){\"use strict\";function A(e,t){var r,n=\"\";for(r=0;r<t;r++)n+=String.fromCharCode(255&e),e>>>=8;return n}function n(e,t,r,n,i,s){var a,o,h=e.file,u=e.compression,l=s!==O.utf8encode,f=I.transformTo(\"string\",s(h.name)),c=I.transformTo(\"string\",O.utf8encode(h.name)),d=h.comment,p=I.transformTo(\"string\",s(d)),m=I.transformTo(\"string\",O.utf8encode(d)),_=c.length!==h.name.length,g=m.length!==d.length,b=\"\",v=\"\",y=\"\",w=h.dir,k=h.date,x={crc32:0,compressedSize:0,uncompressedSize:0};t&&!r||(x.crc32=e.crc32,x.compressedSize=e.compressedSize,x.uncompressedSize=e.uncompressedSize);var S=0;t&&(S|=8),l||!_&&!g||(S|=2048);var z=0,C=0;w&&(z|=16),\"UNIX\"===i?(C=798,z|=function(e,t){var r=e;return e||(r=t?16893:33204),(65535&r)<<16}(h.unixPermissions,w)):(C=20,z|=function(e){return 63&(e||0)}(h.dosPermissions)),a=k.getUTCHours(),a<<=6,a|=k.getUTCMinutes(),a<<=5,a|=k.getUTCSeconds()/2,o=k.getUTCFullYear()-1980,o<<=4,o|=k.getUTCMonth()+1,o<<=5,o|=k.getUTCDate(),_&&(v=A(1,1)+A(B(f),4)+c,b+=\"up\"+A(v.length,2)+v),g&&(y=A(1,1)+A(B(p),4)+m,b+=\"uc\"+A(y.length,2)+y);var E=\"\";return E+=\"\\n\\0\",E+=A(S,2),E+=u.magic,E+=A(a,2),E+=A(o,2),E+=A(x.crc32,4),E+=A(x.compressedSize,4),E+=A(x.uncompressedSize,4),E+=A(f.length,2),E+=A(b.length,2),{fileRecord:R.LOCAL_FILE_HEADER+E+f+b,dirRecord:R.CENTRAL_FILE_HEADER+A(C,2)+E+A(p.length,2)+\"\\0\\0\\0\\0\"+A(z,4)+A(n,4)+f+b+p}}var I=e(\"../utils\"),i=e(\"../stream/GenericWorker\"),O=e(\"../utf8\"),B=e(\"../crc32\"),R=e(\"../signature\");function s(e,t,r,n){i.call(this,\"ZipFileWorker\"),this.bytesWritten=0,this.zipComment=t,this.zipPlatform=r,this.encodeFileName=n,this.streamFiles=e,this.accumulate=!1,this.contentBuffer=[],this.dirRecords=[],this.currentSourceOffset=0,this.entriesCount=0,this.currentFile=null,this._sources=[]}I.inherits(s,i),s.prototype.push=function(e){var t=e.meta.percent||0,r=this.entriesCount,n=this._sources.length;this.accumulate?this.contentBuffer.push(e):(this.bytesWritten+=e.data.length,i.prototype.push.call(this,{data:e.data,meta:{currentFile:this.currentFile,percent:r?(t+100*(r-n-1))/r:100}}))},s.prototype.openedSource=function(e){this.currentSourceOffset=this.bytesWritten,this.currentFile=e.file.name;var t=this.streamFiles&&!e.file.dir;if(t){var r=n(e,t,!1,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);this.push({data:r.fileRecord,meta:{percent:0}})}else this.accumulate=!0},s.prototype.closedSource=function(e){this.accumulate=!1;var t=this.streamFiles&&!e.file.dir,r=n(e,t,!0,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);if(this.dirRecords.push(r.dirRecord),t)this.push({data:function(e){return R.DATA_DESCRIPTOR+A(e.crc32,4)+A(e.compressedSize,4)+A(e.uncompressedSize,4)}(e),meta:{percent:100}});else for(this.push({data:r.fileRecord,meta:{percent:0}});this.contentBuffer.length;)this.push(this.contentBuffer.shift());this.currentFile=null},s.prototype.flush=function(){for(var e=this.bytesWritten,t=0;t<this.dirRecords.length;t++)this.push({data:this.dirRecords[t],meta:{percent:100}});var r=this.bytesWritten-e,n=function(e,t,r,n,i){var s=I.transformTo(\"string\",i(n));return R.CENTRAL_DIRECTORY_END+\"\\0\\0\\0\\0\"+A(e,2)+A(e,2)+A(t,4)+A(r,4)+A(s.length,2)+s}(this.dirRecords.length,r,e,this.zipComment,this.encodeFileName);this.push({data:n,meta:{percent:100}})},s.prototype.prepareNextSource=function(){this.previous=this._sources.shift(),this.openedSource(this.previous.streamInfo),this.isPaused?this.previous.pause():this.previous.resume()},s.prototype.registerPrevious=function(e){this._sources.push(e);var t=this;return e.on(\"data\",function(e){t.processChunk(e)}),e.on(\"end\",function(){t.closedSource(t.previous.streamInfo),t._sources.length?t.prepareNextSource():t.end()}),e.on(\"error\",function(e){t.error(e)}),this},s.prototype.resume=function(){return!!i.prototype.resume.call(this)&&(!this.previous&&this._sources.length?(this.prepareNextSource(),!0):this.previous||this._sources.length||this.generatedError?void 0:(this.end(),!0))},s.prototype.error=function(e){var t=this._sources;if(!i.prototype.error.call(this,e))return!1;for(var r=0;r<t.length;r++)try{t[r].error(e)}catch(e){}return!0},s.prototype.lock=function(){i.prototype.lock.call(this);for(var e=this._sources,t=0;t<e.length;t++)e[t].lock()},t.exports=s},{\"../crc32\":4,\"../signature\":23,\"../stream/GenericWorker\":28,\"../utf8\":31,\"../utils\":32}],9:[function(e,t,r){\"use strict\";var u=e(\"../compressions\"),n=e(\"./ZipFileWorker\");r.generateWorker=function(e,a,t){var o=new n(a.streamFiles,t,a.platform,a.encodeFileName),h=0;try{e.forEach(function(e,t){h++;var r=function(e,t){var r=e||t,n=u[r];if(!n)throw new Error(r+\" is not a valid compression method !\");return n}(t.options.compression,a.compression),n=t.options.compressionOptions||a.compressionOptions||{},i=t.dir,s=t.date;t._compressWorker(r,n).withStreamInfo(\"file\",{name:e,dir:i,date:s,comment:t.comment||\"\",unixPermissions:t.unixPermissions,dosPermissions:t.dosPermissions}).pipe(o)}),o.entriesCount=h}catch(e){o.error(e)}return o}},{\"../compressions\":3,\"./ZipFileWorker\":8}],10:[function(e,t,r){\"use strict\";function n(){if(!(this instanceof n))return new n;if(arguments.length)throw new Error(\"The constructor with parameters has been removed in JSZip 3.0, please check the upgrade guide.\");this.files=Object.create(null),this.comment=null,this.root=\"\",this.clone=function(){var e=new n;for(var t in this)\"function\"!=typeof this[t]&&(e[t]=this[t]);return e}}(n.prototype=e(\"./object\")).loadAsync=e(\"./load\"),n.support=e(\"./support\"),n.defaults=e(\"./defaults\"),n.version=\"3.10.1\",n.loadAsync=function(e,t){return(new n).loadAsync(e,t)},n.external=e(\"./external\"),t.exports=n},{\"./defaults\":5,\"./external\":6,\"./load\":11,\"./object\":15,\"./support\":30}],11:[function(e,t,r){\"use strict\";var u=e(\"./utils\"),i=e(\"./external\"),n=e(\"./utf8\"),s=e(\"./zipEntries\"),a=e(\"./stream/Crc32Probe\"),l=e(\"./nodejsUtils\");function f(n){return new i.Promise(function(e,t){var r=n.decompressed.getContentWorker().pipe(new a);r.on(\"error\",function(e){t(e)}).on(\"end\",function(){r.streamInfo.crc32!==n.decompressed.crc32?t(new Error(\"Corrupted zip : CRC32 mismatch\")):e()}).resume()})}t.exports=function(e,o){var h=this;return o=u.extend(o||{},{base64:!1,checkCRC32:!1,optimizedBinaryString:!1,createFolders:!1,decodeFileName:n.utf8decode}),l.isNode&&l.isStream(e)?i.Promise.reject(new Error(\"JSZip can't accept a stream when loading a zip file.\")):u.prepareContent(\"the loaded zip file\",e,!0,o.optimizedBinaryString,o.base64).then(function(e){var t=new s(o);return t.load(e),t}).then(function(e){var t=[i.Promise.resolve(e)],r=e.files;if(o.checkCRC32)for(var n=0;n<r.length;n++)t.push(f(r[n]));return i.Promise.all(t)}).then(function(e){for(var t=e.shift(),r=t.files,n=0;n<r.length;n++){var i=r[n],s=i.fileNameStr,a=u.resolve(i.fileNameStr);h.file(a,i.decompressed,{binary:!0,optimizedBinaryString:!0,date:i.date,dir:i.dir,comment:i.fileCommentStr.length?i.fileCommentStr:null,unixPermissions:i.unixPermissions,dosPermissions:i.dosPermissions,createFolders:o.createFolders}),i.dir||(h.file(a).unsafeOriginalName=s)}return t.zipComment.length&&(h.comment=t.zipComment),h})}},{\"./external\":6,\"./nodejsUtils\":14,\"./stream/Crc32Probe\":25,\"./utf8\":31,\"./utils\":32,\"./zipEntries\":33}],12:[function(e,t,r){\"use strict\";var n=e(\"../utils\"),i=e(\"../stream/GenericWorker\");function s(e,t){i.call(this,\"Nodejs stream input adapter for \"+e),this._upstreamEnded=!1,this._bindStream(t)}n.inherits(s,i),s.prototype._bindStream=function(e){var t=this;(this._stream=e).pause(),e.on(\"data\",function(e){t.push({data:e,meta:{percent:0}})}).on(\"error\",function(e){t.isPaused?this.generatedError=e:t.error(e)}).on(\"end\",function(){t.isPaused?t._upstreamEnded=!0:t.end()})},s.prototype.pause=function(){return!!i.prototype.pause.call(this)&&(this._stream.pause(),!0)},s.prototype.resume=function(){return!!i.prototype.resume.call(this)&&(this._upstreamEnded?this.end():this._stream.resume(),!0)},t.exports=s},{\"../stream/GenericWorker\":28,\"../utils\":32}],13:[function(e,t,r){\"use strict\";var i=e(\"readable-stream\").Readable;function n(e,t,r){i.call(this,t),this._helper=e;var n=this;e.on(\"data\",function(e,t){n.push(e)||n._helper.pause(),r&&r(t)}).on(\"error\",function(e){n.emit(\"error\",e)}).on(\"end\",function(){n.push(null)})}e(\"../utils\").inherits(n,i),n.prototype._read=function(){this._helper.resume()},t.exports=n},{\"../utils\":32,\"readable-stream\":16}],14:[function(e,t,r){\"use strict\";t.exports={isNode:\"undefined\"!=typeof Buffer,newBufferFrom:function(e,t){if(Buffer.from&&Buffer.from!==Uint8Array.from)return Buffer.from(e,t);if(\"number\"==typeof e)throw new Error('The \"data\" argument must not be a number');return new Buffer(e,t)},allocBuffer:function(e){if(Buffer.alloc)return Buffer.alloc(e);var t=new Buffer(e);return t.fill(0),t},isBuffer:function(e){return Buffer.isBuffer(e)},isStream:function(e){return e&&\"function\"==typeof e.on&&\"function\"==typeof e.pause&&\"function\"==typeof e.resume}}},{}],15:[function(e,t,r){\"use strict\";function s(e,t,r){var n,i=u.getTypeOf(t),s=u.extend(r||{},f);s.date=s.date||new Date,null!==s.compression&&(s.compression=s.compression.toUpperCase()),\"string\"==typeof s.unixPermissions&&(s.unixPermissions=parseInt(s.unixPermissions,8)),s.unixPermissions&&16384&s.unixPermissions&&(s.dir=!0),s.dosPermissions&&16&s.dosPermissions&&(s.dir=!0),s.dir&&(e=g(e)),s.createFolders&&(n=_(e))&&b.call(this,n,!0);var a=\"string\"===i&&!1===s.binary&&!1===s.base64;r&&void 0!==r.binary||(s.binary=!a),(t instanceof c&&0===t.uncompressedSize||s.dir||!t||0===t.length)&&(s.base64=!1,s.binary=!0,t=\"\",s.compression=\"STORE\",i=\"string\");var o=null;o=t instanceof c||t instanceof l?t:p.isNode&&p.isStream(t)?new m(e,t):u.prepareContent(e,t,s.binary,s.optimizedBinaryString,s.base64);var h=new d(e,o,s);this.files[e]=h}var i=e(\"./utf8\"),u=e(\"./utils\"),l=e(\"./stream/GenericWorker\"),a=e(\"./stream/StreamHelper\"),f=e(\"./defaults\"),c=e(\"./compressedObject\"),d=e(\"./zipObject\"),o=e(\"./generate\"),p=e(\"./nodejsUtils\"),m=e(\"./nodejs/NodejsStreamInputAdapter\"),_=function(e){\"/\"===e.slice(-1)&&(e=e.substring(0,e.length-1));var t=e.lastIndexOf(\"/\");return 0<t?e.substring(0,t):\"\"},g=function(e){return\"/\"!==e.slice(-1)&&(e+=\"/\"),e},b=function(e,t){return t=void 0!==t?t:f.createFolders,e=g(e),this.files[e]||s.call(this,e,null,{dir:!0,createFolders:t}),this.files[e]};function h(e){return\"[object RegExp]\"===Object.prototype.toString.call(e)}var n={load:function(){throw new Error(\"This method has been removed in JSZip 3.0, please check the upgrade guide.\")},forEach:function(e){var t,r,n;for(t in this.files)n=this.files[t],(r=t.slice(this.root.length,t.length))&&t.slice(0,this.root.length)===this.root&&e(r,n)},filter:function(r){var n=[];return this.forEach(function(e,t){r(e,t)&&n.push(t)}),n},file:function(e,t,r){if(1!==arguments.length)return e=this.root+e,s.call(this,e,t,r),this;if(h(e)){var n=e;return this.filter(function(e,t){return!t.dir&&n.test(e)})}var i=this.files[this.root+e];return i&&!i.dir?i:null},folder:function(r){if(!r)return this;if(h(r))return this.filter(function(e,t){return t.dir&&r.test(e)});var e=this.root+r,t=b.call(this,e),n=this.clone();return n.root=t.name,n},remove:function(r){r=this.root+r;var e=this.files[r];if(e||(\"/\"!==r.slice(-1)&&(r+=\"/\"),e=this.files[r]),e&&!e.dir)delete this.files[r];else for(var t=this.filter(function(e,t){return t.name.slice(0,r.length)===r}),n=0;n<t.length;n++)delete this.files[t[n].name];return this},generate:function(){throw new Error(\"This method has been removed in JSZip 3.0, please check the upgrade guide.\")},generateInternalStream:function(e){var t,r={};try{if((r=u.extend(e||{},{streamFiles:!1,compression:\"STORE\",compressionOptions:null,type:\"\",platform:\"DOS\",comment:null,mimeType:\"application/zip\",encodeFileName:i.utf8encode})).type=r.type.toLowerCase(),r.compression=r.compression.toUpperCase(),\"binarystring\"===r.type&&(r.type=\"string\"),!r.type)throw new Error(\"No output type specified.\");u.checkSupport(r.type),\"darwin\"!==r.platform&&\"freebsd\"!==r.platform&&\"linux\"!==r.platform&&\"sunos\"!==r.platform||(r.platform=\"UNIX\"),\"win32\"===r.platform&&(r.platform=\"DOS\");var n=r.comment||this.comment||\"\";t=o.generateWorker(this,r,n)}catch(e){(t=new l(\"error\")).error(e)}return new a(t,r.type||\"string\",r.mimeType)},generateAsync:function(e,t){return this.generateInternalStream(e).accumulate(t)},generateNodeStream:function(e,t){return(e=e||{}).type||(e.type=\"nodebuffer\"),this.generateInternalStream(e).toNodejsStream(t)}};t.exports=n},{\"./compressedObject\":2,\"./defaults\":5,\"./generate\":9,\"./nodejs/NodejsStreamInputAdapter\":12,\"./nodejsUtils\":14,\"./stream/GenericWorker\":28,\"./stream/StreamHelper\":29,\"./utf8\":31,\"./utils\":32,\"./zipObject\":35}],16:[function(e,t,r){\"use strict\";t.exports=e(\"stream\")},{stream:void 0}],17:[function(e,t,r){\"use strict\";var n=e(\"./DataReader\");function i(e){n.call(this,e);for(var t=0;t<this.data.length;t++)e[t]=255&e[t]}e(\"../utils\").inherits(i,n),i.prototype.byteAt=function(e){return this.data[this.zero+e]},i.prototype.lastIndexOfSignature=function(e){for(var t=e.charCodeAt(0),r=e.charCodeAt(1),n=e.charCodeAt(2),i=e.charCodeAt(3),s=this.length-4;0<=s;--s)if(this.data[s]===t&&this.data[s+1]===r&&this.data[s+2]===n&&this.data[s+3]===i)return s-this.zero;return-1},i.prototype.readAndCheckSignature=function(e){var t=e.charCodeAt(0),r=e.charCodeAt(1),n=e.charCodeAt(2),i=e.charCodeAt(3),s=this.readData(4);return t===s[0]&&r===s[1]&&n===s[2]&&i===s[3]},i.prototype.readData=function(e){if(this.checkOffset(e),0===e)return[];var t=this.data.slice(this.zero+this.index,this.zero+this.index+e);return this.index+=e,t},t.exports=i},{\"../utils\":32,\"./DataReader\":18}],18:[function(e,t,r){\"use strict\";var n=e(\"../utils\");function i(e){this.data=e,this.length=e.length,this.index=0,this.zero=0}i.prototype={checkOffset:function(e){this.checkIndex(this.index+e)},checkIndex:function(e){if(this.length<this.zero+e||e<0)throw new Error(\"End of data reached (data length = \"+this.length+\", asked index = \"+e+\"). Corrupted zip ?\")},setIndex:function(e){this.checkIndex(e),this.index=e},skip:function(e){this.setIndex(this.index+e)},byteAt:function(){},readInt:function(e){var t,r=0;for(this.checkOffset(e),t=this.index+e-1;t>=this.index;t--)r=(r<<8)+this.byteAt(t);return this.index+=e,r},readString:function(e){return n.transformTo(\"string\",this.readData(e))},readData:function(){},lastIndexOfSignature:function(){},readAndCheckSignature:function(){},readDate:function(){var e=this.readInt(4);return new Date(Date.UTC(1980+(e>>25&127),(e>>21&15)-1,e>>16&31,e>>11&31,e>>5&63,(31&e)<<1))}},t.exports=i},{\"../utils\":32}],19:[function(e,t,r){\"use strict\";var n=e(\"./Uint8ArrayReader\");function i(e){n.call(this,e)}e(\"../utils\").inherits(i,n),i.prototype.readData=function(e){this.checkOffset(e);var t=this.data.slice(this.zero+this.index,this.zero+this.index+e);return this.index+=e,t},t.exports=i},{\"../utils\":32,\"./Uint8ArrayReader\":21}],20:[function(e,t,r){\"use strict\";var n=e(\"./DataReader\");function i(e){n.call(this,e)}e(\"../utils\").inherits(i,n),i.prototype.byteAt=function(e){return this.data.charCodeAt(this.zero+e)},i.prototype.lastIndexOfSignature=function(e){return this.data.lastIndexOf(e)-this.zero},i.prototype.readAndCheckSignature=function(e){return e===this.readData(4)},i.prototype.readData=function(e){this.checkOffset(e);var t=this.data.slice(this.zero+this.index,this.zero+this.index+e);return this.index+=e,t},t.exports=i},{\"../utils\":32,\"./DataReader\":18}],21:[function(e,t,r){\"use strict\";var n=e(\"./ArrayReader\");function i(e){n.call(this,e)}e(\"../utils\").inherits(i,n),i.prototype.readData=function(e){if(this.checkOffset(e),0===e)return new Uint8Array(0);var t=this.data.subarray(this.zero+this.index,this.zero+this.index+e);return this.index+=e,t},t.exports=i},{\"../utils\":32,\"./ArrayReader\":17}],22:[function(e,t,r){\"use strict\";var n=e(\"../utils\"),i=e(\"../support\"),s=e(\"./ArrayReader\"),a=e(\"./StringReader\"),o=e(\"./NodeBufferReader\"),h=e(\"./Uint8ArrayReader\");t.exports=function(e){var t=n.getTypeOf(e);return n.checkSupport(t),\"string\"!==t||i.uint8array?\"nodebuffer\"===t?new o(e):i.uint8array?new h(n.transformTo(\"uint8array\",e)):new s(n.transformTo(\"array\",e)):new a(e)}},{\"../support\":30,\"../utils\":32,\"./ArrayReader\":17,\"./NodeBufferReader\":19,\"./StringReader\":20,\"./Uint8ArrayReader\":21}],23:[function(e,t,r){\"use strict\";r.LOCAL_FILE_HEADER=\"PK\u0003\u0004\",r.CENTRAL_FILE_HEADER=\"PK\u0001\u0002\",r.CENTRAL_DIRECTORY_END=\"PK\u0005\u0006\",r.ZIP64_CENTRAL_DIRECTORY_LOCATOR=\"PK\u0006\u0007\",r.ZIP64_CENTRAL_DIRECTORY_END=\"PK\u0006\u0006\",r.DATA_DESCRIPTOR=\"PK\u0007\\b\"},{}],24:[function(e,t,r){\"use strict\";var n=e(\"./GenericWorker\"),i=e(\"../utils\");function s(e){n.call(this,\"ConvertWorker to \"+e),this.destType=e}i.inherits(s,n),s.prototype.processChunk=function(e){this.push({data:i.transformTo(this.destType,e.data),meta:e.meta})},t.exports=s},{\"../utils\":32,\"./GenericWorker\":28}],25:[function(e,t,r){\"use strict\";var n=e(\"./GenericWorker\"),i=e(\"../crc32\");function s(){n.call(this,\"Crc32Probe\"),this.withStreamInfo(\"crc32\",0)}e(\"../utils\").inherits(s,n),s.prototype.processChunk=function(e){this.streamInfo.crc32=i(e.data,this.streamInfo.crc32||0),this.push(e)},t.exports=s},{\"../crc32\":4,\"../utils\":32,\"./GenericWorker\":28}],26:[function(e,t,r){\"use strict\";var n=e(\"../utils\"),i=e(\"./GenericWorker\");function s(e){i.call(this,\"DataLengthProbe for \"+e),this.propName=e,this.withStreamInfo(e,0)}n.inherits(s,i),s.prototype.processChunk=function(e){if(e){var t=this.streamInfo[this.propName]||0;this.streamInfo[this.propName]=t+e.data.length}i.prototype.processChunk.call(this,e)},t.exports=s},{\"../utils\":32,\"./GenericWorker\":28}],27:[function(e,t,r){\"use strict\";var n=e(\"../utils\"),i=e(\"./GenericWorker\");function s(e){i.call(this,\"DataWorker\");var t=this;this.dataIsReady=!1,this.index=0,this.max=0,this.data=null,this.type=\"\",this._tickScheduled=!1,e.then(function(e){t.dataIsReady=!0,t.data=e,t.max=e&&e.length||0,t.type=n.getTypeOf(e),t.isPaused||t._tickAndRepeat()},function(e){t.error(e)})}n.inherits(s,i),s.prototype.cleanUp=function(){i.prototype.cleanUp.call(this),this.data=null},s.prototype.resume=function(){return!!i.prototype.resume.call(this)&&(!this._tickScheduled&&this.dataIsReady&&(this._tickScheduled=!0,n.delay(this._tickAndRepeat,[],this)),!0)},s.prototype._tickAndRepeat=function(){this._tickScheduled=!1,this.isPaused||this.isFinished||(this._tick(),this.isFinished||(n.delay(this._tickAndRepeat,[],this),this._tickScheduled=!0))},s.prototype._tick=function(){if(this.isPaused||this.isFinished)return!1;var e=null,t=Math.min(this.max,this.index+16384);if(this.index>=this.max)return this.end();switch(this.type){case\"string\":e=this.data.substring(this.index,t);break;case\"uint8array\":e=this.data.subarray(this.index,t);break;case\"array\":case\"nodebuffer\":e=this.data.slice(this.index,t)}return this.index=t,this.push({data:e,meta:{percent:this.max?this.index/this.max*100:0}})},t.exports=s},{\"../utils\":32,\"./GenericWorker\":28}],28:[function(e,t,r){\"use strict\";function n(e){this.name=e||\"default\",this.streamInfo={},this.generatedError=null,this.extraStreamInfo={},this.isPaused=!0,this.isFinished=!1,this.isLocked=!1,this._listeners={data:[],end:[],error:[]},this.previous=null}n.prototype={push:function(e){this.emit(\"data\",e)},end:function(){if(this.isFinished)return!1;this.flush();try{this.emit(\"end\"),this.cleanUp(),this.isFinished=!0}catch(e){this.emit(\"error\",e)}return!0},error:function(e){return!this.isFinished&&(this.isPaused?this.generatedError=e:(this.isFinished=!0,this.emit(\"error\",e),this.previous&&this.previous.error(e),this.cleanUp()),!0)},on:function(e,t){return this._listeners[e].push(t),this},cleanUp:function(){this.streamInfo=this.generatedError=this.extraStreamInfo=null,this._listeners=[]},emit:function(e,t){if(this._listeners[e])for(var r=0;r<this._listeners[e].length;r++)this._listeners[e][r].call(this,t)},pipe:function(e){return e.registerPrevious(this)},registerPrevious:function(e){if(this.isLocked)throw new Error(\"The stream '\"+this+\"' has already been used.\");this.streamInfo=e.streamInfo,this.mergeStreamInfo(),this.previous=e;var t=this;return e.on(\"data\",function(e){t.processChunk(e)}),e.on(\"end\",function(){t.end()}),e.on(\"error\",function(e){t.error(e)}),this},pause:function(){return!this.isPaused&&!this.isFinished&&(this.isPaused=!0,this.previous&&this.previous.pause(),!0)},resume:function(){if(!this.isPaused||this.isFinished)return!1;var e=this.isPaused=!1;return this.generatedError&&(this.error(this.generatedError),e=!0),this.previous&&this.previous.resume(),!e},flush:function(){},processChunk:function(e){this.push(e)},withStreamInfo:function(e,t){return this.extraStreamInfo[e]=t,this.mergeStreamInfo(),this},mergeStreamInfo:function(){for(var e in this.extraStreamInfo)Object.prototype.hasOwnProperty.call(this.extraStreamInfo,e)&&(this.streamInfo[e]=this.extraStreamInfo[e])},lock:function(){if(this.isLocked)throw new Error(\"The stream '\"+this+\"' has already been used.\");this.isLocked=!0,this.previous&&this.previous.lock()},toString:function(){var e=\"Worker \"+this.name;return this.previous?this.previous+\" -> \"+e:e}},t.exports=n},{}],29:[function(e,t,r){\"use strict\";var h=e(\"../utils\"),i=e(\"./ConvertWorker\"),s=e(\"./GenericWorker\"),u=e(\"../base64\"),n=e(\"../support\"),a=e(\"../external\"),o=null;if(n.nodestream)try{o=e(\"../nodejs/NodejsStreamOutputAdapter\")}catch(e){}function l(e,o){return new a.Promise(function(t,r){var n=[],i=e._internalType,s=e._outputType,a=e._mimeType;e.on(\"data\",function(e,t){n.push(e),o&&o(t)}).on(\"error\",function(e){n=[],r(e)}).on(\"end\",function(){try{var e=function(e,t,r){switch(e){case\"blob\":return h.newBlob(h.transformTo(\"arraybuffer\",t),r);case\"base64\":return u.encode(t);default:return h.transformTo(e,t)}}(s,function(e,t){var r,n=0,i=null,s=0;for(r=0;r<t.length;r++)s+=t[r].length;switch(e){case\"string\":return t.join(\"\");case\"array\":return Array.prototype.concat.apply([],t);case\"uint8array\":for(i=new Uint8Array(s),r=0;r<t.length;r++)i.set(t[r],n),n+=t[r].length;return i;case\"nodebuffer\":return Buffer.concat(t);default:throw new Error(\"concat : unsupported type '\"+e+\"'\")}}(i,n),a);t(e)}catch(e){r(e)}n=[]}).resume()})}function f(e,t,r){var n=t;switch(t){case\"blob\":case\"arraybuffer\":n=\"uint8array\";break;case\"base64\":n=\"string\"}try{this._internalType=n,this._outputType=t,this._mimeType=r,h.checkSupport(n),this._worker=e.pipe(new i(n)),e.lock()}catch(e){this._worker=new s(\"error\"),this._worker.error(e)}}f.prototype={accumulate:function(e){return l(this,e)},on:function(e,t){var r=this;return\"data\"===e?this._worker.on(e,function(e){t.call(r,e.data,e.meta)}):this._worker.on(e,function(){h.delay(t,arguments,r)}),this},resume:function(){return h.delay(this._worker.resume,[],this._worker),this},pause:function(){return this._worker.pause(),this},toNodejsStream:function(e){if(h.checkSupport(\"nodestream\"),\"nodebuffer\"!==this._outputType)throw new Error(this._outputType+\" is not supported by this method\");return new o(this,{objectMode:\"nodebuffer\"!==this._outputType},e)}},t.exports=f},{\"../base64\":1,\"../external\":6,\"../nodejs/NodejsStreamOutputAdapter\":13,\"../support\":30,\"../utils\":32,\"./ConvertWorker\":24,\"./GenericWorker\":28}],30:[function(e,t,r){\"use strict\";if(r.base64=!0,r.array=!0,r.string=!0,r.arraybuffer=\"undefined\"!=typeof ArrayBuffer&&\"undefined\"!=typeof Uint8Array,r.nodebuffer=\"undefined\"!=typeof Buffer,r.uint8array=\"undefined\"!=typeof Uint8Array,\"undefined\"==typeof ArrayBuffer)r.blob=!1;else{var n=new ArrayBuffer(0);try{r.blob=0===new Blob([n],{type:\"application/zip\"}).size}catch(e){try{var i=new(self.BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||self.MSBlobBuilder);i.append(n),r.blob=0===i.getBlob(\"application/zip\").size}catch(e){r.blob=!1}}}try{r.nodestream=!!e(\"readable-stream\").Readable}catch(e){r.nodestream=!1}},{\"readable-stream\":16}],31:[function(e,t,s){\"use strict\";for(var o=e(\"./utils\"),h=e(\"./support\"),r=e(\"./nodejsUtils\"),n=e(\"./stream/GenericWorker\"),u=new Array(256),i=0;i<256;i++)u[i]=252<=i?6:248<=i?5:240<=i?4:224<=i?3:192<=i?2:1;u[254]=u[254]=1;function a(){n.call(this,\"utf-8 decode\"),this.leftOver=null}function l(){n.call(this,\"utf-8 encode\")}s.utf8encode=function(e){return h.nodebuffer?r.newBufferFrom(e,\"utf-8\"):function(e){var t,r,n,i,s,a=e.length,o=0;for(i=0;i<a;i++)55296==(64512&(r=e.charCodeAt(i)))&&i+1<a&&56320==(64512&(n=e.charCodeAt(i+1)))&&(r=65536+(r-55296<<10)+(n-56320),i++),o+=r<128?1:r<2048?2:r<65536?3:4;for(t=h.uint8array?new Uint8Array(o):new Array(o),i=s=0;s<o;i++)55296==(64512&(r=e.charCodeAt(i)))&&i+1<a&&56320==(64512&(n=e.charCodeAt(i+1)))&&(r=65536+(r-55296<<10)+(n-56320),i++),r<128?t[s++]=r:(r<2048?t[s++]=192|r>>>6:(r<65536?t[s++]=224|r>>>12:(t[s++]=240|r>>>18,t[s++]=128|r>>>12&63),t[s++]=128|r>>>6&63),t[s++]=128|63&r);return t}(e)},s.utf8decode=function(e){return h.nodebuffer?o.transformTo(\"nodebuffer\",e).toString(\"utf-8\"):function(e){var t,r,n,i,s=e.length,a=new Array(2*s);for(t=r=0;t<s;)if((n=e[t++])<128)a[r++]=n;else if(4<(i=u[n]))a[r++]=65533,t+=i-1;else{for(n&=2===i?31:3===i?15:7;1<i&&t<s;)n=n<<6|63&e[t++],i--;1<i?a[r++]=65533:n<65536?a[r++]=n:(n-=65536,a[r++]=55296|n>>10&1023,a[r++]=56320|1023&n)}return a.length!==r&&(a.subarray?a=a.subarray(0,r):a.length=r),o.applyFromCharCode(a)}(e=o.transformTo(h.uint8array?\"uint8array\":\"array\",e))},o.inherits(a,n),a.prototype.processChunk=function(e){var t=o.transformTo(h.uint8array?\"uint8array\":\"array\",e.data);if(this.leftOver&&this.leftOver.length){if(h.uint8array){var r=t;(t=new Uint8Array(r.length+this.leftOver.length)).set(this.leftOver,0),t.set(r,this.leftOver.length)}else t=this.leftOver.concat(t);this.leftOver=null}var n=function(e,t){var r;for((t=t||e.length)>e.length&&(t=e.length),r=t-1;0<=r&&128==(192&e[r]);)r--;return r<0?t:0===r?t:r+u[e[r]]>t?r:t}(t),i=t;n!==t.length&&(h.uint8array?(i=t.subarray(0,n),this.leftOver=t.subarray(n,t.length)):(i=t.slice(0,n),this.leftOver=t.slice(n,t.length))),this.push({data:s.utf8decode(i),meta:e.meta})},a.prototype.flush=function(){this.leftOver&&this.leftOver.length&&(this.push({data:s.utf8decode(this.leftOver),meta:{}}),this.leftOver=null)},s.Utf8DecodeWorker=a,o.inherits(l,n),l.prototype.processChunk=function(e){this.push({data:s.utf8encode(e.data),meta:e.meta})},s.Utf8EncodeWorker=l},{\"./nodejsUtils\":14,\"./stream/GenericWorker\":28,\"./support\":30,\"./utils\":32}],32:[function(e,t,a){\"use strict\";var o=e(\"./support\"),h=e(\"./base64\"),r=e(\"./nodejsUtils\"),u=e(\"./external\");function n(e){return e}function l(e,t){for(var r=0;r<e.length;++r)t[r]=255&e.charCodeAt(r);return t}e(\"setimmediate\"),a.newBlob=function(t,r){a.checkSupport(\"blob\");try{return new Blob([t],{type:r})}catch(e){try{var n=new(self.BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||self.MSBlobBuilder);return n.append(t),n.getBlob(r)}catch(e){throw new Error(\"Bug : can't construct the Blob.\")}}};var i={stringifyByChunk:function(e,t,r){var n=[],i=0,s=e.length;if(s<=r)return String.fromCharCode.apply(null,e);for(;i<s;)\"array\"===t||\"nodebuffer\"===t?n.push(String.fromCharCode.apply(null,e.slice(i,Math.min(i+r,s)))):n.push(String.fromCharCode.apply(null,e.subarray(i,Math.min(i+r,s)))),i+=r;return n.join(\"\")},stringifyByChar:function(e){for(var t=\"\",r=0;r<e.length;r++)t+=String.fromCharCode(e[r]);return t},applyCanBeUsed:{uint8array:function(){try{return o.uint8array&&1===String.fromCharCode.apply(null,new Uint8Array(1)).length}catch(e){return!1}}(),nodebuffer:function(){try{return o.nodebuffer&&1===String.fromCharCode.apply(null,r.allocBuffer(1)).length}catch(e){return!1}}()}};function s(e){var t=65536,r=a.getTypeOf(e),n=!0;if(\"uint8array\"===r?n=i.applyCanBeUsed.uint8array:\"nodebuffer\"===r&&(n=i.applyCanBeUsed.nodebuffer),n)for(;1<t;)try{return i.stringifyByChunk(e,r,t)}catch(e){t=Math.floor(t/2)}return i.stringifyByChar(e)}function f(e,t){for(var r=0;r<e.length;r++)t[r]=e[r];return t}a.applyFromCharCode=s;var c={};c.string={string:n,array:function(e){return l(e,new Array(e.length))},arraybuffer:function(e){return c.string.uint8array(e).buffer},uint8array:function(e){return l(e,new Uint8Array(e.length))},nodebuffer:function(e){return l(e,r.allocBuffer(e.length))}},c.array={string:s,array:n,arraybuffer:function(e){return new Uint8Array(e).buffer},uint8array:function(e){return new Uint8Array(e)},nodebuffer:function(e){return r.newBufferFrom(e)}},c.arraybuffer={string:function(e){return s(new Uint8Array(e))},array:function(e){return f(new Uint8Array(e),new Array(e.byteLength))},arraybuffer:n,uint8array:function(e){return new Uint8Array(e)},nodebuffer:function(e){return r.newBufferFrom(new Uint8Array(e))}},c.uint8array={string:s,array:function(e){return f(e,new Array(e.length))},arraybuffer:function(e){return e.buffer},uint8array:n,nodebuffer:function(e){return r.newBufferFrom(e)}},c.nodebuffer={string:s,array:function(e){return f(e,new Array(e.length))},arraybuffer:function(e){return c.nodebuffer.uint8array(e).buffer},uint8array:function(e){return f(e,new Uint8Array(e.length))},nodebuffer:n},a.transformTo=function(e,t){if(t=t||\"\",!e)return t;a.checkSupport(e);var r=a.getTypeOf(t);return c[r][e](t)},a.resolve=function(e){for(var t=e.split(\"/\"),r=[],n=0;n<t.length;n++){var i=t[n];\".\"===i||\"\"===i&&0!==n&&n!==t.length-1||(\"..\"===i?r.pop():r.push(i))}return r.join(\"/\")},a.getTypeOf=function(e){return\"string\"==typeof e?\"string\":\"[object Array]\"===Object.prototype.toString.call(e)?\"array\":o.nodebuffer&&r.isBuffer(e)?\"nodebuffer\":o.uint8array&&e instanceof Uint8Array?\"uint8array\":o.arraybuffer&&e instanceof ArrayBuffer?\"arraybuffer\":void 0},a.checkSupport=function(e){if(!o[e.toLowerCase()])throw new Error(e+\" is not supported by this platform\")},a.MAX_VALUE_16BITS=65535,a.MAX_VALUE_32BITS=-1,a.pretty=function(e){var t,r,n=\"\";for(r=0;r<(e||\"\").length;r++)n+=\"\\\\x\"+((t=e.charCodeAt(r))<16?\"0\":\"\")+t.toString(16).toUpperCase();return n},a.delay=function(e,t,r){setImmediate(function(){e.apply(r||null,t||[])})},a.inherits=function(e,t){function r(){}r.prototype=t.prototype,e.prototype=new r},a.extend=function(){var e,t,r={};for(e=0;e<arguments.length;e++)for(t in arguments[e])Object.prototype.hasOwnProperty.call(arguments[e],t)&&void 0===r[t]&&(r[t]=arguments[e][t]);return r},a.prepareContent=function(r,e,n,i,s){return u.Promise.resolve(e).then(function(n){return o.blob&&(n instanceof Blob||-1!==[\"[object File]\",\"[object Blob]\"].indexOf(Object.prototype.toString.call(n)))&&\"undefined\"!=typeof FileReader?new u.Promise(function(t,r){var e=new FileReader;e.onload=function(e){t(e.target.result)},e.onerror=function(e){r(e.target.error)},e.readAsArrayBuffer(n)}):n}).then(function(e){var t=a.getTypeOf(e);return t?(\"arraybuffer\"===t?e=a.transformTo(\"uint8array\",e):\"string\"===t&&(s?e=h.decode(e):n&&!0!==i&&(e=function(e){return l(e,o.uint8array?new Uint8Array(e.length):new Array(e.length))}(e))),e):u.Promise.reject(new Error(\"Can't read the data of '\"+r+\"'. Is it in a supported JavaScript type (String, Blob, ArrayBuffer, etc) ?\"))})}},{\"./base64\":1,\"./external\":6,\"./nodejsUtils\":14,\"./support\":30,setimmediate:54}],33:[function(e,t,r){\"use strict\";var n=e(\"./reader/readerFor\"),i=e(\"./utils\"),s=e(\"./signature\"),a=e(\"./zipEntry\"),o=e(\"./support\");function h(e){this.files=[],this.loadOptions=e}h.prototype={checkSignature:function(e){if(!this.reader.readAndCheckSignature(e)){this.reader.index-=4;var t=this.reader.readString(4);throw new Error(\"Corrupted zip or bug: unexpected signature (\"+i.pretty(t)+\", expected \"+i.pretty(e)+\")\")}},isSignature:function(e,t){var r=this.reader.index;this.reader.setIndex(e);var n=this.reader.readString(4)===t;return this.reader.setIndex(r),n},readBlockEndOfCentral:function(){this.diskNumber=this.reader.readInt(2),this.diskWithCentralDirStart=this.reader.readInt(2),this.centralDirRecordsOnThisDisk=this.reader.readInt(2),this.centralDirRecords=this.reader.readInt(2),this.centralDirSize=this.reader.readInt(4),this.centralDirOffset=this.reader.readInt(4),this.zipCommentLength=this.reader.readInt(2);var e=this.reader.readData(this.zipCommentLength),t=o.uint8array?\"uint8array\":\"array\",r=i.transformTo(t,e);this.zipComment=this.loadOptions.decodeFileName(r)},readBlockZip64EndOfCentral:function(){this.zip64EndOfCentralSize=this.reader.readInt(8),this.reader.skip(4),this.diskNumber=this.reader.readInt(4),this.diskWithCentralDirStart=this.reader.readInt(4),this.centralDirRecordsOnThisDisk=this.reader.readInt(8),this.centralDirRecords=this.reader.readInt(8),this.centralDirSize=this.reader.readInt(8),this.centralDirOffset=this.reader.readInt(8),this.zip64ExtensibleData={};for(var e,t,r,n=this.zip64EndOfCentralSize-44;0<n;)e=this.reader.readInt(2),t=this.reader.readInt(4),r=this.reader.readData(t),this.zip64ExtensibleData[e]={id:e,length:t,value:r}},readBlockZip64EndOfCentralLocator:function(){if(this.diskWithZip64CentralDirStart=this.reader.readInt(4),this.relativeOffsetEndOfZip64CentralDir=this.reader.readInt(8),this.disksCount=this.reader.readInt(4),1<this.disksCount)throw new Error(\"Multi-volumes zip are not supported\")},readLocalFiles:function(){var e,t;for(e=0;e<this.files.length;e++)t=this.files[e],this.reader.setIndex(t.localHeaderOffset),this.checkSignature(s.LOCAL_FILE_HEADER),t.readLocalPart(this.reader),t.handleUTF8(),t.processAttributes()},readCentralDir:function(){var e;for(this.reader.setIndex(this.centralDirOffset);this.reader.readAndCheckSignature(s.CENTRAL_FILE_HEADER);)(e=new a({zip64:this.zip64},this.loadOptions)).readCentralPart(this.reader),this.files.push(e);if(this.centralDirRecords!==this.files.length&&0!==this.centralDirRecords&&0===this.files.length)throw new Error(\"Corrupted zip or bug: expected \"+this.centralDirRecords+\" records in central dir, got \"+this.files.length)},readEndOfCentral:function(){var e=this.reader.lastIndexOfSignature(s.CENTRAL_DIRECTORY_END);if(e<0)throw!this.isSignature(0,s.LOCAL_FILE_HEADER)?new Error(\"Can't find end of central directory : is this a zip file ? If it is, see https://stuk.github.io/jszip/documentation/howto/read_zip.html\"):new Error(\"Corrupted zip: can't find end of central directory\");this.reader.setIndex(e);var t=e;if(this.checkSignature(s.CENTRAL_DIRECTORY_END),this.readBlockEndOfCentral(),this.diskNumber===i.MAX_VALUE_16BITS||this.diskWithCentralDirStart===i.MAX_VALUE_16BITS||this.centralDirRecordsOnThisDisk===i.MAX_VALUE_16BITS||this.centralDirRecords===i.MAX_VALUE_16BITS||this.centralDirSize===i.MAX_VALUE_32BITS||this.centralDirOffset===i.MAX_VALUE_32BITS){if(this.zip64=!0,(e=this.reader.lastIndexOfSignature(s.ZIP64_CENTRAL_DIRECTORY_LOCATOR))<0)throw new Error(\"Corrupted zip: can't find the ZIP64 end of central directory locator\");if(this.reader.setIndex(e),this.checkSignature(s.ZIP64_CENTRAL_DIRECTORY_LOCATOR),this.readBlockZip64EndOfCentralLocator(),!this.isSignature(this.relativeOffsetEndOfZip64CentralDir,s.ZIP64_CENTRAL_DIRECTORY_END)&&(this.relativeOffsetEndOfZip64CentralDir=this.reader.lastIndexOfSignature(s.ZIP64_CENTRAL_DIRECTORY_END),this.relativeOffsetEndOfZip64CentralDir<0))throw new Error(\"Corrupted zip: can't find the ZIP64 end of central directory\");this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),this.checkSignature(s.ZIP64_CENTRAL_DIRECTORY_END),this.readBlockZip64EndOfCentral()}var r=this.centralDirOffset+this.centralDirSize;this.zip64&&(r+=20,r+=12+this.zip64EndOfCentralSize);var n=t-r;if(0<n)this.isSignature(t,s.CENTRAL_FILE_HEADER)||(this.reader.zero=n);else if(n<0)throw new Error(\"Corrupted zip: missing \"+Math.abs(n)+\" bytes.\")},prepareReader:function(e){this.reader=n(e)},load:function(e){this.prepareReader(e),this.readEndOfCentral(),this.readCentralDir(),this.readLocalFiles()}},t.exports=h},{\"./reader/readerFor\":22,\"./signature\":23,\"./support\":30,\"./utils\":32,\"./zipEntry\":34}],34:[function(e,t,r){\"use strict\";var n=e(\"./reader/readerFor\"),s=e(\"./utils\"),i=e(\"./compressedObject\"),a=e(\"./crc32\"),o=e(\"./utf8\"),h=e(\"./compressions\"),u=e(\"./support\");function l(e,t){this.options=e,this.loadOptions=t}l.prototype={isEncrypted:function(){return 1==(1&this.bitFlag)},useUTF8:function(){return 2048==(2048&this.bitFlag)},readLocalPart:function(e){var t,r;if(e.skip(22),this.fileNameLength=e.readInt(2),r=e.readInt(2),this.fileName=e.readData(this.fileNameLength),e.skip(r),-1===this.compressedSize||-1===this.uncompressedSize)throw new Error(\"Bug or corrupted zip : didn't get enough information from the central directory (compressedSize === -1 || uncompressedSize === -1)\");if(null===(t=function(e){for(var t in h)if(Object.prototype.hasOwnProperty.call(h,t)&&h[t].magic===e)return h[t];return null}(this.compressionMethod)))throw new Error(\"Corrupted zip : compression \"+s.pretty(this.compressionMethod)+\" unknown (inner file : \"+s.transformTo(\"string\",this.fileName)+\")\");this.decompressed=new i(this.compressedSize,this.uncompressedSize,this.crc32,t,e.readData(this.compressedSize))},readCentralPart:function(e){this.versionMadeBy=e.readInt(2),e.skip(2),this.bitFlag=e.readInt(2),this.compressionMethod=e.readString(2),this.date=e.readDate(),this.crc32=e.readInt(4),this.compressedSize=e.readInt(4),this.uncompressedSize=e.readInt(4);var t=e.readInt(2);if(this.extraFieldsLength=e.readInt(2),this.fileCommentLength=e.readInt(2),this.diskNumberStart=e.readInt(2),this.internalFileAttributes=e.readInt(2),this.externalFileAttributes=e.readInt(4),this.localHeaderOffset=e.readInt(4),this.isEncrypted())throw new Error(\"Encrypted zip are not supported\");e.skip(t),this.readExtraFields(e),this.parseZIP64ExtraField(e),this.fileComment=e.readData(this.fileCommentLength)},processAttributes:function(){this.unixPermissions=null,this.dosPermissions=null;var e=this.versionMadeBy>>8;this.dir=!!(16&this.externalFileAttributes),0==e&&(this.dosPermissions=63&this.externalFileAttributes),3==e&&(this.unixPermissions=this.externalFileAttributes>>16&65535),this.dir||\"/\"!==this.fileNameStr.slice(-1)||(this.dir=!0)},parseZIP64ExtraField:function(){if(this.extraFields[1]){var e=n(this.extraFields[1].value);this.uncompressedSize===s.MAX_VALUE_32BITS&&(this.uncompressedSize=e.readInt(8)),this.compressedSize===s.MAX_VALUE_32BITS&&(this.compressedSize=e.readInt(8)),this.localHeaderOffset===s.MAX_VALUE_32BITS&&(this.localHeaderOffset=e.readInt(8)),this.diskNumberStart===s.MAX_VALUE_32BITS&&(this.diskNumberStart=e.readInt(4))}},readExtraFields:function(e){var t,r,n,i=e.index+this.extraFieldsLength;for(this.extraFields||(this.extraFields={});e.index+4<i;)t=e.readInt(2),r=e.readInt(2),n=e.readData(r),this.extraFields[t]={id:t,length:r,value:n};e.setIndex(i)},handleUTF8:function(){var e=u.uint8array?\"uint8array\":\"array\";if(this.useUTF8())this.fileNameStr=o.utf8decode(this.fileName),this.fileCommentStr=o.utf8decode(this.fileComment);else{var t=this.findExtraFieldUnicodePath();if(null!==t)this.fileNameStr=t;else{var r=s.transformTo(e,this.fileName);this.fileNameStr=this.loadOptions.decodeFileName(r)}var n=this.findExtraFieldUnicodeComment();if(null!==n)this.fileCommentStr=n;else{var i=s.transformTo(e,this.fileComment);this.fileCommentStr=this.loadOptions.decodeFileName(i)}}},findExtraFieldUnicodePath:function(){var e=this.extraFields[28789];if(e){var t=n(e.value);return 1!==t.readInt(1)?null:a(this.fileName)!==t.readInt(4)?null:o.utf8decode(t.readData(e.length-5))}return null},findExtraFieldUnicodeComment:function(){var e=this.extraFields[25461];if(e){var t=n(e.value);return 1!==t.readInt(1)?null:a(this.fileComment)!==t.readInt(4)?null:o.utf8decode(t.readData(e.length-5))}return null}},t.exports=l},{\"./compressedObject\":2,\"./compressions\":3,\"./crc32\":4,\"./reader/readerFor\":22,\"./support\":30,\"./utf8\":31,\"./utils\":32}],35:[function(e,t,r){\"use strict\";function n(e,t,r){this.name=e,this.dir=r.dir,this.date=r.date,this.comment=r.comment,this.unixPermissions=r.unixPermissions,this.dosPermissions=r.dosPermissions,this._data=t,this._dataBinary=r.binary,this.options={compression:r.compression,compressionOptions:r.compressionOptions}}var s=e(\"./stream/StreamHelper\"),i=e(\"./stream/DataWorker\"),a=e(\"./utf8\"),o=e(\"./compressedObject\"),h=e(\"./stream/GenericWorker\");n.prototype={internalStream:function(e){var t=null,r=\"string\";try{if(!e)throw new Error(\"No output type specified.\");var n=\"string\"===(r=e.toLowerCase())||\"text\"===r;\"binarystring\"!==r&&\"text\"!==r||(r=\"string\"),t=this._decompressWorker();var i=!this._dataBinary;i&&!n&&(t=t.pipe(new a.Utf8EncodeWorker)),!i&&n&&(t=t.pipe(new a.Utf8DecodeWorker))}catch(e){(t=new h(\"error\")).error(e)}return new s(t,r,\"\")},async:function(e,t){return this.internalStream(e).accumulate(t)},nodeStream:function(e,t){return this.internalStream(e||\"nodebuffer\").toNodejsStream(t)},_compressWorker:function(e,t){if(this._data instanceof o&&this._data.compression.magic===e.magic)return this._data.getCompressedWorker();var r=this._decompressWorker();return this._dataBinary||(r=r.pipe(new a.Utf8EncodeWorker)),o.createWorkerFrom(r,e,t)},_decompressWorker:function(){return this._data instanceof o?this._data.getContentWorker():this._data instanceof h?this._data:new i(this._data)}};for(var u=[\"asText\",\"asBinary\",\"asNodeBuffer\",\"asUint8Array\",\"asArrayBuffer\"],l=function(){throw new Error(\"This method has been removed in JSZip 3.0, please check the upgrade guide.\")},f=0;f<u.length;f++)n.prototype[u[f]]=l;t.exports=n},{\"./compressedObject\":2,\"./stream/DataWorker\":27,\"./stream/GenericWorker\":28,\"./stream/StreamHelper\":29,\"./utf8\":31}],36:[function(e,l,t){(function(t){\"use strict\";var r,n,e=t.MutationObserver||t.WebKitMutationObserver;if(e){var i=0,s=new e(u),a=t.document.createTextNode(\"\");s.observe(a,{characterData:!0}),r=function(){a.data=i=++i%2}}else if(t.setImmediate||void 0===t.MessageChannel)r=\"document\"in t&&\"onreadystatechange\"in t.document.createElement(\"script\")?function(){var e=t.document.createElement(\"script\");e.onreadystatechange=function(){u(),e.onreadystatechange=null,e.parentNode.removeChild(e),e=null},t.document.documentElement.appendChild(e)}:function(){setTimeout(u,0)};else{var o=new t.MessageChannel;o.port1.onmessage=u,r=function(){o.port2.postMessage(0)}}var h=[];function u(){var e,t;n=!0;for(var r=h.length;r;){for(t=h,h=[],e=-1;++e<r;)t[e]();r=h.length}n=!1}l.exports=function(e){1!==h.push(e)||n||r()}}).call(this,\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{})},{}],37:[function(e,t,r){\"use strict\";var i=e(\"immediate\");function u(){}var l={},s=[\"REJECTED\"],a=[\"FULFILLED\"],n=[\"PENDING\"];function o(e){if(\"function\"!=typeof e)throw new TypeError(\"resolver must be a function\");this.state=n,this.queue=[],this.outcome=void 0,e!==u&&d(this,e)}function h(e,t,r){this.promise=e,\"function\"==typeof t&&(this.onFulfilled=t,this.callFulfilled=this.otherCallFulfilled),\"function\"==typeof r&&(this.onRejected=r,this.callRejected=this.otherCallRejected)}function f(t,r,n){i(function(){var e;try{e=r(n)}catch(e){return l.reject(t,e)}e===t?l.reject(t,new TypeError(\"Cannot resolve promise with itself\")):l.resolve(t,e)})}function c(e){var t=e&&e.then;if(e&&(\"object\"==typeof e||\"function\"==typeof e)&&\"function\"==typeof t)return function(){t.apply(e,arguments)}}function d(t,e){var r=!1;function n(e){r||(r=!0,l.reject(t,e))}function i(e){r||(r=!0,l.resolve(t,e))}var s=p(function(){e(i,n)});\"error\"===s.status&&n(s.value)}function p(e,t){var r={};try{r.value=e(t),r.status=\"success\"}catch(e){r.status=\"error\",r.value=e}return r}(t.exports=o).prototype.finally=function(t){if(\"function\"!=typeof t)return this;var r=this.constructor;return this.then(function(e){return r.resolve(t()).then(function(){return e})},function(e){return r.resolve(t()).then(function(){throw e})})},o.prototype.catch=function(e){return this.then(null,e)},o.prototype.then=function(e,t){if(\"function\"!=typeof e&&this.state===a||\"function\"!=typeof t&&this.state===s)return this;var r=new this.constructor(u);this.state!==n?f(r,this.state===a?e:t,this.outcome):this.queue.push(new h(r,e,t));return r},h.prototype.callFulfilled=function(e){l.resolve(this.promise,e)},h.prototype.otherCallFulfilled=function(e){f(this.promise,this.onFulfilled,e)},h.prototype.callRejected=function(e){l.reject(this.promise,e)},h.prototype.otherCallRejected=function(e){f(this.promise,this.onRejected,e)},l.resolve=function(e,t){var r=p(c,t);if(\"error\"===r.status)return l.reject(e,r.value);var n=r.value;if(n)d(e,n);else{e.state=a,e.outcome=t;for(var i=-1,s=e.queue.length;++i<s;)e.queue[i].callFulfilled(t)}return e},l.reject=function(e,t){e.state=s,e.outcome=t;for(var r=-1,n=e.queue.length;++r<n;)e.queue[r].callRejected(t);return e},o.resolve=function(e){if(e instanceof this)return e;return l.resolve(new this(u),e)},o.reject=function(e){var t=new this(u);return l.reject(t,e)},o.all=function(e){var r=this;if(\"[object Array]\"!==Object.prototype.toString.call(e))return this.reject(new TypeError(\"must be an array\"));var n=e.length,i=!1;if(!n)return this.resolve([]);var s=new Array(n),a=0,t=-1,o=new this(u);for(;++t<n;)h(e[t],t);return o;function h(e,t){r.resolve(e).then(function(e){s[t]=e,++a!==n||i||(i=!0,l.resolve(o,s))},function(e){i||(i=!0,l.reject(o,e))})}},o.race=function(e){var t=this;if(\"[object Array]\"!==Object.prototype.toString.call(e))return this.reject(new TypeError(\"must be an array\"));var r=e.length,n=!1;if(!r)return this.resolve([]);var i=-1,s=new this(u);for(;++i<r;)a=e[i],t.resolve(a).then(function(e){n||(n=!0,l.resolve(s,e))},function(e){n||(n=!0,l.reject(s,e))});var a;return s}},{immediate:36}],38:[function(e,t,r){\"use strict\";var n={};(0,e(\"./lib/utils/common\").assign)(n,e(\"./lib/deflate\"),e(\"./lib/inflate\"),e(\"./lib/zlib/constants\")),t.exports=n},{\"./lib/deflate\":39,\"./lib/inflate\":40,\"./lib/utils/common\":41,\"./lib/zlib/constants\":44}],39:[function(e,t,r){\"use strict\";var a=e(\"./zlib/deflate\"),o=e(\"./utils/common\"),h=e(\"./utils/strings\"),i=e(\"./zlib/messages\"),s=e(\"./zlib/zstream\"),u=Object.prototype.toString,l=0,f=-1,c=0,d=8;function p(e){if(!(this instanceof p))return new p(e);this.options=o.assign({level:f,method:d,chunkSize:16384,windowBits:15,memLevel:8,strategy:c,to:\"\"},e||{});var t=this.options;t.raw&&0<t.windowBits?t.windowBits=-t.windowBits:t.gzip&&0<t.windowBits&&t.windowBits<16&&(t.windowBits+=16),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new s,this.strm.avail_out=0;var r=a.deflateInit2(this.strm,t.level,t.method,t.windowBits,t.memLevel,t.strategy);if(r!==l)throw new Error(i[r]);if(t.header&&a.deflateSetHeader(this.strm,t.header),t.dictionary){var n;if(n=\"string\"==typeof t.dictionary?h.string2buf(t.dictionary):\"[object ArrayBuffer]\"===u.call(t.dictionary)?new Uint8Array(t.dictionary):t.dictionary,(r=a.deflateSetDictionary(this.strm,n))!==l)throw new Error(i[r]);this._dict_set=!0}}function n(e,t){var r=new p(t);if(r.push(e,!0),r.err)throw r.msg||i[r.err];return r.result}p.prototype.push=function(e,t){var r,n,i=this.strm,s=this.options.chunkSize;if(this.ended)return!1;n=t===~~t?t:!0===t?4:0,\"string\"==typeof e?i.input=h.string2buf(e):\"[object ArrayBuffer]\"===u.call(e)?i.input=new Uint8Array(e):i.input=e,i.next_in=0,i.avail_in=i.input.length;do{if(0===i.avail_out&&(i.output=new o.Buf8(s),i.next_out=0,i.avail_out=s),1!==(r=a.deflate(i,n))&&r!==l)return this.onEnd(r),!(this.ended=!0);0!==i.avail_out&&(0!==i.avail_in||4!==n&&2!==n)||(\"string\"===this.options.to?this.onData(h.buf2binstring(o.shrinkBuf(i.output,i.next_out))):this.onData(o.shrinkBuf(i.output,i.next_out)))}while((0<i.avail_in||0===i.avail_out)&&1!==r);return 4===n?(r=a.deflateEnd(this.strm),this.onEnd(r),this.ended=!0,r===l):2!==n||(this.onEnd(l),!(i.avail_out=0))},p.prototype.onData=function(e){this.chunks.push(e)},p.prototype.onEnd=function(e){e===l&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=o.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg},r.Deflate=p,r.deflate=n,r.deflateRaw=function(e,t){return(t=t||{}).raw=!0,n(e,t)},r.gzip=function(e,t){return(t=t||{}).gzip=!0,n(e,t)}},{\"./utils/common\":41,\"./utils/strings\":42,\"./zlib/deflate\":46,\"./zlib/messages\":51,\"./zlib/zstream\":53}],40:[function(e,t,r){\"use strict\";var c=e(\"./zlib/inflate\"),d=e(\"./utils/common\"),p=e(\"./utils/strings\"),m=e(\"./zlib/constants\"),n=e(\"./zlib/messages\"),i=e(\"./zlib/zstream\"),s=e(\"./zlib/gzheader\"),_=Object.prototype.toString;function a(e){if(!(this instanceof a))return new a(e);this.options=d.assign({chunkSize:16384,windowBits:0,to:\"\"},e||{});var t=this.options;t.raw&&0<=t.windowBits&&t.windowBits<16&&(t.windowBits=-t.windowBits,0===t.windowBits&&(t.windowBits=-15)),!(0<=t.windowBits&&t.windowBits<16)||e&&e.windowBits||(t.windowBits+=32),15<t.windowBits&&t.windowBits<48&&0==(15&t.windowBits)&&(t.windowBits|=15),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new i,this.strm.avail_out=0;var r=c.inflateInit2(this.strm,t.windowBits);if(r!==m.Z_OK)throw new Error(n[r]);this.header=new s,c.inflateGetHeader(this.strm,this.header)}function o(e,t){var r=new a(t);if(r.push(e,!0),r.err)throw r.msg||n[r.err];return r.result}a.prototype.push=function(e,t){var r,n,i,s,a,o,h=this.strm,u=this.options.chunkSize,l=this.options.dictionary,f=!1;if(this.ended)return!1;n=t===~~t?t:!0===t?m.Z_FINISH:m.Z_NO_FLUSH,\"string\"==typeof e?h.input=p.binstring2buf(e):\"[object ArrayBuffer]\"===_.call(e)?h.input=new Uint8Array(e):h.input=e,h.next_in=0,h.avail_in=h.input.length;do{if(0===h.avail_out&&(h.output=new d.Buf8(u),h.next_out=0,h.avail_out=u),(r=c.inflate(h,m.Z_NO_FLUSH))===m.Z_NEED_DICT&&l&&(o=\"string\"==typeof l?p.string2buf(l):\"[object ArrayBuffer]\"===_.call(l)?new Uint8Array(l):l,r=c.inflateSetDictionary(this.strm,o)),r===m.Z_BUF_ERROR&&!0===f&&(r=m.Z_OK,f=!1),r!==m.Z_STREAM_END&&r!==m.Z_OK)return this.onEnd(r),!(this.ended=!0);h.next_out&&(0!==h.avail_out&&r!==m.Z_STREAM_END&&(0!==h.avail_in||n!==m.Z_FINISH&&n!==m.Z_SYNC_FLUSH)||(\"string\"===this.options.to?(i=p.utf8border(h.output,h.next_out),s=h.next_out-i,a=p.buf2string(h.output,i),h.next_out=s,h.avail_out=u-s,s&&d.arraySet(h.output,h.output,i,s,0),this.onData(a)):this.onData(d.shrinkBuf(h.output,h.next_out)))),0===h.avail_in&&0===h.avail_out&&(f=!0)}while((0<h.avail_in||0===h.avail_out)&&r!==m.Z_STREAM_END);return r===m.Z_STREAM_END&&(n=m.Z_FINISH),n===m.Z_FINISH?(r=c.inflateEnd(this.strm),this.onEnd(r),this.ended=!0,r===m.Z_OK):n!==m.Z_SYNC_FLUSH||(this.onEnd(m.Z_OK),!(h.avail_out=0))},a.prototype.onData=function(e){this.chunks.push(e)},a.prototype.onEnd=function(e){e===m.Z_OK&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=d.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg},r.Inflate=a,r.inflate=o,r.inflateRaw=function(e,t){return(t=t||{}).raw=!0,o(e,t)},r.ungzip=o},{\"./utils/common\":41,\"./utils/strings\":42,\"./zlib/constants\":44,\"./zlib/gzheader\":47,\"./zlib/inflate\":49,\"./zlib/messages\":51,\"./zlib/zstream\":53}],41:[function(e,t,r){\"use strict\";var n=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Int32Array;r.assign=function(e){for(var t=Array.prototype.slice.call(arguments,1);t.length;){var r=t.shift();if(r){if(\"object\"!=typeof r)throw new TypeError(r+\"must be non-object\");for(var n in r)r.hasOwnProperty(n)&&(e[n]=r[n])}}return e},r.shrinkBuf=function(e,t){return e.length===t?e:e.subarray?e.subarray(0,t):(e.length=t,e)};var i={arraySet:function(e,t,r,n,i){if(t.subarray&&e.subarray)e.set(t.subarray(r,r+n),i);else for(var s=0;s<n;s++)e[i+s]=t[r+s]},flattenChunks:function(e){var t,r,n,i,s,a;for(t=n=0,r=e.length;t<r;t++)n+=e[t].length;for(a=new Uint8Array(n),t=i=0,r=e.length;t<r;t++)s=e[t],a.set(s,i),i+=s.length;return a}},s={arraySet:function(e,t,r,n,i){for(var s=0;s<n;s++)e[i+s]=t[r+s]},flattenChunks:function(e){return[].concat.apply([],e)}};r.setTyped=function(e){e?(r.Buf8=Uint8Array,r.Buf16=Uint16Array,r.Buf32=Int32Array,r.assign(r,i)):(r.Buf8=Array,r.Buf16=Array,r.Buf32=Array,r.assign(r,s))},r.setTyped(n)},{}],42:[function(e,t,r){\"use strict\";var h=e(\"./common\"),i=!0,s=!0;try{String.fromCharCode.apply(null,[0])}catch(e){i=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(e){s=!1}for(var u=new h.Buf8(256),n=0;n<256;n++)u[n]=252<=n?6:248<=n?5:240<=n?4:224<=n?3:192<=n?2:1;function l(e,t){if(t<65537&&(e.subarray&&s||!e.subarray&&i))return String.fromCharCode.apply(null,h.shrinkBuf(e,t));for(var r=\"\",n=0;n<t;n++)r+=String.fromCharCode(e[n]);return r}u[254]=u[254]=1,r.string2buf=function(e){var t,r,n,i,s,a=e.length,o=0;for(i=0;i<a;i++)55296==(64512&(r=e.charCodeAt(i)))&&i+1<a&&56320==(64512&(n=e.charCodeAt(i+1)))&&(r=65536+(r-55296<<10)+(n-56320),i++),o+=r<128?1:r<2048?2:r<65536?3:4;for(t=new h.Buf8(o),i=s=0;s<o;i++)55296==(64512&(r=e.charCodeAt(i)))&&i+1<a&&56320==(64512&(n=e.charCodeAt(i+1)))&&(r=65536+(r-55296<<10)+(n-56320),i++),r<128?t[s++]=r:(r<2048?t[s++]=192|r>>>6:(r<65536?t[s++]=224|r>>>12:(t[s++]=240|r>>>18,t[s++]=128|r>>>12&63),t[s++]=128|r>>>6&63),t[s++]=128|63&r);return t},r.buf2binstring=function(e){return l(e,e.length)},r.binstring2buf=function(e){for(var t=new h.Buf8(e.length),r=0,n=t.length;r<n;r++)t[r]=e.charCodeAt(r);return t},r.buf2string=function(e,t){var r,n,i,s,a=t||e.length,o=new Array(2*a);for(r=n=0;r<a;)if((i=e[r++])<128)o[n++]=i;else if(4<(s=u[i]))o[n++]=65533,r+=s-1;else{for(i&=2===s?31:3===s?15:7;1<s&&r<a;)i=i<<6|63&e[r++],s--;1<s?o[n++]=65533:i<65536?o[n++]=i:(i-=65536,o[n++]=55296|i>>10&1023,o[n++]=56320|1023&i)}return l(o,n)},r.utf8border=function(e,t){var r;for((t=t||e.length)>e.length&&(t=e.length),r=t-1;0<=r&&128==(192&e[r]);)r--;return r<0?t:0===r?t:r+u[e[r]]>t?r:t}},{\"./common\":41}],43:[function(e,t,r){\"use strict\";t.exports=function(e,t,r,n){for(var i=65535&e|0,s=e>>>16&65535|0,a=0;0!==r;){for(r-=a=2e3<r?2e3:r;s=s+(i=i+t[n++]|0)|0,--a;);i%=65521,s%=65521}return i|s<<16|0}},{}],44:[function(e,t,r){\"use strict\";t.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],45:[function(e,t,r){\"use strict\";var o=function(){for(var e,t=[],r=0;r<256;r++){e=r;for(var n=0;n<8;n++)e=1&e?3988292384^e>>>1:e>>>1;t[r]=e}return t}();t.exports=function(e,t,r,n){var i=o,s=n+r;e^=-1;for(var a=n;a<s;a++)e=e>>>8^i[255&(e^t[a])];return-1^e}},{}],46:[function(e,t,r){\"use strict\";var h,c=e(\"../utils/common\"),u=e(\"./trees\"),d=e(\"./adler32\"),p=e(\"./crc32\"),n=e(\"./messages\"),l=0,f=4,m=0,_=-2,g=-1,b=4,i=2,v=8,y=9,s=286,a=30,o=19,w=2*s+1,k=15,x=3,S=258,z=S+x+1,C=42,E=113,A=1,I=2,O=3,B=4;function R(e,t){return e.msg=n[t],t}function T(e){return(e<<1)-(4<e?9:0)}function D(e){for(var t=e.length;0<=--t;)e[t]=0}function F(e){var t=e.state,r=t.pending;r>e.avail_out&&(r=e.avail_out),0!==r&&(c.arraySet(e.output,t.pending_buf,t.pending_out,r,e.next_out),e.next_out+=r,t.pending_out+=r,e.total_out+=r,e.avail_out-=r,t.pending-=r,0===t.pending&&(t.pending_out=0))}function N(e,t){u._tr_flush_block(e,0<=e.block_start?e.block_start:-1,e.strstart-e.block_start,t),e.block_start=e.strstart,F(e.strm)}function U(e,t){e.pending_buf[e.pending++]=t}function P(e,t){e.pending_buf[e.pending++]=t>>>8&255,e.pending_buf[e.pending++]=255&t}function L(e,t){var r,n,i=e.max_chain_length,s=e.strstart,a=e.prev_length,o=e.nice_match,h=e.strstart>e.w_size-z?e.strstart-(e.w_size-z):0,u=e.window,l=e.w_mask,f=e.prev,c=e.strstart+S,d=u[s+a-1],p=u[s+a];e.prev_length>=e.good_match&&(i>>=2),o>e.lookahead&&(o=e.lookahead);do{if(u[(r=t)+a]===p&&u[r+a-1]===d&&u[r]===u[s]&&u[++r]===u[s+1]){s+=2,r++;do{}while(u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&s<c);if(n=S-(c-s),s=c-S,a<n){if(e.match_start=t,o<=(a=n))break;d=u[s+a-1],p=u[s+a]}}}while((t=f[t&l])>h&&0!=--i);return a<=e.lookahead?a:e.lookahead}function j(e){var t,r,n,i,s,a,o,h,u,l,f=e.w_size;do{if(i=e.window_size-e.lookahead-e.strstart,e.strstart>=f+(f-z)){for(c.arraySet(e.window,e.window,f,f,0),e.match_start-=f,e.strstart-=f,e.block_start-=f,t=r=e.hash_size;n=e.head[--t],e.head[t]=f<=n?n-f:0,--r;);for(t=r=f;n=e.prev[--t],e.prev[t]=f<=n?n-f:0,--r;);i+=f}if(0===e.strm.avail_in)break;if(a=e.strm,o=e.window,h=e.strstart+e.lookahead,u=i,l=void 0,l=a.avail_in,u<l&&(l=u),r=0===l?0:(a.avail_in-=l,c.arraySet(o,a.input,a.next_in,l,h),1===a.state.wrap?a.adler=d(a.adler,o,l,h):2===a.state.wrap&&(a.adler=p(a.adler,o,l,h)),a.next_in+=l,a.total_in+=l,l),e.lookahead+=r,e.lookahead+e.insert>=x)for(s=e.strstart-e.insert,e.ins_h=e.window[s],e.ins_h=(e.ins_h<<e.hash_shift^e.window[s+1])&e.hash_mask;e.insert&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[s+x-1])&e.hash_mask,e.prev[s&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=s,s++,e.insert--,!(e.lookahead+e.insert<x)););}while(e.lookahead<z&&0!==e.strm.avail_in)}function Z(e,t){for(var r,n;;){if(e.lookahead<z){if(j(e),e.lookahead<z&&t===l)return A;if(0===e.lookahead)break}if(r=0,e.lookahead>=x&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+x-1])&e.hash_mask,r=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),0!==r&&e.strstart-r<=e.w_size-z&&(e.match_length=L(e,r)),e.match_length>=x)if(n=u._tr_tally(e,e.strstart-e.match_start,e.match_length-x),e.lookahead-=e.match_length,e.match_length<=e.max_lazy_match&&e.lookahead>=x){for(e.match_length--;e.strstart++,e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+x-1])&e.hash_mask,r=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart,0!=--e.match_length;);e.strstart++}else e.strstart+=e.match_length,e.match_length=0,e.ins_h=e.window[e.strstart],e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+1])&e.hash_mask;else n=u._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++;if(n&&(N(e,!1),0===e.strm.avail_out))return A}return e.insert=e.strstart<x-1?e.strstart:x-1,t===f?(N(e,!0),0===e.strm.avail_out?O:B):e.last_lit&&(N(e,!1),0===e.strm.avail_out)?A:I}function W(e,t){for(var r,n,i;;){if(e.lookahead<z){if(j(e),e.lookahead<z&&t===l)return A;if(0===e.lookahead)break}if(r=0,e.lookahead>=x&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+x-1])&e.hash_mask,r=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),e.prev_length=e.match_length,e.prev_match=e.match_start,e.match_length=x-1,0!==r&&e.prev_length<e.max_lazy_match&&e.strstart-r<=e.w_size-z&&(e.match_length=L(e,r),e.match_length<=5&&(1===e.strategy||e.match_length===x&&4096<e.strstart-e.match_start)&&(e.match_length=x-1)),e.prev_length>=x&&e.match_length<=e.prev_length){for(i=e.strstart+e.lookahead-x,n=u._tr_tally(e,e.strstart-1-e.prev_match,e.prev_length-x),e.lookahead-=e.prev_length-1,e.prev_length-=2;++e.strstart<=i&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+x-1])&e.hash_mask,r=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),0!=--e.prev_length;);if(e.match_available=0,e.match_length=x-1,e.strstart++,n&&(N(e,!1),0===e.strm.avail_out))return A}else if(e.match_available){if((n=u._tr_tally(e,0,e.window[e.strstart-1]))&&N(e,!1),e.strstart++,e.lookahead--,0===e.strm.avail_out)return A}else e.match_available=1,e.strstart++,e.lookahead--}return e.match_available&&(n=u._tr_tally(e,0,e.window[e.strstart-1]),e.match_available=0),e.insert=e.strstart<x-1?e.strstart:x-1,t===f?(N(e,!0),0===e.strm.avail_out?O:B):e.last_lit&&(N(e,!1),0===e.strm.avail_out)?A:I}function M(e,t,r,n,i){this.good_length=e,this.max_lazy=t,this.nice_length=r,this.max_chain=n,this.func=i}function H(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=v,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new c.Buf16(2*w),this.dyn_dtree=new c.Buf16(2*(2*a+1)),this.bl_tree=new c.Buf16(2*(2*o+1)),D(this.dyn_ltree),D(this.dyn_dtree),D(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new c.Buf16(k+1),this.heap=new c.Buf16(2*s+1),D(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new c.Buf16(2*s+1),D(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function G(e){var t;return e&&e.state?(e.total_in=e.total_out=0,e.data_type=i,(t=e.state).pending=0,t.pending_out=0,t.wrap<0&&(t.wrap=-t.wrap),t.status=t.wrap?C:E,e.adler=2===t.wrap?0:1,t.last_flush=l,u._tr_init(t),m):R(e,_)}function K(e){var t=G(e);return t===m&&function(e){e.window_size=2*e.w_size,D(e.head),e.max_lazy_match=h[e.level].max_lazy,e.good_match=h[e.level].good_length,e.nice_match=h[e.level].nice_length,e.max_chain_length=h[e.level].max_chain,e.strstart=0,e.block_start=0,e.lookahead=0,e.insert=0,e.match_length=e.prev_length=x-1,e.match_available=0,e.ins_h=0}(e.state),t}function Y(e,t,r,n,i,s){if(!e)return _;var a=1;if(t===g&&(t=6),n<0?(a=0,n=-n):15<n&&(a=2,n-=16),i<1||y<i||r!==v||n<8||15<n||t<0||9<t||s<0||b<s)return R(e,_);8===n&&(n=9);var o=new H;return(e.state=o).strm=e,o.wrap=a,o.gzhead=null,o.w_bits=n,o.w_size=1<<o.w_bits,o.w_mask=o.w_size-1,o.hash_bits=i+7,o.hash_size=1<<o.hash_bits,o.hash_mask=o.hash_size-1,o.hash_shift=~~((o.hash_bits+x-1)/x),o.window=new c.Buf8(2*o.w_size),o.head=new c.Buf16(o.hash_size),o.prev=new c.Buf16(o.w_size),o.lit_bufsize=1<<i+6,o.pending_buf_size=4*o.lit_bufsize,o.pending_buf=new c.Buf8(o.pending_buf_size),o.d_buf=1*o.lit_bufsize,o.l_buf=3*o.lit_bufsize,o.level=t,o.strategy=s,o.method=r,K(e)}h=[new M(0,0,0,0,function(e,t){var r=65535;for(r>e.pending_buf_size-5&&(r=e.pending_buf_size-5);;){if(e.lookahead<=1){if(j(e),0===e.lookahead&&t===l)return A;if(0===e.lookahead)break}e.strstart+=e.lookahead,e.lookahead=0;var n=e.block_start+r;if((0===e.strstart||e.strstart>=n)&&(e.lookahead=e.strstart-n,e.strstart=n,N(e,!1),0===e.strm.avail_out))return A;if(e.strstart-e.block_start>=e.w_size-z&&(N(e,!1),0===e.strm.avail_out))return A}return e.insert=0,t===f?(N(e,!0),0===e.strm.avail_out?O:B):(e.strstart>e.block_start&&(N(e,!1),e.strm.avail_out),A)}),new M(4,4,8,4,Z),new M(4,5,16,8,Z),new M(4,6,32,32,Z),new M(4,4,16,16,W),new M(8,16,32,32,W),new M(8,16,128,128,W),new M(8,32,128,256,W),new M(32,128,258,1024,W),new M(32,258,258,4096,W)],r.deflateInit=function(e,t){return Y(e,t,v,15,8,0)},r.deflateInit2=Y,r.deflateReset=K,r.deflateResetKeep=G,r.deflateSetHeader=function(e,t){return e&&e.state?2!==e.state.wrap?_:(e.state.gzhead=t,m):_},r.deflate=function(e,t){var r,n,i,s;if(!e||!e.state||5<t||t<0)return e?R(e,_):_;if(n=e.state,!e.output||!e.input&&0!==e.avail_in||666===n.status&&t!==f)return R(e,0===e.avail_out?-5:_);if(n.strm=e,r=n.last_flush,n.last_flush=t,n.status===C)if(2===n.wrap)e.adler=0,U(n,31),U(n,139),U(n,8),n.gzhead?(U(n,(n.gzhead.text?1:0)+(n.gzhead.hcrc?2:0)+(n.gzhead.extra?4:0)+(n.gzhead.name?8:0)+(n.gzhead.comment?16:0)),U(n,255&n.gzhead.time),U(n,n.gzhead.time>>8&255),U(n,n.gzhead.time>>16&255),U(n,n.gzhead.time>>24&255),U(n,9===n.level?2:2<=n.strategy||n.level<2?4:0),U(n,255&n.gzhead.os),n.gzhead.extra&&n.gzhead.extra.length&&(U(n,255&n.gzhead.extra.length),U(n,n.gzhead.extra.length>>8&255)),n.gzhead.hcrc&&(e.adler=p(e.adler,n.pending_buf,n.pending,0)),n.gzindex=0,n.status=69):(U(n,0),U(n,0),U(n,0),U(n,0),U(n,0),U(n,9===n.level?2:2<=n.strategy||n.level<2?4:0),U(n,3),n.status=E);else{var a=v+(n.w_bits-8<<4)<<8;a|=(2<=n.strategy||n.level<2?0:n.level<6?1:6===n.level?2:3)<<6,0!==n.strstart&&(a|=32),a+=31-a%31,n.status=E,P(n,a),0!==n.strstart&&(P(n,e.adler>>>16),P(n,65535&e.adler)),e.adler=1}if(69===n.status)if(n.gzhead.extra){for(i=n.pending;n.gzindex<(65535&n.gzhead.extra.length)&&(n.pending!==n.pending_buf_size||(n.gzhead.hcrc&&n.pending>i&&(e.adler=p(e.adler,n.pending_buf,n.pending-i,i)),F(e),i=n.pending,n.pending!==n.pending_buf_size));)U(n,255&n.gzhead.extra[n.gzindex]),n.gzindex++;n.gzhead.hcrc&&n.pending>i&&(e.adler=p(e.adler,n.pending_buf,n.pending-i,i)),n.gzindex===n.gzhead.extra.length&&(n.gzindex=0,n.status=73)}else n.status=73;if(73===n.status)if(n.gzhead.name){i=n.pending;do{if(n.pending===n.pending_buf_size&&(n.gzhead.hcrc&&n.pending>i&&(e.adler=p(e.adler,n.pending_buf,n.pending-i,i)),F(e),i=n.pending,n.pending===n.pending_buf_size)){s=1;break}s=n.gzindex<n.gzhead.name.length?255&n.gzhead.name.charCodeAt(n.gzindex++):0,U(n,s)}while(0!==s);n.gzhead.hcrc&&n.pending>i&&(e.adler=p(e.adler,n.pending_buf,n.pending-i,i)),0===s&&(n.gzindex=0,n.status=91)}else n.status=91;if(91===n.status)if(n.gzhead.comment){i=n.pending;do{if(n.pending===n.pending_buf_size&&(n.gzhead.hcrc&&n.pending>i&&(e.adler=p(e.adler,n.pending_buf,n.pending-i,i)),F(e),i=n.pending,n.pending===n.pending_buf_size)){s=1;break}s=n.gzindex<n.gzhead.comment.length?255&n.gzhead.comment.charCodeAt(n.gzindex++):0,U(n,s)}while(0!==s);n.gzhead.hcrc&&n.pending>i&&(e.adler=p(e.adler,n.pending_buf,n.pending-i,i)),0===s&&(n.status=103)}else n.status=103;if(103===n.status&&(n.gzhead.hcrc?(n.pending+2>n.pending_buf_size&&F(e),n.pending+2<=n.pending_buf_size&&(U(n,255&e.adler),U(n,e.adler>>8&255),e.adler=0,n.status=E)):n.status=E),0!==n.pending){if(F(e),0===e.avail_out)return n.last_flush=-1,m}else if(0===e.avail_in&&T(t)<=T(r)&&t!==f)return R(e,-5);if(666===n.status&&0!==e.avail_in)return R(e,-5);if(0!==e.avail_in||0!==n.lookahead||t!==l&&666!==n.status){var o=2===n.strategy?function(e,t){for(var r;;){if(0===e.lookahead&&(j(e),0===e.lookahead)){if(t===l)return A;break}if(e.match_length=0,r=u._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++,r&&(N(e,!1),0===e.strm.avail_out))return A}return e.insert=0,t===f?(N(e,!0),0===e.strm.avail_out?O:B):e.last_lit&&(N(e,!1),0===e.strm.avail_out)?A:I}(n,t):3===n.strategy?function(e,t){for(var r,n,i,s,a=e.window;;){if(e.lookahead<=S){if(j(e),e.lookahead<=S&&t===l)return A;if(0===e.lookahead)break}if(e.match_length=0,e.lookahead>=x&&0<e.strstart&&(n=a[i=e.strstart-1])===a[++i]&&n===a[++i]&&n===a[++i]){s=e.strstart+S;do{}while(n===a[++i]&&n===a[++i]&&n===a[++i]&&n===a[++i]&&n===a[++i]&&n===a[++i]&&n===a[++i]&&n===a[++i]&&i<s);e.match_length=S-(s-i),e.match_length>e.lookahead&&(e.match_length=e.lookahead)}if(e.match_length>=x?(r=u._tr_tally(e,1,e.match_length-x),e.lookahead-=e.match_length,e.strstart+=e.match_length,e.match_length=0):(r=u._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++),r&&(N(e,!1),0===e.strm.avail_out))return A}return e.insert=0,t===f?(N(e,!0),0===e.strm.avail_out?O:B):e.last_lit&&(N(e,!1),0===e.strm.avail_out)?A:I}(n,t):h[n.level].func(n,t);if(o!==O&&o!==B||(n.status=666),o===A||o===O)return 0===e.avail_out&&(n.last_flush=-1),m;if(o===I&&(1===t?u._tr_align(n):5!==t&&(u._tr_stored_block(n,0,0,!1),3===t&&(D(n.head),0===n.lookahead&&(n.strstart=0,n.block_start=0,n.insert=0))),F(e),0===e.avail_out))return n.last_flush=-1,m}return t!==f?m:n.wrap<=0?1:(2===n.wrap?(U(n,255&e.adler),U(n,e.adler>>8&255),U(n,e.adler>>16&255),U(n,e.adler>>24&255),U(n,255&e.total_in),U(n,e.total_in>>8&255),U(n,e.total_in>>16&255),U(n,e.total_in>>24&255)):(P(n,e.adler>>>16),P(n,65535&e.adler)),F(e),0<n.wrap&&(n.wrap=-n.wrap),0!==n.pending?m:1)},r.deflateEnd=function(e){var t;return e&&e.state?(t=e.state.status)!==C&&69!==t&&73!==t&&91!==t&&103!==t&&t!==E&&666!==t?R(e,_):(e.state=null,t===E?R(e,-3):m):_},r.deflateSetDictionary=function(e,t){var r,n,i,s,a,o,h,u,l=t.length;if(!e||!e.state)return _;if(2===(s=(r=e.state).wrap)||1===s&&r.status!==C||r.lookahead)return _;for(1===s&&(e.adler=d(e.adler,t,l,0)),r.wrap=0,l>=r.w_size&&(0===s&&(D(r.head),r.strstart=0,r.block_start=0,r.insert=0),u=new c.Buf8(r.w_size),c.arraySet(u,t,l-r.w_size,r.w_size,0),t=u,l=r.w_size),a=e.avail_in,o=e.next_in,h=e.input,e.avail_in=l,e.next_in=0,e.input=t,j(r);r.lookahead>=x;){for(n=r.strstart,i=r.lookahead-(x-1);r.ins_h=(r.ins_h<<r.hash_shift^r.window[n+x-1])&r.hash_mask,r.prev[n&r.w_mask]=r.head[r.ins_h],r.head[r.ins_h]=n,n++,--i;);r.strstart=n,r.lookahead=x-1,j(r)}return r.strstart+=r.lookahead,r.block_start=r.strstart,r.insert=r.lookahead,r.lookahead=0,r.match_length=r.prev_length=x-1,r.match_available=0,e.next_in=o,e.input=h,e.avail_in=a,r.wrap=s,m},r.deflateInfo=\"pako deflate (from Nodeca project)\"},{\"../utils/common\":41,\"./adler32\":43,\"./crc32\":45,\"./messages\":51,\"./trees\":52}],47:[function(e,t,r){\"use strict\";t.exports=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name=\"\",this.comment=\"\",this.hcrc=0,this.done=!1}},{}],48:[function(e,t,r){\"use strict\";t.exports=function(e,t){var r,n,i,s,a,o,h,u,l,f,c,d,p,m,_,g,b,v,y,w,k,x,S,z,C;r=e.state,n=e.next_in,z=e.input,i=n+(e.avail_in-5),s=e.next_out,C=e.output,a=s-(t-e.avail_out),o=s+(e.avail_out-257),h=r.dmax,u=r.wsize,l=r.whave,f=r.wnext,c=r.window,d=r.hold,p=r.bits,m=r.lencode,_=r.distcode,g=(1<<r.lenbits)-1,b=(1<<r.distbits)-1;e:do{p<15&&(d+=z[n++]<<p,p+=8,d+=z[n++]<<p,p+=8),v=m[d&g];t:for(;;){if(d>>>=y=v>>>24,p-=y,0===(y=v>>>16&255))C[s++]=65535&v;else{if(!(16&y)){if(0==(64&y)){v=m[(65535&v)+(d&(1<<y)-1)];continue t}if(32&y){r.mode=12;break e}e.msg=\"invalid literal/length code\",r.mode=30;break e}w=65535&v,(y&=15)&&(p<y&&(d+=z[n++]<<p,p+=8),w+=d&(1<<y)-1,d>>>=y,p-=y),p<15&&(d+=z[n++]<<p,p+=8,d+=z[n++]<<p,p+=8),v=_[d&b];r:for(;;){if(d>>>=y=v>>>24,p-=y,!(16&(y=v>>>16&255))){if(0==(64&y)){v=_[(65535&v)+(d&(1<<y)-1)];continue r}e.msg=\"invalid distance code\",r.mode=30;break e}if(k=65535&v,p<(y&=15)&&(d+=z[n++]<<p,(p+=8)<y&&(d+=z[n++]<<p,p+=8)),h<(k+=d&(1<<y)-1)){e.msg=\"invalid distance too far back\",r.mode=30;break e}if(d>>>=y,p-=y,(y=s-a)<k){if(l<(y=k-y)&&r.sane){e.msg=\"invalid distance too far back\",r.mode=30;break e}if(S=c,(x=0)===f){if(x+=u-y,y<w){for(w-=y;C[s++]=c[x++],--y;);x=s-k,S=C}}else if(f<y){if(x+=u+f-y,(y-=f)<w){for(w-=y;C[s++]=c[x++],--y;);if(x=0,f<w){for(w-=y=f;C[s++]=c[x++],--y;);x=s-k,S=C}}}else if(x+=f-y,y<w){for(w-=y;C[s++]=c[x++],--y;);x=s-k,S=C}for(;2<w;)C[s++]=S[x++],C[s++]=S[x++],C[s++]=S[x++],w-=3;w&&(C[s++]=S[x++],1<w&&(C[s++]=S[x++]))}else{for(x=s-k;C[s++]=C[x++],C[s++]=C[x++],C[s++]=C[x++],2<(w-=3););w&&(C[s++]=C[x++],1<w&&(C[s++]=C[x++]))}break}}break}}while(n<i&&s<o);n-=w=p>>3,d&=(1<<(p-=w<<3))-1,e.next_in=n,e.next_out=s,e.avail_in=n<i?i-n+5:5-(n-i),e.avail_out=s<o?o-s+257:257-(s-o),r.hold=d,r.bits=p}},{}],49:[function(e,t,r){\"use strict\";var I=e(\"../utils/common\"),O=e(\"./adler32\"),B=e(\"./crc32\"),R=e(\"./inffast\"),T=e(\"./inftrees\"),D=1,F=2,N=0,U=-2,P=1,n=852,i=592;function L(e){return(e>>>24&255)+(e>>>8&65280)+((65280&e)<<8)+((255&e)<<24)}function s(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new I.Buf16(320),this.work=new I.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function a(e){var t;return e&&e.state?(t=e.state,e.total_in=e.total_out=t.total=0,e.msg=\"\",t.wrap&&(e.adler=1&t.wrap),t.mode=P,t.last=0,t.havedict=0,t.dmax=32768,t.head=null,t.hold=0,t.bits=0,t.lencode=t.lendyn=new I.Buf32(n),t.distcode=t.distdyn=new I.Buf32(i),t.sane=1,t.back=-1,N):U}function o(e){var t;return e&&e.state?((t=e.state).wsize=0,t.whave=0,t.wnext=0,a(e)):U}function h(e,t){var r,n;return e&&e.state?(n=e.state,t<0?(r=0,t=-t):(r=1+(t>>4),t<48&&(t&=15)),t&&(t<8||15<t)?U:(null!==n.window&&n.wbits!==t&&(n.window=null),n.wrap=r,n.wbits=t,o(e))):U}function u(e,t){var r,n;return e?(n=new s,(e.state=n).window=null,(r=h(e,t))!==N&&(e.state=null),r):U}var l,f,c=!0;function j(e){if(c){var t;for(l=new I.Buf32(512),f=new I.Buf32(32),t=0;t<144;)e.lens[t++]=8;for(;t<256;)e.lens[t++]=9;for(;t<280;)e.lens[t++]=7;for(;t<288;)e.lens[t++]=8;for(T(D,e.lens,0,288,l,0,e.work,{bits:9}),t=0;t<32;)e.lens[t++]=5;T(F,e.lens,0,32,f,0,e.work,{bits:5}),c=!1}e.lencode=l,e.lenbits=9,e.distcode=f,e.distbits=5}function Z(e,t,r,n){var i,s=e.state;return null===s.window&&(s.wsize=1<<s.wbits,s.wnext=0,s.whave=0,s.window=new I.Buf8(s.wsize)),n>=s.wsize?(I.arraySet(s.window,t,r-s.wsize,s.wsize,0),s.wnext=0,s.whave=s.wsize):(n<(i=s.wsize-s.wnext)&&(i=n),I.arraySet(s.window,t,r-n,i,s.wnext),(n-=i)?(I.arraySet(s.window,t,r-n,n,0),s.wnext=n,s.whave=s.wsize):(s.wnext+=i,s.wnext===s.wsize&&(s.wnext=0),s.whave<s.wsize&&(s.whave+=i))),0}r.inflateReset=o,r.inflateReset2=h,r.inflateResetKeep=a,r.inflateInit=function(e){return u(e,15)},r.inflateInit2=u,r.inflate=function(e,t){var r,n,i,s,a,o,h,u,l,f,c,d,p,m,_,g,b,v,y,w,k,x,S,z,C=0,E=new I.Buf8(4),A=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!e||!e.state||!e.output||!e.input&&0!==e.avail_in)return U;12===(r=e.state).mode&&(r.mode=13),a=e.next_out,i=e.output,h=e.avail_out,s=e.next_in,n=e.input,o=e.avail_in,u=r.hold,l=r.bits,f=o,c=h,x=N;e:for(;;)switch(r.mode){case P:if(0===r.wrap){r.mode=13;break}for(;l<16;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(2&r.wrap&&35615===u){E[r.check=0]=255&u,E[1]=u>>>8&255,r.check=B(r.check,E,2,0),l=u=0,r.mode=2;break}if(r.flags=0,r.head&&(r.head.done=!1),!(1&r.wrap)||(((255&u)<<8)+(u>>8))%31){e.msg=\"incorrect header check\",r.mode=30;break}if(8!=(15&u)){e.msg=\"unknown compression method\",r.mode=30;break}if(l-=4,k=8+(15&(u>>>=4)),0===r.wbits)r.wbits=k;else if(k>r.wbits){e.msg=\"invalid window size\",r.mode=30;break}r.dmax=1<<k,e.adler=r.check=1,r.mode=512&u?10:12,l=u=0;break;case 2:for(;l<16;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(r.flags=u,8!=(255&r.flags)){e.msg=\"unknown compression method\",r.mode=30;break}if(57344&r.flags){e.msg=\"unknown header flags set\",r.mode=30;break}r.head&&(r.head.text=u>>8&1),512&r.flags&&(E[0]=255&u,E[1]=u>>>8&255,r.check=B(r.check,E,2,0)),l=u=0,r.mode=3;case 3:for(;l<32;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}r.head&&(r.head.time=u),512&r.flags&&(E[0]=255&u,E[1]=u>>>8&255,E[2]=u>>>16&255,E[3]=u>>>24&255,r.check=B(r.check,E,4,0)),l=u=0,r.mode=4;case 4:for(;l<16;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}r.head&&(r.head.xflags=255&u,r.head.os=u>>8),512&r.flags&&(E[0]=255&u,E[1]=u>>>8&255,r.check=B(r.check,E,2,0)),l=u=0,r.mode=5;case 5:if(1024&r.flags){for(;l<16;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}r.length=u,r.head&&(r.head.extra_len=u),512&r.flags&&(E[0]=255&u,E[1]=u>>>8&255,r.check=B(r.check,E,2,0)),l=u=0}else r.head&&(r.head.extra=null);r.mode=6;case 6:if(1024&r.flags&&(o<(d=r.length)&&(d=o),d&&(r.head&&(k=r.head.extra_len-r.length,r.head.extra||(r.head.extra=new Array(r.head.extra_len)),I.arraySet(r.head.extra,n,s,d,k)),512&r.flags&&(r.check=B(r.check,n,d,s)),o-=d,s+=d,r.length-=d),r.length))break e;r.length=0,r.mode=7;case 7:if(2048&r.flags){if(0===o)break e;for(d=0;k=n[s+d++],r.head&&k&&r.length<65536&&(r.head.name+=String.fromCharCode(k)),k&&d<o;);if(512&r.flags&&(r.check=B(r.check,n,d,s)),o-=d,s+=d,k)break e}else r.head&&(r.head.name=null);r.length=0,r.mode=8;case 8:if(4096&r.flags){if(0===o)break e;for(d=0;k=n[s+d++],r.head&&k&&r.length<65536&&(r.head.comment+=String.fromCharCode(k)),k&&d<o;);if(512&r.flags&&(r.check=B(r.check,n,d,s)),o-=d,s+=d,k)break e}else r.head&&(r.head.comment=null);r.mode=9;case 9:if(512&r.flags){for(;l<16;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(u!==(65535&r.check)){e.msg=\"header crc mismatch\",r.mode=30;break}l=u=0}r.head&&(r.head.hcrc=r.flags>>9&1,r.head.done=!0),e.adler=r.check=0,r.mode=12;break;case 10:for(;l<32;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}e.adler=r.check=L(u),l=u=0,r.mode=11;case 11:if(0===r.havedict)return e.next_out=a,e.avail_out=h,e.next_in=s,e.avail_in=o,r.hold=u,r.bits=l,2;e.adler=r.check=1,r.mode=12;case 12:if(5===t||6===t)break e;case 13:if(r.last){u>>>=7&l,l-=7&l,r.mode=27;break}for(;l<3;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}switch(r.last=1&u,l-=1,3&(u>>>=1)){case 0:r.mode=14;break;case 1:if(j(r),r.mode=20,6!==t)break;u>>>=2,l-=2;break e;case 2:r.mode=17;break;case 3:e.msg=\"invalid block type\",r.mode=30}u>>>=2,l-=2;break;case 14:for(u>>>=7&l,l-=7&l;l<32;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if((65535&u)!=(u>>>16^65535)){e.msg=\"invalid stored block lengths\",r.mode=30;break}if(r.length=65535&u,l=u=0,r.mode=15,6===t)break e;case 15:r.mode=16;case 16:if(d=r.length){if(o<d&&(d=o),h<d&&(d=h),0===d)break e;I.arraySet(i,n,s,d,a),o-=d,s+=d,h-=d,a+=d,r.length-=d;break}r.mode=12;break;case 17:for(;l<14;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(r.nlen=257+(31&u),u>>>=5,l-=5,r.ndist=1+(31&u),u>>>=5,l-=5,r.ncode=4+(15&u),u>>>=4,l-=4,286<r.nlen||30<r.ndist){e.msg=\"too many length or distance symbols\",r.mode=30;break}r.have=0,r.mode=18;case 18:for(;r.have<r.ncode;){for(;l<3;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}r.lens[A[r.have++]]=7&u,u>>>=3,l-=3}for(;r.have<19;)r.lens[A[r.have++]]=0;if(r.lencode=r.lendyn,r.lenbits=7,S={bits:r.lenbits},x=T(0,r.lens,0,19,r.lencode,0,r.work,S),r.lenbits=S.bits,x){e.msg=\"invalid code lengths set\",r.mode=30;break}r.have=0,r.mode=19;case 19:for(;r.have<r.nlen+r.ndist;){for(;g=(C=r.lencode[u&(1<<r.lenbits)-1])>>>16&255,b=65535&C,!((_=C>>>24)<=l);){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(b<16)u>>>=_,l-=_,r.lens[r.have++]=b;else{if(16===b){for(z=_+2;l<z;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(u>>>=_,l-=_,0===r.have){e.msg=\"invalid bit length repeat\",r.mode=30;break}k=r.lens[r.have-1],d=3+(3&u),u>>>=2,l-=2}else if(17===b){for(z=_+3;l<z;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}l-=_,k=0,d=3+(7&(u>>>=_)),u>>>=3,l-=3}else{for(z=_+7;l<z;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}l-=_,k=0,d=11+(127&(u>>>=_)),u>>>=7,l-=7}if(r.have+d>r.nlen+r.ndist){e.msg=\"invalid bit length repeat\",r.mode=30;break}for(;d--;)r.lens[r.have++]=k}}if(30===r.mode)break;if(0===r.lens[256]){e.msg=\"invalid code -- missing end-of-block\",r.mode=30;break}if(r.lenbits=9,S={bits:r.lenbits},x=T(D,r.lens,0,r.nlen,r.lencode,0,r.work,S),r.lenbits=S.bits,x){e.msg=\"invalid literal/lengths set\",r.mode=30;break}if(r.distbits=6,r.distcode=r.distdyn,S={bits:r.distbits},x=T(F,r.lens,r.nlen,r.ndist,r.distcode,0,r.work,S),r.distbits=S.bits,x){e.msg=\"invalid distances set\",r.mode=30;break}if(r.mode=20,6===t)break e;case 20:r.mode=21;case 21:if(6<=o&&258<=h){e.next_out=a,e.avail_out=h,e.next_in=s,e.avail_in=o,r.hold=u,r.bits=l,R(e,c),a=e.next_out,i=e.output,h=e.avail_out,s=e.next_in,n=e.input,o=e.avail_in,u=r.hold,l=r.bits,12===r.mode&&(r.back=-1);break}for(r.back=0;g=(C=r.lencode[u&(1<<r.lenbits)-1])>>>16&255,b=65535&C,!((_=C>>>24)<=l);){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(g&&0==(240&g)){for(v=_,y=g,w=b;g=(C=r.lencode[w+((u&(1<<v+y)-1)>>v)])>>>16&255,b=65535&C,!(v+(_=C>>>24)<=l);){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}u>>>=v,l-=v,r.back+=v}if(u>>>=_,l-=_,r.back+=_,r.length=b,0===g){r.mode=26;break}if(32&g){r.back=-1,r.mode=12;break}if(64&g){e.msg=\"invalid literal/length code\",r.mode=30;break}r.extra=15&g,r.mode=22;case 22:if(r.extra){for(z=r.extra;l<z;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}r.length+=u&(1<<r.extra)-1,u>>>=r.extra,l-=r.extra,r.back+=r.extra}r.was=r.length,r.mode=23;case 23:for(;g=(C=r.distcode[u&(1<<r.distbits)-1])>>>16&255,b=65535&C,!((_=C>>>24)<=l);){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(0==(240&g)){for(v=_,y=g,w=b;g=(C=r.distcode[w+((u&(1<<v+y)-1)>>v)])>>>16&255,b=65535&C,!(v+(_=C>>>24)<=l);){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}u>>>=v,l-=v,r.back+=v}if(u>>>=_,l-=_,r.back+=_,64&g){e.msg=\"invalid distance code\",r.mode=30;break}r.offset=b,r.extra=15&g,r.mode=24;case 24:if(r.extra){for(z=r.extra;l<z;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}r.offset+=u&(1<<r.extra)-1,u>>>=r.extra,l-=r.extra,r.back+=r.extra}if(r.offset>r.dmax){e.msg=\"invalid distance too far back\",r.mode=30;break}r.mode=25;case 25:if(0===h)break e;if(d=c-h,r.offset>d){if((d=r.offset-d)>r.whave&&r.sane){e.msg=\"invalid distance too far back\",r.mode=30;break}p=d>r.wnext?(d-=r.wnext,r.wsize-d):r.wnext-d,d>r.length&&(d=r.length),m=r.window}else m=i,p=a-r.offset,d=r.length;for(h<d&&(d=h),h-=d,r.length-=d;i[a++]=m[p++],--d;);0===r.length&&(r.mode=21);break;case 26:if(0===h)break e;i[a++]=r.length,h--,r.mode=21;break;case 27:if(r.wrap){for(;l<32;){if(0===o)break e;o--,u|=n[s++]<<l,l+=8}if(c-=h,e.total_out+=c,r.total+=c,c&&(e.adler=r.check=r.flags?B(r.check,i,c,a-c):O(r.check,i,c,a-c)),c=h,(r.flags?u:L(u))!==r.check){e.msg=\"incorrect data check\",r.mode=30;break}l=u=0}r.mode=28;case 28:if(r.wrap&&r.flags){for(;l<32;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(u!==(4294967295&r.total)){e.msg=\"incorrect length check\",r.mode=30;break}l=u=0}r.mode=29;case 29:x=1;break e;case 30:x=-3;break e;case 31:return-4;case 32:default:return U}return e.next_out=a,e.avail_out=h,e.next_in=s,e.avail_in=o,r.hold=u,r.bits=l,(r.wsize||c!==e.avail_out&&r.mode<30&&(r.mode<27||4!==t))&&Z(e,e.output,e.next_out,c-e.avail_out)?(r.mode=31,-4):(f-=e.avail_in,c-=e.avail_out,e.total_in+=f,e.total_out+=c,r.total+=c,r.wrap&&c&&(e.adler=r.check=r.flags?B(r.check,i,c,e.next_out-c):O(r.check,i,c,e.next_out-c)),e.data_type=r.bits+(r.last?64:0)+(12===r.mode?128:0)+(20===r.mode||15===r.mode?256:0),(0==f&&0===c||4===t)&&x===N&&(x=-5),x)},r.inflateEnd=function(e){if(!e||!e.state)return U;var t=e.state;return t.window&&(t.window=null),e.state=null,N},r.inflateGetHeader=function(e,t){var r;return e&&e.state?0==(2&(r=e.state).wrap)?U:((r.head=t).done=!1,N):U},r.inflateSetDictionary=function(e,t){var r,n=t.length;return e&&e.state?0!==(r=e.state).wrap&&11!==r.mode?U:11===r.mode&&O(1,t,n,0)!==r.check?-3:Z(e,t,n,n)?(r.mode=31,-4):(r.havedict=1,N):U},r.inflateInfo=\"pako inflate (from Nodeca project)\"},{\"../utils/common\":41,\"./adler32\":43,\"./crc32\":45,\"./inffast\":48,\"./inftrees\":50}],50:[function(e,t,r){\"use strict\";var D=e(\"../utils/common\"),F=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],N=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],U=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],P=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];t.exports=function(e,t,r,n,i,s,a,o){var h,u,l,f,c,d,p,m,_,g=o.bits,b=0,v=0,y=0,w=0,k=0,x=0,S=0,z=0,C=0,E=0,A=null,I=0,O=new D.Buf16(16),B=new D.Buf16(16),R=null,T=0;for(b=0;b<=15;b++)O[b]=0;for(v=0;v<n;v++)O[t[r+v]]++;for(k=g,w=15;1<=w&&0===O[w];w--);if(w<k&&(k=w),0===w)return i[s++]=20971520,i[s++]=20971520,o.bits=1,0;for(y=1;y<w&&0===O[y];y++);for(k<y&&(k=y),b=z=1;b<=15;b++)if(z<<=1,(z-=O[b])<0)return-1;if(0<z&&(0===e||1!==w))return-1;for(B[1]=0,b=1;b<15;b++)B[b+1]=B[b]+O[b];for(v=0;v<n;v++)0!==t[r+v]&&(a[B[t[r+v]]++]=v);if(d=0===e?(A=R=a,19):1===e?(A=F,I-=257,R=N,T-=257,256):(A=U,R=P,-1),b=y,c=s,S=v=E=0,l=-1,f=(C=1<<(x=k))-1,1===e&&852<C||2===e&&592<C)return 1;for(;;){for(p=b-S,_=a[v]<d?(m=0,a[v]):a[v]>d?(m=R[T+a[v]],A[I+a[v]]):(m=96,0),h=1<<b-S,y=u=1<<x;i[c+(E>>S)+(u-=h)]=p<<24|m<<16|_|0,0!==u;);for(h=1<<b-1;E&h;)h>>=1;if(0!==h?(E&=h-1,E+=h):E=0,v++,0==--O[b]){if(b===w)break;b=t[r+a[v]]}if(k<b&&(E&f)!==l){for(0===S&&(S=k),c+=y,z=1<<(x=b-S);x+S<w&&!((z-=O[x+S])<=0);)x++,z<<=1;if(C+=1<<x,1===e&&852<C||2===e&&592<C)return 1;i[l=E&f]=k<<24|x<<16|c-s|0}}return 0!==E&&(i[c+E]=b-S<<24|64<<16|0),o.bits=k,0}},{\"../utils/common\":41}],51:[function(e,t,r){\"use strict\";t.exports={2:\"need dictionary\",1:\"stream end\",0:\"\",\"-1\":\"file error\",\"-2\":\"stream error\",\"-3\":\"data error\",\"-4\":\"insufficient memory\",\"-5\":\"buffer error\",\"-6\":\"incompatible version\"}},{}],52:[function(e,t,r){\"use strict\";var i=e(\"../utils/common\"),o=0,h=1;function n(e){for(var t=e.length;0<=--t;)e[t]=0}var s=0,a=29,u=256,l=u+1+a,f=30,c=19,_=2*l+1,g=15,d=16,p=7,m=256,b=16,v=17,y=18,w=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],k=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],x=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],S=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],z=new Array(2*(l+2));n(z);var C=new Array(2*f);n(C);var E=new Array(512);n(E);var A=new Array(256);n(A);var I=new Array(a);n(I);var O,B,R,T=new Array(f);function D(e,t,r,n,i){this.static_tree=e,this.extra_bits=t,this.extra_base=r,this.elems=n,this.max_length=i,this.has_stree=e&&e.length}function F(e,t){this.dyn_tree=e,this.max_code=0,this.stat_desc=t}function N(e){return e<256?E[e]:E[256+(e>>>7)]}function U(e,t){e.pending_buf[e.pending++]=255&t,e.pending_buf[e.pending++]=t>>>8&255}function P(e,t,r){e.bi_valid>d-r?(e.bi_buf|=t<<e.bi_valid&65535,U(e,e.bi_buf),e.bi_buf=t>>d-e.bi_valid,e.bi_valid+=r-d):(e.bi_buf|=t<<e.bi_valid&65535,e.bi_valid+=r)}function L(e,t,r){P(e,r[2*t],r[2*t+1])}function j(e,t){for(var r=0;r|=1&e,e>>>=1,r<<=1,0<--t;);return r>>>1}function Z(e,t,r){var n,i,s=new Array(g+1),a=0;for(n=1;n<=g;n++)s[n]=a=a+r[n-1]<<1;for(i=0;i<=t;i++){var o=e[2*i+1];0!==o&&(e[2*i]=j(s[o]++,o))}}function W(e){var t;for(t=0;t<l;t++)e.dyn_ltree[2*t]=0;for(t=0;t<f;t++)e.dyn_dtree[2*t]=0;for(t=0;t<c;t++)e.bl_tree[2*t]=0;e.dyn_ltree[2*m]=1,e.opt_len=e.static_len=0,e.last_lit=e.matches=0}function M(e){8<e.bi_valid?U(e,e.bi_buf):0<e.bi_valid&&(e.pending_buf[e.pending++]=e.bi_buf),e.bi_buf=0,e.bi_valid=0}function H(e,t,r,n){var i=2*t,s=2*r;return e[i]<e[s]||e[i]===e[s]&&n[t]<=n[r]}function G(e,t,r){for(var n=e.heap[r],i=r<<1;i<=e.heap_len&&(i<e.heap_len&&H(t,e.heap[i+1],e.heap[i],e.depth)&&i++,!H(t,n,e.heap[i],e.depth));)e.heap[r]=e.heap[i],r=i,i<<=1;e.heap[r]=n}function K(e,t,r){var n,i,s,a,o=0;if(0!==e.last_lit)for(;n=e.pending_buf[e.d_buf+2*o]<<8|e.pending_buf[e.d_buf+2*o+1],i=e.pending_buf[e.l_buf+o],o++,0===n?L(e,i,t):(L(e,(s=A[i])+u+1,t),0!==(a=w[s])&&P(e,i-=I[s],a),L(e,s=N(--n),r),0!==(a=k[s])&&P(e,n-=T[s],a)),o<e.last_lit;);L(e,m,t)}function Y(e,t){var r,n,i,s=t.dyn_tree,a=t.stat_desc.static_tree,o=t.stat_desc.has_stree,h=t.stat_desc.elems,u=-1;for(e.heap_len=0,e.heap_max=_,r=0;r<h;r++)0!==s[2*r]?(e.heap[++e.heap_len]=u=r,e.depth[r]=0):s[2*r+1]=0;for(;e.heap_len<2;)s[2*(i=e.heap[++e.heap_len]=u<2?++u:0)]=1,e.depth[i]=0,e.opt_len--,o&&(e.static_len-=a[2*i+1]);for(t.max_code=u,r=e.heap_len>>1;1<=r;r--)G(e,s,r);for(i=h;r=e.heap[1],e.heap[1]=e.heap[e.heap_len--],G(e,s,1),n=e.heap[1],e.heap[--e.heap_max]=r,e.heap[--e.heap_max]=n,s[2*i]=s[2*r]+s[2*n],e.depth[i]=(e.depth[r]>=e.depth[n]?e.depth[r]:e.depth[n])+1,s[2*r+1]=s[2*n+1]=i,e.heap[1]=i++,G(e,s,1),2<=e.heap_len;);e.heap[--e.heap_max]=e.heap[1],function(e,t){var r,n,i,s,a,o,h=t.dyn_tree,u=t.max_code,l=t.stat_desc.static_tree,f=t.stat_desc.has_stree,c=t.stat_desc.extra_bits,d=t.stat_desc.extra_base,p=t.stat_desc.max_length,m=0;for(s=0;s<=g;s++)e.bl_count[s]=0;for(h[2*e.heap[e.heap_max]+1]=0,r=e.heap_max+1;r<_;r++)p<(s=h[2*h[2*(n=e.heap[r])+1]+1]+1)&&(s=p,m++),h[2*n+1]=s,u<n||(e.bl_count[s]++,a=0,d<=n&&(a=c[n-d]),o=h[2*n],e.opt_len+=o*(s+a),f&&(e.static_len+=o*(l[2*n+1]+a)));if(0!==m){do{for(s=p-1;0===e.bl_count[s];)s--;e.bl_count[s]--,e.bl_count[s+1]+=2,e.bl_count[p]--,m-=2}while(0<m);for(s=p;0!==s;s--)for(n=e.bl_count[s];0!==n;)u<(i=e.heap[--r])||(h[2*i+1]!==s&&(e.opt_len+=(s-h[2*i+1])*h[2*i],h[2*i+1]=s),n--)}}(e,t),Z(s,u,e.bl_count)}function X(e,t,r){var n,i,s=-1,a=t[1],o=0,h=7,u=4;for(0===a&&(h=138,u=3),t[2*(r+1)+1]=65535,n=0;n<=r;n++)i=a,a=t[2*(n+1)+1],++o<h&&i===a||(o<u?e.bl_tree[2*i]+=o:0!==i?(i!==s&&e.bl_tree[2*i]++,e.bl_tree[2*b]++):o<=10?e.bl_tree[2*v]++:e.bl_tree[2*y]++,s=i,u=(o=0)===a?(h=138,3):i===a?(h=6,3):(h=7,4))}function V(e,t,r){var n,i,s=-1,a=t[1],o=0,h=7,u=4;for(0===a&&(h=138,u=3),n=0;n<=r;n++)if(i=a,a=t[2*(n+1)+1],!(++o<h&&i===a)){if(o<u)for(;L(e,i,e.bl_tree),0!=--o;);else 0!==i?(i!==s&&(L(e,i,e.bl_tree),o--),L(e,b,e.bl_tree),P(e,o-3,2)):o<=10?(L(e,v,e.bl_tree),P(e,o-3,3)):(L(e,y,e.bl_tree),P(e,o-11,7));s=i,u=(o=0)===a?(h=138,3):i===a?(h=6,3):(h=7,4)}}n(T);var q=!1;function J(e,t,r,n){P(e,(s<<1)+(n?1:0),3),function(e,t,r,n){M(e),n&&(U(e,r),U(e,~r)),i.arraySet(e.pending_buf,e.window,t,r,e.pending),e.pending+=r}(e,t,r,!0)}r._tr_init=function(e){q||(function(){var e,t,r,n,i,s=new Array(g+1);for(n=r=0;n<a-1;n++)for(I[n]=r,e=0;e<1<<w[n];e++)A[r++]=n;for(A[r-1]=n,n=i=0;n<16;n++)for(T[n]=i,e=0;e<1<<k[n];e++)E[i++]=n;for(i>>=7;n<f;n++)for(T[n]=i<<7,e=0;e<1<<k[n]-7;e++)E[256+i++]=n;for(t=0;t<=g;t++)s[t]=0;for(e=0;e<=143;)z[2*e+1]=8,e++,s[8]++;for(;e<=255;)z[2*e+1]=9,e++,s[9]++;for(;e<=279;)z[2*e+1]=7,e++,s[7]++;for(;e<=287;)z[2*e+1]=8,e++,s[8]++;for(Z(z,l+1,s),e=0;e<f;e++)C[2*e+1]=5,C[2*e]=j(e,5);O=new D(z,w,u+1,l,g),B=new D(C,k,0,f,g),R=new D(new Array(0),x,0,c,p)}(),q=!0),e.l_desc=new F(e.dyn_ltree,O),e.d_desc=new F(e.dyn_dtree,B),e.bl_desc=new F(e.bl_tree,R),e.bi_buf=0,e.bi_valid=0,W(e)},r._tr_stored_block=J,r._tr_flush_block=function(e,t,r,n){var i,s,a=0;0<e.level?(2===e.strm.data_type&&(e.strm.data_type=function(e){var t,r=4093624447;for(t=0;t<=31;t++,r>>>=1)if(1&r&&0!==e.dyn_ltree[2*t])return o;if(0!==e.dyn_ltree[18]||0!==e.dyn_ltree[20]||0!==e.dyn_ltree[26])return h;for(t=32;t<u;t++)if(0!==e.dyn_ltree[2*t])return h;return o}(e)),Y(e,e.l_desc),Y(e,e.d_desc),a=function(e){var t;for(X(e,e.dyn_ltree,e.l_desc.max_code),X(e,e.dyn_dtree,e.d_desc.max_code),Y(e,e.bl_desc),t=c-1;3<=t&&0===e.bl_tree[2*S[t]+1];t--);return e.opt_len+=3*(t+1)+5+5+4,t}(e),i=e.opt_len+3+7>>>3,(s=e.static_len+3+7>>>3)<=i&&(i=s)):i=s=r+5,r+4<=i&&-1!==t?J(e,t,r,n):4===e.strategy||s===i?(P(e,2+(n?1:0),3),K(e,z,C)):(P(e,4+(n?1:0),3),function(e,t,r,n){var i;for(P(e,t-257,5),P(e,r-1,5),P(e,n-4,4),i=0;i<n;i++)P(e,e.bl_tree[2*S[i]+1],3);V(e,e.dyn_ltree,t-1),V(e,e.dyn_dtree,r-1)}(e,e.l_desc.max_code+1,e.d_desc.max_code+1,a+1),K(e,e.dyn_ltree,e.dyn_dtree)),W(e),n&&M(e)},r._tr_tally=function(e,t,r){return e.pending_buf[e.d_buf+2*e.last_lit]=t>>>8&255,e.pending_buf[e.d_buf+2*e.last_lit+1]=255&t,e.pending_buf[e.l_buf+e.last_lit]=255&r,e.last_lit++,0===t?e.dyn_ltree[2*r]++:(e.matches++,t--,e.dyn_ltree[2*(A[r]+u+1)]++,e.dyn_dtree[2*N(t)]++),e.last_lit===e.lit_bufsize-1},r._tr_align=function(e){P(e,2,3),L(e,m,z),function(e){16===e.bi_valid?(U(e,e.bi_buf),e.bi_buf=0,e.bi_valid=0):8<=e.bi_valid&&(e.pending_buf[e.pending++]=255&e.bi_buf,e.bi_buf>>=8,e.bi_valid-=8)}(e)}},{\"../utils/common\":41}],53:[function(e,t,r){\"use strict\";t.exports=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\"\",this.state=null,this.data_type=2,this.adler=0}},{}],54:[function(e,t,r){(function(e){!function(r,n){\"use strict\";if(!r.setImmediate){var i,s,t,a,o=1,h={},u=!1,l=r.document,e=Object.getPrototypeOf&&Object.getPrototypeOf(r);e=e&&e.setTimeout?e:r,i=\"[object process]\"==={}.toString.call(r.process)?function(e){process.nextTick(function(){c(e)})}:function(){if(r.postMessage&&!r.importScripts){var e=!0,t=r.onmessage;return r.onmessage=function(){e=!1},r.postMessage(\"\",\"*\"),r.onmessage=t,e}}()?(a=\"setImmediate$\"+Math.random()+\"$\",r.addEventListener?r.addEventListener(\"message\",d,!1):r.attachEvent(\"onmessage\",d),function(e){r.postMessage(a+e,\"*\")}):r.MessageChannel?((t=new MessageChannel).port1.onmessage=function(e){c(e.data)},function(e){t.port2.postMessage(e)}):l&&\"onreadystatechange\"in l.createElement(\"script\")?(s=l.documentElement,function(e){var t=l.createElement(\"script\");t.onreadystatechange=function(){c(e),t.onreadystatechange=null,s.removeChild(t),t=null},s.appendChild(t)}):function(e){setTimeout(c,0,e)},e.setImmediate=function(e){\"function\"!=typeof e&&(e=new Function(\"\"+e));for(var t=new Array(arguments.length-1),r=0;r<t.length;r++)t[r]=arguments[r+1];var n={callback:e,args:t};return h[o]=n,i(o),o++},e.clearImmediate=f}function f(e){delete h[e]}function c(e){if(u)setTimeout(c,0,e);else{var t=h[e];if(t){u=!0;try{!function(e){var t=e.callback,r=e.args;switch(r.length){case 0:t();break;case 1:t(r[0]);break;case 2:t(r[0],r[1]);break;case 3:t(r[0],r[1],r[2]);break;default:t.apply(n,r)}}(t)}finally{f(e),u=!1}}}}function d(e){e.source===r&&\"string\"==typeof e.data&&0===e.data.indexOf(a)&&c(+e.data.slice(a.length))}}(\"undefined\"==typeof self?void 0===e?this:e:self)}).call(this,\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{})},{}]},{},[10])(10)});","'use strict';\n\n\nfunction isNothing(subject) {\n  return (typeof subject === 'undefined') || (subject === null);\n}\n\n\nfunction isObject(subject) {\n  return (typeof subject === 'object') && (subject !== null);\n}\n\n\nfunction toArray(sequence) {\n  if (Array.isArray(sequence)) return sequence;\n  else if (isNothing(sequence)) return [];\n\n  return [ sequence ];\n}\n\n\nfunction extend(target, source) {\n  var index, length, key, sourceKeys;\n\n  if (source) {\n    sourceKeys = Object.keys(source);\n\n    for (index = 0, length = sourceKeys.length; index < length; index += 1) {\n      key = sourceKeys[index];\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\n\nfunction repeat(string, count) {\n  var result = '', cycle;\n\n  for (cycle = 0; cycle < count; cycle += 1) {\n    result += string;\n  }\n\n  return result;\n}\n\n\nfunction isNegativeZero(number) {\n  return (number === 0) && (Number.NEGATIVE_INFINITY === 1 / number);\n}\n\n\nmodule.exports.isNothing      = isNothing;\nmodule.exports.isObject       = isObject;\nmodule.exports.toArray        = toArray;\nmodule.exports.repeat         = repeat;\nmodule.exports.isNegativeZero = isNegativeZero;\nmodule.exports.extend         = extend;\n","// YAML error class. http://stackoverflow.com/questions/8458984\n//\n'use strict';\n\nfunction YAMLException(reason, mark) {\n  // Super constructor\n  Error.call(this);\n\n  // Include stack trace in error object\n  if (Error.captureStackTrace) {\n    // Chrome and NodeJS\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    // FF, IE 10+ and Safari 6+. Fallback for others\n    this.stack = (new Error()).stack || '';\n  }\n\n  this.name = 'YAMLException';\n  this.reason = reason;\n  this.mark = mark;\n  this.message = (this.reason || '(unknown reason)') + (this.mark ? ' ' + this.mark.toString() : '');\n}\n\n\n// Inherit from Error\nYAMLException.prototype = Object.create(Error.prototype);\nYAMLException.prototype.constructor = YAMLException;\n\n\nYAMLException.prototype.toString = function toString(compact) {\n  var result = this.name + ': ';\n\n  result += this.reason || '(unknown reason)';\n\n  if (!compact && this.mark) {\n    result += ' ' + this.mark.toString();\n  }\n\n  return result;\n};\n\n\nmodule.exports = YAMLException;\n","'use strict';\n\n\nvar common = require('./common');\n\n\nfunction Mark(name, buffer, position, line, column) {\n  this.name     = name;\n  this.buffer   = buffer;\n  this.position = position;\n  this.line     = line;\n  this.column   = column;\n}\n\n\nMark.prototype.getSnippet = function getSnippet(indent, maxLength) {\n  var head, start, tail, end, snippet;\n\n  if (!this.buffer) return null;\n\n  indent = indent || 4;\n  maxLength = maxLength || 75;\n\n  head = '';\n  start = this.position;\n\n  while (start > 0 && '\\x00\\r\\n\\x85\\u2028\\u2029'.indexOf(this.buffer.charAt(start - 1)) === -1) {\n    start -= 1;\n    if (this.position - start > (maxLength / 2 - 1)) {\n      head = ' ... ';\n      start += 5;\n      break;\n    }\n  }\n\n  tail = '';\n  end = this.position;\n\n  while (end < this.buffer.length && '\\x00\\r\\n\\x85\\u2028\\u2029'.indexOf(this.buffer.charAt(end)) === -1) {\n    end += 1;\n    if (end - this.position > (maxLength / 2 - 1)) {\n      tail = ' ... ';\n      end -= 5;\n      break;\n    }\n  }\n\n  snippet = this.buffer.slice(start, end);\n\n  return common.repeat(' ', indent) + head + snippet + tail + '\\n' +\n         common.repeat(' ', indent + this.position - start + head.length) + '^';\n};\n\n\nMark.prototype.toString = function toString(compact) {\n  var snippet, where = '';\n\n  if (this.name) {\n    where += 'in \"' + this.name + '\" ';\n  }\n\n  where += 'at line ' + (this.line + 1) + ', column ' + (this.column + 1);\n\n  if (!compact) {\n    snippet = this.getSnippet();\n\n    if (snippet) {\n      where += ':\\n' + snippet;\n    }\n  }\n\n  return where;\n};\n\n\nmodule.exports = Mark;\n","'use strict';\n\nvar YAMLException = require('./exception');\n\nvar TYPE_CONSTRUCTOR_OPTIONS = [\n  'kind',\n  'resolve',\n  'construct',\n  'instanceOf',\n  'predicate',\n  'represent',\n  'defaultStyle',\n  'styleAliases'\n];\n\nvar YAML_NODE_KINDS = [\n  'scalar',\n  'sequence',\n  'mapping'\n];\n\nfunction compileStyleAliases(map) {\n  var result = {};\n\n  if (map !== null) {\n    Object.keys(map).forEach(function (style) {\n      map[style].forEach(function (alias) {\n        result[String(alias)] = style;\n      });\n    });\n  }\n\n  return result;\n}\n\nfunction Type(tag, options) {\n  options = options || {};\n\n  Object.keys(options).forEach(function (name) {\n    if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {\n      throw new YAMLException('Unknown option \"' + name + '\" is met in definition of \"' + tag + '\" YAML type.');\n    }\n  });\n\n  // TODO: Add tag format check.\n  this.tag          = tag;\n  this.kind         = options['kind']         || null;\n  this.resolve      = options['resolve']      || function () { return true; };\n  this.construct    = options['construct']    || function (data) { return data; };\n  this.instanceOf   = options['instanceOf']   || null;\n  this.predicate    = options['predicate']    || null;\n  this.represent    = options['represent']    || null;\n  this.defaultStyle = options['defaultStyle'] || null;\n  this.styleAliases = compileStyleAliases(options['styleAliases'] || null);\n\n  if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {\n    throw new YAMLException('Unknown kind \"' + this.kind + '\" is specified for \"' + tag + '\" YAML type.');\n  }\n}\n\nmodule.exports = Type;\n","'use strict';\n\n/*eslint-disable max-len*/\n\nvar common        = require('./common');\nvar YAMLException = require('./exception');\nvar Type          = require('./type');\n\n\nfunction compileList(schema, name, result) {\n  var exclude = [];\n\n  schema.include.forEach(function (includedSchema) {\n    result = compileList(includedSchema, name, result);\n  });\n\n  schema[name].forEach(function (currentType) {\n    result.forEach(function (previousType, previousIndex) {\n      if (previousType.tag === currentType.tag) {\n        exclude.push(previousIndex);\n      }\n    });\n\n    result.push(currentType);\n  });\n\n  return result.filter(function (type, index) {\n    return exclude.indexOf(index) === -1;\n  });\n}\n\n\nfunction compileMap(/* lists... */) {\n  var result = {}, index, length;\n\n  function collectType(type) {\n    result[type.tag] = type;\n  }\n\n  for (index = 0, length = arguments.length; index < length; index += 1) {\n    arguments[index].forEach(collectType);\n  }\n\n  return result;\n}\n\n\nfunction Schema(definition) {\n  this.include  = definition.include  || [];\n  this.implicit = definition.implicit || [];\n  this.explicit = definition.explicit || [];\n\n  this.implicit.forEach(function (type) {\n    if (type.loadKind && type.loadKind !== 'scalar') {\n      throw new YAMLException('There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.');\n    }\n  });\n\n  this.compiledImplicit = compileList(this, 'implicit', []);\n  this.compiledExplicit = compileList(this, 'explicit', []);\n  this.compiledTypeMap  = compileMap(this.compiledImplicit, this.compiledExplicit);\n}\n\n\nSchema.DEFAULT = null;\n\n\nSchema.create = function createSchema() {\n  var schemas, types;\n\n  switch (arguments.length) {\n    case 1:\n      schemas = Schema.DEFAULT;\n      types = arguments[0];\n      break;\n\n    case 2:\n      schemas = arguments[0];\n      types = arguments[1];\n      break;\n\n    default:\n      throw new YAMLException('Wrong number of arguments for Schema.create function');\n  }\n\n  schemas = common.toArray(schemas);\n  types = common.toArray(types);\n\n  if (!schemas.every(function (schema) { return schema instanceof Schema; })) {\n    throw new YAMLException('Specified list of super schemas (or a single Schema object) contains a non-Schema object.');\n  }\n\n  if (!types.every(function (type) { return type instanceof Type; })) {\n    throw new YAMLException('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n  }\n\n  return new Schema({\n    include: schemas,\n    explicit: types\n  });\n};\n\n\nmodule.exports = Schema;\n","'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:str', {\n  kind: 'scalar',\n  construct: function (data) { return data !== null ? data : ''; }\n});\n","'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:seq', {\n  kind: 'sequence',\n  construct: function (data) { return data !== null ? data : []; }\n});\n","'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:map', {\n  kind: 'mapping',\n  construct: function (data) { return data !== null ? data : {}; }\n});\n","// Standard YAML's Failsafe schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2802346\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  explicit: [\n    require('../type/str'),\n    require('../type/seq'),\n    require('../type/map')\n  ]\n});\n","'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlNull(data) {\n  if (data === null) return true;\n\n  var max = data.length;\n\n  return (max === 1 && data === '~') ||\n         (max === 4 && (data === 'null' || data === 'Null' || data === 'NULL'));\n}\n\nfunction constructYamlNull() {\n  return null;\n}\n\nfunction isNull(object) {\n  return object === null;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:null', {\n  kind: 'scalar',\n  resolve: resolveYamlNull,\n  construct: constructYamlNull,\n  predicate: isNull,\n  represent: {\n    canonical: function () { return '~';    },\n    lowercase: function () { return 'null'; },\n    uppercase: function () { return 'NULL'; },\n    camelcase: function () { return 'Null'; }\n  },\n  defaultStyle: 'lowercase'\n});\n","'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlBoolean(data) {\n  if (data === null) return false;\n\n  var max = data.length;\n\n  return (max === 4 && (data === 'true' || data === 'True' || data === 'TRUE')) ||\n         (max === 5 && (data === 'false' || data === 'False' || data === 'FALSE'));\n}\n\nfunction constructYamlBoolean(data) {\n  return data === 'true' ||\n         data === 'True' ||\n         data === 'TRUE';\n}\n\nfunction isBoolean(object) {\n  return Object.prototype.toString.call(object) === '[object Boolean]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:bool', {\n  kind: 'scalar',\n  resolve: resolveYamlBoolean,\n  construct: constructYamlBoolean,\n  predicate: isBoolean,\n  represent: {\n    lowercase: function (object) { return object ? 'true' : 'false'; },\n    uppercase: function (object) { return object ? 'TRUE' : 'FALSE'; },\n    camelcase: function (object) { return object ? 'True' : 'False'; }\n  },\n  defaultStyle: 'lowercase'\n});\n","'use strict';\n\nvar common = require('../common');\nvar Type   = require('../type');\n\nfunction isHexCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) ||\n         ((0x41/* A */ <= c) && (c <= 0x46/* F */)) ||\n         ((0x61/* a */ <= c) && (c <= 0x66/* f */));\n}\n\nfunction isOctCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x37/* 7 */));\n}\n\nfunction isDecCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */));\n}\n\nfunction resolveYamlInteger(data) {\n  if (data === null) return false;\n\n  var max = data.length,\n      index = 0,\n      hasDigits = false,\n      ch;\n\n  if (!max) return false;\n\n  ch = data[index];\n\n  // sign\n  if (ch === '-' || ch === '+') {\n    ch = data[++index];\n  }\n\n  if (ch === '0') {\n    // 0\n    if (index + 1 === max) return true;\n    ch = data[++index];\n\n    // base 2, base 8, base 16\n\n    if (ch === 'b') {\n      // base 2\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (ch !== '0' && ch !== '1') return false;\n        hasDigits = true;\n      }\n      return hasDigits;\n    }\n\n\n    if (ch === 'x') {\n      // base 16\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isHexCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits;\n    }\n\n    // base 8\n    for (; index < max; index++) {\n      ch = data[index];\n      if (ch === '_') continue;\n      if (!isOctCode(data.charCodeAt(index))) return false;\n      hasDigits = true;\n    }\n    return hasDigits;\n  }\n\n  // base 10 (except 0) or base 60\n\n  for (; index < max; index++) {\n    ch = data[index];\n    if (ch === '_') continue;\n    if (ch === ':') break;\n    if (!isDecCode(data.charCodeAt(index))) {\n      return false;\n    }\n    hasDigits = true;\n  }\n\n  if (!hasDigits) return false;\n\n  // if !base60 - done;\n  if (ch !== ':') return true;\n\n  // base60 almost not used, no needs to optimize\n  return /^(:[0-5]?[0-9])+$/.test(data.slice(index));\n}\n\nfunction constructYamlInteger(data) {\n  var value = data, sign = 1, ch, base, digits = [];\n\n  if (value.indexOf('_') !== -1) {\n    value = value.replace(/_/g, '');\n  }\n\n  ch = value[0];\n\n  if (ch === '-' || ch === '+') {\n    if (ch === '-') sign = -1;\n    value = value.slice(1);\n    ch = value[0];\n  }\n\n  if (value === '0') return 0;\n\n  if (ch === '0') {\n    if (value[1] === 'b') return sign * parseInt(value.slice(2), 2);\n    if (value[1] === 'x') return sign * parseInt(value, 16);\n    return sign * parseInt(value, 8);\n  }\n\n  if (value.indexOf(':') !== -1) {\n    value.split(':').forEach(function (v) {\n      digits.unshift(parseInt(v, 10));\n    });\n\n    value = 0;\n    base = 1;\n\n    digits.forEach(function (d) {\n      value += (d * base);\n      base *= 60;\n    });\n\n    return sign * value;\n\n  }\n\n  return sign * parseInt(value, 10);\n}\n\nfunction isInteger(object) {\n  return (Object.prototype.toString.call(object)) === '[object Number]' &&\n         (object % 1 === 0 && !common.isNegativeZero(object));\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:int', {\n  kind: 'scalar',\n  resolve: resolveYamlInteger,\n  construct: constructYamlInteger,\n  predicate: isInteger,\n  represent: {\n    binary:      function (object) { return '0b' + object.toString(2); },\n    octal:       function (object) { return '0'  + object.toString(8); },\n    decimal:     function (object) { return        object.toString(10); },\n    hexadecimal: function (object) { return '0x' + object.toString(16).toUpperCase(); }\n  },\n  defaultStyle: 'decimal',\n  styleAliases: {\n    binary:      [ 2,  'bin' ],\n    octal:       [ 8,  'oct' ],\n    decimal:     [ 10, 'dec' ],\n    hexadecimal: [ 16, 'hex' ]\n  }\n});\n","'use strict';\n\nvar common = require('../common');\nvar Type   = require('../type');\n\nvar YAML_FLOAT_PATTERN = new RegExp(\n  '^(?:[-+]?(?:[0-9][0-9_]*)\\\\.[0-9_]*(?:[eE][-+][0-9]+)?' +\n  '|\\\\.[0-9_]+(?:[eE][-+][0-9]+)?' +\n  '|[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\\\.[0-9_]*' +\n  '|[-+]?\\\\.(?:inf|Inf|INF)' +\n  '|\\\\.(?:nan|NaN|NAN))$');\n\nfunction resolveYamlFloat(data) {\n  if (data === null) return false;\n\n  if (!YAML_FLOAT_PATTERN.test(data)) return false;\n\n  return true;\n}\n\nfunction constructYamlFloat(data) {\n  var value, sign, base, digits;\n\n  value  = data.replace(/_/g, '').toLowerCase();\n  sign   = value[0] === '-' ? -1 : 1;\n  digits = [];\n\n  if ('+-'.indexOf(value[0]) >= 0) {\n    value = value.slice(1);\n  }\n\n  if (value === '.inf') {\n    return (sign === 1) ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n\n  } else if (value === '.nan') {\n    return NaN;\n\n  } else if (value.indexOf(':') >= 0) {\n    value.split(':').forEach(function (v) {\n      digits.unshift(parseFloat(v, 10));\n    });\n\n    value = 0.0;\n    base = 1;\n\n    digits.forEach(function (d) {\n      value += d * base;\n      base *= 60;\n    });\n\n    return sign * value;\n\n  }\n  return sign * parseFloat(value, 10);\n}\n\n\nvar SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;\n\nfunction representYamlFloat(object, style) {\n  var res;\n\n  if (isNaN(object)) {\n    switch (style) {\n      case 'lowercase': return '.nan';\n      case 'uppercase': return '.NAN';\n      case 'camelcase': return '.NaN';\n    }\n  } else if (Number.POSITIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '.inf';\n      case 'uppercase': return '.INF';\n      case 'camelcase': return '.Inf';\n    }\n  } else if (Number.NEGATIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '-.inf';\n      case 'uppercase': return '-.INF';\n      case 'camelcase': return '-.Inf';\n    }\n  } else if (common.isNegativeZero(object)) {\n    return '-0.0';\n  }\n\n  res = object.toString(10);\n\n  // JS stringifier can build scientific format without dots: 5e-100,\n  // while YAML requres dot: 5.e-100. Fix it with simple hack\n\n  return SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace('e', '.e') : res;\n}\n\nfunction isFloat(object) {\n  return (Object.prototype.toString.call(object) === '[object Number]') &&\n         (object % 1 !== 0 || common.isNegativeZero(object));\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:float', {\n  kind: 'scalar',\n  resolve: resolveYamlFloat,\n  construct: constructYamlFloat,\n  predicate: isFloat,\n  represent: representYamlFloat,\n  defaultStyle: 'lowercase'\n});\n","// Standard YAML's JSON schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2803231\n//\n// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.\n// So, this schema is not such strict as defined in the YAML specification.\n// It allows numbers in binary notaion, use `Null` and `NULL` as `null`, etc.\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  include: [\n    require('./failsafe')\n  ],\n  implicit: [\n    require('../type/null'),\n    require('../type/bool'),\n    require('../type/int'),\n    require('../type/float')\n  ]\n});\n","// Standard YAML's Core schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2804923\n//\n// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.\n// So, Core schema has no distinctions from JSON schema is JS-YAML.\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  include: [\n    require('./json')\n  ]\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar YAML_TIMESTAMP_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9]?)'                   + // [2] month\n  '-([0-9][0-9]?)'                   + // [3] day\n  '(?:(?:[Tt]|[ \\\\t]+)'              + // ...\n  '([0-9][0-9]?)'                    + // [4] hour\n  ':([0-9][0-9])'                    + // [5] minute\n  ':([0-9][0-9])'                    + // [6] second\n  '(?:\\\\.([0-9]*))?'                 + // [7] fraction\n  '(?:[ \\\\t]*(Z|([-+])([0-9][0-9]?)' + // [8] tz [9] tz_sign [10] tz_hour\n  '(?::([0-9][0-9]))?))?)?$');         // [11] tz_minute\n\nfunction resolveYamlTimestamp(data) {\n  if (data === null) return false;\n  if (YAML_TIMESTAMP_REGEXP.exec(data) === null) return false;\n  return true;\n}\n\nfunction constructYamlTimestamp(data) {\n  var match, year, month, day, hour, minute, second, fraction = 0,\n      delta = null, tz_hour, tz_minute, date;\n\n  match = YAML_TIMESTAMP_REGEXP.exec(data);\n\n  if (match === null) throw new Error('Date resolve error');\n\n  // match: [1] year [2] month [3] day\n\n  year = +(match[1]);\n  month = +(match[2]) - 1; // JS month starts with 0\n  day = +(match[3]);\n\n  if (!match[4]) { // no hour\n    return new Date(Date.UTC(year, month, day));\n  }\n\n  // match: [4] hour [5] minute [6] second [7] fraction\n\n  hour = +(match[4]);\n  minute = +(match[5]);\n  second = +(match[6]);\n\n  if (match[7]) {\n    fraction = match[7].slice(0, 3);\n    while (fraction.length < 3) { // milli-seconds\n      fraction += '0';\n    }\n    fraction = +fraction;\n  }\n\n  // match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute\n\n  if (match[9]) {\n    tz_hour = +(match[10]);\n    tz_minute = +(match[11] || 0);\n    delta = (tz_hour * 60 + tz_minute) * 60000; // delta in mili-seconds\n    if (match[9] === '-') delta = -delta;\n  }\n\n  date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));\n\n  if (delta) date.setTime(date.getTime() - delta);\n\n  return date;\n}\n\nfunction representYamlTimestamp(object /*, style*/) {\n  return object.toISOString();\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:timestamp', {\n  kind: 'scalar',\n  resolve: resolveYamlTimestamp,\n  construct: constructYamlTimestamp,\n  instanceOf: Date,\n  represent: representYamlTimestamp\n});\n","'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlMerge(data) {\n  return data === '<<' || data === null;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:merge', {\n  kind: 'scalar',\n  resolve: resolveYamlMerge\n});\n","'use strict';\n\n/*eslint-disable no-bitwise*/\n\n// A trick for browserified version.\n// Since we make browserifier to ignore `buffer` module, NodeBuffer will be undefined\nvar NodeBuffer = require('buffer').Buffer;\nvar Type       = require('../type');\n\n\n// [ 64, 65, 66 ] -> [ padding, CR, LF ]\nvar BASE64_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\n\\r';\n\n\nfunction resolveYamlBinary(data) {\n  if (data === null) return false;\n\n  var code, idx, bitlen = 0, max = data.length, map = BASE64_MAP;\n\n  // Convert one by one.\n  for (idx = 0; idx < max; idx++) {\n    code = map.indexOf(data.charAt(idx));\n\n    // Skip CR/LF\n    if (code > 64) continue;\n\n    // Fail on illegal characters\n    if (code < 0) return false;\n\n    bitlen += 6;\n  }\n\n  // If there are any bits left, source was corrupted\n  return (bitlen % 8) === 0;\n}\n\nfunction constructYamlBinary(data) {\n  var idx, tailbits,\n      input = data.replace(/[\\r\\n=]/g, ''), // remove CR/LF & padding to simplify scan\n      max = input.length,\n      map = BASE64_MAP,\n      bits = 0,\n      result = [];\n\n  // Collect by 6*4 bits (3 bytes)\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 4 === 0) && idx) {\n      result.push((bits >> 16) & 0xFF);\n      result.push((bits >> 8) & 0xFF);\n      result.push(bits & 0xFF);\n    }\n\n    bits = (bits << 6) | map.indexOf(input.charAt(idx));\n  }\n\n  // Dump tail\n\n  tailbits = (max % 4) * 6;\n\n  if (tailbits === 0) {\n    result.push((bits >> 16) & 0xFF);\n    result.push((bits >> 8) & 0xFF);\n    result.push(bits & 0xFF);\n  } else if (tailbits === 18) {\n    result.push((bits >> 10) & 0xFF);\n    result.push((bits >> 2) & 0xFF);\n  } else if (tailbits === 12) {\n    result.push((bits >> 4) & 0xFF);\n  }\n\n  // Wrap into Buffer for NodeJS and leave Array for browser\n  if (NodeBuffer) return new NodeBuffer(result);\n\n  return result;\n}\n\nfunction representYamlBinary(object /*, style*/) {\n  var result = '', bits = 0, idx, tail,\n      max = object.length,\n      map = BASE64_MAP;\n\n  // Convert every three bytes to 4 ASCII characters.\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 3 === 0) && idx) {\n      result += map[(bits >> 18) & 0x3F];\n      result += map[(bits >> 12) & 0x3F];\n      result += map[(bits >> 6) & 0x3F];\n      result += map[bits & 0x3F];\n    }\n\n    bits = (bits << 8) + object[idx];\n  }\n\n  // Dump tail\n\n  tail = max % 3;\n\n  if (tail === 0) {\n    result += map[(bits >> 18) & 0x3F];\n    result += map[(bits >> 12) & 0x3F];\n    result += map[(bits >> 6) & 0x3F];\n    result += map[bits & 0x3F];\n  } else if (tail === 2) {\n    result += map[(bits >> 10) & 0x3F];\n    result += map[(bits >> 4) & 0x3F];\n    result += map[(bits << 2) & 0x3F];\n    result += map[64];\n  } else if (tail === 1) {\n    result += map[(bits >> 2) & 0x3F];\n    result += map[(bits << 4) & 0x3F];\n    result += map[64];\n    result += map[64];\n  }\n\n  return result;\n}\n\nfunction isBinary(object) {\n  return NodeBuffer && NodeBuffer.isBuffer(object);\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:binary', {\n  kind: 'scalar',\n  resolve: resolveYamlBinary,\n  construct: constructYamlBinary,\n  predicate: isBinary,\n  represent: representYamlBinary\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\nvar _toString       = Object.prototype.toString;\n\nfunction resolveYamlOmap(data) {\n  if (data === null) return true;\n\n  var objectKeys = [], index, length, pair, pairKey, pairHasKey,\n      object = data;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n    pairHasKey = false;\n\n    if (_toString.call(pair) !== '[object Object]') return false;\n\n    for (pairKey in pair) {\n      if (_hasOwnProperty.call(pair, pairKey)) {\n        if (!pairHasKey) pairHasKey = true;\n        else return false;\n      }\n    }\n\n    if (!pairHasKey) return false;\n\n    if (objectKeys.indexOf(pairKey) === -1) objectKeys.push(pairKey);\n    else return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlOmap(data) {\n  return data !== null ? data : [];\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:omap', {\n  kind: 'sequence',\n  resolve: resolveYamlOmap,\n  construct: constructYamlOmap\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar _toString = Object.prototype.toString;\n\nfunction resolveYamlPairs(data) {\n  if (data === null) return true;\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    if (_toString.call(pair) !== '[object Object]') return false;\n\n    keys = Object.keys(pair);\n\n    if (keys.length !== 1) return false;\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return true;\n}\n\nfunction constructYamlPairs(data) {\n  if (data === null) return [];\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    keys = Object.keys(pair);\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return result;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:pairs', {\n  kind: 'sequence',\n  resolve: resolveYamlPairs,\n  construct: constructYamlPairs\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction resolveYamlSet(data) {\n  if (data === null) return true;\n\n  var key, object = data;\n\n  for (key in object) {\n    if (_hasOwnProperty.call(object, key)) {\n      if (object[key] !== null) return false;\n    }\n  }\n\n  return true;\n}\n\nfunction constructYamlSet(data) {\n  return data !== null ? data : {};\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:set', {\n  kind: 'mapping',\n  resolve: resolveYamlSet,\n  construct: constructYamlSet\n});\n","// JS-YAML's default schema for `safeLoad` function.\n// It is not described in the YAML specification.\n//\n// This schema is based on standard YAML's Core schema and includes most of\n// extra types described at YAML tag repository. (http://yaml.org/type/)\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  include: [\n    require('./core')\n  ],\n  implicit: [\n    require('../type/timestamp'),\n    require('../type/merge')\n  ],\n  explicit: [\n    require('../type/binary'),\n    require('../type/omap'),\n    require('../type/pairs'),\n    require('../type/set')\n  ]\n});\n","'use strict';\n\nvar Type = require('../../type');\n\nfunction resolveJavascriptUndefined() {\n  return true;\n}\n\nfunction constructJavascriptUndefined() {\n  /*eslint-disable no-undefined*/\n  return undefined;\n}\n\nfunction representJavascriptUndefined() {\n  return '';\n}\n\nfunction isUndefined(object) {\n  return typeof object === 'undefined';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:js/undefined', {\n  kind: 'scalar',\n  resolve: resolveJavascriptUndefined,\n  construct: constructJavascriptUndefined,\n  predicate: isUndefined,\n  represent: representJavascriptUndefined\n});\n","'use strict';\n\nvar Type = require('../../type');\n\nfunction resolveJavascriptRegExp(data) {\n  if (data === null) return false;\n  if (data.length === 0) return false;\n\n  var regexp = data,\n      tail   = /\\/([gim]*)$/.exec(data),\n      modifiers = '';\n\n  // if regexp starts with '/' it can have modifiers and must be properly closed\n  // `/foo/gim` - modifiers tail can be maximum 3 chars\n  if (regexp[0] === '/') {\n    if (tail) modifiers = tail[1];\n\n    if (modifiers.length > 3) return false;\n    // if expression starts with /, is should be properly terminated\n    if (regexp[regexp.length - modifiers.length - 1] !== '/') return false;\n  }\n\n  return true;\n}\n\nfunction constructJavascriptRegExp(data) {\n  var regexp = data,\n      tail   = /\\/([gim]*)$/.exec(data),\n      modifiers = '';\n\n  // `/foo/gim` - tail can be maximum 4 chars\n  if (regexp[0] === '/') {\n    if (tail) modifiers = tail[1];\n    regexp = regexp.slice(1, regexp.length - modifiers.length - 1);\n  }\n\n  return new RegExp(regexp, modifiers);\n}\n\nfunction representJavascriptRegExp(object /*, style*/) {\n  var result = '/' + object.source + '/';\n\n  if (object.global) result += 'g';\n  if (object.multiline) result += 'm';\n  if (object.ignoreCase) result += 'i';\n\n  return result;\n}\n\nfunction isRegExp(object) {\n  return Object.prototype.toString.call(object) === '[object RegExp]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:js/regexp', {\n  kind: 'scalar',\n  resolve: resolveJavascriptRegExp,\n  construct: constructJavascriptRegExp,\n  predicate: isRegExp,\n  represent: representJavascriptRegExp\n});\n","'use strict';\n\nvar esprima;\n\n// Browserified version does not have esprima\n//\n// 1. For node.js just require module as deps\n// 2. For browser try to require mudule via external AMD system.\n//    If not found - try to fallback to window.esprima. If not\n//    found too - then fail to parse.\n//\ntry {\n  // workaround to exclude package from browserify list.\n  var _require = require;\n  esprima = _require('esprima');\n} catch (_) {\n  /*global window */\n  if (typeof window !== 'undefined') esprima = window.esprima;\n}\n\nvar Type = require('../../type');\n\nfunction resolveJavascriptFunction(data) {\n  if (data === null) return false;\n\n  try {\n    var source = '(' + data + ')',\n        ast    = esprima.parse(source, { range: true });\n\n    if (ast.type                    !== 'Program'             ||\n        ast.body.length             !== 1                     ||\n        ast.body[0].type            !== 'ExpressionStatement' ||\n        ast.body[0].expression.type !== 'FunctionExpression') {\n      return false;\n    }\n\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\n\nfunction constructJavascriptFunction(data) {\n  /*jslint evil:true*/\n\n  var source = '(' + data + ')',\n      ast    = esprima.parse(source, { range: true }),\n      params = [],\n      body;\n\n  if (ast.type                    !== 'Program'             ||\n      ast.body.length             !== 1                     ||\n      ast.body[0].type            !== 'ExpressionStatement' ||\n      ast.body[0].expression.type !== 'FunctionExpression') {\n    throw new Error('Failed to resolve function');\n  }\n\n  ast.body[0].expression.params.forEach(function (param) {\n    params.push(param.name);\n  });\n\n  body = ast.body[0].expression.body.range;\n\n  // Esprima's ranges include the first '{' and the last '}' characters on\n  // function expressions. So cut them out.\n  /*eslint-disable no-new-func*/\n  return new Function(params, source.slice(body[0] + 1, body[1] - 1));\n}\n\nfunction representJavascriptFunction(object /*, style*/) {\n  return object.toString();\n}\n\nfunction isFunction(object) {\n  return Object.prototype.toString.call(object) === '[object Function]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:js/function', {\n  kind: 'scalar',\n  resolve: resolveJavascriptFunction,\n  construct: constructJavascriptFunction,\n  predicate: isFunction,\n  represent: representJavascriptFunction\n});\n","// JS-YAML's default schema for `load` function.\n// It is not described in the YAML specification.\n//\n// This schema is based on JS-YAML's default safe schema and includes\n// JavaScript-specific types: !!js/undefined, !!js/regexp and !!js/function.\n//\n// Also this schema is used as default base schema at `Schema.create` function.\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = Schema.DEFAULT = new Schema({\n  include: [\n    require('./default_safe')\n  ],\n  explicit: [\n    require('../type/js/undefined'),\n    require('../type/js/regexp'),\n    require('../type/js/function')\n  ]\n});\n","'use strict';\n\n/*eslint-disable max-len,no-use-before-define*/\n\nvar common              = require('./common');\nvar YAMLException       = require('./exception');\nvar Mark                = require('./mark');\nvar DEFAULT_SAFE_SCHEMA = require('./schema/default_safe');\nvar DEFAULT_FULL_SCHEMA = require('./schema/default_full');\n\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\n\nvar CONTEXT_FLOW_IN   = 1;\nvar CONTEXT_FLOW_OUT  = 2;\nvar CONTEXT_BLOCK_IN  = 3;\nvar CONTEXT_BLOCK_OUT = 4;\n\n\nvar CHOMPING_CLIP  = 1;\nvar CHOMPING_STRIP = 2;\nvar CHOMPING_KEEP  = 3;\n\n\nvar PATTERN_NON_PRINTABLE         = /[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x84\\x86-\\x9F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\nvar PATTERN_NON_ASCII_LINE_BREAKS = /[\\x85\\u2028\\u2029]/;\nvar PATTERN_FLOW_INDICATORS       = /[,\\[\\]\\{\\}]/;\nvar PATTERN_TAG_HANDLE            = /^(?:!|!!|![a-z\\-]+!)$/i;\nvar PATTERN_TAG_URI               = /^(?:!|[^,\\[\\]\\{\\}])(?:%[0-9a-f]{2}|[0-9a-z\\-#;\\/\\?:@&=\\+\\$,_\\.!~\\*'\\(\\)\\[\\]])*$/i;\n\n\nfunction is_EOL(c) {\n  return (c === 0x0A/* LF */) || (c === 0x0D/* CR */);\n}\n\nfunction is_WHITE_SPACE(c) {\n  return (c === 0x09/* Tab */) || (c === 0x20/* Space */);\n}\n\nfunction is_WS_OR_EOL(c) {\n  return (c === 0x09/* Tab */) ||\n         (c === 0x20/* Space */) ||\n         (c === 0x0A/* LF */) ||\n         (c === 0x0D/* CR */);\n}\n\nfunction is_FLOW_INDICATOR(c) {\n  return c === 0x2C/* , */ ||\n         c === 0x5B/* [ */ ||\n         c === 0x5D/* ] */ ||\n         c === 0x7B/* { */ ||\n         c === 0x7D/* } */;\n}\n\nfunction fromHexCode(c) {\n  var lc;\n\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  /*eslint-disable no-bitwise*/\n  lc = c | 0x20;\n\n  if ((0x61/* a */ <= lc) && (lc <= 0x66/* f */)) {\n    return lc - 0x61 + 10;\n  }\n\n  return -1;\n}\n\nfunction escapedHexLen(c) {\n  if (c === 0x78/* x */) { return 2; }\n  if (c === 0x75/* u */) { return 4; }\n  if (c === 0x55/* U */) { return 8; }\n  return 0;\n}\n\nfunction fromDecimalCode(c) {\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  return -1;\n}\n\nfunction simpleEscapeSequence(c) {\n  return (c === 0x30/* 0 */) ? '\\x00' :\n        (c === 0x61/* a */) ? '\\x07' :\n        (c === 0x62/* b */) ? '\\x08' :\n        (c === 0x74/* t */) ? '\\x09' :\n        (c === 0x09/* Tab */) ? '\\x09' :\n        (c === 0x6E/* n */) ? '\\x0A' :\n        (c === 0x76/* v */) ? '\\x0B' :\n        (c === 0x66/* f */) ? '\\x0C' :\n        (c === 0x72/* r */) ? '\\x0D' :\n        (c === 0x65/* e */) ? '\\x1B' :\n        (c === 0x20/* Space */) ? ' ' :\n        (c === 0x22/* \" */) ? '\\x22' :\n        (c === 0x2F/* / */) ? '/' :\n        (c === 0x5C/* \\ */) ? '\\x5C' :\n        (c === 0x4E/* N */) ? '\\x85' :\n        (c === 0x5F/* _ */) ? '\\xA0' :\n        (c === 0x4C/* L */) ? '\\u2028' :\n        (c === 0x50/* P */) ? '\\u2029' : '';\n}\n\nfunction charFromCodepoint(c) {\n  if (c <= 0xFFFF) {\n    return String.fromCharCode(c);\n  }\n  // Encode UTF-16 surrogate pair\n  // https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF\n  return String.fromCharCode(((c - 0x010000) >> 10) + 0xD800,\n                             ((c - 0x010000) & 0x03FF) + 0xDC00);\n}\n\nvar simpleEscapeCheck = new Array(256); // integer, for fast access\nvar simpleEscapeMap = new Array(256);\nfor (var i = 0; i < 256; i++) {\n  simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;\n  simpleEscapeMap[i] = simpleEscapeSequence(i);\n}\n\n\nfunction State(input, options) {\n  this.input = input;\n\n  this.filename  = options['filename']  || null;\n  this.schema    = options['schema']    || DEFAULT_FULL_SCHEMA;\n  this.onWarning = options['onWarning'] || null;\n  this.legacy    = options['legacy']    || false;\n  this.json      = options['json']      || false;\n  this.listener  = options['listener']  || null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.typeMap       = this.schema.compiledTypeMap;\n\n  this.length     = input.length;\n  this.position   = 0;\n  this.line       = 0;\n  this.lineStart  = 0;\n  this.lineIndent = 0;\n\n  this.documents = [];\n\n  /*\n  this.version;\n  this.checkLineBreaks;\n  this.tagMap;\n  this.anchorMap;\n  this.tag;\n  this.anchor;\n  this.kind;\n  this.result;*/\n\n}\n\n\nfunction generateError(state, message) {\n  return new YAMLException(\n    message,\n    new Mark(state.filename, state.input, state.position, state.line, (state.position - state.lineStart)));\n}\n\nfunction throwError(state, message) {\n  throw generateError(state, message);\n}\n\nfunction throwWarning(state, message) {\n  if (state.onWarning) {\n    state.onWarning.call(null, generateError(state, message));\n  }\n}\n\n\nvar directiveHandlers = {\n\n  YAML: function handleYamlDirective(state, name, args) {\n\n    var match, major, minor;\n\n    if (state.version !== null) {\n      throwError(state, 'duplication of %YAML directive');\n    }\n\n    if (args.length !== 1) {\n      throwError(state, 'YAML directive accepts exactly one argument');\n    }\n\n    match = /^([0-9]+)\\.([0-9]+)$/.exec(args[0]);\n\n    if (match === null) {\n      throwError(state, 'ill-formed argument of the YAML directive');\n    }\n\n    major = parseInt(match[1], 10);\n    minor = parseInt(match[2], 10);\n\n    if (major !== 1) {\n      throwError(state, 'unacceptable YAML version of the document');\n    }\n\n    state.version = args[0];\n    state.checkLineBreaks = (minor < 2);\n\n    if (minor !== 1 && minor !== 2) {\n      throwWarning(state, 'unsupported YAML version of the document');\n    }\n  },\n\n  TAG: function handleTagDirective(state, name, args) {\n\n    var handle, prefix;\n\n    if (args.length !== 2) {\n      throwError(state, 'TAG directive accepts exactly two arguments');\n    }\n\n    handle = args[0];\n    prefix = args[1];\n\n    if (!PATTERN_TAG_HANDLE.test(handle)) {\n      throwError(state, 'ill-formed tag handle (first argument) of the TAG directive');\n    }\n\n    if (_hasOwnProperty.call(state.tagMap, handle)) {\n      throwError(state, 'there is a previously declared suffix for \"' + handle + '\" tag handle');\n    }\n\n    if (!PATTERN_TAG_URI.test(prefix)) {\n      throwError(state, 'ill-formed tag prefix (second argument) of the TAG directive');\n    }\n\n    state.tagMap[handle] = prefix;\n  }\n};\n\n\nfunction captureSegment(state, start, end, checkJson) {\n  var _position, _length, _character, _result;\n\n  if (start < end) {\n    _result = state.input.slice(start, end);\n\n    if (checkJson) {\n      for (_position = 0, _length = _result.length;\n           _position < _length;\n           _position += 1) {\n        _character = _result.charCodeAt(_position);\n        if (!(_character === 0x09 ||\n              (0x20 <= _character && _character <= 0x10FFFF))) {\n          throwError(state, 'expected valid JSON character');\n        }\n      }\n    } else if (PATTERN_NON_PRINTABLE.test(_result)) {\n      throwError(state, 'the stream contains non-printable characters');\n    }\n\n    state.result += _result;\n  }\n}\n\nfunction mergeMappings(state, destination, source, overridableKeys) {\n  var sourceKeys, key, index, quantity;\n\n  if (!common.isObject(source)) {\n    throwError(state, 'cannot merge mappings; the provided source object is unacceptable');\n  }\n\n  sourceKeys = Object.keys(source);\n\n  for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {\n    key = sourceKeys[index];\n\n    if (!_hasOwnProperty.call(destination, key)) {\n      destination[key] = source[key];\n      overridableKeys[key] = true;\n    }\n  }\n}\n\nfunction storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode) {\n  var index, quantity;\n\n  keyNode = String(keyNode);\n\n  if (_result === null) {\n    _result = {};\n  }\n\n  if (keyTag === 'tag:yaml.org,2002:merge') {\n    if (Array.isArray(valueNode)) {\n      for (index = 0, quantity = valueNode.length; index < quantity; index += 1) {\n        mergeMappings(state, _result, valueNode[index], overridableKeys);\n      }\n    } else {\n      mergeMappings(state, _result, valueNode, overridableKeys);\n    }\n  } else {\n    if (!state.json &&\n        !_hasOwnProperty.call(overridableKeys, keyNode) &&\n        _hasOwnProperty.call(_result, keyNode)) {\n      throwError(state, 'duplicated mapping key');\n    }\n    _result[keyNode] = valueNode;\n    delete overridableKeys[keyNode];\n  }\n\n  return _result;\n}\n\nfunction readLineBreak(state) {\n  var ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x0A/* LF */) {\n    state.position++;\n  } else if (ch === 0x0D/* CR */) {\n    state.position++;\n    if (state.input.charCodeAt(state.position) === 0x0A/* LF */) {\n      state.position++;\n    }\n  } else {\n    throwError(state, 'a line break is expected');\n  }\n\n  state.line += 1;\n  state.lineStart = state.position;\n}\n\nfunction skipSeparationSpace(state, allowComments, checkIndent) {\n  var lineBreaks = 0,\n      ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    while (is_WHITE_SPACE(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (allowComments && ch === 0x23/* # */) {\n      do {\n        ch = state.input.charCodeAt(++state.position);\n      } while (ch !== 0x0A/* LF */ && ch !== 0x0D/* CR */ && ch !== 0);\n    }\n\n    if (is_EOL(ch)) {\n      readLineBreak(state);\n\n      ch = state.input.charCodeAt(state.position);\n      lineBreaks++;\n      state.lineIndent = 0;\n\n      while (ch === 0x20/* Space */) {\n        state.lineIndent++;\n        ch = state.input.charCodeAt(++state.position);\n      }\n    } else {\n      break;\n    }\n  }\n\n  if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {\n    throwWarning(state, 'deficient indentation');\n  }\n\n  return lineBreaks;\n}\n\nfunction testDocumentSeparator(state) {\n  var _position = state.position,\n      ch;\n\n  ch = state.input.charCodeAt(_position);\n\n  // Condition state.position === state.lineStart is tested\n  // in parent on each call, for efficiency. No needs to test here again.\n  if ((ch === 0x2D/* - */ || ch === 0x2E/* . */) &&\n      ch === state.input.charCodeAt(_position + 1) &&\n      ch === state.input.charCodeAt(_position + 2)) {\n\n    _position += 3;\n\n    ch = state.input.charCodeAt(_position);\n\n    if (ch === 0 || is_WS_OR_EOL(ch)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction writeFoldedLines(state, count) {\n  if (count === 1) {\n    state.result += ' ';\n  } else if (count > 1) {\n    state.result += common.repeat('\\n', count - 1);\n  }\n}\n\n\nfunction readPlainScalar(state, nodeIndent, withinFlowCollection) {\n  var preceding,\n      following,\n      captureStart,\n      captureEnd,\n      hasPendingContent,\n      _line,\n      _lineStart,\n      _lineIndent,\n      _kind = state.kind,\n      _result = state.result,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (is_WS_OR_EOL(ch)      ||\n      is_FLOW_INDICATOR(ch) ||\n      ch === 0x23/* # */    ||\n      ch === 0x26/* & */    ||\n      ch === 0x2A/* * */    ||\n      ch === 0x21/* ! */    ||\n      ch === 0x7C/* | */    ||\n      ch === 0x3E/* > */    ||\n      ch === 0x27/* ' */    ||\n      ch === 0x22/* \" */    ||\n      ch === 0x25/* % */    ||\n      ch === 0x40/* @ */    ||\n      ch === 0x60/* ` */) {\n    return false;\n  }\n\n  if (ch === 0x3F/* ? */ || ch === 0x2D/* - */) {\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (is_WS_OR_EOL(following) ||\n        withinFlowCollection && is_FLOW_INDICATOR(following)) {\n      return false;\n    }\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  captureStart = captureEnd = state.position;\n  hasPendingContent = false;\n\n  while (ch !== 0) {\n    if (ch === 0x3A/* : */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following) ||\n          withinFlowCollection && is_FLOW_INDICATOR(following)) {\n        break;\n      }\n\n    } else if (ch === 0x23/* # */) {\n      preceding = state.input.charCodeAt(state.position - 1);\n\n      if (is_WS_OR_EOL(preceding)) {\n        break;\n      }\n\n    } else if ((state.position === state.lineStart && testDocumentSeparator(state)) ||\n               withinFlowCollection && is_FLOW_INDICATOR(ch)) {\n      break;\n\n    } else if (is_EOL(ch)) {\n      _line = state.line;\n      _lineStart = state.lineStart;\n      _lineIndent = state.lineIndent;\n      skipSeparationSpace(state, false, -1);\n\n      if (state.lineIndent >= nodeIndent) {\n        hasPendingContent = true;\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      } else {\n        state.position = captureEnd;\n        state.line = _line;\n        state.lineStart = _lineStart;\n        state.lineIndent = _lineIndent;\n        break;\n      }\n    }\n\n    if (hasPendingContent) {\n      captureSegment(state, captureStart, captureEnd, false);\n      writeFoldedLines(state, state.line - _line);\n      captureStart = captureEnd = state.position;\n      hasPendingContent = false;\n    }\n\n    if (!is_WHITE_SPACE(ch)) {\n      captureEnd = state.position + 1;\n    }\n\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  captureSegment(state, captureStart, captureEnd, false);\n\n  if (state.result) {\n    return true;\n  }\n\n  state.kind = _kind;\n  state.result = _result;\n  return false;\n}\n\nfunction readSingleQuotedScalar(state, nodeIndent) {\n  var ch,\n      captureStart, captureEnd;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x27/* ' */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x27/* ' */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (ch === 0x27/* ' */) {\n        captureStart = captureEnd = state.position;\n        state.position++;\n      } else {\n        return true;\n      }\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a single quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a single quoted scalar');\n}\n\nfunction readDoubleQuotedScalar(state, nodeIndent) {\n  var captureStart,\n      captureEnd,\n      hexLength,\n      hexResult,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x22/* \" */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x22/* \" */) {\n      captureSegment(state, captureStart, state.position, true);\n      state.position++;\n      return true;\n\n    } else if (ch === 0x5C/* \\ */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (is_EOL(ch)) {\n        skipSeparationSpace(state, false, nodeIndent);\n\n        // TODO: rework to inline fn with no type cast?\n      } else if (ch < 256 && simpleEscapeCheck[ch]) {\n        state.result += simpleEscapeMap[ch];\n        state.position++;\n\n      } else if ((tmp = escapedHexLen(ch)) > 0) {\n        hexLength = tmp;\n        hexResult = 0;\n\n        for (; hexLength > 0; hexLength--) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if ((tmp = fromHexCode(ch)) >= 0) {\n            hexResult = (hexResult << 4) + tmp;\n\n          } else {\n            throwError(state, 'expected hexadecimal character');\n          }\n        }\n\n        state.result += charFromCodepoint(hexResult);\n\n        state.position++;\n\n      } else {\n        throwError(state, 'unknown escape sequence');\n      }\n\n      captureStart = captureEnd = state.position;\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a double quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a double quoted scalar');\n}\n\nfunction readFlowCollection(state, nodeIndent) {\n  var readNext = true,\n      _line,\n      _tag     = state.tag,\n      _result,\n      _anchor  = state.anchor,\n      following,\n      terminator,\n      isPair,\n      isExplicitPair,\n      isMapping,\n      overridableKeys = {},\n      keyNode,\n      keyTag,\n      valueNode,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x5B/* [ */) {\n    terminator = 0x5D;/* ] */\n    isMapping = false;\n    _result = [];\n  } else if (ch === 0x7B/* { */) {\n    terminator = 0x7D;/* } */\n    isMapping = true;\n    _result = {};\n  } else {\n    return false;\n  }\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  while (ch !== 0) {\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === terminator) {\n      state.position++;\n      state.tag = _tag;\n      state.anchor = _anchor;\n      state.kind = isMapping ? 'mapping' : 'sequence';\n      state.result = _result;\n      return true;\n    } else if (!readNext) {\n      throwError(state, 'missed comma between flow collection entries');\n    }\n\n    keyTag = keyNode = valueNode = null;\n    isPair = isExplicitPair = false;\n\n    if (ch === 0x3F/* ? */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following)) {\n        isPair = isExplicitPair = true;\n        state.position++;\n        skipSeparationSpace(state, true, nodeIndent);\n      }\n    }\n\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n    keyTag = state.tag;\n    keyNode = state.result;\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((isExplicitPair || state.line === _line) && ch === 0x3A/* : */) {\n      isPair = true;\n      ch = state.input.charCodeAt(++state.position);\n      skipSeparationSpace(state, true, nodeIndent);\n      composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n      valueNode = state.result;\n    }\n\n    if (isMapping) {\n      storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode);\n    } else if (isPair) {\n      _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode));\n    } else {\n      _result.push(keyNode);\n    }\n\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === 0x2C/* , */) {\n      readNext = true;\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      readNext = false;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a flow collection');\n}\n\nfunction readBlockScalar(state, nodeIndent) {\n  var captureStart,\n      folding,\n      chomping       = CHOMPING_CLIP,\n      detectedIndent = false,\n      textIndent     = nodeIndent,\n      emptyLines     = 0,\n      atMoreIndented = false,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x7C/* | */) {\n    folding = false;\n  } else if (ch === 0x3E/* > */) {\n    folding = true;\n  } else {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n\n  while (ch !== 0) {\n    ch = state.input.charCodeAt(++state.position);\n\n    if (ch === 0x2B/* + */ || ch === 0x2D/* - */) {\n      if (CHOMPING_CLIP === chomping) {\n        chomping = (ch === 0x2B/* + */) ? CHOMPING_KEEP : CHOMPING_STRIP;\n      } else {\n        throwError(state, 'repeat of a chomping mode identifier');\n      }\n\n    } else if ((tmp = fromDecimalCode(ch)) >= 0) {\n      if (tmp === 0) {\n        throwError(state, 'bad explicit indentation width of a block scalar; it cannot be less than one');\n      } else if (!detectedIndent) {\n        textIndent = nodeIndent + tmp - 1;\n        detectedIndent = true;\n      } else {\n        throwError(state, 'repeat of an indentation width identifier');\n      }\n\n    } else {\n      break;\n    }\n  }\n\n  if (is_WHITE_SPACE(ch)) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (is_WHITE_SPACE(ch));\n\n    if (ch === 0x23/* # */) {\n      do { ch = state.input.charCodeAt(++state.position); }\n      while (!is_EOL(ch) && (ch !== 0));\n    }\n  }\n\n  while (ch !== 0) {\n    readLineBreak(state);\n    state.lineIndent = 0;\n\n    ch = state.input.charCodeAt(state.position);\n\n    while ((!detectedIndent || state.lineIndent < textIndent) &&\n           (ch === 0x20/* Space */)) {\n      state.lineIndent++;\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (!detectedIndent && state.lineIndent > textIndent) {\n      textIndent = state.lineIndent;\n    }\n\n    if (is_EOL(ch)) {\n      emptyLines++;\n      continue;\n    }\n\n    // End of the scalar.\n    if (state.lineIndent < textIndent) {\n\n      // Perform the chomping.\n      if (chomping === CHOMPING_KEEP) {\n        state.result += common.repeat('\\n', emptyLines);\n      } else if (chomping === CHOMPING_CLIP) {\n        if (detectedIndent) { // i.e. only if the scalar is not empty.\n          state.result += '\\n';\n        }\n      }\n\n      // Break this `while` cycle and go to the funciton's epilogue.\n      break;\n    }\n\n    // Folded style: use fancy rules to handle line breaks.\n    if (folding) {\n\n      // Lines starting with white space characters (more-indented lines) are not folded.\n      if (is_WHITE_SPACE(ch)) {\n        atMoreIndented = true;\n        state.result += common.repeat('\\n', emptyLines + 1);\n\n      // End of more-indented block.\n      } else if (atMoreIndented) {\n        atMoreIndented = false;\n        state.result += common.repeat('\\n', emptyLines + 1);\n\n      // Just one line break - perceive as the same line.\n      } else if (emptyLines === 0) {\n        if (detectedIndent) { // i.e. only if we have already read some scalar content.\n          state.result += ' ';\n        }\n\n      // Several line breaks - perceive as different lines.\n      } else {\n        state.result += common.repeat('\\n', emptyLines);\n      }\n\n    // Literal style: just add exact number of line breaks between content lines.\n    } else if (detectedIndent) {\n      // If current line isn't the first one - count line break from the last content line.\n      state.result += common.repeat('\\n', emptyLines + 1);\n    } else {\n      // In case of the first content line - count only empty lines.\n      state.result += common.repeat('\\n', emptyLines);\n    }\n\n    detectedIndent = true;\n    emptyLines = 0;\n    captureStart = state.position;\n\n    while (!is_EOL(ch) && (ch !== 0)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    captureSegment(state, captureStart, state.position, false);\n  }\n\n  return true;\n}\n\nfunction readBlockSequence(state, nodeIndent) {\n  var _line,\n      _tag      = state.tag,\n      _anchor   = state.anchor,\n      _result   = [],\n      following,\n      detected  = false,\n      ch;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n\n    if (ch !== 0x2D/* - */) {\n      break;\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (!is_WS_OR_EOL(following)) {\n      break;\n    }\n\n    detected = true;\n    state.position++;\n\n    if (skipSeparationSpace(state, true, -1)) {\n      if (state.lineIndent <= nodeIndent) {\n        _result.push(null);\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      }\n    }\n\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);\n    _result.push(state.result);\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a sequence entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'sequence';\n    state.result = _result;\n    return true;\n  }\n  return false;\n}\n\nfunction readBlockMapping(state, nodeIndent, flowIndent) {\n  var following,\n      allowCompact,\n      _line,\n      _tag          = state.tag,\n      _anchor       = state.anchor,\n      _result       = {},\n      overridableKeys = {},\n      keyTag        = null,\n      keyNode       = null,\n      valueNode     = null,\n      atExplicitKey = false,\n      detected      = false,\n      ch;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    following = state.input.charCodeAt(state.position + 1);\n    _line = state.line; // Save the current line.\n\n    //\n    // Explicit notation case. There are two separate blocks:\n    // first for the key (denoted by \"?\") and second for the value (denoted by \":\")\n    //\n    if ((ch === 0x3F/* ? */ || ch === 0x3A/* : */) && is_WS_OR_EOL(following)) {\n\n      if (ch === 0x3F/* ? */) {\n        if (atExplicitKey) {\n          storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);\n          keyTag = keyNode = valueNode = null;\n        }\n\n        detected = true;\n        atExplicitKey = true;\n        allowCompact = true;\n\n      } else if (atExplicitKey) {\n        // i.e. 0x3A/* : */ === character after the explicit key.\n        atExplicitKey = false;\n        allowCompact = true;\n\n      } else {\n        throwError(state, 'incomplete explicit mapping pair; a key node is missed');\n      }\n\n      state.position += 1;\n      ch = following;\n\n    //\n    // Implicit notation case. Flow-style node as the key first, then \":\", and the value.\n    //\n    } else if (composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {\n\n      if (state.line === _line) {\n        ch = state.input.charCodeAt(state.position);\n\n        while (is_WHITE_SPACE(ch)) {\n          ch = state.input.charCodeAt(++state.position);\n        }\n\n        if (ch === 0x3A/* : */) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if (!is_WS_OR_EOL(ch)) {\n            throwError(state, 'a whitespace character is expected after the key-value separator within a block mapping');\n          }\n\n          if (atExplicitKey) {\n            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);\n            keyTag = keyNode = valueNode = null;\n          }\n\n          detected = true;\n          atExplicitKey = false;\n          allowCompact = false;\n          keyTag = state.tag;\n          keyNode = state.result;\n\n        } else if (detected) {\n          throwError(state, 'can not read an implicit mapping pair; a colon is missed');\n\n        } else {\n          state.tag = _tag;\n          state.anchor = _anchor;\n          return true; // Keep the result of `composeNode`.\n        }\n\n      } else if (detected) {\n        throwError(state, 'can not read a block mapping entry; a multiline key may not be an implicit key');\n\n      } else {\n        state.tag = _tag;\n        state.anchor = _anchor;\n        return true; // Keep the result of `composeNode`.\n      }\n\n    } else {\n      break; // Reading is done. Go to the epilogue.\n    }\n\n    //\n    // Common reading code for both explicit and implicit notations.\n    //\n    if (state.line === _line || state.lineIndent > nodeIndent) {\n      if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {\n        if (atExplicitKey) {\n          keyNode = state.result;\n        } else {\n          valueNode = state.result;\n        }\n      }\n\n      if (!atExplicitKey) {\n        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode);\n        keyTag = keyNode = valueNode = null;\n      }\n\n      skipSeparationSpace(state, true, -1);\n      ch = state.input.charCodeAt(state.position);\n    }\n\n    if (state.lineIndent > nodeIndent && (ch !== 0)) {\n      throwError(state, 'bad indentation of a mapping entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  //\n  // Epilogue.\n  //\n\n  // Special case: last mapping's node contains only the key in explicit notation.\n  if (atExplicitKey) {\n    storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);\n  }\n\n  // Expose the resulting mapping.\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'mapping';\n    state.result = _result;\n  }\n\n  return detected;\n}\n\nfunction readTagProperty(state) {\n  var _position,\n      isVerbatim = false,\n      isNamed    = false,\n      tagHandle,\n      tagName,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x21/* ! */) return false;\n\n  if (state.tag !== null) {\n    throwError(state, 'duplication of a tag property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  if (ch === 0x3C/* < */) {\n    isVerbatim = true;\n    ch = state.input.charCodeAt(++state.position);\n\n  } else if (ch === 0x21/* ! */) {\n    isNamed = true;\n    tagHandle = '!!';\n    ch = state.input.charCodeAt(++state.position);\n\n  } else {\n    tagHandle = '!';\n  }\n\n  _position = state.position;\n\n  if (isVerbatim) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (ch !== 0 && ch !== 0x3E/* > */);\n\n    if (state.position < state.length) {\n      tagName = state.input.slice(_position, state.position);\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      throwError(state, 'unexpected end of the stream within a verbatim tag');\n    }\n  } else {\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n\n      if (ch === 0x21/* ! */) {\n        if (!isNamed) {\n          tagHandle = state.input.slice(_position - 1, state.position + 1);\n\n          if (!PATTERN_TAG_HANDLE.test(tagHandle)) {\n            throwError(state, 'named tag handle cannot contain such characters');\n          }\n\n          isNamed = true;\n          _position = state.position + 1;\n        } else {\n          throwError(state, 'tag suffix cannot contain exclamation marks');\n        }\n      }\n\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    tagName = state.input.slice(_position, state.position);\n\n    if (PATTERN_FLOW_INDICATORS.test(tagName)) {\n      throwError(state, 'tag suffix cannot contain flow indicator characters');\n    }\n  }\n\n  if (tagName && !PATTERN_TAG_URI.test(tagName)) {\n    throwError(state, 'tag name cannot contain such characters: ' + tagName);\n  }\n\n  if (isVerbatim) {\n    state.tag = tagName;\n\n  } else if (_hasOwnProperty.call(state.tagMap, tagHandle)) {\n    state.tag = state.tagMap[tagHandle] + tagName;\n\n  } else if (tagHandle === '!') {\n    state.tag = '!' + tagName;\n\n  } else if (tagHandle === '!!') {\n    state.tag = 'tag:yaml.org,2002:' + tagName;\n\n  } else {\n    throwError(state, 'undeclared tag handle \"' + tagHandle + '\"');\n  }\n\n  return true;\n}\n\nfunction readAnchorProperty(state) {\n  var _position,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x26/* & */) return false;\n\n  if (state.anchor !== null) {\n    throwError(state, 'duplication of an anchor property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an anchor node must contain at least one character');\n  }\n\n  state.anchor = state.input.slice(_position, state.position);\n  return true;\n}\n\nfunction readAlias(state) {\n  var _position, alias,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x2A/* * */) return false;\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an alias node must contain at least one character');\n  }\n\n  alias = state.input.slice(_position, state.position);\n\n  if (!state.anchorMap.hasOwnProperty(alias)) {\n    throwError(state, 'unidentified alias \"' + alias + '\"');\n  }\n\n  state.result = state.anchorMap[alias];\n  skipSeparationSpace(state, true, -1);\n  return true;\n}\n\nfunction composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {\n  var allowBlockStyles,\n      allowBlockScalars,\n      allowBlockCollections,\n      indentStatus = 1, // 1: this>parent, 0: this=parent, -1: this<parent\n      atNewLine  = false,\n      hasContent = false,\n      typeIndex,\n      typeQuantity,\n      type,\n      flowIndent,\n      blockIndent;\n\n  if (state.listener !== null) {\n    state.listener('open', state);\n  }\n\n  state.tag    = null;\n  state.anchor = null;\n  state.kind   = null;\n  state.result = null;\n\n  allowBlockStyles = allowBlockScalars = allowBlockCollections =\n    CONTEXT_BLOCK_OUT === nodeContext ||\n    CONTEXT_BLOCK_IN  === nodeContext;\n\n  if (allowToSeek) {\n    if (skipSeparationSpace(state, true, -1)) {\n      atNewLine = true;\n\n      if (state.lineIndent > parentIndent) {\n        indentStatus = 1;\n      } else if (state.lineIndent === parentIndent) {\n        indentStatus = 0;\n      } else if (state.lineIndent < parentIndent) {\n        indentStatus = -1;\n      }\n    }\n  }\n\n  if (indentStatus === 1) {\n    while (readTagProperty(state) || readAnchorProperty(state)) {\n      if (skipSeparationSpace(state, true, -1)) {\n        atNewLine = true;\n        allowBlockCollections = allowBlockStyles;\n\n        if (state.lineIndent > parentIndent) {\n          indentStatus = 1;\n        } else if (state.lineIndent === parentIndent) {\n          indentStatus = 0;\n        } else if (state.lineIndent < parentIndent) {\n          indentStatus = -1;\n        }\n      } else {\n        allowBlockCollections = false;\n      }\n    }\n  }\n\n  if (allowBlockCollections) {\n    allowBlockCollections = atNewLine || allowCompact;\n  }\n\n  if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {\n    if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {\n      flowIndent = parentIndent;\n    } else {\n      flowIndent = parentIndent + 1;\n    }\n\n    blockIndent = state.position - state.lineStart;\n\n    if (indentStatus === 1) {\n      if (allowBlockCollections &&\n          (readBlockSequence(state, blockIndent) ||\n           readBlockMapping(state, blockIndent, flowIndent)) ||\n          readFlowCollection(state, flowIndent)) {\n        hasContent = true;\n      } else {\n        if ((allowBlockScalars && readBlockScalar(state, flowIndent)) ||\n            readSingleQuotedScalar(state, flowIndent) ||\n            readDoubleQuotedScalar(state, flowIndent)) {\n          hasContent = true;\n\n        } else if (readAlias(state)) {\n          hasContent = true;\n\n          if (state.tag !== null || state.anchor !== null) {\n            throwError(state, 'alias node should not have any properties');\n          }\n\n        } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {\n          hasContent = true;\n\n          if (state.tag === null) {\n            state.tag = '?';\n          }\n        }\n\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else if (indentStatus === 0) {\n      // Special case: block sequences are allowed to have same indentation level as the parent.\n      // http://www.yaml.org/spec/1.2/spec.html#id2799784\n      hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);\n    }\n  }\n\n  if (state.tag !== null && state.tag !== '!') {\n    if (state.tag === '?') {\n      for (typeIndex = 0, typeQuantity = state.implicitTypes.length;\n           typeIndex < typeQuantity;\n           typeIndex += 1) {\n        type = state.implicitTypes[typeIndex];\n\n        // Implicit resolving is not allowed for non-scalar types, and '?'\n        // non-specific tag is only assigned to plain scalars. So, it isn't\n        // needed to check for 'kind' conformity.\n\n        if (type.resolve(state.result)) { // `state.result` updated in resolver if matched\n          state.result = type.construct(state.result);\n          state.tag = type.tag;\n          if (state.anchor !== null) {\n            state.anchorMap[state.anchor] = state.result;\n          }\n          break;\n        }\n      }\n    } else if (_hasOwnProperty.call(state.typeMap, state.tag)) {\n      type = state.typeMap[state.tag];\n\n      if (state.result !== null && type.kind !== state.kind) {\n        throwError(state, 'unacceptable node kind for !<' + state.tag + '> tag; it should be \"' + type.kind + '\", not \"' + state.kind + '\"');\n      }\n\n      if (!type.resolve(state.result)) { // `state.result` updated in resolver if matched\n        throwError(state, 'cannot resolve a node with !<' + state.tag + '> explicit tag');\n      } else {\n        state.result = type.construct(state.result);\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else {\n      throwError(state, 'unknown tag !<' + state.tag + '>');\n    }\n  }\n\n  if (state.listener !== null) {\n    state.listener('close', state);\n  }\n  return state.tag !== null ||  state.anchor !== null || hasContent;\n}\n\nfunction readDocument(state) {\n  var documentStart = state.position,\n      _position,\n      directiveName,\n      directiveArgs,\n      hasDirectives = false,\n      ch;\n\n  state.version = null;\n  state.checkLineBreaks = state.legacy;\n  state.tagMap = {};\n  state.anchorMap = {};\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (state.lineIndent > 0 || ch !== 0x25/* % */) {\n      break;\n    }\n\n    hasDirectives = true;\n    ch = state.input.charCodeAt(++state.position);\n    _position = state.position;\n\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    directiveName = state.input.slice(_position, state.position);\n    directiveArgs = [];\n\n    if (directiveName.length < 1) {\n      throwError(state, 'directive name must not be less than one character in length');\n    }\n\n    while (ch !== 0) {\n      while (is_WHITE_SPACE(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      if (ch === 0x23/* # */) {\n        do { ch = state.input.charCodeAt(++state.position); }\n        while (ch !== 0 && !is_EOL(ch));\n        break;\n      }\n\n      if (is_EOL(ch)) break;\n\n      _position = state.position;\n\n      while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      directiveArgs.push(state.input.slice(_position, state.position));\n    }\n\n    if (ch !== 0) readLineBreak(state);\n\n    if (_hasOwnProperty.call(directiveHandlers, directiveName)) {\n      directiveHandlers[directiveName](state, directiveName, directiveArgs);\n    } else {\n      throwWarning(state, 'unknown document directive \"' + directiveName + '\"');\n    }\n  }\n\n  skipSeparationSpace(state, true, -1);\n\n  if (state.lineIndent === 0 &&\n      state.input.charCodeAt(state.position)     === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 1) === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 2) === 0x2D/* - */) {\n    state.position += 3;\n    skipSeparationSpace(state, true, -1);\n\n  } else if (hasDirectives) {\n    throwError(state, 'directives end mark is expected');\n  }\n\n  composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);\n  skipSeparationSpace(state, true, -1);\n\n  if (state.checkLineBreaks &&\n      PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {\n    throwWarning(state, 'non-ASCII line breaks are interpreted as content');\n  }\n\n  state.documents.push(state.result);\n\n  if (state.position === state.lineStart && testDocumentSeparator(state)) {\n\n    if (state.input.charCodeAt(state.position) === 0x2E/* . */) {\n      state.position += 3;\n      skipSeparationSpace(state, true, -1);\n    }\n    return;\n  }\n\n  if (state.position < (state.length - 1)) {\n    throwError(state, 'end of the stream or a document separator is expected');\n  } else {\n    return;\n  }\n}\n\n\nfunction loadDocuments(input, options) {\n  input = String(input);\n  options = options || {};\n\n  if (input.length !== 0) {\n\n    // Add tailing `\\n` if not exists\n    if (input.charCodeAt(input.length - 1) !== 0x0A/* LF */ &&\n        input.charCodeAt(input.length - 1) !== 0x0D/* CR */) {\n      input += '\\n';\n    }\n\n    // Strip BOM\n    if (input.charCodeAt(0) === 0xFEFF) {\n      input = input.slice(1);\n    }\n  }\n\n  var state = new State(input, options);\n\n  // Use 0 as string terminator. That significantly simplifies bounds check.\n  state.input += '\\0';\n\n  while (state.input.charCodeAt(state.position) === 0x20/* Space */) {\n    state.lineIndent += 1;\n    state.position += 1;\n  }\n\n  while (state.position < (state.length - 1)) {\n    readDocument(state);\n  }\n\n  return state.documents;\n}\n\n\nfunction loadAll(input, iterator, options) {\n  var documents = loadDocuments(input, options), index, length;\n\n  for (index = 0, length = documents.length; index < length; index += 1) {\n    iterator(documents[index]);\n  }\n}\n\n\nfunction load(input, options) {\n  var documents = loadDocuments(input, options);\n\n  if (documents.length === 0) {\n    /*eslint-disable no-undefined*/\n    return undefined;\n  } else if (documents.length === 1) {\n    return documents[0];\n  }\n  throw new YAMLException('expected a single document in the stream, but found more');\n}\n\n\nfunction safeLoadAll(input, output, options) {\n  loadAll(input, output, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));\n}\n\n\nfunction safeLoad(input, options) {\n  return load(input, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));\n}\n\n\nmodule.exports.loadAll     = loadAll;\nmodule.exports.load        = load;\nmodule.exports.safeLoadAll = safeLoadAll;\nmodule.exports.safeLoad    = safeLoad;\n","'use strict';\n\n\nvar loader = require('./js-yaml/loader');\n// var dumper = require('./js-yaml/dumper');\n\n\nfunction deprecated(name) {\n  return function () {\n    throw new Error('Function ' + name + ' is deprecated and cannot be used.');\n  };\n}\n\n\nmodule.exports.Type                = require('./js-yaml/type');\nmodule.exports.Schema              = require('./js-yaml/schema');\nmodule.exports.FAILSAFE_SCHEMA     = require('./js-yaml/schema/failsafe');\nmodule.exports.JSON_SCHEMA         = require('./js-yaml/schema/json');\nmodule.exports.CORE_SCHEMA         = require('./js-yaml/schema/core');\nmodule.exports.DEFAULT_SAFE_SCHEMA = require('./js-yaml/schema/default_safe');\nmodule.exports.DEFAULT_FULL_SCHEMA = require('./js-yaml/schema/default_full');\nmodule.exports.load                = loader.load;\nmodule.exports.loadAll             = loader.loadAll;\nmodule.exports.safeLoad            = loader.safeLoad;\nmodule.exports.safeLoadAll         = loader.safeLoadAll;\n// module.exports.dump                = dumper.dump;\n// module.exports.safeDump            = dumper.safeDump;\nmodule.exports.YAMLException       = require('./js-yaml/exception');\n\n// Deprecated schema names from JS-YAML 2.0.x\nmodule.exports.MINIMAL_SCHEMA = require('./js-yaml/schema/failsafe');\nmodule.exports.SAFE_SCHEMA    = require('./js-yaml/schema/default_safe');\nmodule.exports.DEFAULT_SCHEMA = require('./js-yaml/schema/default_full');\n\n// Deprecated functions from JS-YAML 1.x.x\nmodule.exports.scan           = deprecated('scan');\nmodule.exports.parse          = deprecated('parse');\nmodule.exports.compose        = deprecated('compose');\nmodule.exports.addConstructor = deprecated('addConstructor');\n","'use strict';\n\n\nvar yaml = require('./lib/js-yaml.js');\n\n\nmodule.exports = yaml;\n","import Utils from '../utils/utils';\nimport * as URLs from '../utils/urls';\nimport { isGlobalReference } from './globals';\n\nimport JSZip from 'jszip';\nimport yaml from 'js-yaml';\n\nexport class SceneBundle {\n\n    constructor(url, path, parent = null) {\n        this.url = url;\n\n        // If a base path was provided, use it for resolving local bundle resources only if\n        // the base path is absolute, or this bundle's path is relative\n        if (path && (!URLs.isRelativeURL(path) || URLs.isRelativeURL(this.url))) {\n            this.path = path;\n        }\n        else {\n            this.path = URLs.pathForURL(this.url);\n        }\n\n        this.path_for_parent = path || this.path; // for resolving paths relative to a parent bundle\n        this.parent = parent;\n\n        // An ancestor bundle may be a container (e.g. zip file) that needs to resolve relative paths\n        // for any scenes it contains, e.g. `root.zip` has a `root.yaml` that includes a `folder/child.yaml`:\n        // resources within `child.yaml` must be resolved through the bundle for `root.zip`\n        this.container = null;\n        if (this.parent) {\n            if (this.parent.container) {\n                this.container = this.parent.container;\n            }\n            else if (this.parent.isContainer()) {\n                this.container = this.parent;\n            }\n        }\n    }\n\n    load() {\n        return loadResource(this.url);\n    }\n\n    // Info for retrieving a specific resource from this bundle\n    // url: fully qualified URL to retrieve the content of the resource (e.g. zips will transform this to blob URL)\n    // path: original path of the resource within the bundle (for resolving paths up the bundle tree)\n    // type: file extension (used for determining bundle type, `yaml` or `zip`)\n    resourceFor(url) {\n        return {\n            url: this.urlFor(url),\n            path: this.pathFor(url),\n            type: this.typeFor(url)\n        };\n    }\n\n    urlFor(url) {\n        if (isGlobalReference(url)) {\n            return url;\n        }\n\n        if (URLs.isRelativeURL(url) && this.container) {\n            return this.parent.urlFor(this.path_for_parent + url);\n        }\n        return URLs.addBaseURL(url, this.path);\n    }\n\n    pathFor(url) {\n        return URLs.pathForURL(url);\n    }\n\n    typeFor(url) {\n        return URLs.extensionForURL(url);\n    }\n\n    isContainer() {\n        return false;\n    }\n\n}\n\nexport class ZipSceneBundle extends SceneBundle {\n\n    constructor(url, path, parent) {\n        super(url, path, parent);\n        this.zip = null;\n        this.files = {};\n        this.root = null;\n        this.path = '';\n    }\n\n    isContainer() {\n        return true;\n    }\n\n    async load() {\n        this.zip = new JSZip();\n\n        if (typeof this.url === 'string') {\n            const { body } = await Utils.io(this.url, 60000, 'arraybuffer');\n            await this.zip.loadAsync(body);\n            await this.parseZipFiles();\n            return this.loadRoot();\n        } else {\n            return this;\n        }\n    }\n\n    urlFor(url) {\n        if (isGlobalReference(url)) {\n            return url;\n        }\n\n        if (URLs.isRelativeURL(url)) {\n            return this.urlForZipFile(URLs.flattenRelativeURL(url));\n        }\n        return super.urlFor(url);\n    }\n\n    typeFor(url) {\n        if (URLs.isRelativeURL(url)) {\n            return this.typeForZipFile(url);\n        }\n        return super.typeFor(url);\n    }\n\n    loadRoot() {\n        this.findRoot();\n        return loadResource(this.urlForZipFile(this.root));\n    }\n\n    findRoot() {\n        // There must be a single YAML file at the top level of the zip\n        const yamls = Object.keys(this.files)\n            .filter(path => this.files[path].depth === 0)\n            .filter(path => URLs.extensionForURL(path) === 'yaml');\n\n        if (yamls.length === 1) {\n            this.root = yamls[0];\n        }\n\n        // No root found\n        if (!this.root) {\n            let msg = `Could not find root scene for bundle '${this.url}': `;\n            msg += 'The zip archive\\'s root level must contain a single scene file with the \\'.yaml\\' extension. ';\n            if (yamls.length > 0) {\n                msg += `Found multiple YAML files at the root level: ${yamls.map(r => '\\'' + r + '\\'' ).join(', ')}.`;\n            }\n            else {\n                msg += 'Found NO YAML files at the root level.';\n            }\n            throw Error(msg);\n        }\n    }\n\n    async parseZipFiles() {\n        let paths = [];\n        let queue = [];\n        this.zip.forEach((path, file) => {\n            if (!file.dir) {\n                paths.push(path);\n                queue.push(file.async('arraybuffer'));\n            }\n        });\n\n        const data = await Promise.all(queue);\n        for (let i = 0; i < data.length; i++) {\n            let path = paths[i];\n            let depth = path.split('/').length - 1;\n            this.files[path] = {\n                data: data[i],\n                type: URLs.extensionForURL(path),\n                depth\n            };\n        }\n    }\n\n    urlForZipFile(file) {\n        if (this.files[file]) {\n            if (!this.files[file].url) {\n                this.files[file].url = URLs.createObjectURL(new Blob([this.files[file].data]));\n            }\n\n            return this.files[file].url;\n        }\n    }\n\n    typeForZipFile(file) {\n        return this.files[file] && this.files[file].type;\n    }\n\n}\n\nexport function createSceneBundle(url, path, parent, type = null) {\n    if ((type != null && type === 'zip') ||\n        (typeof url === 'string' && !URLs.isLocalURL(url) && URLs.extensionForURL(url) === 'zip')) {\n        return new ZipSceneBundle(url, path, parent);\n    }\n    return new SceneBundle(url, path, parent);\n}\n\nfunction parseResource (body) {\n    // jsyaml 'json' option allows duplicate keys\n    // Keeping this for backwards compatibility, but should consider migrating to requiring\n    // unique keys, as this is YAML spec. But Tangram ES currently accepts dupe keys as well,\n    // so should consider how best to unify.\n    return yaml.safeLoad(body, { json: true });\n}\n\nfunction loadResource (source) {\n    return new Promise((resolve, reject) => {\n        if (typeof source === 'string') {\n            Utils.io(source).then(({ body }) => {\n                try {\n                    resolve(parseResource(body));\n                }\n                catch(e) {\n                    reject(e);\n                }\n            }, reject);\n        } else {\n            // shallow copy to avoid modifying provided object, allowing a single config object to be loaded multiple times\n            // TODO: address possible modifications to nested properties (mostly harmless / due to data normalization)\n            source = Object.assign({}, source);\n            resolve(source);\n        }\n    });\n}\n","import log from '../utils/log';\nimport GLSL from '../gl/glsl';\nimport * as URLs from '../utils/urls';\nimport mergeObjects from '../utils/merge';\nimport subscribeMixin from '../utils/subscribe';\nimport { getPropertyPath, setPropertyPath } from '../utils/props';\nimport { flattenGlobalProperties, applyGlobalProperties, isGlobalSubstitution } from './globals';\nimport { createSceneBundle } from './scene_bundle';\nimport { isReserved } from '../styles/layer';\n\nconst SceneLoader = {\n\n    // Load scenes definitions from URL & proprocess\n    async loadScene(url, { path, type } = {}) {\n        const errors = [];\n        const texture_nodes = {};\n        const scene = await this.loadSceneRecursive({ url, path, type }, null, texture_nodes, errors);\n        const { config, bundle } = this.finalize(scene);\n        if (!config) {\n            // root scene failed to load, reject with first error\n            throw errors[0];\n        }\n        else if (errors.length > 0) {\n            // scene loaded, but some imports had errors\n            errors.forEach(error => {\n                const message = `Failed to import scene: ${error.url}`;\n                log('error', message, error);\n                this.trigger('error', { type: 'scene_import', message, error, url: error.url });\n            });\n        }\n        return { config, bundle, texture_nodes };\n    },\n\n    // Loads scene files from URL, recursively loading 'import' scenes\n    // Optional *initial* path only (won't be passed to recursive 'import' calls)\n    // Useful for loading resources in base scene file from a separate location\n    // (e.g. in Tangram Play, when modified local scene should still refer to original resource URLs)\n    async loadSceneRecursive({ url, path, type }, parent, texture_nodes = {}, errors = []) {\n        if (!url) {\n            return {};\n        }\n\n        const bundle = createSceneBundle(url, path, parent, type);\n\n        try {\n            let config = await bundle.load();\n            if (config.import == null) {\n                this.normalize(config, bundle, texture_nodes);\n                return { config, bundle };\n            }\n\n            // accept single entry or array\n            if (!Array.isArray(config.import)) {\n                config.import = [config.import]; // convert to array\n            }\n\n            // Collect URLs of scenes to import\n            const imports = [];\n            config.import.forEach(url => {\n                // Convert scene objects to URLs\n                if (typeof url === 'object') {\n                    url = URLs.createObjectURL(new Blob([JSON.stringify(url)]));\n                }\n                imports.push(bundle.resourceFor(url));\n            });\n            delete config.import; // don't want to merge this property\n\n            // load and normalize imports\n            const queue = imports.map(resource => this.loadSceneRecursive(resource, bundle, texture_nodes, errors));\n            const configs = (await Promise.all(queue))\n                .map(r => this.normalize(r.config, r.bundle, texture_nodes))\n                .map(r => r.config);\n\n            this.normalize(config, bundle, texture_nodes); // last normalize parent\n            config = mergeObjects(...configs, config);\n            return { config, bundle, texture_nodes };\n        }\n        catch (error) {\n            // Collect scene load errors as we go\n            error.url = url;\n            errors.push(error);\n            return {};\n        }\n    },\n\n    // Normalize properties that should be adjust within each local scene file (usually by path)\n    normalize(config, bundle, texture_nodes = {}) {\n        this.normalizeDataSources(config, bundle);\n        this.normalizeFonts(config, bundle);\n        this.normalizeTextures(config, bundle);\n        this.collectTextures(config, bundle, texture_nodes);\n        return { config, bundle, texture_nodes };\n    },\n\n    // Expand paths for data source\n    normalizeDataSources(config, bundle) {\n        config.sources = config.sources || {};\n\n        for (const sn in config.sources) {\n            this.normalizeDataSource(config.sources[sn], bundle);\n        }\n\n        return config;\n    },\n\n    normalizeDataSource(source, bundle) {\n        source.url = bundle.urlFor(source.url);\n\n        // composite untiled raster sources\n        if (Array.isArray(source.composite)) {\n            source.composite.forEach(c => c.url = bundle.urlFor(c.url));\n        }\n\n        // custom scripts\n        if (source.scripts) {\n            // convert legacy array-style scripts to object format (script URL is used as both key and value)\n            if (Array.isArray(source.scripts)) {\n                source.scripts = source.scripts.reduce((val, cur) => { val[cur] = cur; return val; }, {});\n            }\n\n            // resolve URLs for external scripts\n            for (const s in source.scripts) {\n                source.scripts[s] = bundle.urlFor(source.scripts[s]);\n            }\n        }\n\n        return source;\n    },\n\n    // Expand paths for fonts\n    normalizeFonts(config, bundle) {\n        config.fonts = config.fonts || {};\n\n        // Add scene base path for URL-based fonts (skip \"external\" fonts referencing CSS-loaded resources)\n        const fonts = Object.values(config.fonts).filter(face => face !== 'external');\n        for (const face of fonts) {\n            const faces = (Array.isArray(face) ? face : [face]); // can be single value or array\n            faces.forEach(face => face.url = bundle.urlFor(face.url));\n        }\n\n        return config;\n    },\n\n    // Expand paths and centralize texture definitions for a scene object\n    normalizeTextures(config, bundle) {\n        config.textures = config.textures || {};\n\n        // Add current scene's base path to globally defined textures\n        // Only adds path for textures with relative URLs, so textures in imported scenes get the base\n        // path of their immediate scene file\n        if (config.textures) {\n            for (const tn in config.textures) {\n                const texture = config.textures[tn];\n                if (texture.url) {\n                    texture.url = bundle.urlFor(texture.url);\n                }\n            }\n        }\n    },\n\n    // Move inline (URL string) textures to the scene's top-level set of textures (config.textures).\n    // There are 4 such cases of textures:\n    // - in a style's `texture` property\n    // - in a style's `material` properties\n    // - in a style's custom uniforms (`shaders.uniforms`)\n    // - in a draw groups `texture` property\n    collectTextures(config, bundle, texture_nodes) {\n        // Inline textures in styles\n        if (config.styles) {\n            for (const sn in config.styles) {\n                const style = config.styles[sn];\n\n                // Style `texture`\n                const tex = style.texture;\n                if (typeof tex === 'string' && !config.textures[tex]) {\n                    const path = ['styles', sn, 'texture'];\n                    this.addTextureNode(path, bundle, texture_nodes);\n                }\n\n                // Material\n                if (style.material) {\n                    ['emission', 'ambient', 'diffuse', 'specular', 'normal'].forEach(prop => {\n                        // Material property has a texture\n                        const tex = style.material[prop] != null && style.material[prop].texture;\n                        if (typeof tex === 'string' && !config.textures[tex]) {\n                            const path = ['styles', sn, 'material', prop, 'texture'];\n                            this.addTextureNode(path, bundle, texture_nodes);\n                        }\n                    });\n                }\n            }\n        }\n\n        // Inline textures in shader uniforms\n        if (config.styles) {\n            for (const sn in config.styles) {\n                const style = config.styles[sn];\n\n                if (style.shaders && style.shaders.uniforms) {\n                    GLSL.parseUniforms(style.shaders.uniforms).forEach(({ type, value, path }) => {\n                        // Texture by URL (string-named texture not referencing existing texture definition)\n                        if (type === 'sampler2D' && typeof value === 'string' && !config.textures[value]) {\n                            const texture_path = ['styles', sn, 'shaders', 'uniforms', ...path];\n                            this.addTextureNode(texture_path, bundle, texture_nodes);\n                        }\n                    });\n                }\n            }\n        }\n\n        // Inline textures in draw blocks\n        if (config.layers) {\n            const stack = [config.layers];\n            const path_stack = [['layers']];\n            while (stack.length > 0) {\n                const layer = stack.pop();\n                const layer_path = path_stack.pop();\n\n                // only recurse into objects\n                if (typeof layer !== 'object' || Array.isArray(layer)) {\n                    continue;\n                }\n\n                for (const prop in layer) {\n                    if (prop === 'draw') { // process draw groups for current layer\n                        const draws = layer[prop];\n                        for (const group in draws) {\n                            if (draws[group].texture) {\n                                const tex = draws[group].texture;\n                                if (typeof tex === 'string' && !config.textures[tex]) {\n                                    const path = [...layer_path, prop, 'draw', group, 'texture'];\n                                    this.addTextureNode(path, bundle, texture_nodes);\n                                }\n                            }\n\n                            // special handling for outlines :(\n                            if (draws[group].outline && draws[group].outline.texture) {\n                                const tex = draws[group].outline.texture;\n                                if (typeof tex === 'string' && !config.textures[tex]) {\n                                    const path = [...layer_path, prop, 'draw', group, 'outline', 'texture'];\n                                    this.addTextureNode(path, bundle, texture_nodes);\n                                }\n                            }\n                        }\n\n                    }\n                    else if (isReserved(prop)) {\n                        continue; // skip reserved keyword\n                    }\n                    else {\n                        stack.push(layer[prop]); // traverse sublayer\n                        path_stack.push([...layer_path, prop]);\n                    }\n                }\n            }\n        }\n    },\n\n    addTextureNode (path, bundle, texture_nodes) {\n        const pathKey = JSON.stringify(path);\n        texture_nodes[pathKey] = {\n            path,\n            bundle\n        };\n    },\n\n    // Hoist any remaining inline texture nodes that don't have a corresponding named texture\n    // base_bundle is the bundle for the root scene, for resolving textures from global properties\n    hoistTextureNodes (config, base_bundle, texture_nodes = {}) {\n        for(const { path, bundle } of Object.values(texture_nodes)) {\n            const curValue = getPropertyPath(config, path);\n\n            // Make sure current property values is a string to account for global property substitutions\n            // e.g. shader uniforms are ambiguous, could be replaced with string value indicating texture,\n            // but could also be a float, an array indicating vector, etc.\n            if (typeof curValue === 'string' && config.textures[curValue] == null) {\n                if (isGlobalSubstitution(config, path)) {\n                    // global substituions are resolved against the base scene path, not the import they came from\n                    const url = base_bundle.urlFor(curValue);\n                    config.textures[curValue] = { url };\n                }\n                else {\n                    // non-global textures are resolved against the import they came from\n                    const url = bundle.urlFor(curValue);\n                    config.textures[url] = { url };\n                    setPropertyPath(config, path, url);\n                }\n            }\n        }\n    },\n\n    // Substitutes global scene properties (those defined in the `config.global` object) for any style values\n    // of the form `global.`, for example `color: global.park_color` would be replaced with the value (if any)\n    // defined for the `park_color` property in `config.global.park_color`.\n    applyGlobalProperties(config) {\n        if (!config.global || Object.keys(config.global).length === 0) {\n            return config; // no global properties to transform\n        }\n\n        const globals = flattenGlobalProperties(config.global); // flatten nested globals for simpler string look-ups\n        return applyGlobalProperties(globals, config);\n    },\n\n    // Normalize some scene-wide settings that apply to the final, merged scene\n    finalize({ config, bundle }) {\n        if (!config) {\n            return {};\n        }\n\n        // Ensure top-level properties\n        config.global = config.global || {};\n        config.scene = config.scene || {};\n        config.cameras = config.cameras || {};\n        config.lights = config.lights || {};\n        config.styles = config.styles || {};\n        config.layers = config.layers || {};\n\n        // If only one camera specified, set it as default\n        if (config.camera) {\n            config.cameras.default = config.camera;\n        }\n\n        // If no cameras specified, create one\n        if (Object.keys(config.cameras).length === 0) {\n            config.cameras.default = {};\n        }\n\n        // If no lights specified, create default\n        if (Object.keys(config.lights).length === 0 ||\n            Object.keys(config.lights).every(i => config.lights[i].visible === false)) {\n            config.lights.default_light = {\n                type: 'directional'\n            };\n        }\n\n        return { config, bundle };\n    }\n\n};\n\nsubscribeMixin(SceneLoader);\n\nexport default SceneLoader;\n","import {TileID} from './tile_id';\n\nexport default class TilePyramid {\n\n    constructor() {\n        this.tiles = {};\n        this.max_proxy_descendant_depth = 6; // # of levels to search up/down for proxy tiles\n        this.max_proxy_ancestor_depth = 7;\n        this.children_cache = {}; // cache for children of coordinates\n    }\n\n    addTile(tile) {\n        // Add target tile\n        this.tiles[tile.key] = this.tiles[tile.key] || { descendants: 0 };\n        this.tiles[tile.key].tile = tile;\n\n        // Add to parents\n        while (tile.style_z >= 0) {\n            tile = TileID.parent(tile);\n            if (!tile) {\n                return;\n            }\n\n            if (!this.tiles[tile.key]) {\n                this.tiles[tile.key] = { descendants: 0 };\n            }\n            this.tiles[tile.key].descendants++;\n        }\n    }\n\n    removeTile(tile) {\n        // Remove target tile\n        if (this.tiles[tile.key]) {\n            delete this.tiles[tile.key].tile;\n\n            if (this.tiles[tile.key].descendants === 0) {\n                delete this.tiles[tile.key]; // remove whole tile in tree\n            }\n        }\n\n        // Decrement reference count up the tile pyramid\n        while (tile.style_z >= 0) {\n            tile = TileID.parent(tile);\n            if (!tile) {\n                return;\n            }\n\n            if (this.tiles[tile.key] && this.tiles[tile.key].descendants > 0) {\n                this.tiles[tile.key].descendants--;\n                if (this.tiles[tile.key].descendants === 0 && !this.tiles[tile.key].tile) {\n                    delete this.tiles[tile.key]; // remove whole tile in tree\n                }\n            }\n        }\n    }\n\n    // Find the parent tile for a given tile and style zoom level\n    getAncestor (tile) {\n        let level = 0;\n        while (level < this.max_proxy_ancestor_depth) {\n            tile = TileID.parent(tile);\n            if (!tile) {\n                return;\n            }\n\n            if (this.tiles[tile.key] &&\n                this.tiles[tile.key].tile &&\n                this.tiles[tile.key].tile.loaded) {\n                return this.tiles[tile.key].tile;\n            }\n\n            level++;\n        }\n    }\n\n    // Find the descendant tiles for a given tile and style zoom level\n    getDescendants (tile, level = 0) {\n        let descendants = [];\n        if (level < this.max_proxy_descendant_depth) {\n            let tiles = TileID.children(tile, this.children_cache);\n            if (!tiles) {\n                return;\n            }\n\n            tiles.forEach(t => {\n                if (this.tiles[t.key]) {\n                    if (this.tiles[t.key].tile &&\n                        this.tiles[t.key].tile.loaded) {\n                        descendants.push(this.tiles[t.key].tile);\n                    }\n                    else if (this.tiles[t.key].descendants > 0) { // didn't find any children, try next level\n                        descendants.push(...this.getDescendants(t, level + 1));\n                    }\n                }\n            });\n        }\n\n        return descendants;\n    }\n\n}\n","import Label from './label';\nimport LabelPoint from './label_point';\nimport {LabelLineStraight} from './label_line';\nimport Collision from './collision';\nimport OBB from '../utils/obb';\nimport Geo from '../utils/geo';\n\nlet visible = {};       // currently visible labels\nlet prev_visible = {};  // previously visible labels (in last collision run)\n\nexport default async function mainThreadLabelCollisionPass (tiles, view_zoom, hide_breach = false) {\n    // Swap/reset visible label set\n    prev_visible = visible; // save last visible label set\n    visible = {};           // initialize new visible label set\n\n    // Build label containers from tiles\n    let containers = buildLabels(tiles, view_zoom);\n\n    // Collide all labels in a single group\n    // TODO: maybe rename tile and style to group/subgroup?\n    Collision.startTile('main', { apply_repeat_groups: true, return_hidden: true });\n    Collision.addStyle('main', 'main');\n\n    // Adaptive collision grid, using a heuristic based on the tile with the most labels\n    const max_tile_label_count =\n        Math.max(0, ...Object.values(tiles)\n            .map(t => Object.values(t.meshes))\n            .flat()\n            .map(meshes => Math.max(0, ...meshes.map(mesh => mesh.labels ? Object.keys(mesh.labels).length : 0)))\n        );\n\n    const grid_divs = Math.floor(max_tile_label_count / Geo.tile_size); // heuristic of label density to tile size\n    if (grid_divs > 0) {\n        Collision.initGrid({\n            anchor: { x: Math.min(...tiles.map(t => t.min.x)), y: Math.min(...tiles.map(t => t.min.y)) },\n            span: tiles[0].span.x / grid_divs\n        });\n    }\n    else {\n        Collision.initGrid();\n    }\n\n    const labels = await Collision.collide(containers, 'main', 'main');\n\n    // Update label visiblity\n    let meshes = [];\n    labels.forEach(container => {\n        // Hide breach labels (those that cross tile boundaries) while tiles are loading, unless they\n        // were previously visible (otherwise fully loaded/collided breach labels will flicker in and out\n        // when new tiles load, even if they aren't adjacent)\n        let show = 0;\n        if (container.show === true &&\n            (!hide_breach || !container.label.breach || prev_visible[container.label.id])) {\n            show = 1;\n        }\n\n        if (show) {\n            visible[container.label.id] = true; // track visible labels\n        }\n\n        let changed = true; // check if label visibility changed on this collision pass\n\n        container.ranges.forEach(r => {\n            if (!changed) {\n                return; // skip rest of label if state hasn't changed\n            }\n\n            let mesh = container.mesh;\n            if (!mesh.valid) {\n                return;\n            }\n\n            let off = mesh.vertex_layout.offset.a_shape; // byte offset (within each vertex) of attribute\n            let stride = mesh.vertex_layout.stride;      // byte stride per vertex\n\n            for (let i=0; i < r[1]; i++) {\n                // NB: +6 is because attribute is a short int (2 bytes each), and we're skipping to 3rd element, 6=3*2\n                if (mesh.vertex_data[r[0] + i * stride + off + 6] === show) {\n                    changed = false;\n                    return; // label hasn't changed states, skip further updates\n                }\n                mesh.vertex_data[r[0] + i * stride + off + 6] = show;\n            }\n\n            if (meshes.indexOf(mesh) === -1) {\n                meshes.push(mesh);\n            }\n        });\n    });\n\n    // Upload updated meshes and make them visible\n    meshes.forEach(mesh => mesh.upload());\n    tiles.forEach(t => t.swapPendingLabels());\n\n    return { labels, containers }; // currently returned for debugging\n}\n\nfunction buildLabels (tiles, view_zoom) {\n    const labels = {};\n    let containers = {};\n\n    // Collect labels from each tile and turn into new label instances\n    tiles.forEach(tile => {\n        const units_per_meter = Geo.unitsPerMeter(tile.coords.z); // scale from tile units to mercator meters\n        const zoom_scale = Math.pow(2, view_zoom - tile.style_z); // adjust label size by view zoom\n        const size_scale = units_per_meter * zoom_scale; // scale from tile units to zoom-adjusted meters\n        const meters_per_pixel = Geo.metersPerPixel(view_zoom);\n\n        // First pass: create label instances and centralize collision containers\n        // Combine existing (previously collided) and pending (waiting to be collided for first time) meshes\n        const tile_meshes = Object.assign({}, tile.meshes, tile.pending_label_meshes);\n        for (let style in tile_meshes) {\n            const meshes = tile_meshes[style];\n            meshes.forEach(mesh => {\n                if (mesh.labels) {\n                    for (let label_id in mesh.labels) {\n                        // For proxy tiles, only allow visible labels to be *hidden* by further collisions,\n                        // don't allow new ones to appear. Promotes label stability and prevents thrash\n                        // from different labels (often not thematically relevant given the different zoom level of\n                        // the proxy tile content, e.g. random POIs popping in/out when zooming out to city-wide view).\n                        if (tile.isProxy() && !prev_visible[label_id]) {\n                            continue;\n                        }\n\n                        const params = mesh.labels[label_id].container.label;\n                        const linked = mesh.labels[label_id].container.linked;\n                        const ranges = mesh.labels[label_id].ranges;\n                        // const debug = Object.assign({}, mesh.labels[label_id].debug, { tile, params, label_id });\n\n                        let label = labels[label_id] = {};\n                        label.discard = discard.bind(label);\n                        label.build_id = tile.build_id; // original order in which tiles were built\n\n                        Object.assign(label, params);\n                        label.layout = Object.assign({}, params.layout); // TODO: ideally remove need to copy props here\n                        label.layout.repeat_scale = 0.75; // looser second pass on repeat groups, to weed out repeats near tile edges\n                        label.layout.repeat_distance = label.layout.repeat_distance || 0;\n                        label.layout.repeat_distance /= size_scale; // TODO: where should this be scaled?\n                        label.position = [ // don't overwrite referenced values\n                            label.position[0] / units_per_meter + tile.min.x,\n                            label.position[1] / units_per_meter + tile.min.y\n                        ];\n                        label.unit_scale = meters_per_pixel;\n\n                        if (label.type === 'point') { // TODO: move to integer constants to avoid excess string copies\n                            LabelPoint.prototype.updateBBoxes.call(label);\n                        }\n                        else if (label.type === 'straight') {\n                            LabelLineStraight.prototype.updateBBoxes.call(label, label.position, label.size, label.angle, label.angle, label.offset);\n                        }\n                        else if (params.obbs) {\n                            // NB: this is a very rough approximation of curved label collision at intermediate zooms,\n                            // because the position/scale of each collision box isn't correctly updated; however,\n                            // it's good enough to provide some additional label coverage, with less overhead\n                            const obbs = params.obbs.map(o => {\n                                let { x, y, a, w, h } = o;\n                                x = x / units_per_meter + tile.min.x;\n                                y = y / units_per_meter + tile.min.y;\n                                w /= size_scale;\n                                h /= size_scale;\n                                return new OBB(x, y, a, w, h);\n                            });\n                            label.obbs = obbs;\n                            label.aabbs = obbs.map(o => o.getExtent());\n                        }\n\n                        containers[label_id] = {\n                            label,\n                            linked,\n                            ranges,\n                            mesh,\n                            // debug\n                        };\n                    }\n                }\n            });\n        }\n    });\n\n    // Resolve links between label containers\n    for (let c in containers) {\n        const container = containers[c];\n        if (container.linked) {\n            container.linked = containers[container.linked];\n        }\n        // NB: if linked label not found, it was discarded in initial tile collision pass\n    }\n\n    // Convert container map to array\n    containers = Object.keys(containers).map(k => containers[k]);\n    return containers;\n}\n\n// Generic discard function for labels, does simple occlusion with one or more bounding boxes\n// (no additional logic to try alternate anchors or other layout options, etc.)\nfunction discard (bboxes, exclude = null) {\n    if (this.obb) { // single collision box\n        return Label.prototype.occluded.call(this, bboxes, exclude);\n    }\n    else if (this.obbs) { // mutliple collision boxes\n        for (let i = 0; i < this.obbs.length; i++){\n            let aabb = this.aabbs[i];\n            let obb = this.obbs[i];\n            let obj = { aabb, obb };\n\n            let should_discard = Label.prototype.occluded.call(obj, bboxes, exclude);\n            if (should_discard) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n","import Tile from './tile';\nimport {TileID} from './tile_id';\nimport TilePyramid from './tile_pyramid';\nimport Geo from '../utils/geo';\nimport mainThreadLabelCollisionPass from '../labels/main_pass';\nimport log from '../utils/log';\nimport WorkerBroker from '../utils/worker_broker';\nimport Task from '../utils/task';\n\nexport default class TileManager {\n\n    constructor({ scene }) {\n        this.scene = scene;\n        this.tiles = {};\n        this.pyramid = new TilePyramid();\n        this.visible_coords = {};\n        this.queued_coords = [];\n        this.building_tiles = null;\n        this.renderable_tiles = [];\n        this.collision = {\n            tile_keys: null,\n            mesh_set: null,\n            zoom: null,\n            zoom_steps: 3 // divisions per zoom at which labels are re-collided (e.g. 0, 0.33, 0.66)\n        };\n\n        // Provide a hook for this object to be called from worker threads\n        this.main_thread_target = ['TileManager', this.scene.id].join('_');\n        WorkerBroker.addTarget(this.main_thread_target, this);\n    }\n\n    destroy() {\n        this.forEachTile(tile => tile.destroy());\n        this.tiles = {};\n        this.pyramid = null;\n        this.visible_coords = {};\n        this.queued_coords = [];\n        this.scene = null;\n        WorkerBroker.removeTarget(this.main_thread_target);\n    }\n\n    get view () {\n        return this.scene.view;\n    }\n\n    get style_manager () {\n        return this.scene.style_manager;\n    }\n\n    keepTile(tile) {\n        this.tiles[tile.key] = tile;\n        this.pyramid.addTile(tile);\n    }\n\n    hasTile(key) {\n        return this.tiles[key] !== undefined;\n    }\n\n    forgetTile(key) {\n        if (this.hasTile(key)) {\n            let tile = this.tiles[key];\n            this.pyramid.removeTile(tile);\n        }\n\n        delete this.tiles[key];\n        this.tileBuildStop(key);\n    }\n\n    // Remove a single tile\n    removeTile(key) {\n        log('trace', `tile unload for ${key}`);\n\n        var tile = this.tiles[key];\n\n        if (tile != null) {\n            tile.destroy();\n        }\n\n        this.forgetTile(tile.key);\n        this.scene.requestRedraw();\n    }\n\n    // Run a function on each tile\n    forEachTile(func) {\n        for (let t in this.tiles) {\n            func(this.tiles[t]);\n        }\n    }\n\n    // Remove tiles that pass a filter condition\n    removeTiles(filter) {\n        let remove_tiles = [];\n        for (let t in this.tiles) {\n            let tile = this.tiles[t];\n            if (filter(tile)) {\n                remove_tiles.push(t);\n            }\n        }\n        for (let r=0; r < remove_tiles.length; r++) {\n            let key = remove_tiles[r];\n            this.removeTile(key);\n        }\n    }\n\n    updateTilesForView() {\n        // Find visible tiles and load new ones\n        this.visible_coords = {};\n        let tile_coords = this.view.findVisibleTileCoordinates();\n        for (let c=0; c < tile_coords.length; c++) {\n            const coords = tile_coords[c];\n            this.queueCoordinate(coords);\n            this.visible_coords[coords.key] = coords;\n        }\n\n        this.updateTileStates();\n    }\n\n    updateTileStates () {\n        this.forEachTile(tile => {\n            this.updateVisibility(tile);\n        });\n\n        this.loadQueuedCoordinates();\n        this.updateProxyTiles();\n        this.view.pruneTilesForView();\n        this.updateRenderableTiles();\n        this.style_manager.updateActiveStyles(this.renderable_tiles);\n        this.style_manager.updateActiveBlendOrders(this.renderable_tiles);\n        return this.updateLabels();\n    }\n\n    updateLabels () {\n        if (this.scene.building && !this.scene.building.initial) {\n            // log('debug', `Skip label layout due to on-going scene rebuild`);\n            return Promise.resolve({});\n        }\n\n        // get current visible tiles and sort by key for consistency collision order\n        const tiles = this.renderable_tiles\n            .filter(t => t.valid)\n            .filter(t => t.built);\n\n        if (tiles.length === 0) {\n            return Promise.resolve({});\n        }\n\n        // Evaluate labels in order of tile build, to prevent previously visible labels\n        // from disappearing, e.g. due to a newly loaded repeat label nearby\n        tiles.sort((a, b) => a.build_id < b.build_id ? -1 : (a.build_id > b.build_id ? 1 : 0));\n\n        // check if tile set has changed (in ways that affect collision)\n        // if not, bail so that the existing collision task can carry on\n        // if so, carry on and start a new collision task\n        if (// 1st: check if same zoom level (rounded to a configurable precision)\n            this.collision.zoom === roundPrecision(this.view.zoom, this.collision.zoom_steps) &&\n            // 2nd: check if same set of tiles\n            this.collision.tile_keys === JSON.stringify(tiles.map(t => t.key)) &&\n            // 3rd: check if same set of meshes\n            this.collision.mesh_set === meshSetString(tiles)) {\n            // log('debug', `Skip label layout due to same tile/meshes (zoom ${this.view.zoom.toFixed(2)}, tiles ${this.collision.tile_keys})`);\n            return Promise.resolve({});\n        }\n\n        // update collision if not already updating\n        if (!this.collision.task) {\n            this.collision.zoom = roundPrecision(this.view.zoom, this.collision.zoom_steps);\n            this.collision.tile_keys = JSON.stringify(tiles.map(t => t.key));\n            this.collision.mesh_set = meshSetString(tiles);\n            // log('debug', `Update label collisions (zoom ${this.collision.zoom}, ${this.collision.tile_keys})`);\n\n            // make a new collision task\n            this.collision.task = {\n                type: 'tileManagerUpdateLabels',\n                run: async task => {\n                    // Do collision pass, then update view\n                    const results = await mainThreadLabelCollisionPass(tiles, this.collision.zoom, this.isLoadingVisibleTiles());\n                    this.scene.requestRedraw();\n\n                    // Clear state to allow another collision pass to start\n                    this.collision.task = null;\n                    Task.finish(task, results);\n\n                    // Check if tiles changed during previous collision pass - will start new pass if so\n                    this.updateTileStates();\n                },\n                immediate: true\n            };\n            Task.add(this.collision.task);\n        }\n        // else {\n        //     log('debug', `Skip label layout due to on-going layout (zoom ${this.view.zoom.toFixed(2)}, tiles ${this.collision.tile_keys})`);\n        // }\n        return this.collision.task.promise;\n    }\n\n    updateProxyTiles () {\n        if (this.view.zoom_direction === 0) {\n            return;\n        }\n\n        // Clear previous proxies\n        this.forEachTile(tile => tile.setProxyFor(null));\n\n        let proxy = false;\n        this.forEachTile(tile => {\n            if (tile.visible && !tile.labeled) {\n                const parent = this.pyramid.getAncestor(tile);\n                if (parent) {\n                    parent.setProxyFor(tile);\n                    proxy = true;\n                } else {\n                    const descendants = this.pyramid.getDescendants(tile);\n                    for (let i=0; i < descendants.length; i++) {\n                        descendants[i].setProxyFor(tile);\n                        proxy = true;\n                    }\n                }\n            }\n        });\n\n        if (!proxy) {\n            this.view.zoom_direction = 0;\n        }\n    }\n\n    updateVisibility(tile) {\n        tile.visible = false;\n        if (tile.style_z === this.view.tile_zoom) {\n            if (this.visible_coords[tile.coords.key]) {\n                tile.visible = true;\n            }\n            else {\n                // brute force\n                for (let key in this.visible_coords) {\n                    if (TileID.isDescendant(tile.coords, this.visible_coords[key])) {\n                        tile.visible = true;\n                        break;\n                    }\n                }\n            }\n        }\n    }\n\n    // Remove tiles that aren't visible, and flag remaining visible ones to be updated (for loading, proxy, etc.)\n    pruneToVisibleTiles () {\n        this.removeTiles(tile => !tile.visible);\n    }\n\n    getRenderableTiles () {\n        return this.renderable_tiles;\n    }\n\n    updateRenderableTiles() {\n        this.renderable_tiles = [];\n        for (let t in this.tiles) {\n            let tile = this.tiles[t];\n            if (tile.visible && tile.loaded) {\n                this.renderable_tiles.push(tile);\n            }\n        }\n        return this.renderable_tiles;\n    }\n\n    isLoadingVisibleTiles () {\n        return Object.keys(this.tiles).some(k => this.tiles[k].visible && !this.tiles[k].built);\n    }\n\n    allVisibleTilesLabeled () {\n        return this.renderable_tiles.every(t => t.labeled);\n    }\n\n    // Queue a tile for load\n    queueCoordinate(coords) {\n        this.queued_coords[this.queued_coords.length] = coords;\n    }\n\n    // Load all queued tiles\n    loadQueuedCoordinates() {\n        if (this.queued_coords.length === 0) {\n            return;\n        }\n\n        // Sort queued tiles from center tile\n        this.queued_coords.sort((a, b) => {\n            let center = this.view.center.meters;\n            let half_span = Geo.metersPerTile(a.z) / 2;\n\n            let ac = Geo.metersForTile(a);\n            ac.x += half_span;\n            ac.y -= half_span;\n\n            let bc = Geo.metersForTile(b);\n            bc.x += half_span;\n            bc.y -= half_span;\n\n            let ad = Math.abs(center.x - ac.x) + Math.abs(center.y - ac.y);\n            let bd = Math.abs(center.x - bc.x) + Math.abs(center.y - bc.y);\n\n            a.center_dist = ad;\n            b.center_dist = bd;\n\n            return (bd > ad ? -1 : (bd === ad ? 0 : 1));\n        });\n        this.queued_coords.forEach(coords => this.loadCoordinate(coords));\n        this.queued_coords = [];\n    }\n\n    // Load all tiles to cover a given logical tile coordinate\n    loadCoordinate(coords) {\n        // Skip if not at current scene zoom\n        if (coords.z !== this.view.center.tile.z) {\n            return;\n        }\n\n        // Determine necessary tiles for each source\n        for (let s in this.scene.sources) {\n            let source = this.scene.sources[s];\n            // Check if data source should build this tile\n            if (!source.builds_geometry_tiles || !source.includesTile(coords, this.view.tile_zoom)) {\n                continue;\n            }\n\n            let key = TileID.normalizedKey(coords, source, this.view.tile_zoom);\n            if (key && !this.hasTile(key)) {\n                log('trace', `load tile ${key}, distance from view center: ${coords.center_dist}`);\n                let tile = new Tile({\n                    source,\n                    coords,\n                    workers: this.scene.workers,\n                    style_z: this.view.baseZoom(coords.z),\n                    view: this.view\n                });\n\n                this.keepTile(tile);\n                this.buildTile(tile);\n            }\n        }\n    }\n\n    // Start tile build process\n    buildTile(tile, options) {\n        this.tileBuildStart(tile.key);\n        this.updateVisibility(tile);\n        tile.build(this.scene.generation, options);\n    }\n\n    // Called on main thread when a web worker completes processing for a single tile (initial load, or rebuild)\n    buildTileStylesCompleted({ tile, progress }) {\n        // Removed this tile during load?\n        if (this.tiles[tile.key] == null) {\n            log('trace', `discarded tile ${tile.key} in TileManager.buildTileStylesCompleted because previously removed`);\n            Tile.abortBuild(tile);\n            this.updateTileStates();\n        }\n        // Built with an outdated scene configuration?\n        else if (tile.generation !== this.scene.generation) {\n            log('trace', `discarded tile ${tile.key} in TileManager.buildTileStylesCompleted because built with ` +\n                `scene config gen ${tile.generation}, current ${this.scene.generation}`);\n            Tile.abortBuild(tile);\n            this.updateTileStates();\n        }\n        else {\n            // Update tile with properties from worker\n            if (this.tiles[tile.key]) {\n                // Ignore if from a previously discarded tile\n                if (tile.id < this.tiles[tile.key].id) {\n                    log('trace', `discarded tile ${tile.key} for id ${tile.id} in TileManager.buildTileStylesCompleted because built for discarded tile id`);\n                    Tile.abortBuild(tile);\n                    return;\n                }\n\n                tile = this.tiles[tile.key].merge(tile);\n            }\n\n            if (progress.done) {\n                tile.built = true;\n            }\n\n            tile.buildMeshes(this.scene.styles, progress);\n            this.updateTileStates();\n            this.scene.requestRedraw();\n        }\n\n        if (progress.done) {\n            this.tileBuildStop(tile.key);\n        }\n    }\n\n    // Called on main thread when web worker encounters an error building a tile\n    buildTileError(tile) {\n        log('error', `Error building tile ${tile.key}:`, tile.error);\n        this.forgetTile(tile.key);\n        Tile.abortBuild(tile);\n    }\n\n    // Track tile build state\n    tileBuildStart(key) {\n        this.building_tiles = this.building_tiles || {};\n        this.building_tiles[key] = true;\n        log('trace', `tileBuildStart for ${key}: ${Object.keys(this.building_tiles).length}`);\n    }\n\n    tileBuildStop(key) {\n        // Done building?\n        if (this.building_tiles) {\n            log('trace', `tileBuildStop for ${key}: ${Object.keys(this.building_tiles).length}`);\n            delete this.building_tiles[key];\n            this.checkBuildQueue();\n        }\n    }\n\n    // Check status of tile building queue and notify scene when we're done\n    checkBuildQueue() {\n        if (!this.building_tiles || Object.keys(this.building_tiles).length === 0) {\n            this.building_tiles = null;\n            this.scene.tileManagerBuildDone();\n        }\n    }\n\n    // Get a debug property across tiles\n    getDebugProp(prop, filter) {\n        var vals = [];\n        for (var t in this.tiles) {\n            if (this.tiles[t].debug[prop] != null && (typeof filter !== 'function' || filter(this.tiles[t]) === true)) {\n                vals.push(this.tiles[t].debug[prop]);\n            }\n        }\n        return vals;\n    }\n\n    // Sum of a debug property across tiles\n    getDebugSum(prop, filter) {\n        var sum = 0;\n        for (var t in this.tiles) {\n            if (this.tiles[t].debug[prop] != null && (typeof filter !== 'function' || filter(this.tiles[t]) === true)) {\n                sum += this.tiles[t].debug[prop];\n            }\n        }\n        return sum;\n    }\n\n    // Average of a debug property across tiles\n    getDebugAverage(prop, filter) {\n        return this.getDebugSum(prop, filter) / Object.keys(this.tiles).length;\n    }\n\n}\n\n// Round a number to given number of decimal divisions\n// e.g. roundPrecision(x, 4) rounds a number to increments of 0.25\nfunction roundPrecision (x, d, places = 2) {\n    return (Math.floor(x * d) / d).toFixed(places);\n}\n\n// Create a string representing the current set of meshes for a given set of tiles,\n// based on their created timestamp. Used to determine when tiles should be re-collided.\nfunction meshSetString (tiles) {\n    return JSON.stringify(\n        Object.entries(tiles).map(([,t]) => {\n            return Object.entries(t.meshes).map(([,s]) => {\n                return s.map(m => m.created_at);\n            });\n        })\n    );\n}\n","\nexport class RenderState {\n    constructor (value, setup) {\n        setup(value);\n        this.value = value;\n        this.setup = setup;\n    }\n\n    set (value) {\n        // if the states are different, call the GL context for a state change\n        if (JSON.stringify(this.value) !== JSON.stringify(value)) {\n            this.setup(value);\n            this.value = value;\n        }\n    }\n}\n\nexport default class RenderStateManager {\n\n    constructor (gl) {\n        this.defaults = {};\n\n        // Culling\n        this.defaults.culling = true;\n        this.defaults.culling_face = gl.BACK;\n\n        // Blending\n        this.defaults.blending = false;\n        this.defaults.blending_src = gl.ONE_MINUS_SRC_ALPHA;\n        this.defaults.blending_dst = gl.ONE_MINUS_SRC_ALPHA;\n        this.defaults.blending_src_alpha = gl.ONE;\n        this.defaults.blending_dst_alpha = gl.ONE_MINUS_SRC_ALPHA;\n\n        // Depth test/write\n        this.defaults.depth_write = true;\n        this.defaults.depth_test = true;\n        gl.depthFunc(gl.LESS); // depth function only needs to be set once\n\n        // Culling\n        this.culling = new RenderState(\n            { cull: this.defaults.culling, face: this.defaults.culling_face },\n            (value) => {\n                if (value.cull) {\n                    gl.enable(gl.CULL_FACE);\n                    gl.cullFace(value.face);\n                } else {\n                    gl.disable(gl.CULL_FACE);\n                }\n            }\n        );\n\n        // Blending mode\n        this.blending = new RenderState({\n            blend: this.defaults.blending,\n            src: this.defaults.blending_src,\n            dst: this.defaults.blending_dst,\n            src_alpha: this.defaults.blending_src_alpha,\n            dst_alpha: this.defaults.blending_dst_alpha\n        },\n        (value) => {\n            if (value.blend) {\n                gl.enable(gl.BLEND);\n\n                if (value.src_alpha && value.dst_alpha) {\n                    gl.blendFuncSeparate(value.src, value.dst, value.src_alpha, value.dst_alpha);\n                }\n                else {\n                    gl.blendFunc(value.src, value.dst);\n                }\n            } else {\n                gl.disable(gl.BLEND);\n            }\n        }\n        );\n\n        // Depth write\n        this.depth_write = new RenderState(\n            { depth_write: this.defaults.depth_write },\n            (value) => {\n                gl.depthMask(value.depth_write);\n            }\n        );\n\n        // Depth test\n        this.depth_test = new RenderState(\n            { depth_test: this.defaults.depth_test },\n            (value) => {\n                if (value.depth_test) {\n                    gl.enable(gl.DEPTH_TEST);\n                } else {\n                    gl.disable(gl.DEPTH_TEST);\n                }\n            }\n        );\n\n    }\n\n}\n","import log from './log';\nimport {createObjectURL} from './urls';\nimport StyleParser from '../styles/style_parser';\n\nexport default class MediaCapture {\n\n    constructor() {\n        this.canvas = null;\n        this.gl = null;\n        this.screenshot_canvas = null;\n        this.screenshot_context = null;\n        this.queue_screenshot = null;\n        this.video_capture = null;\n    }\n\n    setCanvas (canvas, gl) {\n        this.canvas = canvas;\n        this.gl = gl;\n    }\n\n    // Take a screenshot, returns a promise that resolves with the screenshot data when available\n    // `background`: optional background color to blend screenshot with\n    screenshot ({ background } = {}) {\n        if (this.queue_screenshot != null) {\n            return this.queue_screenshot.promise; // only capture one screenshot at a time\n        }\n\n        // Will resolve once rendering is complete and render buffer is captured\n        this.queue_screenshot = { background };\n        this.queue_screenshot.promise = new Promise((resolve, reject) => {\n            this.queue_screenshot.resolve = resolve;\n            this.queue_screenshot.reject = reject;\n        });\n        return this.queue_screenshot.promise;\n    }\n\n    // Called after rendering, captures render buffer and resolves promise with the image data\n    completeScreenshot () {\n        if (this.queue_screenshot != null) {\n            // Firefox appears to have an issue where its alpha conversion overflows some channels when\n            // the WebGL canvas content is captured. To get around this, we read pixels from the GL buffer\n            // directly, then flip and unmulitply the alpha on each pixel to get the desired RGB values.\n            // See https://github.com/tangrams/tangram/issues/551\n\n            // Get raw pixels from GL\n            let w = this.canvas.width;\n            let h = this.canvas.height;\n            let pixels = new Uint8Array(w * h * 4);\n            this.gl.readPixels(0, 0, w, h, this.gl.RGBA, this.gl.UNSIGNED_BYTE, pixels);\n\n            // Optional background to blend with (only RGB, alpha is ignored)\n            let background = this.queue_screenshot.background;\n            if (background && background !== 'transparent') {\n                background = StyleParser.parseColor(background).slice(0, 3).map(c => c * 255);\n            }\n            else {\n                background = null; // skip blend if transparent\n            }\n\n            // Flip Y (GL buffer is upside down)\n            let flip = new Uint8ClampedArray(w * h * 4);    // canvas requires 'clamped' array type\n            for (let y=0; y < h; y++) {\n                for (let x=0; x < w; x++) {\n                    let s = ((h - y - 1) * w + x) * 4;      // source offset\n                    let d = (y * w + x) * 4;                // destination offset\n                    let a = pixels[s + 3];                  // unmultiply alpha\n                    flip[d + 0] = pixels[s + 0] * 255 / a;\n                    flip[d + 1] = pixels[s + 1] * 255 / a;\n                    flip[d + 2] = pixels[s + 2] * 255 / a;\n                    flip[d + 3] = a;\n\n                    if (background) {\n                        a /= 255;\n                        flip[d + 0] = (flip[d + 0] * a) + (background[0] * (1 - a));\n                        flip[d + 1] = (flip[d + 1] * a) + (background[1] * (1 - a));\n                        flip[d + 2] = (flip[d + 2] * a) + (background[2] * (1 - a));\n                        flip[d + 3] = 255;\n                    }\n                }\n            }\n\n            // Draw flipped pixels to a canvas\n            this.screenshot_canvas = this.screenshot_canvas || document.createElement('canvas');\n            let canvas = this.screenshot_canvas;\n            canvas.width = w;\n            canvas.height = h;\n\n            this.screenshot_context = this.screenshot_context || canvas.getContext('2d');\n            let ctx = this.screenshot_context;\n            let image = new ImageData(flip, w, h);\n            ctx.putImageData(image, 0, 0);\n\n            // Get data URL from canvas and convert to blob\n            // Strip host/mimetype/etc., convert base64 to binary without UTF-8 mangling\n            // Adapted from: https://gist.github.com/unconed/4370822\n            const url = canvas.toDataURL('image/png');\n            const data = atob(url.slice(22));\n            const buffer = new Uint8Array(data.length);\n            for (let i = 0; i < data.length; ++i) {\n                buffer[i] = data.charCodeAt(i);\n            }\n            const blob = new Blob([buffer], { type: 'image/png' });\n\n            // Resolve with screenshot data\n            this.queue_screenshot.resolve({ url, blob, type: 'png' });\n            this.queue_screenshot = null;\n        }\n    }\n\n    // Starts capturing a video stream from the canvas\n    startVideoCapture () {\n        if (typeof window.MediaRecorder !== 'function' || !this.canvas || typeof this.canvas.captureStream !== 'function') {\n            log('warn', 'Video capture (Canvas.captureStream and/or MediaRecorder APIs) not supported by browser');\n            return false;\n        }\n        else if (this.video_capture) {\n            log('warn', 'Video capture already in progress, call Scene.stopVideoCapture() first');\n            return false;\n        }\n\n        // Start a new capture\n        try {\n            let cap = this.video_capture = {};\n            cap.chunks = [];\n            cap.stream = this.canvas.captureStream();\n            cap.options = { mimeType: 'video/webm' }; // TODO: support other format options\n            cap.media_recorder = new MediaRecorder(cap.stream, cap.options);\n            cap.media_recorder.ondataavailable = (event) => {\n                if (event.data.size > 0) {\n                    cap.chunks.push(event.data);\n                }\n\n                // Stopped recording? Create the final capture file blob\n                if (cap.resolve) {\n                    let blob = new Blob(cap.chunks, { type: cap.options.mimeType });\n                    let url = createObjectURL(blob);\n\n                    // Explicitly remove all stream tracks, and set objects to null\n                    if (cap.stream) {\n                        let tracks = cap.stream.getTracks() || [];\n                        tracks.forEach(track => {\n                            track.stop();\n                            cap.stream.removeTrack(track);\n                        });\n                    }\n                    cap.stream = null;\n                    cap.media_recorder = null;\n                    this.video_capture = null;\n\n                    cap.resolve({ url, blob, type: 'webm' });\n                }\n            };\n            cap.media_recorder.start();\n        }\n        catch (e) {\n            this.video_capture = null;\n            log('error', 'Scene video capture failed', e);\n            return false;\n        }\n        return true;\n    }\n\n    // Stops capturing a video stream from the canvas, returns a promise that resolves with the video when available\n    stopVideoCapture () {\n        if (!this.video_capture) {\n            log('warn', 'No scene video capture in progress, call Scene.startVideoCapture() first');\n            return Promise.resolve({});\n        }\n\n        // Promise that will resolve when final stream is available\n        this.video_capture.promise = new Promise((resolve, reject) => {\n            this.video_capture.resolve = resolve;\n            this.video_capture.reject = reject;\n        });\n\n        // Stop recording\n        this.video_capture.media_recorder.stop();\n\n        return this.video_capture.promise;\n    }\n\n}\n","import log from '../utils/log';\nimport WorkerBroker from '../utils/worker_broker';\nimport debugSettings from '../utils/debug_settings';\nimport { debugSumLayerStats } from '../tile/tile';\nimport Texture from '../gl/texture';\n\n// Debug config and functions\nexport default function setupSceneDebug (scene) {\n    scene.debug = {\n        // Profile helpers, issues a profile on main thread & all workers\n        profile(name) {\n            console.profile(`main thread: ${name}`); // eslint-disable-line no-console\n            WorkerBroker.postMessage(scene.workers, 'self.profile', name);\n        },\n\n        profileEnd(name) {\n            console.profileEnd(`main thread: ${name}`); // eslint-disable-line no-console\n            WorkerBroker.postMessage(scene.workers, 'self.profileEnd', name);\n        },\n\n        // Rebuild geometry a given # of times and print average, min, max timings\n        timeRebuild (num = 1, options = {}) {\n            let times = [];\n            let cycle = () => {\n                let start = +new Date();\n                scene.rebuild(options).then(() => {\n                    times.push(+new Date() - start);\n\n                    if (times.length < num) {\n                        cycle();\n                    }\n                    else {\n                        let avg = ~~(times.reduce((a, b) => a + b) / times.length);\n                        log('info', `Profiled rebuild ${num} times: ${avg} avg (${Math.min(...times)} min, ${Math.max(...times)} max)`);\n                    }\n                });\n            };\n            cycle();\n        },\n\n        // Return geometry counts of visible tiles, grouped by style name\n        geometryCountByStyle () {\n            let counts = {};\n            scene.tile_manager.getRenderableTiles().forEach(tile => {\n                for (let style in tile.meshes) {\n                    counts[style] = counts[style] || 0;\n                    tile.meshes[style].forEach(mesh => {\n                        counts[style] += mesh.geometry_count;\n                    });\n                }\n            });\n            return counts;\n        },\n\n        // Return geometry counts of visible tiles, grouped by base style name\n        geometryCountByBaseStyle () {\n            let style_counts = scene.debug.geometryCountByStyle();\n            let counts = {};\n            for (let style in style_counts) {\n                let base = scene.styles[style].baseStyle();\n                counts[base] = counts[base] || 0;\n                counts[base] += style_counts[style];\n            }\n            return counts;\n        },\n\n        // Return sum of all geometry counts for visible tiles\n        geometryCountTotal () {\n            const styles = scene.debug.geometryCountByStyle();\n            return Object.keys(styles).reduce((p, c) => styles[c] + p, 0);\n        },\n\n        // Return geometry GL buffer sizes for visible tiles, grouped by style name\n        geometrySizeByStyle () {\n            let sizes = {};\n            scene.tile_manager.getRenderableTiles().forEach(tile => {\n                for (let style in tile.meshes) {\n                    sizes[style] = sizes[style] || 0;\n                    tile.meshes[style].forEach(mesh => {\n                        sizes[style] += mesh.buffer_size;\n                    });\n                }\n            });\n            return sizes;\n        },\n\n        // Return geometry GL buffer sizes for visible tiles, grouped by base style name\n        geometrySizeByBaseStyle () {\n            let style_sizes = scene.debug.geometrySizeByStyle();\n            let sizes = {};\n            for (let style in style_sizes) {\n                let base = scene.styles[style].baseStyle();\n                sizes[base] = sizes[base] || 0;\n                sizes[base] += style_sizes[style];\n            }\n            return sizes;\n        },\n\n        // Return sum of all geometry GL buffer sizes for visible tiles\n        geometrySizeTotal () {\n            const styles = scene.debug.geometrySizeByStyle();\n            return Object.keys(styles).reduce((p, c) => styles[c] + p, 0);\n        },\n\n        // Return sum of all texture memory usage\n        textureSizeTotal() {\n            return Object.values(Texture.textures).map(t => t.byteSize()).reduce((p, c) => p + c);\n        },\n\n        layerStats () {\n            if (debugSettings.layer_stats) {\n                return debugSumLayerStats(scene.tile_manager.getRenderableTiles());\n            }\n            else {\n                log('warn', 'Enable the \\'layer_stats\\' debug setting to collect layer stats');\n                return {};\n            }\n        },\n\n        renderableTilesCount () {\n            return scene.tile_manager.getRenderableTiles().length;\n        }\n    };\n}\n","import log from '../utils/log';\nimport Utils from '../utils/utils';\nimport debugSettings from '../utils/debug_settings';\nimport * as URLs from '../utils/urls';\nimport WorkerBroker from '../utils/worker_broker';\nimport Task from '../utils/task';\nimport subscribeMixin from '../utils/subscribe';\nimport sliceObject from '../utils/slice';\nimport Context from '../gl/context';\nimport Texture from '../gl/texture';\nimport ShaderProgram from '../gl/shader_program';\nimport VertexArrayObject from '../gl/vao';\nimport {StyleManager} from '../styles/style_manager';\nimport {Style} from '../styles/style';\nimport StyleParser from '../styles/style_parser';\nimport SceneLoader from './scene_loader';\nimport View from './view';\nimport Light from '../lights/light';\nimport TileManager from '../tile/tile_manager';\nimport DataSource from '../sources/data_source';\nimport '../sources/sources';\nimport FeatureSelection from '../selection/selection';\nimport RenderStateManager from '../gl/render_state';\nimport TextCanvas from '../styles/text/text_canvas';\nimport FontManager from '../styles/text/font_manager';\nimport MediaCapture from '../utils/media_capture';\nimport setupSceneDebug from './scene_debug';\n\n// Load scene definition: pass an object directly, or a URL as string to load remotely\nexport default class Scene {\n\n    constructor(config_source, options) {\n        options = options || {};\n        subscribeMixin(this);\n\n        this.id = Scene.id++;\n        this.initialized = false;\n        this.initializing = null; // will be a promise that resolves when scene is loaded\n        this.sources = {};\n\n        this.view = new View(this, options);\n        this.tile_manager = new TileManager({ scene: this });\n        this.num_workers = options.numWorkers || 2;\n        if (options.disableVertexArrayObjects === true) {\n            VertexArrayObject.disabled = true;\n        }\n\n        Utils.use_high_density_display = options.highDensityDisplay !== undefined ? options.highDensityDisplay : true;\n        Utils.updateDevicePixelRatio();\n\n        this.config = null;\n        this.config_source = config_source;\n        this.config_bundle = null;\n        this.last_valid_config_source = null;\n\n        this.styles = null;\n        this.style_manager = new StyleManager();\n\n        this.building = null;                           // tracks current scene building state (tiles being built, etc.)\n        this.dirty = true;                              // request a redraw\n\n        if (options.preUpdate){\n            // optional pre-render loop hook\n            this.subscribe({'pre_update': options.preUpdate});\n        }\n\n        if (options.postUpdate){\n            // optional post-render loop hook\n            this.subscribe({'post_update': options.postUpdate});\n        }\n\n        this.render_loop = !options.disableRenderLoop;  // disable render loop - app will have to manually call Scene.render() per frame\n        this.render_loop_active = false;\n        this.render_loop_stop = false;\n        this.render_count = 0;\n        this.last_render_count = 0;\n        this.render_count_changed = false;\n        this.frame = 0;\n        this.last_main_render = -1;         // frame counter for last main render pass\n        this.last_selection_render = -1;    // frame counter for last selection render pass\n        this.media_capture = new MediaCapture();\n        this.selection = null;\n        this.selection_feature_count = 0;\n        this.fetching_selection_map = null;\n        this.prev_textures = null; // textures from previously loaded scene (used for cleanup)\n        this.introspection = (options.introspection === true) ? true : false;\n        this.times = {}; // internal time logs (mostly for dev/profiling)\n        this.resetTime();\n\n        this.container = options.container;\n        this.canvas = null;\n        this.contextOptions = options.webGLContextOptions;\n\n        this.lights = null;\n        this.background = null;\n\n        this.createListeners();\n        this.updating = 0;\n        this.generation = Scene.generation; // an id that is incremented each time the scene config is invalidated\n        this.last_complete_generation = Scene.generation; // last generation id with a complete view\n        setupSceneDebug(this);\n\n        this.log_level = options.logLevel || 'warn';\n        log.setLevel(this.log_level);\n        log.reset();\n    }\n\n    static create (config, options = {}) {\n        return new Scene(config, options);\n    }\n\n    // Load scene (or reload existing scene if no new source specified)\n    // Options:\n    //   `base_path`: base URL against which scene resources should be resolved (useful for Play) (default nulll)\n    //   `blocking`: should rendering block on scene load completion (default true)\n    load (config_source = null, options = {}) {\n        if (this.initializing) {\n            return this.initializing;\n        }\n        log.reset();\n\n        this.updating++;\n        this.initialized = false;\n        this.view_complete = false; // track if a view complete event has been triggered yet\n        this.times.frame = null; // clear first frame time\n        this.times.build = null; // clear first scene build time\n\n        // Backwards compatibilty for passing `base_path` string as second argument\n        // (since transitioned to using options argument to accept more parameters)\n        options = (typeof options === 'string') ? { base_path: options } : options;\n\n        // Should rendering block on load (not desirable for initial load, often desired for live style-switching)\n        options.blocking = (options.blocking !== undefined) ? options.blocking : true;\n\n        if (this.render_loop !== false) {\n            this.setupRenderLoop();\n        }\n\n        // Load scene definition (sources, styles, etc.), then create styles & workers\n        this.createCanvas();\n        this.prev_textures = this.config && Object.keys(this.config.textures); // save textures from last scene\n        this.initializing = this.loadScene(config_source, options)\n            .then(async ({ texture_nodes }) => {\n                await this.createWorkers();\n\n                // Clean up resources from prior scene\n                this.destroyFeatureSelection();\n                WorkerBroker.postMessage(this.workers, 'self.clearFunctionStringCache');\n\n                // Scene loaded from a JS object, or modified by a `load` event, may contain compiled JS functions\n                // which need to be serialized, while one loaded only from a URL does not.\n                const serialize_funcs = ((typeof this.config_source === 'object') || this.hasSubscribersFor('load'));\n\n                const updating = this.updateConfig({\n                    texture_nodes,\n                    serialize_funcs,\n                    normalize: false,\n                    loading: true,\n                    fade_in: true });\n\n                if (options.blocking === true) {\n                    await updating;\n                }\n\n                this.freePreviousTextures();\n                this.updating--;\n                this.initializing = null;\n                this.initialized = true;\n                this.last_valid_config_source = this.config_source;\n                this.last_valid_options = { base_path: options.base_path, file_type: options.file_type };\n\n                this.requestRedraw();\n            }).catch(error => {\n                this.initializing = null;\n                this.updating = 0;\n\n                // Report and revert to last valid config if available\n                let type, message;\n                if (error.name === 'YAMLException') {\n                    type = 'yaml';\n                    message = 'Error parsing scene YAML';\n                }\n                else {\n                // TODO: more error types\n                    message = 'Error initializing scene';\n                }\n                this.trigger('error', { type, message, error, url: this.config_source });\n\n                message = `Scene.load() failed to load ${JSON.stringify(this.config_source)}: ${error.message}`;\n                if (this.last_valid_config_source) {\n                    log('warn', message, error);\n                    log('info', 'Scene.load() reverting to last valid configuration');\n                    return this.load(this.last_valid_config_source, this.last_valid_base_path);\n                }\n                log('error', message, error);\n                throw error;\n            });\n\n        return this.initializing;\n    }\n\n    destroy() {\n        this.initialized = false;\n        this.render_loop_stop = true; // schedule render loop to stop\n\n        this.destroyListeners();\n        this.destroyFeatureSelection();\n\n        if (this.canvas && this.canvas.parentNode) {\n            this.canvas.parentNode.removeChild(this.canvas);\n            this.canvas = null;\n        }\n        this.container = null;\n\n        if (this.gl) {\n            Texture.destroy(this.gl);\n            this.style_manager.destroy(this.gl);\n            this.styles = {};\n\n            ShaderProgram.reset();\n\n            // Force context loss\n            let ext = this.gl.getExtension('WEBGL_lose_context');\n            if (ext) {\n                ext.loseContext();\n            }\n\n            this.gl = null;\n        }\n\n        this.sources = {};\n\n        this.destroyWorkers();\n        this.tile_manager.destroy();\n        this.tile_manager = null;\n        log.reset();\n    }\n\n    createCanvas() {\n        if (this.canvas) {\n            return;\n        }\n\n        this.container = this.container || document.body;\n        this.canvas = document.createElement('canvas');\n        this.canvas.style.position = 'absolute';\n        this.canvas.style.top = 0;\n        this.canvas.style.left = 0;\n\n        // Force tangram canvas underneath all leaflet layers, and set background to transparent\n        this.container.style.backgroundColor = 'transparent';\n        this.container.appendChild(this.canvas);\n\n        try {\n            this.gl = Context.getContext(this.canvas, Object.assign({\n                alpha: true, premultipliedAlpha: true,\n                stencil: true,\n                device_pixel_ratio: Utils.device_pixel_ratio,\n                powerPreference: 'high-performance'\n            }, this.contextOptions));\n        }\n        catch(e) {\n            throw new Error(\n                'Couldn\\'t create WebGL context. ' +\n                'Your browser may not support WebGL, or it\\'s turned off? ' +\n                'Visit http://webglreport.com/ for more info.'\n            );\n        }\n\n        this.resizeMap(this.container.clientWidth, this.container.clientHeight);\n        VertexArrayObject.init(this.gl);\n        this.render_states = new RenderStateManager(this.gl);\n        this.media_capture.setCanvas(this.canvas, this.gl);\n    }\n\n    // Update list of any custom scripts (either at scene-level or data-source-level)\n    updateExternalScripts () {\n        let prev_scripts = [...(this.external_scripts||[])]; // save list of previously loaded scripts\n        let scripts = [];\n\n        // scene-level scripts\n        if (this.config.scene.scripts) {\n            for (let f in this.config.scene.scripts) {\n                if (scripts.indexOf(this.config.scene.scripts[f]) === -1) {\n                    scripts.push(this.config.scene.scripts[f]);\n                }\n            }\n        }\n\n        // data-source-level scripts\n        for (let s in this.config.sources) {\n            let source = this.config.sources[s];\n            if (source.scripts) {\n                for (let f in source.scripts) {\n                    if (scripts.indexOf(source.scripts[f]) === -1) {\n                        scripts.push(source.scripts[f]);\n                    }\n                }\n            }\n        }\n\n        this.external_scripts = scripts;\n\n        // Scripts changed?\n        return !(this.external_scripts.length === prev_scripts.length &&\n            this.external_scripts.every((v, i) => v === prev_scripts[i]));\n    }\n\n    // Web workers handle heavy duty tile construction: networking, geometry processing, etc.\n    createWorkers() {\n        // Reset old workers (if any) if we need to re-instantiate with new external scripts\n        if (this.updateExternalScripts()) {\n            this.destroyWorkers();\n        }\n\n        if (!this.workers) {\n            return this.makeWorkers();\n        }\n        return Promise.resolve();\n    }\n\n    // Instantiate workers from URL, init event handlers\n    makeWorkers() {\n        // Let VertexElements know if 32 bit indices for element arrays are available\n        let has_element_index_uint = this.gl.getExtension('OES_element_index_uint') ? true : false;\n\n        let queue = [];\n        this.workers = [];\n        for (let id=0; id < this.num_workers; id++) {\n            let worker = new Worker(Tangram.workerURL); // eslint-disable-line no-undef\n            this.workers[id] = worker;\n\n            WorkerBroker.addWorker(worker);\n\n            log('debug', `Scene.makeWorkers: initializing worker ${id}`);\n            let _id = id;\n            queue.push(WorkerBroker.postMessage(worker, 'self.init', this.id, id, this.num_workers, this.log_level, Utils.device_pixel_ratio, has_element_index_uint, this.external_scripts).then(\n                (id) => {\n                    log('debug', `Scene.makeWorkers: initialized worker ${id}`);\n                    return id;\n                },\n                (error) => {\n                    log('error', `Scene.makeWorkers: failed to initialize worker ${_id}:`, error);\n                    return Promise.reject(error);\n                })\n            );\n        }\n\n        this.next_worker = 0;\n        return Promise.all(queue).then(() => {\n            log.setWorkers(this.workers);\n        });\n    }\n\n    destroyWorkers() {\n        this.selection = null; // selection needs to be re-initialized when workers are\n        if (Array.isArray(this.workers)) {\n            log.setWorkers(null);\n            this.workers.forEach((worker) => {\n                worker.terminate();\n            });\n            this.workers = null;\n        }\n    }\n\n    // Scene is ready for rendering\n    ready() {\n        if (!this.view.ready() || Object.keys(this.sources).length === 0) {\n            return false;\n        }\n        return true;\n    }\n\n    // Resize the map when device pixel ratio changes, e.g. when switching between displays\n    updateDevicePixelRatio () {\n        if (Utils.updateDevicePixelRatio()) {\n            WorkerBroker.postMessage(this.workers, 'self.updateDevicePixelRatio', Utils.device_pixel_ratio)\n                .then(() => this.rebuild())\n                .then(() => this.resizeMap(this.view.size.css.width, this.view.size.css.height));\n        }\n    }\n\n    resizeMap(width, height) {\n        if (width === 0 && height === 0) {\n            return;\n        }\n\n        this.dirty = true;\n        this.view.setViewportSize(width, height);\n        if (this.gl) {\n            Context.resize(this.gl, width, height, Utils.device_pixel_ratio);\n        }\n    }\n\n    // Request scene be redrawn at next animation loop\n    requestRedraw() {\n        this.dirty = true;\n    }\n\n    // Redraw scene immediately - don't wait for animation loop\n    // Use sparingly, but for cases where you need the closest possible sync with other UI elements,\n    // such as other, non-WebGL map layers (e.g. Leaflet raster layers, markers, etc.)\n    immediateRedraw() {\n        this.dirty = true;\n        this.update();\n    }\n\n    renderLoop () {\n        this.render_loop_active = true; // only let the render loop instantiate once\n\n        // Update and render the scene\n        this.update();\n\n        // Pending background tasks\n        Task.setState({ user_moving_view: this.view.user_input_active });\n        Task.processAll();\n\n        // Request the next frame if not scheduled to stop\n        if (!this.render_loop_stop) {\n            window.requestAnimationFrame(this.renderLoop.bind(this));\n        }\n        else {\n            this.render_loop_stop = false;\n            this.render_loop_active = false;\n        }\n    }\n\n    // Setup the render loop\n    setupRenderLoop() {\n        if (!this.render_loop_active) {\n            setTimeout(() => { this.renderLoop(); }, 0); // delay start by one tick\n        }\n    }\n\n    update() {\n        // Determine which passes (if any) to render\n        let main = this.dirty;\n        let selection = this.selection ? this.selection.hasPendingRequests() : false;\n        var will_render = !(\n            (main === false && selection === false) ||\n            this.initialized === false ||\n            this.updating > 0 ||\n            this.ready() === false\n        );\n\n        // Pre-render loop hook\n        this.trigger('pre_update', will_render);\n\n        // Update view (needs to update user input timer even if no render will occur)\n        this.view.update();\n\n        // Bail if no need to render\n        if (!will_render) {\n            return false;\n        }\n        this.dirty = false; // subclasses can set this back to true when animation is needed\n\n        // Render the scene\n        this.updateDevicePixelRatio();\n        this.render({ main, selection });\n        this.updateViewComplete(); // fires event when rendered tile set or style changes\n        this.media_capture.completeScreenshot(); // completes screenshot capture if requested\n\n        // Post-render loop hook\n        this.trigger('post_update', will_render);\n\n        // Redraw every frame if animating\n        if (this.animated === true || this.view.isAnimating()) {\n            this.dirty = true;\n        }\n\n        this.frame++;\n        log('trace', 'Scene.render()');\n        return true;\n    }\n\n    // Accepts flags indicating which render passes should be made\n    render({ main, selection }) {\n        var gl = this.gl;\n\n        this.updateBackground();\n        Object.keys(this.lights).forEach(i => this.lights[i].update());\n\n        // Render main pass\n        this.render_count_changed = false;\n        if (main) {\n            this.render_count = this.renderPass();\n            this.last_main_render = this.frame;\n\n            // Update feature selection map if necessary\n            if (this.render_count !== this.last_render_count) {\n                this.render_count_changed = true;\n                this.logFirstFrame();\n\n                this.getFeatureSelectionMapSize().then(size => {\n                    this.selection_feature_count = size;\n                    log('info', `Scene: rendered ${this.render_count} primitives (${size} features in selection map)`);\n                });\n            }\n            this.last_render_count = this.render_count;\n        }\n\n        // Render selection pass (if needed)\n        if (selection) {\n            if (this.view.panning || this.view.user_input_active) {\n                this.selection.clearPendingRequests();\n                return;\n            }\n\n            // Only re-render if selection buffer is out of date (relative to main render buffer)\n            // and not locked (e.g. no tiles are actively building)\n            if (!this.selection.locked && this.last_selection_render < this.last_main_render) {\n                this.selection.bind();          // switch to FBO\n                this.renderPass(\n                    'selection_program',        // render w/alternate program\n                    { allow_blend: false });\n\n                // Reset to screen buffer\n                gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n                gl.viewport(0, 0, this.canvas.width, this.canvas.height);\n                gl.clearColor(...this.background.computed_color); // restore scene background color\n                this.last_selection_render = this.frame;\n            }\n\n            this.selection.read(); // process any pending results from selection buffer\n        }\n\n        return true;\n    }\n\n    // Render all active styles, grouped by blend/depth type (opaque, overlay, etc.) and by program (style)\n    // Called both for main render pass, and for secondary passes like selection buffer\n    renderPass(program_key = 'program', { allow_blend } = {}) {\n        // optionally force alpha off (e.g. for selection pass)\n        allow_blend = (allow_blend == null) ? true : allow_blend;\n\n        this.clearFrame();\n\n        let count = 0; // how many primitives were rendered\n        let last_blend; // blend mode active in last render pass\n\n        // Get sorted list of current blend orders, with accompanying list of styles to render for each\n        const blend_orders = this.style_manager.getActiveBlendOrders();\n        for (const { blend_order, styles } of blend_orders) {\n            // Render each style\n            for (let s=0; s < styles.length; s++) {\n                let style = this.styles[styles[s]];\n                if (style == null) {\n                    continue;\n                }\n\n                // Only update render state when blend mode changes\n                if (style.blend !== last_blend) {\n                    let state = Object.assign({},\n                        Style.render_states[style.blend],       // render state for blend mode\n                        { blend: (allow_blend && style.blend) } // enable/disable blending (e.g. no blend for selection)\n                    );\n                    this.setRenderState(state);\n                }\n\n                const blend = allow_blend && style.blend;\n                if (blend === 'translucent') {\n                    // Depth pre-pass for translucency\n                    this.gl.colorMask(false, false, false, false);\n                    this.renderStyle(style.name, program_key, blend_order);\n\n                    this.gl.colorMask(true, true, true, true);\n                    this.gl.depthFunc(this.gl.EQUAL);\n\n                    // Stencil buffer mask prevents overlap/flicker from compounding alpha of overlapping polys\n                    this.gl.enable(this.gl.STENCIL_TEST);\n                    this.gl.clearStencil(0);\n                    this.gl.clear(this.gl.STENCIL_BUFFER_BIT);\n                    this.gl.stencilFunc(this.gl.EQUAL, this.gl.ZERO, 0xFF);\n                    this.gl.stencilOp(this.gl.KEEP, this.gl.KEEP, this.gl.INCR);\n\n                    // Main render pass\n                    count += this.renderStyle(style.name, program_key, blend_order);\n\n                    // Disable translucency-specific settings\n                    this.gl.disable(this.gl.STENCIL_TEST);\n                    this.gl.depthFunc(this.gl.LESS);\n                }\n                else if (blend !== 'opaque' && style.stencil_proxy_tiles === true) {\n                    // Mask proxy tiles to with stencil buffer to avoid overlap/flicker from compounding alpha\n                    // Find unique levels of proxy tiles to render for this style\n                    const proxy_levels = this.tile_manager.getRenderableTiles()\n                        .filter(t => t.meshes[style.name]) // must have meshes for this style\n                        .map(t => t.proxy_level) // get the proxy depth\n                        .reduce((levels, level) => { // count unique proxy depths\n                            levels.indexOf(level) > -1 || levels.push(level);\n                            return levels;\n                        }, [])\n                        .sort(); // sort by lower depth first\n\n                    if (proxy_levels.length > 1) {\n                        // When there are multiple \"levels\" of tiles to render (e.g. non-proxy and one or more proxy\n                        // tile levels, or multiple proxy tile levels but no non-proxy tiles, etc.):\n                        // Render each proxy tile level to stencil buffer, masking each level such that it will not\n                        // render over any pixel rendered by a previous proxy tile level.\n                        this.gl.enable(this.gl.STENCIL_TEST);\n                        this.gl.clearStencil(0);\n                        this.gl.clear(this.gl.STENCIL_BUFFER_BIT);\n                        this.gl.stencilOp(this.gl.KEEP, this.gl.KEEP, this.gl.REPLACE);\n\n                        for (let i = 0; i < proxy_levels.length; i++) {\n                            // stencil test passes either for zero (not-yet-rendered),\n                            // or for other pixels at this proxy level (but not previous proxy levels)\n                            this.gl.stencilFunc(this.gl.GEQUAL, proxy_levels.length - i, 0xFF);\n                            count += this.renderStyle(style.name, program_key, blend_order, proxy_levels[i]);\n                        }\n                        this.gl.disable(this.gl.STENCIL_TEST);\n                    }\n                    else {\n                        // No special render handling needed when there are no proxy tiles,\n                        // or if there is ONLY a single proxy tile level (e.g. with no non-proxy tiles)\n                        count += this.renderStyle(style.name, program_key, blend_order);\n                    }\n                }\n                else {\n                    // Regular render pass (no special blend handling, or selection buffer pass)\n                    count += this.renderStyle(style.name, program_key, blend_order);\n                }\n\n                last_blend = style.blend;\n            }\n        }\n\n        return count;\n    }\n\n    renderStyle(style_name, program_key, blend_order, proxy_level = null) {\n        let style = this.styles[style_name];\n        let first_for_style = true; // TODO: allow this state to be passed in (for multilpe blend orders, stencil tests, etc)\n        let render_count = 0;\n        let program;\n\n        // Render tile GL geometries\n        let renderable_tiles = this.tile_manager.getRenderableTiles();\n\n        // For each tile, only include meshes for the blend order currently being rendered\n        // Builds an array tiles and their associated meshes, each as a [tile, meshes] 2-element array\n        let tile_meshes = renderable_tiles\n            .filter(t => typeof proxy_level !== 'number' || t.proxy_level === proxy_level) // optional filter by proxy level\n            .map(t => {\n                if (t.meshes[style_name]) {\n                    return [t, t.meshes[style_name].filter(m => m.variant.blend_order === blend_order)];\n                }\n            })\n            .filter(x => x); // skip tiles with no meshes for this blend order\n\n        // Mesh variants must be rendered in requested order across tiles, to prevent labels that cross\n        // tile boundaries from rendering over adjacent tile features meant to be underneath\n        let max_mesh_order =\n            Math.max(...tile_meshes.map(([, meshes]) => {\n                return Math.max(...meshes.map(m => m.variant.mesh_order));\n            }));\n\n        // One pass per mesh variant order (loop goes to max value +1 because 0 is a valid order value)\n        for (let mo=0; mo < max_mesh_order + 1; mo++) {\n            // Loop over tiles, with meshes pre-filtered by current blend order\n            for (let [tile, meshes] of tile_meshes) {\n                let first_for_tile = true;\n\n                // Skip proxy tiles if new tiles have finished loading this style\n                if (!tile.shouldProxyForStyle(style_name)) {\n                    // log('trace', `Scene.renderStyle(): Skip proxy tile for style '${style_name}' `, tile, tile.proxy_for);\n                    continue;\n                }\n\n                // Filter meshes further by current variant order\n                const order_meshes = meshes.filter(m => m.variant.mesh_order === mo);\n                if (order_meshes.length === 0) {\n                    continue;\n                }\n\n                // Style-specific state\n                // Only setup style if rendering for first time this frame\n                // (lazy init, not all styles will be used in all screen views; some styles might be defined but never used)\n                if (first_for_style === true) {\n                    first_for_style = false;\n                    program = this.setupStyle(style, program_key);\n                    if (!program) {\n                        // no program found, e.g. happens when rendering selection pass, but style doesn't support selection\n                        return 0;\n                    }\n                }\n\n                // Render each mesh (for current variant order)\n                order_meshes.forEach(mesh => {\n                    // Tile-specific state\n                    if (first_for_tile === true) {\n                        first_for_tile = false;\n                        this.view.setupTile(tile, program);\n                    }\n\n                    // Render this mesh variant\n                    if (style.render(mesh)) {\n                        this.requestRedraw();\n                    }\n                    render_count += mesh.geometry_count;\n                });\n            }\n        }\n\n        return render_count;\n    }\n\n    setupStyle(style, program_key) {\n        // Get shader program from style, lazily compiling if necessary\n        let program;\n        try {\n            program = style.getProgram(program_key);\n            if (!program) {\n                return;\n            }\n        }\n        catch(error) {\n            this.trigger('warning', {\n                type: 'styles',\n                message: `Error compiling style ${style.name}`,\n                style,\n                shader_errors: style.program && style.program.shader_errors\n            });\n            return;\n        }\n\n        program.use();\n        style.setup();\n\n        program.uniform('1f', 'u_time', this.animated ? (((+new Date()) - this.start_time) / 1000) : 0);\n        this.view.setupProgram(program);\n\n        for (let i in this.lights) {\n            this.lights[i].setupProgram(program);\n        }\n\n        return program;\n    }\n\n    clearFrame() {\n        if (!this.initialized) {\n            return;\n        }\n        this.render_states.depth_write.set({ depth_write: true });\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT | this.gl.STENCIL_BUFFER_BIT);\n    }\n\n    setRenderState({ depth_test, depth_write, cull_face, blend } = {}) {\n        if (!this.initialized) {\n            return;\n        }\n\n        // Defaults\n        // TODO: when we abstract out support for multiple render passes, these can be per-pass config options\n        let render_states = this.render_states;\n        depth_test = (depth_test === false) ? false : render_states.defaults.depth_test;      // default true\n        depth_write = (depth_write === false) ? false : render_states.defaults.depth_write;   // default true\n        cull_face = (cull_face === false) ? false : render_states.defaults.culling;           // default true\n        blend = (blend != null) ? blend : render_states.defaults.blending;                    // default false\n\n        // Reset frame state\n        let gl = this.gl;\n\n        render_states.depth_test.set({ depth_test });\n        render_states.depth_write.set({ depth_write });\n        render_states.culling.set({ cull: cull_face, face: render_states.defaults.culling_face });\n\n        // Blending of alpha channel is modified to account for WebGL alpha behavior, see:\n        // http://webglfundamentals.org/webgl/lessons/webgl-and-alpha.html\n        // http://stackoverflow.com/a/11533416\n        if (blend) {\n            // Opaque: all source, no destination\n            if (blend === 'opaque') {\n                render_states.blending.set({\n                    blend: false\n                });\n            }\n            // Traditional alpha blending\n            else if (blend === 'overlay' || blend === 'inlay' || blend === 'translucent') {\n                render_states.blending.set({\n                    blend: true,\n                    src: gl.SRC_ALPHA, dst: gl.ONE_MINUS_SRC_ALPHA,\n                    src_alpha: gl.ONE, dst_alpha: gl.ONE_MINUS_SRC_ALPHA\n                });\n            }\n            // Additive blending\n            else if (blend === 'add') {\n                render_states.blending.set({\n                    blend: true,\n                    src: gl.ONE, dst: gl.ONE\n                });\n            }\n            // Multiplicative blending\n            else if (blend === 'multiply') {\n                render_states.blending.set({\n                    blend: true,\n                    src: gl.ZERO, dst: gl.SRC_COLOR\n                });\n            }\n        }\n        else {\n            render_states.blending.set({ blend: false });\n        }\n    }\n\n    // Request feature selection at given pixel. Runs async and returns results via a promise.\n    getFeatureAt(pixel, { radius } = {}) {\n        if (!this.initialized) {\n            log('debug', 'Scene.getFeatureAt() called before scene was initialized');\n            return Promise.resolve();\n        }\n\n        // skip selection if no interactive features\n        if (this.selection_feature_count === 0) {\n            return Promise.resolve();\n        }\n\n        // only instantiate feature selection on-demand\n        if (!this.selection) {\n            this.resetFeatureSelection();\n        }\n\n        // Scale point and radius to [0..1] range\n        let point = {\n            x: pixel.x / this.view.size.css.width,\n            y: pixel.y / this.view.size.css.height\n        };\n\n        if (radius > 0) {\n            radius  = {\n                x: radius / this.view.size.css.width,\n                y: radius / this.view.size.css.height\n            };\n        }\n        else {\n            radius = null;\n        }\n\n        return this.selection.getFeatureAt(point, { radius }).\n            then(selection => Object.assign(selection, { pixel })).\n            catch(error => Promise.resolve({ error }));\n    }\n\n    // Query features within visible tiles, with optional filter conditions\n    async queryFeatures({ filter, unique = true, group_by = null, visible = null, geometry = false } = {}) {\n        if (!this.initialized) {\n            return [];\n        }\n\n        filter = Utils.serializeWithFunctions(filter);\n\n        // Optional uniqueify criteria\n        // Valid values: true, false/null, single property name, or array of property names\n        unique = (typeof unique === 'string') ? [unique] : unique;\n        const uniqueify_on_id = (unique === true || (Array.isArray(unique) && unique.indexOf('$id') > -1));\n        const uniqueify = unique && (obj => {\n            const properties = Array.isArray(unique) ? sliceObject(obj.properties, unique) : obj.properties;\n            const id = uniqueify_on_id ? obj.id : null;\n            if (geometry) {\n                // when `geometry` flag is set, we need to uniqueify based on *both* feature properties and geometry\n                return JSON.stringify({ geometry: obj.geometry, properties, id });\n            }\n            return JSON.stringify({ properties, id });\n        });\n\n        // Optional grouping criteria\n        // Valid values: false/null, single property name, or array of property names\n        group_by = (typeof group_by === 'string' || Array.isArray(group_by)) && group_by;\n        const group = group_by && (obj => {\n            return Array.isArray(group_by) ? JSON.stringify(sliceObject(obj, group_by)) : obj[group_by];\n        });\n\n        const tile_keys = this.tile_manager.getRenderableTiles().map(t => t.key);\n        const results = await WorkerBroker.postMessage(this.workers, 'self.queryFeatures', { filter, visible, geometry, tile_keys });\n        const features = [];\n        const keys = {};\n        const groups = {};\n\n        results.forEach(r => r.forEach(feature => {\n            if (uniqueify) {\n                const str = uniqueify(feature);\n                if (keys[str]) {\n                    return;\n                }\n                keys[str] = true;\n            }\n\n            if (group) {\n                const str = group(feature.properties);\n                groups[str] = groups[str] || [];\n                groups[str].push(feature);\n            }\n            else {\n                features.push(feature);\n            }\n        }));\n        return group ? groups : features; // returned grouped results, or all results\n    }\n\n    // Rebuild all tiles, without re-parsing the config or re-compiling styles\n    // sync: boolean of whether to sync the config object to the worker\n    // sources: optional array of data sources to selectively rebuild (by default all our rebuilt)\n    rebuild({ initial = false, new_generation = true, sources = null, serialize_funcs, profile = false, fade_in = false } = {}) {\n        return new Promise((resolve, reject) => {\n            // Skip rebuild if already in progress\n            if (this.building) {\n                // Queue up to one rebuild call at a time, only save last request\n                if (this.building.queued && this.building.queued.reject) {\n                    // notify previous request that it did not complete\n                    log('debug', 'Scene.rebuild: request superceded by a newer call');\n                    this.building.queued.resolve(false); // false flag indicates rebuild request was superceded\n                }\n\n                // Save queued request\n                let options = { initial, new_generation, sources, serialize_funcs, profile, fade_in };\n                this.building.queued = { resolve, reject, options };\n                log('trace', 'Scene.rebuild(): queuing request');\n                return;\n            }\n\n            // Track tile build state\n            this.building = { resolve, reject, initial };\n\n            // Profiling\n            if (profile) {\n                this.debug.profile('Scene.rebuild');\n            }\n\n            // Increment generation to ensure style/tile building stay in sync\n            // (skipped if calling function already incremented)\n            if (new_generation) {\n                this.generation = ++Scene.generation;\n                for (let style in this.styles) {\n                    this.styles[style].setGeneration(this.generation);\n                }\n            }\n\n            // Update config (in case JS objects were manipulated directly)\n            this.syncConfigToWorker({ serialize_funcs });\n            this.resetWorkerFeatureSelection(sources);\n            this.resetTime();\n\n            // Rebuild visible tiles\n            this.tile_manager.pruneToVisibleTiles();\n            this.tile_manager.forEachTile(tile => {\n                if (!sources || sources.indexOf(tile.source.name) > -1) {\n                    this.tile_manager.buildTile(tile, { fade_in });\n                }\n            });\n            this.tile_manager.updateTilesForView(); // picks up additional tiles for any new/changed data sources\n            this.tile_manager.checkBuildQueue();    // resolve immediately if no tiles to build\n        }).then(() => {\n            // Profiling\n            if (profile) {\n                this.debug.profileEnd('Scene.rebuild');\n            }\n        });\n    }\n\n    // Tile manager finished building tiles\n    // TODO move to tile manager\n    tileManagerBuildDone() {\n        TextCanvas.pruneTextCache();\n\n        if (this.building) {\n            log('info', 'Scene: build geometry finished');\n            if (this.building.resolve) {\n                this.logFirstBuild();\n                this.building.resolve(true);\n            }\n\n            // Another rebuild queued?\n            var queued = this.building.queued;\n            this.building = null;\n            if (queued) {\n                log('debug', 'Scene: starting queued rebuild() request');\n                this.rebuild(queued.options).then(queued.resolve, queued.reject);\n            }\n            else {\n                this.tile_manager.updateLabels(); // refresh label if nothing to rebuild\n            }\n        }\n    }\n\n    /**\n       Load (or reload) the scene config\n       @return {Promise}\n    */\n    async loadScene(config_source = null, { base_path, file_type } = {}) {\n        this.config_source = config_source || this.config_source;\n\n        if (typeof this.config_source === 'string') {\n            this.base_path = URLs.pathForURL(base_path || this.config_source);\n        }\n        else {\n            this.base_path = URLs.pathForURL(base_path);\n        }\n\n        // backwards compatibility for accessing base path under previous name\n        // TODO: schedule for deprecation\n        this.config_path = this.base_path;\n\n        const { config, bundle, texture_nodes } = await SceneLoader.loadScene(\n            this.config_source,\n            { path: this.base_path, type: file_type });\n\n        this.config = config;\n        this.config_bundle = bundle;\n        return { texture_nodes }; // pass along texture nodes for resolution after global property subtistution\n    }\n\n    // Add source to a scene, arguments `name` and `config` need to be provided:\n    //  - If the name doesn't match a sources it will create it\n    //  - the `config` obj follow the YAML scene spec, ex: ```{type: 'TopoJSON', url: \"//tile.mapzen.com/mapzen/vector/v1/all/{z}/{x}/{y}.topojson\"]}```\n    //    that looks like:\n    //\n    //      scene.setDataSource(\"osm\", {type: 'TopoJSON', url: \"//tile.mapzen.com/mapzen/vector/v1/all/{z}/{x}/{y}.topojson\" });\n    //\n    //  - also can be pass a ```data``` obj: ```{type: 'GeoJSON', data: JSObj ]}```\n    //\n    //      var geojson_data = {};\n    //      ...\n    //      scene.setDataSource(\"dynamic_data\", {type: 'GeoJSON', data: geojson_data });\n    //\n    setDataSource (name, config) {\n        if (!name || !config || !config.type || (!config.url && !config.data)) {\n            log('error', 'No name provided or not a valid config:', name, config);\n            return;\n        }\n\n        let load = (this.config.sources[name] == null);\n        let source = this.config.sources[name] = Object.assign({}, config);\n\n        // Convert raw data into blob URL\n        if (source.data && typeof source.data === 'object') {\n            source.url = URLs.createObjectURL(new Blob([JSON.stringify(source.data)], { type: 'application/json' }));\n            delete source.data;\n        }\n\n        if (load) {\n            return this.updateConfig({ rebuild: { sources: [name] } });\n        } else {\n            return this.rebuild({ sources: [name] });\n        }\n    }\n\n    // (Re-)create all data sources. Re-layout view and rebuild tiles when either:\n    // 1) all tiles if `rebuild_all` parameter is specified (used when loading a new scene)\n    // 2) the data source has changed in a way that affects tile layout (e.g. tile size, max_zoom, etc.)\n    createDataSources(rebuild_all = false) {\n        const reset = []; // sources to reset\n        const prev_source_names = Object.keys(this.sources);\n        let source_id = 0;\n\n        for (var name in this.config.sources) {\n            const source = this.config.sources[name];\n            const prev_source = this.sources[name];\n\n            try {\n                const config = { ...source, name, id: source_id++ };\n                this.sources[name] = DataSource.create(config, this.sources);\n                if (!this.sources[name]) {\n                    throw {};\n                }\n            }\n            catch(e) {\n                delete this.sources[name];\n                const message = `Could not create data source: ${e.message}`;\n                log('warn', `Scene: ${message}`, source);\n                this.trigger('warning', { type: 'sources', source, message });\n            }\n\n            // Data source changed in a way that affects tile layout?\n            // If so, we'll re-calculate the tiles in view for this source and rebuild them\n            if (rebuild_all || DataSource.tileLayoutChanged(this.sources[name], prev_source)) {\n                reset.push(name);\n            }\n        }\n\n        // Sources that were removed\n        prev_source_names.forEach(s => {\n            if (!this.config.sources[s]) {\n                delete this.sources[s]; // TODO: remove from workers too?\n                reset.push(s);\n            }\n        });\n\n        // Remove tiles from sources that have changed\n        if (reset.length > 0) {\n            this.tile_manager.removeTiles(tile => {\n                return (reset.indexOf(tile.source.name) > -1);\n            });\n        }\n\n        // Mark sources that will generate geometry tiles (any that are referenced in scene layers)\n        for (let ln in this.config.layers) {\n            let layer = this.config.layers[ln];\n            if (layer.enabled !== false && layer.data && this.sources[layer.data.source]) {\n                this.sources[layer.data.source].builds_geometry_tiles = true;\n            }\n        }\n    }\n\n    // Load all textures in the scene definition\n    loadTextures() {\n        return Texture.createFromObject(this.gl, this.config.textures)\n            .then(() => Texture.createDefault(this.gl)); // create a 'default' texture for placeholders\n    }\n\n    // Free textures from previously loaded scene\n    freePreviousTextures() {\n        if (!this.prev_textures) {\n            return;\n        }\n\n        this.prev_textures.forEach(t => {\n            // free textures that aren't in the new scene, but are still in the global texture set\n            if (!this.config.textures[t] && Texture.textures[t]) {\n                Texture.textures[t].destroy();\n            }\n        });\n        this.prev_textures = null;\n    }\n\n    // Called (currently manually) after styles are updated in stylesheet\n    updateStyles() {\n        if (!this.initialized && !this.initializing) {\n            throw new Error('Scene.updateStyles() called before scene was initialized');\n        }\n\n        // (Re)build styles from config\n        this.styles = this.style_manager.build(this.config.styles);\n        this.style_manager.initStyles(this);\n\n        // Optionally set GL context (used when initializing or re-initializing GL resources)\n        for (let style in this.styles) {\n            this.styles[style].setGL(this.gl);\n        }\n\n        this.dirty = true;\n    }\n\n    // Is scene currently animating?\n    get animated () {\n        // Disable animation is scene flag requests it, otherwise enable animation if any animated styles are in view\n        return (this.config.scene.animated === false ?\n            false :\n            this.style_manager.getActiveStyles().some(s => this.styles[s].animated));\n    }\n\n    // Get active camera - for public API\n    getActiveCamera() {\n        return this.view.getActiveCamera();\n    }\n\n    // Set active camera - for public API\n    setActiveCamera(name) {\n        return this.view.setActiveCamera(name);\n    }\n\n    // Create lighting\n    createLights() {\n        this.lights = {};\n\n        if (debugSettings.wireframe) {\n            Light.enabled = false; // disable lighting for wireframe mode\n        }\n\n        for (let i in this.config.lights) {\n            if (!this.config.lights[i] || typeof this.config.lights[i] !== 'object') {\n                continue;\n            }\n            let light = this.config.lights[i];\n            light.name = i.replace('-', '_'); // light names are injected in shaders, can't have hyphens\n            light.visible = (light.visible === false) ? false : true;\n            if (light.visible) {\n                this.lights[light.name] = Light.create(this.view, light);\n            }\n        }\n        Light.inject(this.lights);\n    }\n\n    // Set background color from scene config\n    setBackground() {\n        const bg = this.config.scene.background;\n\n        this.background = {};\n        if (bg && bg.color) {\n            this.background.color = StyleParser.createColorPropertyCache(bg.color);\n        }\n        if (!this.background.color) {\n            this.background.color = StyleParser.createColorPropertyCache([0, 0, 0, 0]); // default background TODO: vary w/scene alpha\n        }\n    }\n\n    // Update background color each frame as needed (e.g. may be zoom-interpolated)\n    updateBackground () {\n        const last_color = this.background.computed_color;\n        const color = this.background.computed_color = StyleParser.evalCachedColorProperty(this.background.color, { zoom: this.view.tile_zoom });\n\n        // update GL/canvas if color has changed\n        if (!last_color || color.some((v, i) => last_color[i] !== v)) {\n            // if background is fully opaque, set canvas background to match\n            if (color[3] === 1) {\n                this.canvas.style.backgroundColor =\n                    `rgba(${color.map(c => Math.floor(c * 255)).join(', ')})`;\n            }\n            else {\n                this.canvas.style.backgroundColor = 'transparent';\n            }\n\n            this.gl.clearColor(...color);\n        }\n    }\n\n    // Turn introspection mode on/off\n    setIntrospection (val) {\n        if (val !== this.introspection) {\n            this.introspection = (val != null) ? val : false;\n            this.updating++;\n            return this.updateConfig({ normalize: false }).then(() => this.updating--);\n        }\n        return Promise.resolve();\n    }\n\n    // Update scene config, and optionally rebuild geometry\n    // rebuild can be boolean, or an object containing rebuild options to passthrough\n    updateConfig({ loading = false, rebuild = true, serialize_funcs, texture_nodes = {}, normalize = true, fade_in = false } = {}) {\n        this.generation = ++Scene.generation;\n        this.updating++;\n\n        // Apply globals, finalize textures and other resource paths if needed\n        this.config = SceneLoader.applyGlobalProperties(this.config);\n        if (normalize) {\n            // normalize whole scene if requested - usually when user is making run-time updates to scene\n            SceneLoader.normalize(this.config, this.config_bundle, texture_nodes);\n        }\n        SceneLoader.hoistTextureNodes(this.config, this.config_bundle, texture_nodes);\n\n        this.trigger(loading ? 'load' : 'update', { config: this.config });\n\n        this.style_manager.init();\n        this.view.reset();\n        this.createLights();\n        this.createDataSources(loading);\n        this.loadTextures();\n        this.setBackground();\n        FontManager.loadFonts(this.config.fonts);\n\n        // TODO: detect changes to styles? already (currently) need to recompile anyway when camera or lights change\n        this.updateStyles();\n\n        // Optionally rebuild geometry\n        let done = rebuild ?\n            this.rebuild(Object.assign({ initial: loading, new_generation: false, serialize_funcs, fade_in }, typeof rebuild === 'object' && rebuild)) :\n            this.syncConfigToWorker({ serialize_funcs }); // rebuild() also syncs config\n\n        // Finish by updating bounds and re-rendering\n        this.updating--;\n        this.view.updateBounds();\n        this.requestRedraw();\n\n        return done.then(() => {\n            this.last_render_count = 0; // force re-evaluation of selection map\n            this.requestRedraw();\n        });\n    }\n\n    // Serialize config and send to worker\n    syncConfigToWorker({ serialize_funcs = true } = {}) {\n        // Tell workers we're about to rebuild (so they can update styles, etc.)\n        let config_serialized =\n            serialize_funcs ? Utils.serializeWithFunctions(this.config) : JSON.stringify(this.config);\n        return WorkerBroker.postMessage(this.workers, 'self.updateConfig', {\n            config: config_serialized,\n            generation: this.generation,\n            introspection: this.introspection\n        }, debugSettings);\n    }\n\n    // Listen to related objects\n    createListeners () {\n        this.listeners = {};\n\n        this.listeners.view = {\n            move: () => this.trigger('move')\n        };\n        this.view.subscribe(this.listeners.view);\n\n        this.listeners.texture = {\n            update: () => this.dirty = true,\n            warning: (data) => this.trigger('warning', Object.assign({ type: 'textures' }, data))\n        };\n        Texture.subscribe(this.listeners.texture);\n\n        this.listeners.scene_loader = {\n            error: (data) => this.trigger('error', Object.assign({ type: 'scene' }, data))\n        };\n        SceneLoader.subscribe(this.listeners.scene_loader);\n    }\n\n    destroyListeners () {\n        this.unsubscribeAll();\n        this.view.unsubscribe(this.listeners.view);\n        Texture.unsubscribe(this.listeners.texture);\n        SceneLoader.unsubscribe(this.listeners.scene_loader);\n        this.listeners = null;\n    }\n\n    destroyFeatureSelection() {\n        if (this.selection) {\n            this.selection.destroy();\n            this.selection = null;\n        }\n    }\n\n    resetFeatureSelection() {\n        this.selection = new FeatureSelection(this.gl, this.workers, () => this.building);\n        this.last_render_count = 0; // force re-evaluation of selection map\n    }\n\n    resetWorkerFeatureSelection(sources = null) {\n        if (this.workers) {\n            WorkerBroker.postMessage(this.workers, 'self.resetFeatureSelection', sources);\n        }\n    }\n\n    // Gets the current feature selection map size across all workers. Returns a promise.\n    getFeatureSelectionMapSize() {\n        // Only allow one fetch process to run at a time\n        if (this.fetching_selection_map == null) {\n            this.fetching_selection_map = WorkerBroker.postMessage(this.workers, 'self.getFeatureSelectionMapSize')\n                .then(sizes => {\n                    this.fetching_selection_map = null;\n                    return sizes.reduce((a, b) => a + b);\n                });\n        }\n        return this.fetching_selection_map;\n    }\n\n    // Reset internal clock, mostly useful for consistent experience when changing styles/debugging\n    resetTime() {\n        this.start_time = +new Date();\n    }\n\n    // Fires event when rendered tile set or style changes\n    updateViewComplete () {\n        if ((this.render_count_changed || this.generation !== this.last_complete_generation) &&\n            !this.building &&\n            !this.tile_manager.isLoadingVisibleTiles() &&\n            this.tile_manager.allVisibleTilesLabeled()) {\n            this.tile_manager.updateLabels();\n            this.last_complete_generation = this.generation;\n            this.trigger('view_complete', { first: (this.view_complete !== true) });\n            this.view_complete = true;\n        }\n    }\n\n    resetViewComplete () {\n        this.last_complete_generation = null;\n    }\n\n    // Take a screenshot\n    // Asynchronous because we have to wait for next render to capture buffer\n    // Returns a promise\n    screenshot ({ background = 'white' } = {}) {\n        this.requestRedraw();\n        return this.media_capture.screenshot({background});\n    }\n\n    startVideoCapture () {\n        this.requestRedraw();\n        return this.media_capture.startVideoCapture();\n    }\n\n    stopVideoCapture () {\n        return this.media_capture.stopVideoCapture();\n    }\n\n    // Log first frame rendered (with any geometry)\n    logFirstFrame() {\n        if (this.last_render_count === 0 && !this.times.first_frame) {\n            this.times.first_frame = (+new Date()) - this.start_time;\n            log('debug', `Scene: initial frame time: ${this.times.first_frame}`);\n        }\n    }\n\n    // Log completion of first scene build\n    logFirstBuild() {\n        if (this.times.first_build == null) {\n            this.times.first_build = (+new Date()) - this.start_time;\n            log('debug', `Scene: initial build time: ${this.times.first_build}`);\n        }\n    }\n\n}\n\nScene.id = 0;         // unique id for a scene instance\nScene.generation = 0; // id that is incremented each time a scene config is re-parsed\n","// Debounce a function\n// https://davidwalsh.name/javascript-debounce-function\nexport default function debounce (func, wait) {\n    var timeout;\n    return function() {\n        var context = this, args = arguments;\n        var later = function() {\n            timeout = null;\n            func.apply(context, args);\n        };\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n    };\n}\n","import Thread from './utils/thread';\nimport Scene from './scene/scene';\nimport Geo from './utils/geo';\nimport debounce from './utils/debounce';\nimport {mergeDebugSettings} from './utils/debug_settings';\n\n// Exports must appear outside a function, but will only be defined in main thread (below)\nexport var LeafletLayer;\nexport function leafletLayer(options) {\n    return extendLeaflet(options);\n}\n\n// save references to overloaded Leaflet methods\nconst originalHandlers = {\n    map: {},\n    scrollWheelZoom: {},\n    doubleClickZoom: {}\n};\n\nfunction extendLeaflet(options) {\n\n    // If LeafletLayer is already defined when this is called just return that immediately\n    // e.g. if you call leafletLayer multiple times (which is valid)\n    if (typeof LeafletLayer !== 'undefined') {\n        return new LeafletLayer(options);\n    }\n\n    // Leaflet layer functionality is only defined in main thread\n    if (Thread.is_main) {\n\n        let L = options.leaflet || window.L;\n\n        // Determine if we are extending the leaflet 0.7.x TileLayer class, or the newer\n        // leaflet 1.x GridLayer class.\n        let layerBaseClass = L.GridLayer ? L.GridLayer : L.TileLayer;\n        let leafletVersion = layerBaseClass === L.GridLayer ? '1.x' : '0.7.x';\n        let layerClassConfig = {};\n        let setZoomAroundNoMoveEnd; // alternate zoom functions defined below\n\n        // If extending leaflet 0.7.x TileLayer, additional modifications are needed\n        if (layerBaseClass === L.TileLayer) {\n            layerClassConfig._addTile = function(){};\n            layerClassConfig._removeTile = function(){};\n            layerClassConfig._reset = function() {\n                layerBaseClass.prototype._reset.apply(this, arguments);\n                // re-add the canvas since base class `viewreset` event can remove it\n                if (this.scene && this.scene.container && this.scene.canvas) {\n                    this.scene.container.appendChild(this.scene.canvas);\n                }\n            };\n        }\n\n        // Define custom layer methods\n        Object.assign(layerClassConfig, {\n\n            initialize (options) {\n                // Defaults\n                options.showDebug = (!options.showDebug ? false : true);\n\n                L.setOptions(this, options);\n                this.updateTangramDebugSettings();\n                this.createScene();\n                this.hooks = {};\n                this._updating_tangram = false;\n            },\n\n            createScene () {\n                this.scene = Scene.create(\n                    this.options.scene,\n                    {\n                        numWorkers: this.options.numWorkers,\n                        preUpdate: this.options.preUpdate,\n                        postUpdate: this.options.postUpdate,\n                        continuousZoom: (LeafletLayer.leafletVersion === '1.x'),\n                        wrapView: (this.options.noWrap === true ? false : true),\n                        highDensityDisplay: this.options.highDensityDisplay,\n                        logLevel: this.options.logLevel,\n                        introspection: this.options.introspection, // turn scene introspection on/off\n                        webGLContextOptions: this.options.webGLContextOptions, // override/supplement WebGL context options\n                        disableRenderLoop: this.options.disableRenderLoop // app must call scene.update() per frame\n                    });\n            },\n\n            // Finish initializing scene and setup events when layer is added to map\n            onAdd (map) {\n                if (!this.scene) {\n                    this.createScene();\n                }\n\n                layerBaseClass.prototype.onAdd.apply(this, arguments);\n\n                this.hooks.resize = () => {\n                    this._updating_tangram = true;\n                    this.updateSize();\n                    this._updating_tangram = false;\n                };\n                map.on('resize', this.hooks.resize);\n\n                this.hooks.move = () => {\n                    if (this._updating_tangram) {\n                        return;\n                    }\n                    this._updating_tangram = true;\n\n                    this.scene.view.setPanning(true);\n                    var view = map.getCenter();\n                    view.zoom = Math.max(Math.min(map.getZoom(), map.getMaxZoom() || Geo.default_view_max_zoom), map.getMinZoom());\n\n                    this.scene.view.setView(view);\n                    if (this._mapLayerCount > 1) {\n                        // if there are other map pane layers active, redraw immediately to stay in better visual sync\n                        // otherwise, wait until next regular animation loop iteration\n                        this.scene.immediateRedraw();\n                    }\n\n                    this._updating_tangram = false;\n                };\n                map.on('move', this.hooks.move);\n\n                this.hooks.moveend = () => {\n                    this.scene.view.setPanning(false);\n                    this.scene.requestRedraw();\n                };\n                map.on('moveend', this.hooks.moveend);\n\n                this.hooks.drag = () => {\n                    this.scene.view.markUserInput();\n                };\n                map.on('drag', this.hooks.drag);\n\n                // keep Tangram layer in sync with view via mutation observer\n                this._map_pane_observer = new MutationObserver(mutations => {\n                    mutations.forEach(() => this.reverseTransform());\n                });\n                this._map_pane_observer.observe(map.getPanes().mapPane, { attributes: true });\n\n                // Modify default Leaflet behaviors\n                this.modifyScrollWheelBehavior(map);\n                this.modifyZoomBehavior(map);\n\n                this.trackMapLayerCounts(map);\n\n                // Setup feature selection\n                this.setupSelectionEventHandlers(map);\n                this.setSelectionEvents(this.options.events, { radius: this.options.selectionRadius });\n\n                // Add GL canvas to layer container\n                this.scene.container = this.getContainer();\n                this.updateSize();\n\n                // Initial view\n                this.updateView();\n                this.resizeOnFirstVisible();\n\n                // Subscribe to tangram events\n                this.scene.subscribe({\n                    move: this.onTangramViewUpdate.bind(this)\n                });\n\n                // Use leaflet's existing event system as the callback mechanism\n                this.scene.load(\n                    this.options.scene,\n                    {\n                        base_path: this.options.sceneBasePath,\n                        file_type: this.options.sceneFileType,\n                        blocking: false\n                    }).then(() => {\n\n                    if (!this.options.attribution) {\n                        for (const [, value] of Object.entries(this.scene.config.sources)) {\n                            if (value.attribution) {\n                                map.attributionControl.addAttribution(value.attribution);\n                            }\n                        }\n                    }\n\n                    this._updating_tangram = true;\n\n                    this.updateSize();\n                    this.updateView();\n                    this.reverseTransform();\n\n                    this._updating_tangram = false;\n\n                    this.fire('init');\n                }).catch(error => {\n                    this.fire('error', error);\n                });\n            },\n\n            onRemove (map) {\n                layerBaseClass.prototype.onRemove.apply(this, arguments);\n\n                map.off('layeradd layerremove overlayadd overlayremove', this._updateMapLayerCount);\n                map.off('resize', this.hooks.resize);\n                map.off('move', this.hooks.move);\n                map.off('moveend', this.hooks.moveend);\n                map.off('drag', this.hooks.drag);\n                map.off('click', this.hooks.click);\n                map.off('mousemove', this.hooks.mousemove);\n                map.off('mouseout', this.hooks.mouseout);\n                document.removeEventListener('visibilitychange', this.hooks.visibilitychange);\n                this.hooks = {};\n\n                this._map_pane_observer.disconnect();\n\n                if (this.scene) {\n                    this.scene.destroy();\n                    this.scene = null;\n                }\n            },\n\n            createTile (coords) {\n                var key = coords.x + '/' + coords.y + '/' + coords.z;\n                var div = document.createElement('div');\n                div.setAttribute('data-tile-key', key);\n                div.style.width = '256px';\n                div.style.height = '256px';\n\n                if (this.options.showDebug) {\n                    var debug_overlay = document.createElement('div');\n                    debug_overlay.textContent = key;\n                    debug_overlay.style.position = 'absolute';\n                    debug_overlay.style.left = 0;\n                    debug_overlay.style.top = 0;\n                    debug_overlay.style.color = 'white';\n                    debug_overlay.style.fontSize = '16px';\n                    debug_overlay.style.textOutline = '1px #000000';\n                    debug_overlay.style.padding = '8px';\n\n                    div.appendChild(debug_overlay);\n                    div.style.borderStyle = 'solid';\n                    div.style.borderColor = 'white';\n                    div.style.borderWidth = '1px';\n                }\n\n                return div;\n            },\n\n            // Modify leaflet's default scroll wheel behavior to render frames more frequently\n            // (should generally lead to smoother scroll with Tangram frame re-render)\n            modifyScrollWheelBehavior (map) {\n                if (this.scene.view.continuous_zoom && map.scrollWheelZoom && this.options.modifyScrollWheel !== false) {\n                    map.options.zoomSnap = 0;\n\n                    const enabled = map.scrollWheelZoom.enabled();\n                    map.scrollWheelZoom.disable();\n\n                    // Chrome and Safari have smoother scroll-zoom without actively throttling the mouse wheel,\n                    // while FF and Edge/IE do better with throttling.\n                    // TODO: may be related to syncing differences with requestAnimationFrame loop, investigate further\n                    if (L.Browser.chrome || L.Browser.safari) {\n                        map.scrollWheelZoom._onWheelScroll = function (e) {\n                            var delta = L.DomEvent.getWheelDelta(e);\n                            this._delta += delta;\n                            this._lastMousePos = this._map.mouseEventToContainerPoint(e);\n                            this._performZoom();\n                            L.DomEvent.stop(e);\n                        };\n                    }\n                    else {\n                        map.options.wheelDebounceTime = 20; // better default for FF and Edge/IE\n                    }\n\n                    const debounceMoveEnd = debounce(\n                        function(map) {\n                            map._moveEnd(true);\n                            map.fire('viewreset'); // keep other leaflet layers in sync\n                        },\n                        map.options.wheelDebounceTime * 2\n                    );\n\n                    // save reference to overloaded method\n                    if (!originalHandlers.scrollWheelZoom._performZoom) {\n                        originalHandlers.scrollWheelZoom._performZoom = map.scrollWheelZoom._performZoom;\n                    }\n\n                    var layer = this;\n                    map.scrollWheelZoom._performZoom = function () {\n                        if (this._map !== layer._map) { // only call overloaded method on a tangram layer\n                            originalHandlers.scrollWheelZoom._performZoom.call(this);\n                            return;\n                        }\n\n                        var map = this._map,\n                            zoom = map.getZoom();\n\n                        map._stop(); // stop panning and fly animations if any\n\n                        var delta = this._delta / (this._map.options.wheelPxPerZoomLevel * 4);\n                        this._delta = 0;\n\n                        if ((zoom + delta) >= this._map.getMaxZoom()) {\n                            delta = this._map.getMaxZoom() - zoom; // don't go past max zoom\n                        }\n                        else if ((zoom + delta) <= this._map.getMinZoom()) {\n                            delta = this._map.getMinZoom() - zoom; // don't go past min zoom\n                        }\n\n                        if (!delta) { return; }\n\n                        if (map.options.scrollWheelZoom === 'center') {\n                            setZoomAroundNoMoveEnd(layer, map.getCenter(), zoom + delta);\n                        } else {\n                            setZoomAroundNoMoveEnd(layer, this._lastMousePos, zoom + delta);\n                        }\n                        debounceMoveEnd(map);\n                    };\n\n                    if (enabled) {\n                        map.scrollWheelZoom.enable();\n                    }\n                }\n            },\n\n            // Modify leaflet's default double-click and zoom in/out behavior, to better keep Tangram layer in sync with marker/SVG layers\n            modifyZoomBehavior (map) {\n                if (this.scene.view.continuous_zoom && this.options.modifyZoomBehavior !== false) {\n                    var layer = this;\n\n                    // Simplified version of Leaflet's flyTo, for short animations zooming around a point\n                    const flyAround = function (layer, targetCenter, targetZoom) {\n                        map._stop();\n\n                        var startZoom = map._zoom;\n\n                        targetCenter = L.latLng(targetCenter);\n                        targetZoom = targetZoom === undefined ? startZoom : targetZoom;\n                        targetZoom = Math.min(targetZoom, map.getMaxZoom()); // don't go past max zoom\n\n                        var start = Date.now(),\n                            duration = 75;\n\n                        function frame() {\n                            var t = (Date.now() - start) / duration;\n\n                            if (t <= 1) {\n                                // reuse internal flyTo frame to ensure these animations are canceled like others\n                                map._flyToFrame = L.Util.requestAnimFrame(frame, map);\n                                setZoomAroundNoMoveEnd(layer, targetCenter, startZoom + (targetZoom - startZoom) * t);\n                            } else {\n                                setZoomAroundNoMoveEnd(layer, targetCenter, targetZoom)\n                                    ._moveEnd(true);\n                            }\n                        }\n\n                        map._moveStart(true);\n\n                        frame.call(map);\n                        return map;\n                    };\n\n                    // Modify the double-click zoom handler to do a short zoom animation\n                    // See original: https://github.com/Leaflet/Leaflet/blob/cf518ff1a5e0e54a2f63faa144aeaa50888e0bc6/src/map/handler/Map.DoubleClickZoom.js#L29\n                    if (map.doubleClickZoom) {\n                        const enabled = map.doubleClickZoom.enabled();\n                        map.doubleClickZoom.disable();\n\n                        // save reference to overloaded method\n                        if (!originalHandlers.doubleClickZoom._onDoubleClick) {\n                            originalHandlers.doubleClickZoom._onDoubleClick = map.doubleClickZoom._onDoubleClick;\n                        }\n\n                        map.doubleClickZoom._onDoubleClick = function (e) {\n                            if (this._map !== layer._map) { // only call overloaded method on a tangram layer\n                                originalHandlers.doubleClickZoom._onDoubleClick.call(this, e);\n                                return;\n                            }\n\n                            var map = this._map,\n                                oldZoom = map.getZoom(),\n                                delta = map.options.zoomDelta,\n                                zoom = e.originalEvent.shiftKey ? oldZoom - delta : oldZoom + delta;\n\n                            if (map.options.doubleClickZoom === 'center') {\n                                flyAround(layer, map.getCenter(), zoom);\n                            } else {\n                                flyAround(layer, map.containerPointToLatLng(e.containerPoint), zoom);\n                            }\n                        };\n\n                        if (enabled) {\n                            map.doubleClickZoom.enable();\n                        }\n                    }\n\n                    // Modify the zoom in/out behavior\n                    // NOTE: this will NOT fire the 'zoomanim' event, so this modification should be disabled for apps that depend on it\n                    // See original: https://github.com/Leaflet/Leaflet/blob/cf518ff1a5e0e54a2f63faa144aeaa50888e0bc6/src/map/Map.js#L1610\n                    if (map._zoomAnimated) {\n                        // save reference to overloaded method\n                        if (!originalHandlers.map._animateZoom) {\n                            originalHandlers.map._animateZoom = map._animateZoom;\n                        }\n\n                        map._animateZoom = function (center, zoom, startAnim, noUpdate) {\n                            if (this !== layer._map) { // only call overloaded method on a tangram layer\n                                originalHandlers.map._animateZoom.call(this, center, zoom, startAnim, noUpdate);\n                                return;\n                            }\n\n                            if (startAnim) {\n                                this._animatingZoom = true;\n\n                                // remember what center/zoom to set after animation\n                                this._animateToCenter = center;\n                                this._animateToZoom = zoom;\n\n                                // replace leaflet CSS animation with Tangram animation to keep markers/SVG in sync\n                                // (this is a workaround from not being able to easily track/sync to on-going CSS animations in JS)\n                                flyAround(layer, center, zoom);\n                            }\n\n                            // Work around webkit not firing 'transitionend', see https://github.com/Leaflet/Leaflet/issues/3689, 2693\n                            setTimeout(L.Util.bind(this._onZoomTransitionEnd, this), 250);\n                        };\n                    }\n                }\n            },\n\n            updateView () {\n                var view = this._map.getCenter();\n                view.zoom = Math.max(Math.min(this._map.getZoom(), this._map.getMaxZoom() || Geo.default_view_max_zoom), this._map.getMinZoom());\n                this.scene.view.setView(view);\n            },\n\n            updateSize () {\n                var size = this._map.getSize();\n                this.scene.resizeMap(size.x, size.y);\n            },\n\n            resizeOnFirstVisible () {\n                let first_visibility = true;\n                this.hooks.visibilitychange = () => {\n                    if (first_visibility) {\n                        first_visibility = false;\n                        this.updateSize();\n                    }\n                };\n\n                document.addEventListener('visibilitychange', this.hooks.visibilitychange);\n            },\n\n            onTangramViewUpdate () {\n                if (!this._map || this._updating_tangram) {\n                    return;\n                }\n\n                // View changed?\n                let map_center = this._map.getCenter();\n                let view_center = this.scene.view.center;\n                if (map_center.lng === view_center.lng &&\n                    map_center.lat === view_center.lat &&\n                    this._map.getZoom() === this.scene.view.zoom) {\n                    return;\n                }\n\n                this._updating_tangram = true;\n                this._map.setView([this.scene.view.center.lat, this.scene.view.center.lng], this.scene.view.zoom, { animate: false });\n                this._updating_tangram = false;\n            },\n\n            render () {\n                if (!this.scene) {\n                    return;\n                }\n                this.scene.update();\n            },\n\n            // Reverse the CSS positioning Leaflet applies to the layer, since Tangram's WebGL canvas\n            // is expected to be 'absolutely' positioned.\n            reverseTransform () {\n                if (!this._map || !this.scene || !this.scene.container) {\n                    return;\n                }\n\n                var top_left = this._map.containerPointToLayerPoint([0, 0]);\n                L.DomUtil.setPosition(this.scene.container, top_left);\n            },\n\n            // Tie Leaflet event handlers to Tangram feature selection\n            setupSelectionEventHandlers (map) {\n                this._selection_events = {};\n                this._selection_radius = null; // optional radius\n\n                this.hooks.click = (event) => {\n                    if (typeof this._selection_events.click === 'function') {\n                        this.scene.getFeatureAt(event.containerPoint, { radius: this._selection_radius }).\n                            then(selection => {\n                                let results = Object.assign({}, selection, { leaflet_event: event });\n                                this._selection_events.click(results);\n                            });\n                    }\n                };\n                map.on('click', this.hooks.click);\n\n                this.hooks.mousemove = (event) => {\n                    if (typeof this._selection_events.hover === 'function') {\n                        this.scene.getFeatureAt(event.containerPoint, { radius: this._selection_radius }).\n                            then(selection => {\n                                let results = Object.assign({}, selection, { leaflet_event: event });\n                                this._selection_events.hover(results);\n                            });\n                    }\n                };\n                map.on('mousemove', this.hooks.mousemove);\n\n                this.hooks.mouseout = (event) => {\n                    // When mouse leaves map, send an additional selection event to indicate no feature is selected\n                    if (typeof this._selection_events.hover === 'function') {\n                        this._selection_events.hover({ changed: true, leaflet_event: event });\n                    }\n                };\n                map.on('mouseout', this.hooks.mouseout);\n            },\n\n            // Set user-defined handlers for feature selection events\n            // Currently only one handler can be defined for each event type\n            // Event types are: `click`, `hover` (leaflet `mousemove`)\n            setSelectionEvents (events, { radius } = {}) {\n                this._selection_events = Object.assign(this._selection_events, events);\n                this._selection_radius = (radius !== undefined) ? radius : this._selection_radius;\n            },\n\n            // Track the # of layers in the map pane\n            // Used to optimize Tangram redraw sensitivity (redraw more frequently when needing to sync w/other layers)\n            trackMapLayerCounts (map) {\n                this._updateMapLayerCount = () => {\n                    let nodes = map.getPanes().mapPane.childNodes;\n                    this._mapLayerCount = 0;\n                    for (let i=0; i < nodes.length; i++) {\n                        this._mapLayerCount += nodes[i].childNodes.length;\n                    }\n                };\n\n                map.on('layeradd layerremove overlayadd overlayremove', this._updateMapLayerCount);\n                this._updateMapLayerCount();\n            },\n\n            updateTangramDebugSettings () {\n                mergeDebugSettings(this.options.debug || {});\n            }\n\n        });\n\n        // Modified version of Leaflet's setZoomAround that doesn't trigger a moveEnd event\n        setZoomAroundNoMoveEnd = function (layer, latlng, zoom) {\n            var map = layer._map,\n                scene = layer.scene,\n                scale = map.getZoomScale(zoom),\n                viewHalf = map.getSize().divideBy(2),\n                containerPoint = latlng instanceof L.Point ? latlng : map.latLngToContainerPoint(latlng),\n\n                centerOffset = containerPoint.subtract(viewHalf).multiplyBy(1 - 1 / scale),\n                newCenter = map.containerPointToLatLng(viewHalf.add(centerOffset));\n\n            if (scene) {\n                scene.view.markUserInput();\n            }\n            return map._move(newCenter, zoom, { flyTo: true });\n        };\n\n        // Create the layer class\n        LeafletLayer = layerBaseClass.extend(layerClassConfig);\n\n        // Polyfill some 1.0 methods\n        if (typeof LeafletLayer.remove !== 'function') {\n            LeafletLayer.prototype.remove = function() {\n                if (this._map) {\n                    this._map.removeLayer(this);\n                }\n                this.fire('remove');\n            };\n        }\n\n        LeafletLayer.layerBaseClass = layerBaseClass;\n        LeafletLayer.leafletVersion = leafletVersion;\n\n        return new LeafletLayer(options);\n    }\n}\n","/*jshint worker: true*/\n\n// The leaflet layer plugin is currently the primary public API\nimport {leafletLayer} from './leaflet_layer';\nimport Scene from './scene/scene';\n\n// Additional modules are exposed for debugging\nimport version from './utils/version';\nimport log from './utils/log';\nimport Utils from './utils/utils';\nimport Geo from './utils/geo';\nimport Vector from './utils/vector';\nimport DataSource from './sources/data_source';\nimport GLSL from './gl/glsl';\nimport ShaderProgram from './gl/shader_program';\nimport VertexData from './gl/vertex_data';\nimport Texture from './gl/texture';\nimport Material from './lights/material';\nimport Light from './lights/light';\nimport WorkerBroker from './utils/worker_broker';\nimport Task from './utils/task';\nimport {StyleManager} from './styles/style_manager';\nimport StyleParser from './styles/style_parser';\nimport {TileID} from './tile/tile_id';\nimport Collision from './labels/collision';\nimport FeatureSelection from './selection/selection';\nimport TextCanvas from './styles/text/text_canvas';\nimport debugSettings from './utils/debug_settings';\n\nimport yaml from 'js-yaml';\n\n// Make some modules accessible for debugging\nconst debug = {\n    log,\n    yaml,\n    Utils,\n    Geo,\n    Vector,\n    DataSource,\n    GLSL,\n    ShaderProgram,\n    VertexData,\n    Texture,\n    Material,\n    Light,\n    Scene,\n    WorkerBroker,\n    Task,\n    StyleManager,\n    StyleParser,\n    TileID,\n    Collision,\n    FeatureSelection,\n    TextCanvas,\n    debugSettings\n};\n\nexport default {\n    leafletLayer,\n    debug,\n    version\n};\n","// Loads each of the chunks produced by the first Rollup pass.\n// The custom AMD define() in intro.js will combined the shared\n// and worker chunks into a worker bundle that can be instantiated\n// via blob URL.\n\nimport './shared';          // shared code between main and worker threads\nimport './scene_worker';    // worker code, gets turned into a blob URL used to instantiate workers\nimport './index';          \t// main thread code, gets exported as main library below\n\n// This allows the rollup ESM build to work within a <script type=\"module\"> tag\n// Script modules can't expose exports\ntry {\n\tTangram.debug.ESM = _ESM; // mark build as ES module\n\tTangram.debug.SHA = _SHA;\n\tif (_ESM === true && typeof window === 'object') {\n\t    window.Tangram = Tangram;\n\t}\n} catch(e) {}\n\nexport default Tangram;\n"],"names":["_arrayLikeToArray","_unsupportedIterableToArray","arrayLikeToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","Thread","window","Window","document","HTMLDocument","is_worker","is_main","e","self","arrayWithoutHoles","iterableToArray","nonIterableSpread","version","_isNativeReflectConstruct","isNativeReflectConstruct","setPrototypeOf","WorkerBroker","message_id","messages","targets","addTarget","name","target","removeTarget","findTarget","method","chain","split","pop","m","length","setupMainThread","postMessage","worker","_len","arguments","message","Array","_key","isArray","Promise","all","map","w","_WorkerBroker","apply","concat","_toConsumableArray","options","_typeof","promise","resolve","reject","payload","transferables","withTransferables","value","type","stringify","JSON","t","object","freeTransferables","log","addWorker","Worker","Error","addEventListener","WorkerBrokerMainThreadHandler","event","data","parse","id","error","result","method_name","_findTarget","_findTarget2","_slicedToArray","then","stack","getMessages","getMessageId","setupWorkerThread","_len2","_key2","WorkerBrokerWorkerThreadHandler","_findTarget3","_findTarget4","_len3","_key3","_construct","findTransferables","source","parent","undefined","property","list","forEach","x","i","ArrayBuffer","push","buffer","prop","filter","LEVELS","silent","warn","info","debug","trace","methods","logged_once","methodForLevel","level","console","bind","opts","msg","once","logger","slice","workers","setLevel","setWorkers","reset","Utils","isSafari","test","navigator","userAgent","isMicrosoft","_requests","_proxy_requests","io","url","timeout","responseType","headers","request_key","proxy","request","XMLHttpRequest","open","key","setRequestHeader","onload","status","indexOf","body","responseText","response","statusText","onerror","evt","toString","ontimeout","send","cancelRequest","req","abort","serializeWithFunctions","obj","serialized","k","v","use_high_density_display","updateDevicePixelRatio","prev","device_pixel_ratio","devicePixelRatio","isPowerOf2","interpolate","points","transform","x1","x2","d","y","y1","y2","c","toCSSColor","color","Math","round","join","debugSettings","draw_label_collision_boxes","draw_label_texture_boxes","suppress_label_fade_in","suppress_label_snap_animation","show_hidden_labels","layer_stats","wireframe","mergeDebugSettings","settings","Object","assign","addBaseURL","base","isRelativeURL","relative_path","base_info","createElement","href","location","path","pathForURL","origin","protocol","host","search","qs","substr","hash","lastIndexOf","extensionForURL","last_dot","substring","isLocalURL","flattenRelativeURL","dirs","splice","addParamsToURL","params","keys","qs_index","hash_index","url_params","dupes","p","getURLParameter","_createObjectURL","createObjectURL","URL","webkitURL","replace","regex","RegExp","results","exec","decodeURIComponent","Task","queue","max_time","start_time","state","add","task","pause_factor","elapsed","total_elapsed","stats","calls","performance","now","immediate","process","remove","idx","user_moving_view","pause","run","processAll","finish","cancel","val","Function","shouldContinue","removeForTile","tile_id","setState","subscribeMixin","listeners","subscribe","listener","unsubscribe","index","unsubscribeAll","trigger","hasSubscribersFor","has","sliceObject","sliced","Texture","gl","_classCallCheck","sliceOptions","texture","createTexture","valid","retain_count","config_type","loading","loaded","filtering","density","sprites","texcoords","sizes","css_sizes","aspects","setData","Uint8Array","textures","destroy","texture_configs","load","_createClass","_ref","force","deleteTexture","retain","release","unit","activeUnit","activeTexture","TEXTURE0","boundTexture","bindTexture","TEXTURE_2D","_this","setUrl","element","setElement","width","height","calculateSprites","_this2","image","Image","canvas","ctx","getContext","drawImage","crossOrigin","src","update","setFiltering","el","querySelector","HTMLCanvasElement","HTMLImageElement","HTMLVideoElement","complete","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","texImage2D","RGBA","UNSIGNED_BYTE","power_of_2","texParameteri","TEXTURE_WRAP_S","repeat","REPEAT","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR_MIPMAP_LINEAR","TEXTURE_MAG_FILTER","LINEAR","generateMipmap","NEAREST","s","sprite","getTexcoordsForSprite","byteSize","create","getSpriteInfo","texname","size","css_size","aspect","area_origin","area_size","tex_size","area_origin_y","createFromObject","config","skip_create","changed","default","createDefault","getInfo","n","tex","syncTexturesToWorker","names","getMaxTextureSize","getParameter","MAX_TEXTURE_SIZE","GLSL","parseUniforms","uniforms","parsed","_i","_Object$entries","entries","_Object$entries$_i","uniform","u","defineVariable","array","variable","defineUniform","def","expandVec3","z","parseFloat","every","isNaN","expandVec4","extensions","getExtension","exts","hashString","string","chr","len","charCodeAt","re_pragma","re_continue_line","ShaderProgram","vertex_source","fragment_source","program","compiled","compiling","defines","blocks","block_scopes","dependent_uniforms","attribs","useProgram","deleteProgram","use","current","compile","computed_vertex_source","computed_fragment_source","checkExtensions","buildDefineList","buildShaderBlockList","regexp","block","inject_vertex","match","inject_fragment","mark","scope","num","toUpperCase","ensureUniforms","precision","high","getShaderPrecisionFormat","FRAGMENT_SHADER","HIGH_FLOAT","buildDefineString","buildExtensionString","updateProgram","vertex_shader_source","fragment_shader_source","shader_errors","errors","line","refreshUniforms","refreshAttributes","_blocks$key","scopes","cur_scope","b","inject","_ref2","setUniforms","reset_texture_unit","texture_unit","_ref3","setTextureUniform","saveUniforms","subset","saved_value","saved_texture_unit","restoreUniforms","updateUniform","uniform_name","texture_name","getUniformLocation","commitUniform","uniform1i","uniform1f","uniform2f","uniform3f","uniform4f","uniform1iv","uniform3iv","uniform1fv","uniform2fv","uniform3fv","uniform4fv","uniformMatrix3fv","uniformMatrix4fv","attribute","attrib","getAttribLocation","lines","_this3","ext","programs_by_source","shaders_by_source","define_str","floor","toFixed","str","addBlock","_ShaderProgram$blocks","removeBlock","replaceBlock","_tangram_id","vertex_shader","createShader","VERTEX_SHADER","fragment_shader","old_shaders","getAttachedShaders","detachShader","createProgram","attachShader","bindAttribLocation","linkProgram","getProgramParameter","LINK_STATUS","VALIDATE_STATUS","getError","stype","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","parseShaderErrors","disabled","bound_vao","init","ext_name","setup","teardown","vao","_vao","createVertexArrayOES","bindVertexArrayOES","getCurrentBinding","bound","setCurrentBinding","binding","deleteVertexArrayOES","mergeObjects","dest","Geo","default_source_max_zoom","default_view_max_zoom","max_style_zoom","tile_size","half_circumference_meters","circumference_meters","min_zoom_meters_per_pixel","meters_per_pixel","metersPerPixel","pow","meters_per_tile","metersPerTile","tile_scale","units_per_pixel","height_scale","units_per_meter","unitsPerMeter","metersForTile","tile","tileForMeters","zoom","wrapTile","mask","metersToLatLng","atan","exp","PI","latLngToMeters","tan","tileSpaceToLatlng","geometry","min","transformGeometry","coord","copyGeometry","copy","coordinates","ring","polygon","boxIntersect","b1","b2","sw","ne","findBoundingBox","min_x","Infinity","max_x","min_y","max_y","num_coords","geometryType","centroid","relative","area","j","p0","p1","f","multiCentroid","polygons","signedPolygonRingAreaSum","polygonRingArea","abs","polygonArea","multiPolygonArea","ringWinding","cache","functions","num_functions","num_cached","clearFunctionStringCache","compileFunctionStrings","wrap","compileFunctionString","fmatch","args","trim","StyleParser","clampPositive","max","noNaN","parseNumber","parsePositiveNumber","wrapFunction","func","zeroPair","freeze","defaults","extrude","min_height","order","outline","material","ambient","diffuse","macros","StyleColorPseudoRandomColor","parseInt","feature","StyleColorRandomColor","random","getFeatureParseContext","global","style_z","meters_per_pixel_sq","units_per_meter_overzoom","CACHE_TYPE","STATIC","DYNAMIC","ZOOM","createPropertyCache","dynamic_transform","createColorPropertyCache","isPercent","isRatio","isComputed","dualRatioError","createPointSizePropertyCache","has_pct","has_ratio","some","evalCachedPointSizeProperty","sprite_info","texture_info","context","evalCachedProperty","createPointSizeCacheEntry","image_info","dynamic","tryEval","static","convertUnits","units","parseUnits","evalCachedDistanceProperty","string_colors","colorForString","parseCSSColor","evalCachedColorProperty","zoom_preprocessed","evalCachedColorPropertyWithAlpha","alpha_prop","alpha","parseColor","calculateOrder","properties","evalProperty","layers","FeatureSelection","lock_fn","_lock_fn","requests","read_delay","read_delay_timer","pixels","fbo","createFramebuffer","bindFramebuffer","FRAMEBUFFER","fbo_size","fbo_texture","framebufferTexture2D","COLOR_ATTACHMENT0","fbo_depth_rb","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","DEPTH_COMPONENT16","framebufferRenderbuffer","DEPTH_ATTACHMENT","deleteFramebuffer","get","_this$gl","viewport","clearColor","defaultColor","getFeatureAt","point","radius","selection_request_id","pendingRequests","hasPendingRequests","clearPendingRequests","r","sent","read","clearTimeout","setTimeout","locked","feature_key","worker_id","_request","diam_px","max_radius","ceil","byteLength","fill","readPixels","min_dist","dist","finishRead","makeEntry","map_entry","ir","ig","ib","ia","map_prefix","g","a","map_size","tiles","coords","generation","makeColor","selector","source_name","source_layer","layer","sources","clearSource","clearTile","_this4","getMapSize","setPrefix","prefix","BYTE","SHORT","UNSIGNED_SHORT","INT","UNSIGNED_INT","FLOAT","VBOMesh","vertex_data","element_data","vertex_layout","vertex_buffer","createBuffer","buffer_size","draw_mode","TRIANGLES","data_usage","STATIC_DRAW","vertices_per_geometry","created_at","Date","fade_in_time","vertex_count","stride","element_count","vaos","toggle_element_array","geometry_count","element_type","constructor","Uint16Array","element_buffer","bindBuffer","ELEMENT_ARRAY_BUFFER","bufferData","upload","render","visible_time","drawElements","drawArrays","VertexArrayObject","ARRAY_BUFFER","enableDynamicAttributes","enableStaticAttributes","deleteBuffer","material_props","Material","mapping","scale","amount","specular","shininess","normal","style","texdef","replaceShaderBlock","material_source","addShaderBlock","setupProgram","_program","isValid","emission","getPrototypeOf","superPropBase","assertThisInitialized","Vector","V","lim","neg","v1","v2","sub","signed_area","v3","mult","div","perp","rot","cos","sin","angle","atan2","angleBetween","A","B","delta","dot","normalize","acos","isEqual","lengthSq","sqrt","cross","Light","view","instance","struct_name","types","setMode","mode","enabled","lights","calculateLights","light_name","calculateFunction","AmbientLight","_Light","_callSuper","_inherits","ambient_source","DirectionalLight","_Light2","direction","_direction","theta","set","_superPropGet","directional_source","PointLight","_Light3","position","position_eye","attenuation","updateEyePosition","camera","position_meters","point_source","SpotLight","_PointLight","exponent","spot_source","isNativeFunction","construct","MethodNotImplemented","_Error","methodName","_wrapNativeSuper","DataSource","validate","pad_scale","default_winding","rasters","preprocess","extra_data","scripts","setZooms","zoom_offset","setTileSize","min_display_zoom","zooms","max_display_zoom","source_data","_load","features","updateDefaultWinding","copyTileData","max_zoom","zoom_bias","log2","geom","includesTile","register","type_name","type_func","source_class","tileLayoutChanged","prev_source","rebuild_params","cur","projectData","timer","num_features","projectCoord","projection","scaleData","network_request_id","NetworkSource","_DataSource","response_type","_URLs$addParamsToURL","URLs","_URLs$addParamsToURL2","_ref4","param","request_headers","formatURL","network","request_id","_ref5","response_size","parsing","parseSourceData","catch","NetworkTileSource","_NetworkSource","_this5","tiled","bounds","parseBounds","builds_geometry_tiles","tms","url_subdomains","next_url_subdomain","url_density_scales","_source$bounds","latlng","meters","checkBounds","url_template","getDensityModifier","toQuadKey","dpr","reverse","_ref6","quadkey","urlHasTilePattern","TileID","coordKey","normalizedKey","normalizedCoord","coordAtZoom","coordForTileZooms","zscale","nz","findZoomInRange","isDescendant","descendant","_this$coordAtZoom","sz","children","CACHE","span","nx","ny","nc","RasterTileSource","_NetworkTileSource","unshift","$return","$error","_default","tileTexture","adjustRasterTileZoom","tile_source","zdiff","RasterSource","_RasterTileSource","load_image","mask_alpha","preserve_tiles_within_zoom","max_display_density","composite","images","blend","use_alpha","imageSmoothingEnabled","$await_2","$boundEx","mpp","dx","dy","sx","sy","loadImage","$await_3","globalAlpha","prototype","call","is_composite","url_msg","bounds_msg","mutex_msg","makeWireframeForTriangleElementData","wireframe_data","Style","styles","_ref$sources","introspection","setGeneration","hasOwnProperty","shaders","selection","compile_setup","selection_program","feature_style","vertex_template","tile_data","stencil_proxy_tiles","variants","vertex_layouts","TANGRAM_WORLD_POSITION_WRAP","blend_order","default_blend_orders","removeShaderBlock","lighting","setupRasters","setupCustomAttributes","initialized","main_thread_target","baseStyle","startData","meshes","endData","variant","mesh","end","vertex_elements","buildRasterTextures","hasDataForTile","getTileMesh","vertexLayoutForMeshVariant","createVertexData","meshVariantTypeForDraw","addFeature","draw","parseFeature","buildGeometry","geom_count","buildPolygons","buildLines","buildPoints","tree","ftree","addLayerDebugEntry","_defineProperty","node","fnode","levels","geoms","parseOrder","group","_parseFeature","attributes","aname","interactive","selection_color","preprocessed","_preprocess","scaleOrder","setGL","max_texture_size","makeMesh","_objectSpread","LINES","getProgram","compileSetup","selection_defines","TANGRAM_FEATURE_SELECTION","vertex_shader_src","fragment_shader_src","selection_fragment_source","hasRasters","raster","TANGRAM_RASTER_TEXTURE_COLOR","TANGRAM_RASTER_TEXTURE_NORMAL","num_raster_sources","TANGRAM_NUM_RASTER_SOURCES","num_masked_rasters","TANGRAM_HAS_MASKED_RASTERS","TANGRAM_ALL_MASKED_RASTERS","TANGRAM_MODEL_POSITION_BASE_ZOOM_VARYING","rasters_source","u_samplers","u_sizes","u_offsets","$Try_3_Post","dz","dz2","$Try_3_Catch","$await_4","loadTextures","configs","$await_5","$await_6","$await_7","varying","addCustomAttributesToAttributeList","_i2","_Object$entries2","_Object$entries2$_i","normalized","addCustomAttributesToVertexTemplate","_this$shaders","render_states","opaque","depth_test","depth_write","translucent","multiply","inlay","overlay","Number","MIN_SAFE_INTEGER","getBlendOrderForDraw","faeture_count","bases","MAX_VALUE","has_element_index_uint","VertexElements","has_overflown","setElementIndexUint","flag","overflown","typedArray","Uint32Array","array_types","Float32Array","Int8Array","Int32Array","Int16Array","VertexData","_ref$prealloc","prealloc","array_pool","byte_length","offset","realloc_count","setBufferViews","setAddVertexFunction","views","dynamic_attribs","array_type","checkBufferSize","new_view","vertexLayoutAddVertex","getAddVertexFunction","addVertex","vertex","subarray","VertexLayout","static_attribs","components","count","byte_size","shift","offset_typed","enabled_attribs","disableVertexAttribArray","enableVertexAttribArray","vertexAttribPointer","createAddVertexFunction","add_vertex_funcs","last_type","sort","component","tile_bounds","default_uvs","outsideTile","_a","_b","tolerance","tile_min","tile_max","isCoordOutsideTile","earcutModule","up_vec3","texcoord_index","texcoord_scale","texcoord_normalize","num_polygons","min_u","min_v","max_u","max_v","span_x","span_y","scale_u","scale_v","max_rings","quickselect","indices","triangulatePolygon","earcut","flatten","num_indices","element_offset","_Geo$findBoundingBox","_Geo$findBoundingBox2","ring_index","polygon_ring","buildExtrudedPolygons","normal_index","normal_normalize","remove_tile_edges","tile_edge_tolerance","winding","min_z","max_z","q","contour","w0","w1","wall_vertices","wall_vec","wv","vertices","holes","dimensions","Polygons","built_in","polygons_vs","polygons_fs","TANGRAM_NORMAL_ATTRIBUTE","TANGRAM_TEXTURE_COORDS","tile_edges","computeVariant","mesh_order","makeVertexTemplate","a_texcoord","a_normal","zero_vec2","CAP_TYPE","butt","square","JOIN_TYPE","miter","bevel","DEFAULT_MITER_LIMIT","MIN_FAN_WIDTH","TEXCOORD_NORMALIZE","V_SCALE_ADJUST","zero_v","one_v","mid_v","buildPolylines","vindex","closed_polygon","cap_type","cap","join_type","miter_limit","miter_len_sq","v_scale","texcoord_width","half_width","extrude_index","a_extrude","offset_index","a_offset","buildPolyline","extra_lines","coordCurr","coordNext","normPrev","normNext","has_texcoord","boundaryIndex","getTileBoundaryIndex","permutedLine","permuteLine","index_start","index_end","ignored_indices_count","nonBoundarySegment","getNextNonBoundarySegment","startPolygon","addCap","currIndex","nextIndex","indexPairs","nonBoundaryLines","addMiter","addJoin","endPolygon","backIndex","startIndex","endIndex","miterVec","createMiterVec","isBeginning","isClockwise","addFan","num_pairs","num_vertices","flip","uvCurr","eA","eC","eB","uvA","uvC","uvB","isCap","isBevel","numTriangles","trianglesPerArc","pivotIndex","blade","affine_uvCurr","uv_delta","angle_step","neg_normal","tangent","nA","nB","newLine","default_dash_color","default_background_color","renderDashArray","pattern","dash_pixel","dash_color","background_color","dashes","dash","segment","Lines","DASH_SCALE","TANGRAM_EXTRUDE_LINES","outline_feature_style","inline_feature_style","dash_textures","calcDistance","calcDistanceNextZoom","calcWidth","next_width","width_unscaled","next_width_unscaled","mid_width","width_scale","inline_texcoord_width","overzoom2","calcOffset","offset_precalc","offset_scale","offset_scale_precalc","next_offset","visible","outline_width","outline_next_width","dash_key","dashTextureKey","dash_background_color","texture_merged","is_outline","outline_style","getDashTexture","dash_texture","pending","_loop","$await_9","u_has_line_texture","u_texture","u_v_scale_adjust","u_texture_ratio","u_has_dash","u_dash_background_color","$Try_1_Post","$If_4","$Try_1_Catch","$await_10","$If_3","$idx_5","$in_6","$Loop_7_trampoline","$Loop_7","$await_11","$Loop_7_exit","_exception","$await_12","$If_2","z_or_offset","pre_angles_normalize","angles_normalize","offsets_normalize","size_normalize","ix","iy","shape","buildQuadForPoint","offsets","pre_angles","angles","curve","w2","h2","uvs","a_position","a_shape","a_pre_angles","a_angles","a_offsets","lefts","rights","tops","bottoms","PointAnchor","computeOffset","anchor","offset2","default_buffer","isLeftAnchor","isRightAnchor","isTopAnchor","isBottomAnchor","alignForAnchor","zero_buffer","boxIntersectsBox","boxIntersectsList","boxes","callback","ZERO_AXES","proj_a","proj_b","d0","d1","d2","d3","OBB","h","dimension","quad","axis_0","axis_1","toJSON","getExtent","aabb","updateAxes","x0","y0","projectToAxis","obb","axis","proj","axisCollide","obb_a","obb_b","intersect","Label","layout","nextLabelId","placed","unit_scale","align","throw_away","breach","may_repeat_across_tiles","textLayoutToJSON","occluded","bboxes","exclude","aabbs","obbs","inTileBounds","mayRepeatAcrossTiles","collide","repeat_distance","discard","label","id_prefix","id_multiplier","epsilon","priority","repeat_group","italic","RepeatGroup","repeat_dist","repeat_dist_sq","positions","check","p2","dist_sq","clear","groups","repeat_scale","CollisionGrid","cells","addLabel","addLabelBboxes","cell_bounds","gy","gx","Collision","grid","initGrid","startTile","_ref$apply_repeat_gro","apply_repeat_groups","_ref$return_hidden","return_hidden","objects","labels","resetTile","abortTile","addStyle","tile_objects","endTile","addLabelsToGrid","priorities","style_objects","canBePlaced","linked","show","place","_ref2$repeat","placeable","reduce","keep","cell","_ref4$repeat","LabelPoint","_Label","start_anchor_index","degenerate","updateBBoxes","PLACEMENT","VERTEX","MIDPOINT","SPACED","CENTROID","default_spacing","placePointsOnLine","strategy","placement","min_length","placement_min_length_ratio","getPositionsAndAngles","getAngle","norm","upp","spacing","placement_spacing","getLineLength","num_labels","remainder","distance","_interpolateLine","interpolateLine","sum","interpolateSegment","ratio","TextSettings","weight","family","px_size","stroke","stroke_width","underline_width","background_width","background_stroke_color","background_stroke_width","text_wrap","max_lines","supersample","compute","font","supersample_text","can_articulate","underline","background","font_css","fontCSS","FontManager","fonts_loaded","last_loaded","loadFonts","fonts","same","face","loadFontFace","observer","injectFontFace","FontFaceObserver","bytes","css","style_el","supports_native_font_loading","FontFace","String","fromCharCode","btoa","encodeURI","appendChild","createTextNode","head","sheet","insertRule","rtl_test","isTextRTL","neutral_chars","neutral_test","isTextNeutral","RTL_MARKER","arabic_range","arabic_splitters","arabic_vowels","accents_and_vowels","combo_characters","grapheme_match","curve_blacklist","Mongolian","curve_blacklist_range","curve_blacklist_test","isTextCurveBlacklisted","default_segment_length","splitLabelText","text","rtl","segment_length","segment_hits","segments","carryover_vowels","test_text","grapheme_count","grapheme_cluster","segment_misses","MultiLine","createLine","line_height","Line","line_width","measureText","addEllipsis","advance","can_push","last_line","ellipsis_width","ellipsis","append","words","multiline","breaks","new_line","word","spaced_word","exceedsTextwrap","chars","TextCanvas","createCanvas","vertical_text_buffer","horizontal_text_buffer","background_size","backgroundColor","resize","clearRect","setFont","strokeStyle","lineWidth","fillStyle","miterLimit","textSizes","texts","$await_1","processTextSizesTask","cursor","style_idx","text_idx","text_infos","first","text_info","text_settings","textSize","bidi","isRTL","no_curving","vertical_buffer","segment_sizes","_ref2$stroke_width","_ref2$background_stro","_ref2$underline_width","text_hits","text_misses","text_count","applyTextTransform","horizontal_buffer","leading","_MultiLine$parse","collision_size","texture_size","logical_size","drawTextMultiLine","label_type","save","fillRect","strokeRect","restore","voffset","ty","line_num","drawTextLine","drawTextDebug","_text_settings$align","tx","uy","beginPath","moveTo","lineTo","strokeText","fillText","_ref7","_ref8","rasterize","texture_prefix","processRasterizeTask","cancelRasterizeTask","texture_idx","texture_resize","texture_names","texcoord_cache","texcoord","texture_position","_this$textSize","texture_id","curved","texcoords_stroke","texcoord_stroke","_this$textSize2","texture_position_stroke","aligned_text_settings","tname","setTextureTextPositions","cx","cy","column_width","placeText","text_width","text_height","txt","charAt","toLowerCase","fontPixelSize","_ref9","font_size_re","_ref10","pruneTextCache","text_count_max","segment_count_max","text_texture_id","TextLabels","resetText","freeText","parseTextFeature","parseTextSource","text_settings_key","repeat_group_prefix","left","right","current_text","computeTextLayout","ref","text_source","parseTextSourceValue","prepareTextLabels","canceled","buildTextLabels","collideAndRenderTextLabels","collision_group","rasterized","cullTextStyles","$Try_2_Post","$Try_2_Catch","calcTextSizes","rasterizeTexts","tile_key","preprocessText","orientation","computeLayout","subdiv","require$$0","vec3","fromValues","out","Float64Array","mat3","normalFromMat4","mat3_normalFromMat4","invert","mat3_invert","mat4","mat4_multiply","translate","mat4_translate","mat4_scale","perspective","mat4_perspective","lookAt","mat4_lookAt","identity","mat4_identity","mat4_copy","Camera","updateView","lng","lat","setView","setupMatrices","matrices","model_view32","view_matrix","model","normal32","inverse_normal32","IsometricCamera","FlatCamera","PerspectiveCamera","_Camera","focal_length","fov","vanishing_point","vanishing_point_skew","projection_matrix","constrainCamera","view_height","updateMatrices","viewport_height","_this$constrainCamera","center","_Camera2","_IsometricCamera","VIEW_PAN_SNAP_TIME","View","scene","createMatrices","panning","panning_stop_at","pan_snap_timer","zoom_direction","user_input_at","user_input_timeout","user_input_active","device","continuous_zoom","continuousZoom","wrapView","createCamera","active_camera","getActiveCamera","cameras","active","setActiveCamera","updateConfig","rebuild","ready","setViewportSize","updateBounds","setZoom","last_tile_zoom","tile_zoom","baseZoom","requestRedraw","setPanning","markUserInput","tile_manager","updateTilesForView","findVisibleTileCoordinates","range","tmax","pruneTilesForView","removeTiles","isProxy","view_buffer","view_tile_min","view_tile_max","model32","model_view","setupTile","isAnimating","Points","SHADER_POINT_VARIANT","TANGRAM_POINT_TYPE_TEXTURE","TANGRAM_POINT_TYPE_LABEL","TANGRAM_POINT_TYPE_SHADER","DEFAULT_POINT_SIZE","points_vs","points_fs","collision","setupDefines","TANGRAM_HAS_SHADER_POINTS","collision_group_points","collision_group_text","TANGRAM_LAYER_ORDER","TANGRAM_FADE_IN_RATE","TANGRAM_VIEW_PAN_SNAP_RATE","TANGRAM_SHOW_HIDDEN_LABELS","TANGRAM_WIREFRAME","queues","texture_missing_sprites","label_texture","hasSprites","parseSprite","logged","calcSize","outline_color","outline_edge_pct","outline_alpha","tf","queueFeature","text_feature","sprite_default","text_objs","point_objs","_await$Promise$all","_await$Promise$all2","_await$Promise$all2$","_tile_data$textures","feature_labels","buildLabels","point_obj","text_obj","point_label","optional","angle_func","default_anchor","feature_queue","fq","point_labels","ln","rings","polys","add_custom_attribs","shader_point","buildQuad","build","buildCurvedLabel","buildStraightLabel","u_point_type","u_apply_color_blocks","trackLabel","num_segments","label_textures","seg_count","container","ranges","start","STOPS","LINE_EXCEED_STRAIGHT","LINE_EXCEED_STRAIGHT_NO_CURVE","LINE_EXCEED_STAIGHT_LOOSE","STRAIGHT_ANGLE_TOLERANCE","CURVE_MIN_TOTAL_COST","CURVE_MIN_AVG_COST","CURVE_MAX_ANGLE","ORIENTED_LABEL_OFFSET_FACTOR","VERTICAL_ANGLE_TOLERANCE","LabelLine","total_size","passes","LabelLineStraight","LabelLineCurved","LabelLineBase","shouldDiscard","in_bounds","splitLineByOrientation","current_line","current_length","max_length","longest_line","pt","prev_pt","createOBB","angle_offset","_LabelLineBase","fit","flipped","_LabelLineBase$splitL","_LabelLineBase$splitL2","line_lengths","getLineLengths","label_length","curr","curve_tolerance","ahead_index","prev_angle","ahead_curr","ahead_next","next_angle","getAngleForSegment","getAbsAngleDiff","calcFitness","curr_midpt","_LabelLineBase2","o","height_px","_LabelLineBase$splitL3","_LabelLineBase$splitL4","label_lengths","total_line_length","next","total_label_length","start_index","end_index","anchor_index","curvaturePlacement","stop","_LabelLineCurved$scal","scaleLine","_LabelLineCurved$scal2","_LabelLineCurved$plac","placeAtIndex","offsets1d","pre_angle","angle_segment","curvatures","norm_1","norm_2","curvature","total_costs","avg_costs","line_index","window_start","window_end","line_position","cost","avg_cost","min_total_cost","min_index","min_avg_cost","_LabelLineCurved$getI","getIndicesAndOffsets","_LabelLineCurved$getI2","relative_offsets","getPositionsFromIndicesAndOffsets","_LabelLineCurved$getA","getAnglesFromIndicesAndOffsets","_LabelLineCurved$getA2","label_index","label_offset","line_offset","offset2d","offset_angle","getTextAngleForSegment","prev_pre_angle","line_length","pq","pt1","pt2","lengths","hypot","angle1","angle2","small","big","TextStyle","super","TANGRAM_CURVED_LABEL","_await$this$collideAn","straight","fql","buildLineLabels","seg_per_div","line_segment","RasterStyle","StyleManager","base_styles","active_styles","active_blend_orders","style_globals_source","selection_globals_source","selection_vertex_source","TANGRAM_EPSILON","TANGRAM_LAYER_DELTA","TANGRAM_TILE_SCALE","TANGRAM_HEIGHT_SCALE","TANGRAM_ALPHA_TEST","_name","getActiveStyles","updateActiveStyles","getActiveBlendOrders","updateActiveBlendOrders","orders","style_meshes","oi","findIndex","mix","mixed","_sources","animated","draws","mixShaders","shader_merges","_uniforms","_uniform_scopes","defineProperty","enumerable","configurable","_style$shaders$block_","mixed_source","block_scope","styles_defs","values","blends","_blends","_iterator","_createForOfIteratorHelper","_step","done","err","style_deps","inheritanceDepth","sname","ws","initStyles","parents","notNull","maybeQuote","lookUp","nullValue","propertyEqual","propertyOr","arr","printNested","joiner","any","_","parseFilter","not","none","propertyMatchesBoolean","rangeMatch","expressions","rangeTransform","includesMatch","includes_any","vals","includes_all","filterAST","filterToString","buildFilter","reserved","layer_cache","layerCache","cacheKey","mergeTrees","matchingTrees","treeDepth","blacklist","Layer","exclusive","config_data","full_name","MAX_SAFE_INTEGER","is_built","buildDraw","calculatedDraw","calculateDraw","filter_original","buildZooms","buildPropMatches","FilterOptions","$zoom","ztype","zmin","zmax","context_prop_matches","feature_prop_matches","doPropMatches","doesMatch","children_to_parse","parseLayerChildren","LayerLeaf","_Layer","is_leaf","LayerTree","_Layer2","is_tree","addLayer","buildDrawGroups","layer_ids","matchFeature","cache_key","draw_groups","draw_keys","draw_key","isReserved","isEmpty","groupProps","cs","parseLayerNode","_groupProps","_groupProps2","empty","Create","child","parseLayers","layer_trees","collected_layers","collected_layers_ids","matched","child_matched","build_id","Tile","proxy_for","proxied_as","proxy_level","proxy_order_offset","fade_in","built","labeled","overzoom","new_mesh_styles","pending_label_meshes","setWorker","freeResources","workerMessage","buildAsMessage","_ref2$fade_in","buildMeshes","progress","mesh_data","mesh_variant","mesh_options","ao","bo","geometry_ratio","feature_count","printDebug","pendingLabelStyleCount","swapPendingLabels","setProxyFor","shouldProxyForStyle","merge","other","abortBuild","scene_id","building","layer_name","source_layers","getDataForSource","group_name","style_name","tile_styles","stylesForTile","buildStyleGroups","group_by","buildStyleGroup","style_data","source_config","scene_layer_name","all_layers","tile_subset","coord_children","debugSumLayerStats","counts","addDebugLayers","require$$1","require$$2","PARSE_JSON_TYPE","NONE","ALL","SOME","PARSE_JSON_TEST","MVTSource","parse_json","parse_json_type","parse_json_prop_list","Pbf","VectorTile","toGeoJSON","l","extent","layer_geojson","feature_geojson","parseJSONProperties","loadGeometry","VectorTileFeature","decodeMultiPolygon","props","poly","outer_winding","GeoJSONSource","load_data","tile_indexes","geojsonvt","maxZoom","getTileFeatures","getTile","collection","tags","getLayers","preprocessLayers","preprocessFeatures","generate_label_centroids","features_centroid","centroid_properties","centroid_feature","getCentroidFeatureForPolygon","max_area","max_area_index","GeoJSONTileSource","prepareGeoJSON","newProperties","TopoJSONSource","_GeoJSONSource","getTopoJSONFeature","topology","topojson","TopoJSONTileSource","_GeoJSONTileSource","SceneWorker","num_workers","log_level","has_element_index_unit","external_scripts","_worker_id","style_manager","importExternalScripts","prev_names","getOwnPropertyNames","importScripts","createDataSources","syncing_textures","syncTextures","configuring","last_config_sources","config_sources","last_sources","awaitConfiguration","buildTile","loadTileSourceData","removeTile","queryFeatures","tile_keys","feature_visible","$source","$layer","$geometry","$visible","_ret","getFeatureSelection","resetFeatureSelection","getFeatureSelectionMapSize","tex_config","profile","profileEnd","functionStringCache","Context","context_id","fullscreen","top","zIndex","innerWidth","innerHeight","getPropertyPath","_getPropertyPathTarge","getPropertyPathTarget","setPropertyPath","GLOBAL_PREFIX","GLOBAL_PREFIX_LENGTH","GLOBAL_REGISTRY","isGlobalReference","isGlobalSubstitution","prop_or_path","_target$GLOBAL_REGIST","flattenGlobalProperties","globals","applyGlobalProperties","_target$GLOBAL_REGIST2","base64.fromByteArray","ieee754.read","ieee754.write","base64.toByteArray","require","Buffer.isBuffer","process.nextTick","require$$3","require$$4","require$$5","require$$6","require$$7","jsYaml","require$$8","SceneBundle","path_for_parent","isContainer","loadResource","resourceFor","urlFor","pathFor","typeFor","ZipSceneBundle","_SceneBundle","zip","files","root","_await$Utils$io","JSZip","loadAsync","parseZipFiles","loadRoot","urlForZipFile","typeForZipFile","findRoot","yamls","depth","paths","file","dir","async","Blob","createSceneBundle","parseResource","yaml","safeLoad","json","SceneLoader","loadScene","$args","texture_nodes","_this$finalize","bundle","loadSceneRecursive","finalize","imports","import","resource","normalizeDataSources","normalizeFonts","normalizeTextures","collectTextures","sn","normalizeDataSource","faces","tn","addTextureNode","_loop2","_sn","texture_path","path_stack","layer_path","pathKey","hoistTextureNodes","base_bundle","_Object$values","_Object$values$_i","curValue","default_light","TilePyramid","max_proxy_descendant_depth","max_proxy_ancestor_depth","children_cache","addTile","descendants","getAncestor","getDescendants","prev_visible","mainThreadLabelCollisionPass","view_zoom","hide_breach","containers","max_tile_label_count","grid_divs","flat","off","zoom_scale","size_scale","tile_meshes","label_id","should_discard","TileManager","pyramid","visible_coords","queued_coords","building_tiles","renderable_tiles","mesh_set","zoom_steps","forEachTile","keepTile","hasTile","forgetTile","tileBuildStop","remove_tiles","tile_coords","queueCoordinate","updateTileStates","updateVisibility","loadQueuedCoordinates","updateProxyTiles","updateRenderableTiles","updateLabels","initial","roundPrecision","meshSetString","isLoadingVisibleTiles","pruneToVisibleTiles","getRenderableTiles","allVisibleTilesLabeled","half_span","ac","bc","ad","bd","center_dist","loadCoordinate","tileBuildStart","buildTileStylesCompleted","buildTileError","checkBuildQueue","tileManagerBuildDone","getDebugProp","getDebugSum","getDebugAverage","places","RenderState","RenderStateManager","culling","culling_face","BACK","blending","blending_src","ONE_MINUS_SRC_ALPHA","blending_dst","blending_src_alpha","ONE","blending_dst_alpha","depthFunc","LESS","cull","enable","CULL_FACE","cullFace","disable","dst","src_alpha","dst_alpha","BLEND","blendFuncSeparate","blendFunc","depthMask","DEPTH_TEST","MediaCapture","screenshot_canvas","screenshot_context","queue_screenshot","video_capture","setCanvas","screenshot","completeScreenshot","Uint8ClampedArray","ImageData","putImageData","toDataURL","atob","blob","startVideoCapture","MediaRecorder","captureStream","chunks","stream","mimeType","media_recorder","ondataavailable","tracks","getTracks","track","removeTrack","stopVideoCapture","setupSceneDebug","timeRebuild","times","cycle","avg","geometryCountByStyle","geometryCountByBaseStyle","style_counts","geometryCountTotal","geometrySizeByStyle","geometrySizeByBaseStyle","style_sizes","geometrySizeTotal","textureSizeTotal","layerStats","renderableTilesCount","Scene","config_source","initializing","numWorkers","disableVertexArrayObjects","highDensityDisplay","config_bundle","last_valid_config_source","dirty","preUpdate","postUpdate","render_loop","disableRenderLoop","render_loop_active","render_loop_stop","render_count","last_render_count","render_count_changed","frame","last_main_render","last_selection_render","media_capture","selection_feature_count","fetching_selection_map","prev_textures","resetTime","contextOptions","webGLContextOptions","createListeners","updating","last_complete_generation","logLevel","view_complete","base_path","blocking","setupRenderLoop","serialize_funcs","createWorkers","$await_8","destroyFeatureSelection","$If_7","freePreviousTextures","last_valid_options","file_type","last_valid_base_path","destroyListeners","parentNode","removeChild","loseContext","destroyWorkers","premultipliedAlpha","stencil","powerPreference","resizeMap","clientWidth","clientHeight","updateExternalScripts","prev_scripts","makeWorkers","Tangram","workerURL","_id","next_worker","terminate","immediateRedraw","renderLoop","requestAnimationFrame","main","will_render","updateViewComplete","updateBackground","renderPass","logFirstFrame","allow_blend","computed_color","_this6","program_key","clearFrame","last_blend","blend_orders","_step$value","setRenderState","colorMask","renderStyle","EQUAL","STENCIL_TEST","clearStencil","STENCIL_BUFFER_BIT","stencilFunc","ZERO","stencilOp","KEEP","INCR","proxy_levels","REPLACE","GEQUAL","_this7","first_for_style","max_mesh_order","_loop3","mo","_iterator2","_step2","_loop4","_step2$value","first_for_tile","order_meshes","setupStyle","_ret2","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","cull_face","SRC_ALPHA","SRC_COLOR","pixel","_ref8$unique","unique","_ref8$group_by","_ref8$visible","_ref8$geometry","uniqueify_on_id","uniqueify","_this8","_ref9$initial","_ref9$new_generation","new_generation","_ref9$sources","_ref9$profile","_ref9$fade_in","queued","syncConfigToWorker","resetWorkerFeatureSelection","logFirstBuild","_await$SceneLoader$lo","config_path","setDataSource","_this9","rebuild_all","prev_source_names","source_id","_this10","_this11","updateStyles","_this12","createLights","light","setBackground","bg","last_color","setIntrospection","_this13","_this14","_ref11","_ref11$loading","_ref11$rebuild","_ref11$texture_nodes","_ref11$normalize","_ref11$fade_in","_ref12","_ref12$serialize_func","config_serialized","_this15","move","warning","scene_loader","_this16","_this17","resetViewComplete","_ref13","_ref13$background","first_frame","first_build","debounce","wait","later","LeafletLayer","leafletLayer","extendLeaflet","originalHandlers","scrollWheelZoom","doubleClickZoom","L","leaflet","layerBaseClass","GridLayer","TileLayer","leafletVersion","layerClassConfig","setZoomAroundNoMoveEnd","_addTile","_removeTile","_reset","initialize","showDebug","setOptions","updateTangramDebugSettings","createScene","hooks","_updating_tangram","noWrap","onAdd","updateSize","on","getCenter","getZoom","getMaxZoom","getMinZoom","_mapLayerCount","moveend","drag","_map_pane_observer","MutationObserver","mutations","reverseTransform","observe","getPanes","mapPane","modifyScrollWheelBehavior","modifyZoomBehavior","trackMapLayerCounts","setupSelectionEventHandlers","setSelectionEvents","events","selectionRadius","getContainer","resizeOnFirstVisible","onTangramViewUpdate","sceneBasePath","sceneFileType","attribution","attributionControl","addAttribution","fire","onRemove","_updateMapLayerCount","click","mousemove","mouseout","removeEventListener","visibilitychange","disconnect","createTile","setAttribute","debug_overlay","textContent","fontSize","textOutline","padding","borderStyle","borderColor","borderWidth","modifyScrollWheel","zoomSnap","Browser","chrome","safari","_onWheelScroll","DomEvent","getWheelDelta","_delta","_lastMousePos","_map","mouseEventToContainerPoint","_performZoom","wheelDebounceTime","debounceMoveEnd","_moveEnd","_stop","wheelPxPerZoomLevel","flyAround","targetCenter","targetZoom","startZoom","_zoom","latLng","duration","_flyToFrame","Util","requestAnimFrame","_moveStart","_onDoubleClick","oldZoom","zoomDelta","originalEvent","shiftKey","containerPointToLatLng","containerPoint","_zoomAnimated","_animateZoom","startAnim","noUpdate","_animatingZoom","_animateToCenter","_animateToZoom","_onZoomTransitionEnd","getSize","first_visibility","map_center","view_center","animate","top_left","containerPointToLayerPoint","DomUtil","setPosition","_selection_events","_selection_radius","leaflet_event","hover","nodes","childNodes","getZoomScale","viewHalf","divideBy","Point","latLngToContainerPoint","centerOffset","subtract","multiplyBy","newCenter","_move","flyTo","extend","removeLayer"],"mappings":"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AI,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,KAAI,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,CAAA;AAC9C,KAAI,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,CAAA;AAC9C,KAAI,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,CAAA;AAC9C,KAAI,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,CAAA;;AAE9C,KAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;AAC9C,KAAI,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,CAAA;AAC9C,KAAI,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,CAAA;AAC9C,KAAI,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,CAAA;AAC9C,KAAI,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GA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AAE,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,GAAG,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,S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CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,GAAG,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,GAAG,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,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,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC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AC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CA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,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAc,IAAI,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,OAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAA,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CA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AC,GAAG,CAAC,0BAA0B,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAA,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAA,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA,CAAC,KAAK,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,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,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,KAAK,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAA,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,qCAAqC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAA,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAA,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,KAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAA,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAA,CAAC,CAAC,KAAK,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAA,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAA,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAA,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAA,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,sCAAsC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAA,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAA,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAA,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAA,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAA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","x_google_ignoreList":[0,1,2,3,4,5,7,8,9,10,11,12,13,14,15,16,18,19,20,33,39,45,46,47,48,49,50,53,54,65,66,83,89,90,91,92,93,94,95,96,97,109,110,111,112,113,114,115,117,118,119,120,121,122,123,124,126,127,128,129,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170]}