!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var t;"undefined"!=typeof window?t=window:"undefined"!=typeof global?t=global:"undefined"!=typeof self&&(t=self),t.Tangram=e()}}(function(){var define,module,exports;return function e(t,r,o){function n(s,a){if(!r[s]){if(!t[s]){var l="function"==typeof require&&require;if(!a&&l)return l(s,!0);if(i)return i(s,!0);throw new Error("Cannot find module '"+s+"'")}var c=r[s]={exports:{}};t[s][0].call(c.exports,function(e){var r=t[s][1][e];return n(r?r:e)},c,c.exports,e,t,r,o)}return r[s].exports}for(var i="function"==typeof require&&require,s=0;s<o.length;s++)n(o[s]);return n}({1:[function(e,t){function r(e,t,r,o){i.call(this,"CanvasRenderer",e,t,r,o),this.selection_info=document.createElement("div"),this.selection_info.setAttribute("class","label"),this.selection_info.style.display="none",this.cutout_context=document.createElement("canvas").getContext("2d")}var o=e("../point.js"),n=e("../geo.js"),i=e("../vector_renderer.js");i.CanvasRenderer=r,r.prototype=Object.create(i.prototype),r.prototype._tileWorkerCompleted=function(e){var t=document.createElement("canvas"),r=t.getContext("2d");t.style.width=n.tile_size+"px",t.style.width=n.tile_size+"px",t.width=Math.round(n.tile_size*this.device_pixel_ratio),t.height=Math.round(n.tile_size*this.device_pixel_ratio),t.style.background=this.colorToString(this.styles.default),this.renderTile(e,r);var o=document.querySelector("div[data-tile-key='"+e.key+"']");o.appendChild(t)},r.prototype.scaleGeometryToPixels=function(e){var t=this;return n.transformGeometry(e,function(e){return o(e[0]*n.tile_size*t.device_pixel_ratio/i.tile_scale,e[1]*n.tile_size*t.device_pixel_ratio/i.tile_scale*-1)})},r.prototype.renderLine=function(e,t,r){var o=e,n=t.color,i=t.width,s=t.dash,a=r;a.beginPath(),a.strokeStyle=this.colorToString(n),a.lineCap="round",a.lineWidth=i,a.setLineDash&&a.setLineDash(s?s.map(function(e){return e*i}):[]);for(var l=0;l<o.length-1;l++){var c=[o[l].x,o[l].y,o[l+1].x,o[l+1].y];a.moveTo(c[0],c[1]),a.lineTo(c[2],c[3])}a.closePath(),a.stroke()},r.prototype.renderPolygon=function(e,t,r){var o=e,n=t.color,i=(t.width,t.outline&&t.outline.color),s=t.outline&&t.outline.width,a=t.outline&&t.outline.dash,l=r;l.beginPath(),l.fillStyle=this.colorToString(n),l.moveTo(o[0].x,o[0].y);for(var c=1;c<o.length;c++)l.lineTo(o[c].x,o[c].y);l.closePath(),l.fill(),i&&s&&(l.strokeStyle=this.colorToString(i),l.lineCap="round",l.lineWidth=s,l.setLineDash&&l.setLineDash(a?a.map(function(e){return e*s}):[]),l.stroke())},r.prototype.renderPoint=function(e,t,r){var o=t.color,n=t.size,i=t.outline&&t.outline.color,s=t.outline&&t.outline.width,a=t.outline&&t.outline.dash,l=r;l.fillStyle=this.colorToString(o),l.beginPath(),l.arc(e.x,e.y,n,0,2*Math.PI),l.closePath(),l.fill(),i&&s&&(l.strokeStyle=this.colorToString(i),l.lineWidth=s,l.setLineDash&&l.setLineDash(a?a.map(function(e){return e*s}):[]),l.stroke())},r.prototype.renderFeature=function(e,t,r){var o,n,i,s=e.geometry;if("LineString"==s.type)this.renderLine(s.pixels,t,r);else if("MultiLineString"==s.type)for(o=0;o<s.pixels.length;o++)this.renderLine(s.pixels[o],t,r);else if("Polygon"==s.type||"MultiPolygon"==s.type)for(i="Polygon"==s.type?[s.pixels]:s.pixels,o=0;o<i.length;o++)if(i[o].length>1){for((this.cutout_context.canvas.width!=r.canvas.width||this.cutout_context.canvas.height!=r.canvas.height)&&(this.cutout_context.canvas.width=r.canvas.width,this.cutout_context.canvas.height=r.canvas.height),this.cutout_context.clearRect(0,0,this.cutout_context.canvas.width,this.cutout_context.canvas.height),this.cutout_context.globalCompositeOperation="source-over",this.renderPolygon(i[o][0],t,this.cutout_context),this.cutout_context.globalCompositeOperation="destination-out",n=1;n<i[o].length;n++)this.renderPolygon(i[o][n],t,this.cutout_context);if(r.drawImage(this.cutout_context.canvas,0,0),t.outline&&t.outline.color)for(n=1;n<i[o].length;n++)this.renderLine(i[o][n],t.outline,r)}else this.renderPolygon(i[o][0],t,r);else if("Point"==s.type)this.renderPoint(s.pixels,t,r);else if("MultiPoint"==s.type)for(o=0;o<s.pixels.length;o++)this.renderPoint(s.pixels[o],t,r)},r.prototype.renderTile=function(e,t){var r,o=this,s={colors:{}},a=document.createElement("canvas");a.style.width=n.tile_size+"px",a.style.width=n.tile_size+"px",a.width=Math.round(n.tile_size*this.device_pixel_ratio),a.height=Math.round(n.tile_size*this.device_pixel_ratio);var l,c=a.getContext("2d"),d=0;for(var u in o.layers){var h=o.layers[u];e.layers[h.name].features.forEach(function(n){n.geometry.pixels=this.scaleGeometryToPixels(n.geometry,o.tile_min,o.tile_max),r=i.parseStyleForFeature(n,this.styles[h.name],e),0!=h.visible&&this.renderFeature(n,r,t),1==h.selection&&null!=n.properties.name&&""!=n.properties.name?(l=this.generateColor(s.colors),l.properties=n.properties,d++,this.renderFeature(n,{color:l.color,width:r.width,size:r.size},c)):this.renderFeature(n,{color:[0,0,0],width:r.width,size:r.size},c)},this)}var p=this.selection_info;d>0?(this.tiles[e.key].selection=s,s.pixels=new Uint32Array(c.getImageData(0,0,a.width,a.height).data.buffer),t.canvas.onmousemove=function(e){var r={x:e.offsetX,y:e.offsetY},i=r.y*o.device_pixel_ratio*n.tile_size*o.device_pixel_ratio+r.x*o.device_pixel_ratio,a=s.pixels[i],l=s.colors[a];null!=l?(t.canvas.style.cursor="crosshair",p.style.left=r.x+5+"px",p.style.top=r.y+5+"px",p.innerHTML='<span class="labelInner">'+l.properties.name+"</span>",p.style.display="block",t.canvas.parentNode.appendChild(p)):(t.canvas.style.cursor=null,p.style.display="none",p.parentNode==t.canvas.parentNode&&t.canvas.parentNode.removeChild(p))}):t.canvas.onmousemove=function(){t.canvas.style.cursor=null,p.style.display="none",p.parentNode==t.canvas.parentNode&&t.canvas.parentNode.removeChild(p)}},r.prototype.colorToString=function(e){return"rgb("+e.map(function(e){return~~(256*e)}).join(",")+")"},r.prototype.generateColor=function(e){var t,r,o,n,i,s,a;for(e=e||{};;)if(t=Math.random(),r=Math.random(),o=Math.random(),n=~~(256*t),i=~~(256*r),s=~~(256*o),a=n+(i<<8)+(s<<16)+(255<<24)>>>0,void 0===e[a]){e[a]={color:[t,r,o]};break}return e[a]},void 0!==t&&(t.exports=r)},{"../geo.js":2,"../point.js":10,"../vector_renderer.js":13}],2:[function(e,t){var r=e("./point.js"),o={};o.tile_size=256,o.half_circumference_meters=20037508.342789244,o.map_origin_meters=r(-o.half_circumference_meters,o.half_circumference_meters),o.min_zoom_meters_per_pixel=2*o.half_circumference_meters/o.tile_size,o.meters_per_pixel=[],o.max_zoom=20;for(var n=0;n<=o.max_zoom;n++)o.meters_per_pixel[n]=o.min_zoom_meters_per_pixel/Math.pow(2,n);o.metersForTile=function(e){return r(e.x*o.tile_size*o.meters_per_pixel[e.z]+o.map_origin_meters.x,e.y*o.tile_size*o.meters_per_pixel[e.z]*-1+o.map_origin_meters.y)},o.metersToLatLng=function(e){var t=r.copy(e);return t.x/=o.half_circumference_meters,t.y/=o.half_circumference_meters,t.y=(2*Math.atan(Math.exp(t.y*Math.PI))-Math.PI/2)/Math.PI,t.x*=180,t.y*=180,t},o.latLngToMeters=function(e){var t=r.copy(e);return t.y=Math.log(Math.tan((t.y+90)*Math.PI/360))/(Math.PI/180),t.y=t.y*o.half_circumference_meters/180,t.x=t.x*o.half_circumference_meters/180,t},o.transformGeometry=function(e,t){return"Point"==e.type?t(e.coordinates):"LineString"==e.type||"MultiPoint"==e.type?e.coordinates.map(t):"Polygon"==e.type||"MultiLineString"==e.type?e.coordinates.map(function(e){return e.map(t)}):"MultiPolygon"==e.type?e.coordinates.map(function(e){return e.map(function(e){return e.map(t)})}):{}},o.boxIntersect=function(e,t){return!(t.sw.x>e.ne.x||t.ne.x<e.sw.x||t.sw.y>e.ne.y||t.ne.y<e.sw.y)},o.splitFeatureLines=function(e,t){var r,t=t||.001,o=t*t,n=e.geometry;if("MultiLineString"==n.type)r=n.coordinates;else{if("LineString"!=n.type)return e;r=[n.coordinates]}for(var i=[],s=0;s<r.length;s++){for(var a,l=r[s],c=[],d=null,u=0;u<l.length;u++){var h=l[u];if(a=!0,null!=d){var p=(h[0]-d[0])*(h[0]-d[0])+(h[1]-d[1])*(h[1]-d[1]);p>o&&(a=!1)}0==a&&(i.push(c),c=[]),c.push(h),d=h}i.push(c),c=[]}return 1==i.length?(n.type="LineString",n.coordinates=i[0]):(n.type="MultiLineString",n.coordinates=i),e},void 0!==t&&(t.exports=o)},{"./point.js":10}],3:[function(e,t){var r={};r.getContext=function(e){var e=e,t=!1;if(null==e&&(e=document.createElement("canvas"),e.style.position="absolute",e.style.top=0,e.style.left=0,e.style.zIndex=-1,document.body.appendChild(e),t=!0),gl=e.getContext("experimental-webgl",{}),!gl)throw alert("Couldn't create WebGL context. Your browser probably doesn't support WebGL or it's turned off?"),"Couldn't create WebGL context";return r.resizeCanvas(gl,window.innerWidth,window.innerHeight),1==t&&window.addEventListener("resize",function(){r.resizeCanvas(gl,window.innerWidth,window.innerHeight)}),r.VertexArrayObject.init(gl),gl},r.resizeCanvas=function(e,t,r){var o=window.devicePixelRatio||1;e.canvas.style.width=t+"px",e.canvas.style.height=r+"px",e.canvas.width=Math.round(e.canvas.style.width*o),e.canvas.height=Math.round(e.canvas.style.width*o),e.viewport(0,0,e.canvas.width,e.canvas.height)},r.createProgramFromElements=function(e,t,o){var n=document.getElementById(t).textContent,i=document.getElementById(o).textContent,s=e.createProgram();return r.updateProgram(e,s,n,i)},r.createProgramFromURLs=function(e,t,o){var n=e.createProgram();return r.updateProgramFromURLs(e,n,t,o)},r.updateProgramFromURLs=function(e,t,o,n){var i,s,a=new XMLHttpRequest;return a.onload=function(){i=a.response},a.open("GET",o+"?"+ +new Date,!1),a.send(),a.onload=function(){s=a.response},a.open("GET",n+"?"+ +new Date,!1),a.send(),r.updateProgram(e,t,i,s)},r.updateProgram=function(e,t,o,n){try{var i=r.createShader(e,o,e.VERTEX_SHADER),s=r.createShader(e,"#ifdef GL_ES\nprecision highp float;\n#endif\n\n"+n,e.FRAGMENT_SHADER)}catch(a){return alert(a),t}if(e.useProgram(null),null!=t)for(var l=e.getAttachedShaders(t),c=0;c<l.length;c++)e.detachShader(t,l[c]);else t=e.createProgram();if(null==i||null==s)return t;if(e.attachShader(t,i),e.attachShader(t,s),e.deleteShader(i),e.deleteShader(s),e.linkProgram(t),!e.getProgramParameter(t,e.LINK_STATUS)){var d="WebGL program error:\nVALIDATE_STATUS: "+e.getProgramParameter(t,e.VALIDATE_STATUS)+"\nERROR: "+e.getError()+"\n\n--- Vertex Shader ---\n"+o+"\n\n--- Fragment Shader ---\n"+n;throw d}return t},r.createShader=function(e,t,r){var o=e.createShader(r);if(e.shaderSource(o,t),e.compileShader(o),!e.getShaderParameter(o,e.COMPILE_STATUS)){var n="WebGL shader error:\n"+(r==e.VERTEX_SHADER?"VERTEX":"FRAGMENT")+" SHADER:\n"+e.getShaderInfoLog(o);throw n}return o},r.Program=function(e,t,r,o){o=o||{},this.gl=e,this.program=null,this.defines=o.defines||{},this.uniforms={},this.attribs={},this.vertex_shader_source=t,this.fragment_shader_source=r,this.compile()},r.Program.createProgramFromURLs=function(e,t,o,n){var i=Object.create(r.Program.prototype);return i.vertex_shader_url=t,i.fragment_shader_url=o,i.updateVertexShaderSource=function(){var e,t=new XMLHttpRequest;return t.onload=function(){e=t.response},t.open("GET",this.vertex_shader_url+"?"+ +new Date,!1),t.send(),e},i.updateFragmentShaderSource=function(){var e,t=new XMLHttpRequest;return t.onload=function(){e=t.response},t.open("GET",this.fragment_shader_url+"?"+ +new Date,!1),t.send(),e},r.Program.call(i,e,null,null,n),i},r.Program.defines={},r.Program.prototype.compile=function(){"function"==typeof this.updateVertexShaderSource&&(this.vertex_shader_source=this.updateVertexShaderSource()),"function"==typeof this.updateFragmentShaderSource&&(this.fragment_shader_source=this.updateFragmentShaderSource());var e={};for(var t in r.Program.defines)e[t]=r.Program.defines[t];for(var t in this.defines)e[t]=this.defines[t];var o="";for(var t in e)0!=e[t]&&(o+="boolean"==typeof e[t]&&1==e[t]?"#define "+t+"\n":"#define "+t+" "+e[t]+"\n");this.processed_vertex_shader_source=o+this.vertex_shader_source,this.processed_fragment_shader_source=o+this.fragment_shader_source,this.program=r.updateProgram(this.gl,this.program,this.processed_vertex_shader_source,this.processed_fragment_shader_source),this.gl.useProgram(this.program),this.refreshUniforms(),this.refreshAttributes()},r.Program.prototype.uniform=function(e,t){var r=this.uniforms[t]=this.uniforms[t]||{};r.name=t,r.location=r.location||this.gl.getUniformLocation(this.program,t),r.method="uniform"+e,r.values=Array.prototype.slice.call(arguments,2),this.updateUniform(t)},r.Program.prototype.updateUniform=function(e){var t=this.uniforms[e];null!=t&&null!=t.location&&this.gl[t.method].apply(this.gl,[t.location].concat(t.values))},r.Program.prototype.refreshUniforms=function(){for(var e in this.uniforms)this.uniforms[e].location=this.gl.getUniformLocation(this.program,e),this.updateUniform(e)},r.Program.prototype.refreshAttributes=function(){this.attribs={}},r.Program.prototype.attribute=function(e){var t=this.attribs[e]=this.attribs[e]||{};return null!=t.location?t:(t.name=e,t.location=this.gl.getAttribLocation(this.program,e),t)};try{r.tesselator=function(){function e(e,t){t.push([e[0],e[1]])}function t(e){return e}function r(){}var o=new libtess.GluTesselator;return o.gluTessCallback(libtess.gluEnum.GLU_TESS_VERTEX_DATA,e),o.gluTessCallback(libtess.gluEnum.GLU_TESS_COMBINE,t),o.gluTessCallback(libtess.gluEnum.GLU_TESS_EDGE_FLAG,r),o.gluTessNormal(0,0,1),o}(),r.triangulatePolygon=function(e){var t=[];r.tesselator.gluTessBeginPolygon(t);for(var o=0;o<e.length;o++){r.tesselator.gluTessBeginContour();for(var n=e[o],i=0;i<n.length;i++){var s=[n[i][0],n[i][1],0];r.tesselator.gluTessVertex(s,s)}r.tesselator.gluTessEndContour()}return r.tesselator.gluTessEndPolygon(),t}}catch(o){}r.addVertices=function(e,t,r){if(null!=e&&e.length>0)if("object"==typeof e[0])for(var o=0;o<e.length;o++)t.push.apply(t,e[o]),r&&t.push.apply(t,r);else t.push.apply(t,e),r&&t.push.apply(t,r);return t},r.VertexArrayObject={},r.VertexArrayObject.disabled=!1,r.VertexArrayObject.bound_vao=null,r.VertexArrayObject.init=function(e){null==r.VertexArrayObject.ext&&(1!=r.VertexArrayObject.disabled&&(r.VertexArrayObject.ext=e.getExtension("OES_vertex_array_object")),console.log(null!=r.VertexArrayObject.ext?"Vertex Array Object extension available":1!=r.VertexArrayObject.disabled?"Vertex Array Object extension NOT available":"Vertex Array Object extension force disabled"))},r.VertexArrayObject.create=function(e,t){var o={};o.setup=e,o.teardown=t;var n=r.VertexArrayObject.ext;return null!=n?(o._vao=n.createVertexArrayOES(),n.bindVertexArrayOES(o._vao),o.setup(),n.bindVertexArrayOES(null),"function"==typeof o.teardown&&o.teardown()):o.setup(),o},r.VertexArrayObject.bind=function(e){var t=r.VertexArrayObject.ext;null!=e?null!=t&&null!=e._vao?(t.bindVertexArrayOES(e._vao),r.VertexArrayObject.bound_vao=e):e.setup():(null!=t?t.bindVertexArrayOES(null):null!=r.VertexArrayObject.bound_vao&&"function"==typeof r.VertexArrayObject.bound_vao.teardown&&r.VertexArrayObject.bound_vao.teardown(),r.VertexArrayObject.bound_vao=null)},void 0!==t&&(t.exports=r)},{}],4:[function(e,t){var r=e("../vector.js"),o=e("../point.js"),n=e("./gl.js"),i={};i.debug=!1,i.buildPolygons=function(e,t,r,o){o=o||{};var i=[t,0,0,1];o.vertex_constants&&i.push.apply(i,o.vertex_constants);for(var s=e.length,a=0;s>a;a++){var l=n.triangulatePolygon(e[a]);n.addVertices(l,r,i)}return r},i.buildExtrudedPolygons=function(e,t,o,s,a,l){l=l||{};var c=t+(s||0),d=t+o;i.buildPolygons(e,d,a,{vertex_constants:l.vertex_constants});var u=[null,null,null];l.vertex_constants&&u.push.apply(u,l.vertex_constants);for(var h=e.length,p=0;h>p;p++)for(var _=e[p],f=0;f<_.length;f++)for(var g=_[f],m=0;m<g.length-1;m++){var y=[];y.push([g[m+1][0],g[m+1][1],d],[g[m+1][0],g[m+1][1],c],[g[m][0],g[m][1],c],[g[m][0],g[m][1],c],[g[m][0],g[m][1],d],[g[m+1][0],g[m+1][1],d]);var v=r.cross([0,0,1],r.normalize([g[m+1][0]-g[m][0],g[m+1][1]-g[m][1],0]));u[0]=v[0],u[1]=v[1],u[2]=v[2],n.addVertices(y,a,u)}return a},i.buildPolylines=function(e,t,o,s,a){function l(e,t){var n=r.normalize([-1*(t[1]-e[1]),t[0]-e[0]]),i=[e[0]+n[0]*o/2,e[1]+n[1]*o/2],s=[e[0]-n[0]*o/2,e[1]-n[1]*o/2],a=[t[0]+n[0]*o/2,t[1]+n[1]*o/2],l=[t[0]-n[0]*o/2,t[1]-n[1]*o/2];m.push(l,a,s,s,a,i)}function c(n,s,l){var c=r.normalize([-1*(s[1]-n[1]),s[0]-n[0]]),d=[[n[0]+c[0]*o/2,n[1]+c[1]*o/2],[s[0]+c[0]*o/2,s[1]+c[1]*o/2]],u=[[n[0]-c[0]*o/2,n[1]-c[1]*o/2],[s[0]-c[0]*o/2,s[1]-c[1]*o/2]],h=r.normalize([-1*(l[1]-s[1]),l[0]-s[0]]),p=[[s[0]+h[0]*o/2,s[1]+h[1]*o/2],[l[0]+h[0]*o/2,l[1]+h[1]*o/2]],_=[[s[0]-h[0]*o/2,s[1]-h[1]*o/2],[l[0]-h[0]*o/2,l[1]-h[1]*o/2]],f=r.lineIntersection(d[0],d[1],p[0],p[1]),g=null;if(null!=f){var y=f,v=r.lengthSq([y[0]-s[0],y[1]-s[1]]),x=3;v>o*o*x*x&&(g="distance",y=r.normalize([y[0]-s[0],y[1]-s[1]]),y=[s[0]+y[0]*x,s[1]+y[1]*x]);var z=[s[0]-y[0]+s[0],s[1]-y[1]+s[1]];m.push(z,y,u[0],u[0],y,d[0],_[1],p[1],z,z,p[1],y)}else g="parallel",u[1]=_[0],d[1]=p[0],m.push(u[1],d[1],u[0],u[0],d[1],d[0],_[1],p[1],_[0],_[0],p[1],p[0]);if(i.debug&&a.vertex_lines&&a.vertex_lines.push(u[0][0],u[0][1],t+.001,0,0,1,0,1,0,u[1][0],u[1][1],t+.001,0,0,1,0,1,0,_[0][0],_[0][1],t+.001,0,0,1,0,1,0,_[1][0],_[1][1],t+.001,0,0,1,0,1,0,d[0][0],d[0][1],t+.001,0,0,1,0,1,0,d[1][0],d[1][1],t+.001,0,0,1,0,1,0,p[0][0],p[0][1],t+.001,0,0,1,0,1,0,p[1][0],p[1][1],t+.001,0,0,1,0,1,0,u[0][0],u[0][1],t+.001,0,0,1,0,1,0,d[0][0],d[0][1],t+.001,0,0,1,0,1,0,u[1][0],u[1][1],t+.001,0,0,1,0,1,0,d[1][0],d[1][1],t+.001,0,0,1,0,1,0,_[0][0],_[0][1],t+.001,0,0,1,0,1,0,p[0][0],p[0][1],t+.001,0,0,1,0,1,0,_[1][0],_[1][1],t+.001,0,0,1,0,1,0,p[1][0],p[1][1],t+.001,0,0,1,0,1,0),i.debug&&g&&a.vertex_lines){var b;"parallel"==g?b=[0,1,0]:"distance"==g&&(b=[1,0,0]),a.vertex_lines.push(n[0],n[1],t+.002,0,0,1,b[0],b[1],b[2],s[0],s[1],t+.002,0,0,1,b[0],b[1],b[2],s[0],s[1],t+.002,0,0,1,b[0],b[1],b[2],l[0],l[1],t+.002,0,0,1,b[0],b[1],b[2]);for(var w=e.length,T=0;w>T;T++)for(var E=e[T],P=0;P<E.length-1;P++){var n=E[P],l=E[P+1];a.vertex_lines.push(n[0],n[1],t+5e-4,0,0,1,0,0,1,l[0],l[1],t+5e-4,0,0,1,0,0,1)}}}a=a||{},a.closed_polygon=a.closed_polygon||!1,a.remove_tile_edges=a.remove_tile_edges||!1;var d=[t,0,0,1];if(a.vertex_constants&&d.push.apply(d,a.vertex_constants),i.debug&&a.vertex_lines)for(var u=e.length,h=0;u>h;h++)for(var p=e[h],_=0;_<p.length-1;_++){var f=p[_],g=p[_+1];a.vertex_lines.push(f[0],f[1],t+.001,0,0,1,1,0,0,g[0],g[1],t+.001,0,0,1,1,0,0)}for(var m=[],u=e.length,h=0;u>h;h++){var p=e[h];if(p.length>2){var y=[];if(p.length>3){var _,v,x=[];for(1==a.closed_polygon?(_=0,v=p.length-1):(_=1,v=p.length-2,x.push(p[0]));v>_;_++){var f=p[_],g=p[_+1];x.push([(f[0]+g[0])/2,(f[1]+g[1])/2])}var z;for(1==a.closed_polygon?z=x.length:(x.push(p[p.length-1]),z=x.length-1),_=0;z>_;_++)y.push([x[_],p[(_+1)%p.length],x[(_+1)%x.length]])}else y=[[p[0],p[1],p[2]]];for(var _=0;_<y.length;_++)if(a.remove_tile_edges){var b=i.isOnTileEdge(y[_][0],y[_][1]),w=i.isOnTileEdge(y[_][1],y[_][2]);b||w?b?w||l(y[_][1],y[_][2]):l(y[_][0],y[_][1]):c(y[_][0],y[_][1],y[_][2])}else c(y[_][0],y[_][1],y[_][2])}else 2==p.length&&l(p[0],p[1])}return n.addVertices(m,s,d),s},i.buildQuads=function(e,t,r,o,n){for(var n=n||{},i=e.length,s=0;i>s;s++){var a=e[s],l=[[a[0]-t/2,a[1]-r/2],[a[0]+t/2,a[1]-r/2],[a[0]+t/2,a[1]+r/2],[a[0]-t/2,a[1]-r/2],[a[0]+t/2,a[1]+r/2],[a[0]-t/2,a[1]+r/2]];if(1==n.texcoords)var c=[[-1,-1],[1,-1],[1,1],[-1,-1],[1,1],[-1,1]];var d={positions:l,texcoords:n.texcoords&&c};o(d)}},i.buildLines=function(e,t,r,o,n,i,s,a){a=a||{};for(var l=o.color,c=(o.width,e.length),d=0;c>d;d++)for(var u=e[d],h=0;h<u.length-1;h++){var p=u[h],_=u[h+1];s.push(p[0],p[1],i,0,0,1,l[0],l[1],l[2],_[0],_[1],i,0,0,1,l[0],l[1],l[2])}return s},i.isOnTileEdge=function(e,t,r){r=r||{};var o=r.tolerance_function||i.valuesWithinTolerance,n=r.tolerance||1,s=i.tile_bounds[0],a=i.tile_bounds[1],l=null;return o(e[0],s.x,n)&&o(t[0],s.x,n)?l="left":o(e[0],a.x,n)&&o(t[0],a.x,n)?l="right":o(e[1],s.y,n)&&o(t[1],s.y,n)?l="top":o(e[1],a.y,n)&&o(t[1],a.y,n)&&(l="bottom"),l},i.setTileScale=function(e){i.tile_bounds=[o(0,0),o(e,-e)]},i.valuesWithinTolerance=function(e,t,r){return r=r||1,Math.abs(e-t)<r},i.buildZigzagLineTestPattern=function(){var e=o(0,0),t=o(4096,4096),r={id:123,geometry:{type:"LineString",coordinates:[[.75*e.x+.25*t.x,.75*e.y+.25*t.y],[.75*e.x+.25*t.x,.5*e.y+.5*t.y],[.25*e.x+.75*t.x,.75*e.y+.25*t.y],[.25*e.x+.75*t.x,.25*e.y+.75*t.y],[.4*e.x+.6*t.x,.5*e.y+.5*t.y],[.5*e.x+.5*t.x,.25*e.y+.75*t.y],[.75*e.x+.25*t.x,.25*e.y+.75*t.y],[.75*e.x+.25*t.x,.4*e.y+.6*t.y]]},properties:{kind:"debug"}};return r},void 0!==t&&(t.exports=i)},{"../point.js":10,"../vector.js":12,"./gl.js":3}],5:[function(e,t){function r(e,t,r,o,n){n=n||{},this.gl=e,this.gl_program=t,this.attribs=o,this.vertex_data=r,this.buffer=this.gl.createBuffer(),this.draw_mode=n.draw_mode||this.gl.TRIANGLES,this.data_usage=n.data_usage||this.gl.STATIC_DRAW,this.vertex_stride=0;for(var i=0;i<this.attribs.length;i++){var a=this.attribs[i];switch(a.location=this.gl_program.attribute(a.name).location,a.byte_size=a.size,a.type){case this.gl.FLOAT:case this.gl.INT:case this.gl.UNSIGNED_INT:a.byte_size*=4;break;case this.gl.SHORT:case this.gl.UNSIGNED_SHORT:a.byte_size*=2}a.offset=this.vertex_stride,this.vertex_stride+=a.byte_size}this.vertex_count=this.vertex_data.byteLength/this.vertex_stride,this.vao=s.VertexArrayObject.create(function(){this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.buffer),this.setup()}.bind(this)),this.gl.bufferData(this.gl.ARRAY_BUFFER,this.vertex_data,this.data_usage)}function o(e,t,o){r.call(this,e,t,o,[{name:"position",size:3,type:e.FLOAT,normalized:!1},{name:"normal",size:3,type:e.FLOAT,normalized:!1},{name:"color",size:3,type:e.FLOAT,normalized:!1},{name:"layer",size:1,type:e.FLOAT,normalized:!1}]),this.geometry_count=this.vertex_count/3}function n(e,t,o){r.call(this,e,t,o,[{name:"position",size:3,type:e.FLOAT,normalized:!1},{name:"texcoord",size:2,type:e.FLOAT,normalized:!1},{name:"color",size:3,type:e.FLOAT,normalized:!1},{name:"layer",size:1,type:e.FLOAT,normalized:!1}]),this.geometry_count=this.vertex_count/3}function i(e,t,r,n){n=n||{},o.call(this,e,program,r),this.draw_mode=this.gl.LINES,this.line_width=n.line_width||2,this.geometry_count=this.vertex_count/2}var s=e("./gl.js");r.prototype.setup=function(){for(var e=0;e<this.attribs.length;e++){var t=this.attribs[e];this.gl.enableVertexAttribArray(t.location),this.gl.vertexAttribPointer(t.location,t.size,t.type,t.normalized,this.vertex_stride,t.offset)}},r.prototype.render=function(){this.gl.useProgram(this.gl_program.program),s.VertexArrayObject.bind(this.vao),"function"==typeof this._render&&this._render(),this.gl.drawArrays(this.draw_mode,0,this.vertex_count),s.VertexArrayObject.bind(null)},r.prototype.destroy=function(){console.log("GLGeometry.destroy: delete buffer of size "+this.vertex_data.byteLength),this.gl.deleteBuffer(this.buffer),delete this.vertex_data},o.prototype=Object.create(r.prototype),n.prototype=Object.create(r.prototype),i.prototype=Object.create(o.prototype),i.prototype._render=function(){this.gl.lineWidth(this.line_width),"function"==typeof o.prototype._render&&o.prototype._render.call(this)},void 0!==t&&(t.exports={GLGeometry:r,GLTriangles:o,GLPolyPoints:n,GLLines:i})},{"./gl.js":3}],6:[function(e,t){function r(e,t,r,o){var o=o||{};i.call(this,"GLRenderer",e,t,r,o),a.setTileScale(i.tile_scale),s.Program.defines.TILE_SCALE=i.tile_scale+".0",this.container=o.container,this.continuous_animation=!1}{var o=e("../point.js"),n=e("../geo.js"),i=e("../vector_renderer.js"),s=e("./gl.js"),a=e("./gl_builders.js"),l=(e("./gl_geom.js").GLGeometry,e("./gl_geom.js").GLTriangles),c=e("./gl_geom.js").GLPolyPoints;e("./gl_geom.js").GLLines}i.GLRenderer=r,r.prototype=Object.create(i.prototype),r.debug=!1,r.shader_sources=e("./gl_shaders.js"),r.prototype._init=function(){this.container=this.container||document.body,this.canvas=document.createElement("canvas"),this.canvas.style.position="absolute",this.canvas.style.top=0,this.canvas.style.left=0,this.canvas.style.zIndex=-1,this.container.appendChild(this.canvas),this.gl=s.getContext(this.canvas);var e=this;this.render_modes={polygons:{gl_program:new s.Program(this.gl,r.shader_sources.polygon_vertex,r.shader_sources.polygon_fragment),makeGLGeometry:function(t){return new l(e.gl,this.gl_program,t)}},polygons_noise:{gl_program:new s.Program(this.gl,r.shader_sources.polygon_vertex,r.shader_sources.polygon_fragment,{defines:{EFFECT_NOISE_TEXTURE:!0,EFFECT_NOISE_ANIMATABLE:!0}}),makeGLGeometry:function(t){return new l(e.gl,this.gl_program,t)}},points:{gl_program:new s.Program(this.gl,r.shader_sources.point_vertex,r.shader_sources.point_fragment,{defines:{EFFECT_SCREEN_COLOR:!0}}),makeGLGeometry:function(t){return new c(e.gl,this.gl_program,t)}}},this.resizeMap(this.container.clientWidth,this.container.clientHeight),this.start_time=+new Date,this.last_render_count=null,this.initInputHandlers()},r.calculateZ=function(){var e=0;return e},r.addTile=function(e,t,o){var n,l,c,d,u,h={};e.debug.features=0;for(var p=0;p<t.length;p++)if(n=t[p],null!=o[n.name]&&null!=e.layers[n.name])for(var _=e.layers[n.name].features.length,f=_-1;f>=0;f--)if(c=e.layers[n.name].features[f],l=i.parseStyleForFeature(c,o[n.name],e),d=r.calculateZ(n,e)+l.z,null!=l){u=l.render_mode,null==h[u]&&(h[u]=[]);var g=[l.color[0],l.color[1],l.color[2],p];if(l.outline.color)var m=[l.outline.color[0],l.outline.color[1],l.outline.color[2],p-.5];var y=null,v=null,x=null;if("Polygon"==c.geometry.type?x=[c.geometry.coordinates]:"MultiPolygon"==c.geometry.type?x=c.geometry.coordinates:"LineString"==c.geometry.type?v=[c.geometry.coordinates]:"MultiLineString"==c.geometry.type?v=c.geometry.coordinates:"Point"==c.geometry.type?y=[c.geometry.coordinates]:"MultiPoint"==c.geometry.type&&(y=c.geometry.coordinates),null!=x&&(l.extrude&&l.height?a.buildExtrudedPolygons(x,d,l.height,l.min_height,h[u],{vertex_constants:g}):a.buildPolygons(x,d,h[u],{vertex_constants:g}),l.outline.color&&l.outline.width))for(var z=0;z<x.length;z++)a.buildPolylines(x[z],r.calculateZ(n,e,-.5),l.outline.width,h[u],{closed_polygon:!0,remove_tile_edges:!0,vertex_constants:m});if(null!=v&&(a.buildPolylines(v,d,l.width,h[u],{vertex_constants:g}),l.outline.color&&l.outline.width&&a.buildPolylines(v,r.calculateZ(n,e,-.5),l.width+2*l.outline.width,h[u],{vertex_constants:m})),null!=y){var b=[d+1,0,0,1].concat(g);a.buildQuads(y,2*l.size,2*l.size,function(e){var t=e.positions;if("points"==u){b=g;for(var r in e.positions)t[r]=e.positions[r].concat(d+1,e.texcoords[r])}s.addVertices(t,h[u],b)},{texcoords:"points"==u})}e.debug.features++}e.vertex_data={};for(var w in h)e.vertex_data[w]=new Float32Array(h[w]);return e},r.prototype._tileWorkerCompleted=function(e){var t=e.vertex_data;e.gl_geometry={};for(var r in t)e.gl_geometry[r]=this.render_modes[r].makeGLGeometry(t[r]);e.debug.geometries=0,e.debug.buffer_size=0;for(var o in e.gl_geometry)e.debug.geometries+=e.gl_geometry[o].geometry_count,e.debug.buffer_size+=e.gl_geometry[o].vertex_data.byteLength;e.debug.geom_ratio=(e.debug.geometries/e.debug.features).toFixed(1),delete e.vertex_data},r.prototype.removeTile=function(e){if(1!=this.map_zooming){var t=this.tiles[e];if(null!=t&&null!=t.gl_geometry){for(var r in t.gl_geometry)t.gl_geometry[r].destroy();t.gl_geometry=null}i.prototype.removeTile.apply(this,arguments)}},r.prototype.preserve_tiles_within_zoom=2,r.prototype.setZoom=function(e){console.log("renderer.map_last_zoom: "+this.map_last_zoom),this.map_zooming=!1,this.zoom=e;var t=this.zoom,r=this.zoom;Math.abs(this.zoom-this.map_last_zoom)<=this.preserve_tiles_within_zoom&&(this.zoom>this.map_last_zoom?t=this.zoom-this.preserve_tiles_within_zoom:r=this.zoom+this.preserve_tiles_within_zoom),this.removeTilesOutsideZoomRange(t,r),this.map_last_zoom=this.zoom,this.dirty=!0},r.prototype.removeTilesOutsideZoomRange=function(e,t){e=Math.min(e,this.tile_source.max_zoom||e),t=Math.min(t,this.tile_source.max_zoom||t),console.log("removeTilesOutsideZoomRange ["+e+", "+t+"])");var r=[];for(var o in this.tiles){var n=this.tiles[o];(n.coords.z<e||n.coords.z>t)&&r.push(o)}for(var i=0;i<r.length;i++){var s=r[i];console.log("removed "+s+" (outside range ["+e+", "+t+"])"),this.removeTile(s)}},r.prototype.resizeMap=function(e,t){i.prototype.resizeMap.apply(this,arguments),this.css_size={width:e,height:t},this.device_size={width:Math.round(this.css_size.width*this.device_pixel_ratio),height:Math.round(this.css_size.height*this.device_pixel_ratio)},this.canvas.style.width=this.css_size.width+"px",this.canvas.style.height=this.css_size.height+"px",this.canvas.width=this.device_size.width,this.canvas.height=this.device_size.height,this.gl.viewport(0,0,this.canvas.width,this.canvas.height)},r.prototype._render=function(){var e=this.gl;this.input(),e.clearColor(0,0,0,1),e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER_BIT),e.enable(e.DEPTH_TEST),e.depthFunc(e.LESS),e.enable(e.CULL_FACE),e.cullFace(e.BACK);var t=0;for(var r in this.render_modes){var i=this.render_modes[r].gl_program;e.useProgram(i.program),i.uniform("2f","resolution",this.css_size.width,this.css_size.height),i.uniform("1f","time",(+new Date-this.start_time)/1e3);var s=n.latLngToMeters(o(this.center.lng,this.center.lat));i.uniform("2f","map_center",s.x,s.y),i.uniform("1f","map_zoom",this.zoom),i.uniform("1f","num_layers",this.layers.length);var a=n.min_zoom_meters_per_pixel/Math.pow(2,this.zoom),l=o(this.css_size.width/2*a,this.css_size.height/2*a);i.uniform("2f","meter_zoom",l.x,l.y);var c=Math.min(~~this.zoom,this.tile_source.max_zoom||~~this.zoom);for(var d in this.tiles){var u=this.tiles[d];1==u.loaded&&1==u.visible&&Math.min(u.coords.z,this.tile_source.max_zoom||u.coords.z)==c&&null!=u.gl_geometry[r]&&(i.uniform("2f","tile_min",u.min.x,u.min.y),i.uniform("2f","tile_max",u.max.x,u.max.y),u.gl_geometry[r].render(),t+=u.gl_geometry[r].geometry_count)}}return t!=this.last_render_count&&console.log("rendered "+t+" primitives"),this.last_render_count=t,1==this.continuous_animation&&(this.dirty=!0),!0},r.prototype.getDebugSum=function(e,t){var r=0;for(var o in this.tiles)null==this.tiles[o].debug[e]||"function"==typeof t&&1!=t(this.tiles[o])||(r+=this.tiles[o].debug[e]);return r},r.prototype.getDebugAverage=function(e,t){return this.getDebugSum(e,t)/Object.keys(this.tiles).length},r.prototype.initInputHandlers=function(){var e=this;e.key=null,document.addEventListener("keydown",function(t){if(37==t.keyCode)e.key="left";else if(39==t.keyCode)e.key="right";else if(38==t.keyCode)e.key="up";else if(40==t.keyCode)e.key="down";else if(83==t.keyCode){console.log("reloading shaders");for(var r in this.render_modes)this.render_modes[r].gl_program.compile();e.dirty=!0}}),document.addEventListener("keyup",function(){e.key=null})},r.prototype.input=function(){},void 0!==t&&(t.exports=r)},{"../geo.js":2,"../point.js":10,"../vector_renderer.js":13,"./gl.js":3,"./gl_builders.js":4,"./gl_geom.js":5,"./gl_shaders.js":7}],7:[function(e,t){var r={};r.point_fragment="\n#define GLSLIFY 1\n\nuniform vec2 resolution;\nvarying vec3 fcolor;\nvarying vec2 ftexcoord;\nvoid main(void) {\n  vec4 color = vec4(fcolor, 1.);\n  float len = length(ftexcoord);\n  if(len > 1.) {\n    discard;\n  }\n  color.rgb *= (1. - smoothstep(.25, 1., len)) + 0.5;\n  #if defined(EFFECT_SCREEN_COLOR)\n  color.rgb += vec3(gl_FragCoord.x / resolution.x, 0.0, gl_FragCoord.y / resolution.y);\n  #endif\n  gl_FragColor = color;\n}\n",r.point_vertex="\n#define GLSLIFY 1\n\nuniform vec2 map_center;\nuniform float map_zoom;\nuniform vec2 meter_zoom;\nuniform vec2 tile_min;\nuniform vec2 tile_max;\nuniform float num_layers;\nattribute vec3 position;\nattribute vec2 texcoord;\nattribute vec3 color;\nattribute float layer;\nvarying vec3 fcolor;\nvarying vec2 ftexcoord;\nvoid main() {\n  vec3 vposition = position;\n  vposition.y *= -1.0;\n  vposition.xy *= (tile_max - tile_min) / TILE_SCALE;\n  vposition.xy += tile_min.xy - map_center;\n  vposition.xy /= meter_zoom;\n  fcolor = color;\n  ftexcoord = texcoord;\n  float z_layer_scale = 4096.;\n  float z_layer_range = (num_layers + 1.) * z_layer_scale;\n  float z_layer = (layer + 1.) * z_layer_scale;\n  vposition.z = z_layer + clamp(vposition.z, 1., z_layer_scale);\n  vposition.z = (z_layer_range - vposition.z) / z_layer_range;\n  gl_Position = vec4(vposition, 1.0);\n}\n",r.polygon_fragment="\n#define GLSLIFY 1\n\nuniform vec2 resolution;\nuniform float time;\nvarying vec3 fcolor;\n#if defined(EFFECT_NOISE_TEXTURE)\n\nvarying vec3 fposition;\nvec3 a_x_mod289(vec3 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\nvec4 a_x_mod289(vec4 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\nvec4 a_x_permute(vec4 x) {\n  return a_x_mod289(((x * 34.0) + 1.0) * x);\n}\nvec4 a_x_taylorInvSqrt(vec4 r) {\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\nvec3 a_x_fade(vec3 t) {\n  return t * t * t * (t * (t * 6.0 - 15.0) + 10.0);\n}\nfloat a_x_cnoise(vec3 P) {\n  vec3 Pi0 = floor(P);\n  vec3 Pi1 = Pi0 + vec3(1.0);\n  Pi0 = a_x_mod289(Pi0);\n  Pi1 = a_x_mod289(Pi1);\n  vec3 Pf0 = fract(P);\n  vec3 Pf1 = Pf0 - vec3(1.0);\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = Pi0.zzzz;\n  vec4 iz1 = Pi1.zzzz;\n  vec4 ixy = a_x_permute(a_x_permute(ix) + iy);\n  vec4 ixy0 = a_x_permute(ixy + iz0);\n  vec4 ixy1 = a_x_permute(ixy + iz1);\n  vec4 gx0 = ixy0 * (1.0 / 7.0);\n  vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\n  gx0 = fract(gx0);\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n  vec4 sz0 = step(gz0, vec4(0.0));\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n  vec4 gx1 = ixy1 * (1.0 / 7.0);\n  vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\n  gx1 = fract(gx1);\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n  vec4 sz1 = step(gz1, vec4(0.0));\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n  vec3 g000 = vec3(gx0.x, gy0.x, gz0.x);\n  vec3 g100 = vec3(gx0.y, gy0.y, gz0.y);\n  vec3 g010 = vec3(gx0.z, gy0.z, gz0.z);\n  vec3 g110 = vec3(gx0.w, gy0.w, gz0.w);\n  vec3 g001 = vec3(gx1.x, gy1.x, gz1.x);\n  vec3 g101 = vec3(gx1.y, gy1.y, gz1.y);\n  vec3 g011 = vec3(gx1.z, gy1.z, gz1.z);\n  vec3 g111 = vec3(gx1.w, gy1.w, gz1.w);\n  vec4 norm0 = a_x_taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n  g000 *= norm0.x;\n  g010 *= norm0.y;\n  g100 *= norm0.z;\n  g110 *= norm0.w;\n  vec4 norm1 = a_x_taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n  g001 *= norm1.x;\n  g011 *= norm1.y;\n  g101 *= norm1.z;\n  g111 *= norm1.w;\n  float n000 = dot(g000, Pf0);\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n  float n111 = dot(g111, Pf1);\n  vec3 fade_xyz = a_x_fade(Pf0);\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\n  return 2.2 * n_xyz;\n}\n#endif\n\nvoid main(void) {\n  \n  #if defined(EFFECT_SPOTLIGHT)\n  vec2 position = gl_FragCoord.xy / resolution.xy;\n  position = position * 2.0 - 1.0;\n  position.y *= resolution.y / resolution.x;\n  vec3 color = fcolor * max(1.0 - distance(position, vec2(0.0, 0.0)), 0.2);\n  #else\n  vec3 color = fcolor;\n  #endif\n  \n  #if defined(EFFECT_COLOR_BLEED)\n  color += vec3(gl_FragCoord.x / resolution.x, 0.0, gl_FragCoord.y / resolution.y);\n  color.r += sin(time / 3.0);\n  #endif\n  \n  #if defined (EFFECT_NOISE_TEXTURE)\n  \n  #if defined(EFFECT_NOISE_ANIMATABLE) && defined(EFFECT_NOISE_ANIMATED)\n  color *= (abs(a_x_cnoise((fposition + vec3(time * 5., time * 7.5, time * 10.)) / 10.0)) / 4.0) + 0.75;\n  #endif\n  \n  #ifndef EFFECT_NOISE_ANIMATABLE\n  color *= (abs(a_x_cnoise(fposition / 10.0)) / 4.0) + 0.75;\n  #endif\n  \n  #endif\n  gl_FragColor = vec4(color, 1.0);\n}\n",r.polygon_vertex="\n#define GLSLIFY 1\n\nuniform vec2 resolution;\nuniform vec2 map_center;\nuniform float map_zoom;\nuniform vec2 meter_zoom;\nuniform vec2 tile_min;\nuniform vec2 tile_max;\nuniform float num_layers;\nuniform float time;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec3 color;\nattribute float layer;\nvarying vec3 fcolor;\nvec3 a_x_perspectiveTransform(vec3 position) {\n  \n  #if defined(PROJECTION_PERSPECTIVE)\n  const vec2 perspective_offset = vec2(-0.25, -0.25);\n  const vec2 perspective_factor = vec2(0.8, 0.8);\n  position.xy += position.z * perspective_factor * (position.xy - perspective_offset) / meter_zoom.xy;\n  #elif defined(PROJECTION_ISOMETRIC) || defined(PROJECTION_POPUP)\n  \n  #if defined(PROJECTION_POPUP)\n  if(position.z > 1.0) {\n    float cd = distance(position.xy * (resolution.xy / resolution.yy), vec2(0.0, 0.0));\n    const float popup_fade_inner = 0.5;\n    const float popup_fade_outer = 0.75;\n    if(cd > popup_fade_inner) {\n      position.z *= 1.0 - smoothstep(popup_fade_inner, popup_fade_outer, cd);\n    }\n    const float zoom_boost_start = 15.0;\n    const float zoom_boost_end = 17.0;\n    const float zoom_boost_magnitude = 0.75;\n    position.z *= 1.0 + (1.0 - smoothstep(zoom_boost_start, zoom_boost_end, map_zoom)) * zoom_boost_magnitude;\n  }\n  #endif\n  position.y += position.z / meter_zoom.y;\n  #endif\n  return position;\n}\n#if defined(EFFECT_NOISE_TEXTURE)\n\nvarying vec3 fposition;\n#endif\n\nvec3 light;\nconst float ambient = 0.45;\nvec3 modelTransform(vec3 position) {\n  position.y *= -1.0;\n  position.xy *= (tile_max - tile_min) / TILE_SCALE;\n  return position;\n}\nvec3 modelViewTransform(vec3 position) {\n  position = modelTransform(position);\n  position.xy += tile_min.xy - map_center;\n  position.xy /= meter_zoom;\n  return position;\n}\nfloat calculateZ(float z, float layer) {\n  float z_layer_scale = 4096.;\n  float z_layer_range = (num_layers + 1.) * z_layer_scale;\n  float z_layer = (layer + 1.) * z_layer_scale;\n  z = z_layer + clamp(z, 1., z_layer_scale);\n  z = (z_layer_range - z) / z_layer_range;\n  return z;\n}\nvec3 lighting(vec3 position, vec3 normal, vec3 color) {\n  \n  #if defined(LIGHTING_POINT) || defined(LIGHTING_NIGHT)\n  light = vec3(-0.25, -0.25, 0.50);\n  #if defined(LIGHTING_NIGHT)\n  light = normalize(vec3(position.x, position.y, position.z) - light);\n  color *= dot(normal, light * -1.0);\n  #else\n  light = normalize(vec3(position.x, position.y, -position.z) - light);\n  color *= dot(normal, light * -1.0) + ambient + clamp(position.z * 2.0 / meter_zoom.x, 0.0, 0.25);\n  #endif\n  \n  #elif defined(LIGHTING_DIRECTION)\n  light = normalize(vec3(0.2, 0.7, -0.5));\n  color *= dot(normal, light * -1.0) + ambient;\n  #endif\n  return color;\n}\nvec3 effects(vec3 position, vec3 vposition) {\n  \n  #if defined(ANIMATION_ELEVATOR) || defined(ANIMATION_WAVE) || defined(EFFECT_NOISE_TEXTURE)\n  vec3 vposition_world = modelTransform(position) + vec3(tile_min, 0.);\n  #if defined(EFFECT_NOISE_TEXTURE)\n  fposition = vposition_world;\n  #endif\n  if(vposition_world.z > 1.0) {\n    \n    #if defined(ANIMATION_ELEVATOR)\n    vposition.z *= max((sin(vposition_world.z + time) + 1.0) / 2.0, 0.05);\n    #elif defined(ANIMATION_WAVE)\n    vposition.z *= max((sin(vposition_world.x / 100.0 + time) + 1.0) / 2.0, 0.05);\n    #endif\n    \n  }\n  #endif\n  return vposition;\n}\nvoid main() {\n  vec3 vposition = position;\n  vec3 vnormal = normal;\n  vposition = modelViewTransform(vposition);\n  vposition = effects(position, vposition);\n  fcolor = lighting(vposition, vnormal, color);\n  vposition = a_x_perspectiveTransform(vposition);\n  vposition.z = calculateZ(vposition.z, layer);\n  gl_Position = vec4(vposition, 1.0);\n}\n",void 0!==t.exports&&(t.exports=r)
},{}],8:[function(e,t){var r=e("./vector_renderer.js"),o=L.GridLayer.extend({options:{vectorRenderer:"canvas"},initialize:function(e){L.setOptions(this,e),this.options.vectorRenderer=this.options.vectorRenderer||"GLRenderer",this._renderer=r.create(this.options.vectorRenderer,this.options.vectorTileSource,this.options.vectorLayers,this.options.vectorStyles,{num_workers:this.options.numWorkers}),this._renderer.debug=this.options.debug,this._renderer.continuous_animation=!1},onAdd:function(){var e=this;e.on("tileunload",function(t){var r=t.tile,o=r.getAttribute("data-tile-key");e._renderer.removeTile(o)}),e._map.on("resize",function(){var t=e._map.getSize();e._renderer.resizeMap(t.x,t.y),e.updateBounds()}),e._map.on("move",function(){var t=e._map.getCenter();e._renderer.setCenter(t.lng,t.lat),e.updateBounds()}),e._map.on("zoomstart",function(){console.log("map.zoomstart "+e._map.getZoom()),e._renderer.startZoom()}),e._map.on("zoomend",function(){console.log("map.zoomend "+e._map.getZoom()),e._renderer.setZoom(e._map.getZoom())}),e._renderer.container=e._map.getContainer();var t=e._map.getCenter();e._renderer.setCenter(t.lng,t.lat),e._renderer.setZoom(e._map.getZoom()),e.updateBounds(),L.GridLayer.prototype.onAdd.apply(this,arguments),e._renderer.init()},onRemove:function(){L.GridLayer.prototype.onRemove.apply(this,arguments)},createTile:function(e,t){var r=document.createElement("div");return this._renderer.loadTile(e,r,t),r},updateBounds:function(){var e=this,t=e._map.getBounds();e._renderer.setBounds(t.getSouthWest(),t.getNorthEast())},render:function(){this._renderer.render()}}),n=function(e){return new o(e)};void 0!==t&&(t.exports={LeafletLayer:o,leafletLayer:n})},{"./vector_renderer.js":13}],9:[function(e,t){var r=e("./leaflet_layer.js");e("./gl/gl_renderer.js"),e("./canvas/canvas_renderer.js");var o=e("./gl/gl.js");void 0!==t&&(t.exports={LeafletLayer:r.LeafletLayer,leafletLayer:r.leafletLayer,GL:o})},{"./canvas/canvas_renderer.js":1,"./gl/gl.js":3,"./gl/gl_renderer.js":6,"./leaflet_layer.js":8}],10:[function(e,t){function r(e,t){return{x:e,y:t}}r.copy=function(e){return null==e?null:{x:e.x,y:e.y}},void 0!==t&&(t.exports=r)},{}],11:[function(e,t){var r={};r.color={pseudoRandomGrayscale:function(e){var t=Math.max(parseInt(e.id,16)%100/100,.4);return[.7*t,.7*t,.7*t]},pseudoRandomColor:function(e){return[.7*(parseInt(e.id,16)/100%1),.7*(parseInt(e.id,16)/1e4%1),.7*(parseInt(e.id,16)/1e6%1)]},randomColor:function(){return[.7*Math.random(),.7*Math.random(),.7*Math.random()]}},r.width={pixels:function(e){return function(t,r){return("function"==typeof e?e(t,r):e)*r.units_per_pixel}},meters:function(e){return function(t,r){return("function"==typeof e?e(t,r):e)*r.units_per_meter}}},void 0!==t&&(t.exports=r)},{}],12:[function(e,t){var r={};r.lengthSq=function(e){return 2==e.length?e[0]*e[0]+e[1]*e[1]:e[0]*e[0]+e[1]*e[1]+e[2]*e[2]},r.length=function(e){return Math.sqrt(r.lengthSq(e))},r.normalize=function(e){var t;if(2==e.length)return t=e[0]*e[0]+e[1]*e[1],t=Math.sqrt(t),0!=t?[e[0]/t,e[1]/t]:[0,0];var t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2];return t=Math.sqrt(t),0!=t?[e[0]/t,e[1]/t,e[2]/t]:[0,0,0]},r.cross=function(e,t){return[e[1]*t[2]-e[2]*t[1],e[2]*t[0]-e[0]*t[2],e[0]*t[1]-e[1]*t[0]]},r.lineIntersection=function(e,t,r,o,n){var n=n||.01,i=e[1]-t[1],s=e[0]-t[0],a=r[1]-o[1],l=r[0]-o[0],c=e[0]*t[1]-e[1]*t[0],d=r[0]*o[1]-r[1]*o[0],u=s*a-i*l;return Math.abs(u)>n?[(c*l-s*d)/u,(c*a-i*d)/u]:null},void 0!==t&&(t.exports=r)},{}],13:[function(_dereq_,module,exports){function VectorRenderer(e,t,r,o,n){var n=n||{};this.type=e,this.tile_source=t,this.tiles={},this.num_workers=n.num_workers||1,this.layer_source=VectorRenderer.urlForPath(r),this.layers="string"==typeof r?VectorRenderer.loadLayers(r):r,this.style_source=VectorRenderer.urlForPath(o),this.styles="string"==typeof o?VectorRenderer.loadStyles(o):o,this.createWorkers(),this.zoom=null,this.center=null,this.device_pixel_ratio=window.devicePixelRatio||1,this.dirty=!0,this.initialized=!1}var Point=_dereq_("./point.js"),Geo=_dereq_("./geo.js"),Style=_dereq_("./style.js");!function(){try{VectorRenderer.library_base_url="";for(var e=document.getElementsByTagName("script"),t=0;t<e.length;t++){var r=e[t].src.indexOf("vector-map.debug.js");if(-1==r&&(r=e[t].src.indexOf("vector-map.min.js")),r>=0){VectorRenderer.library_base_url=e[t].src.substr(0,r);break}}}catch(o){}}(),VectorRenderer.tile_scale=4096,VectorRenderer.units_per_meter=[],VectorRenderer.units_per_pixel=[],function(){for(var e=0;e<=Geo.max_zoom;e++)VectorRenderer.units_per_meter[e]=VectorRenderer.tile_scale/(Geo.tile_size*Geo.meters_per_pixel[e]),VectorRenderer.units_per_pixel[e]=VectorRenderer.tile_scale/Geo.tile_size}(),VectorRenderer.create=function(e,t,r,o,n){return new VectorRenderer[e](t,r,o,n)},VectorRenderer.prototype.init=function(){"function"==typeof this._init&&this._init.apply(this,arguments);var e=this;this.workers.forEach(function(t){t.addEventListener("message",e.tileWorkerCompleted.bind(e))}),this.initialized=!0},VectorRenderer.prototype.createWorkers=function(){var e=this,t=VectorRenderer.library_base_url+"vector-map-worker.min.js",r=new XMLHttpRequest;r.onload=function(){var t=window.URL.createObjectURL(new Blob([r.response],{type:"application/javascript"}));e.workers=[];for(var o=0;o<e.num_workers;o++)e.workers.push(new Worker(t))},r.open("GET",t,!1),r.send(),this.next_worker=0},VectorRenderer.prototype.setCenter=function(e,t){this.center={lng:e,lat:t},this.dirty=!0},VectorRenderer.prototype.setZoom=function(e){this.map_last_zoom=this.zoom,this.zoom=e,this.map_zooming=!1,this.dirty=!0},VectorRenderer.prototype.startZoom=function(){this.map_last_zoom=this.zoom,this.map_zooming=!0},VectorRenderer.prototype.setBounds=function(e,t){this.bounds={sw:{lng:e.lng,lat:e.lat},ne:{lng:t.lng,lat:t.lat}};var r=200*Geo.meters_per_pixel[~~this.zoom];this.buffered_meter_bounds={sw:Geo.latLngToMeters(Point(this.bounds.sw.lng,this.bounds.sw.lat)),ne:Geo.latLngToMeters(Point(this.bounds.ne.lng,this.bounds.ne.lat))},this.buffered_meter_bounds.sw.x-=r,this.buffered_meter_bounds.sw.y-=r,this.buffered_meter_bounds.ne.x+=r,this.buffered_meter_bounds.ne.y+=r;for(var o in this.tiles)this.updateVisibilityForTile(this.tiles[o]);this.dirty=!0},VectorRenderer.prototype.updateVisibilityForTile=function(e){return e.visible=Geo.boxIntersect(e.bounds,this.buffered_meter_bounds),e.visible},VectorRenderer.prototype.resizeMap=function(){this.dirty=!0},VectorRenderer.prototype.requestRedraw=function(){this.dirty=!0},VectorRenderer.prototype.render=function(){return 0==this.dirty||0==this.initialized?!1:(this.dirty=!1,"function"==typeof this._render&&this._render.apply(this,arguments),!0)},VectorRenderer.prototype.loadTile=function(e,t,r){if(e.z>this.tile_source.max_zoom){var o=e.z-this.tile_source.max_zoom;e.x=~~(e.x/Math.pow(2,o)),e.y=~~(e.y/Math.pow(2,o)),e.display_z=e.z,e.z-=o}null==this.tile_set_loading&&(this.tile_set_loading=+new Date,console.log("tile set load START"));var n=[e.x,e.y,e.z].join("/");if(this.tiles[n])return void(r&&r(null,t));var i=this.tiles[n]={};if(i.key=n,i.coords=e,i.min=Geo.metersForTile(i.coords),i.max=Geo.metersForTile({x:i.coords.x+1,y:i.coords.y+1,z:i.coords.z}),i.bounds={sw:{x:i.min.x,y:i.max.y},ne:{x:i.max.x,y:i.min.y}},i.units_per_meter=VectorRenderer.units_per_meter[i.coords.z],i.units_per_pixel=VectorRenderer.units_per_pixel[i.coords.z],i.debug={},i.loading=!0,i.loaded=!1,this.updateVisibilityForTile(i),this.workers[this.next_worker].postMessage({type:"loadTile",tile:i,renderer_type:this.type,tile_source:this.tile_source,layer_source:this.layer_source,style_source:this.style_source}),i.worker=this.workers[this.next_worker],this.next_worker=(this.next_worker+1)%this.workers.length,t.setAttribute("data-tile-key",i.key),t.style.width="256px",t.style.height="256px",this.debug){var s=document.createElement("div");s.textContent=i.key,s.style.position="absolute",s.style.left=0,s.style.top=0,s.style.color="white",s.style.fontSize="16px",t.appendChild(s),t.style.borderStyle="solid",t.style.borderColor="white",t.style.borderWidth="1px"}r&&r(null,t)},VectorRenderer.prototype.tileWorkerCompleted=function(e){if("loadTileCompleted"==e.data.type){var t=e.data.tile;if(null==this.tiles[t.key])return void console.log("discarded tile "+t.key+" in VectorRenderer.tileWorkerCompleted because previously removed");if(this.tiles[t.key]=t,"function"==typeof this._tileWorkerCompleted&&this._tileWorkerCompleted(t),delete t.layers,null!=this.tile_set_loading){var r=!0;for(var o in this.tiles)if(1==this.tiles[o].loading){r=!1;break}1==r&&(this.last_tile_set_load=+new Date-this.tile_set_loading,this.tile_set_loading=null,console.log("tile set load FINISHED in: "+this.last_tile_set_load))}this.dirty=!0,this.printDebugForTile(t)}},VectorRenderer.prototype.removeTile=function(e){console.log("tile unload for "+e);var t=this.tiles[e];null!=t&&1==t.loading&&(console.log("cancel tile load for "+e),null!=t.worker&&t.worker.postMessage({type:"removeTile",key:t.key})),delete this.tiles[e],this.dirty=!0},VectorRenderer.prototype.printDebugForTile=function(e){console.log("debug for "+e.key+": [ "+Object.keys(e.debug).map(function(t){return t+": "+e.debug[t]}).join(", ")+" ]")},VectorRenderer.urlForPath=function(e){var t=e.toLowerCase().substr(0,4);return"http"!=t&&"file"!=t&&(e=window.location.origin+window.location.pathname+e),e},VectorRenderer.loadLayers=function(url){var layers,req=new XMLHttpRequest;return req.onload=function(){eval("layers = "+req.response)},req.open("GET",url,!1),req.send(),layers},VectorRenderer.loadStyles=function(url){var styles,req=new XMLHttpRequest;return req.onload=function(){eval("styles = "+req.response)},req.open("GET",url,!1),req.send(),styles},VectorRenderer.processLayersForTile=function(e,t){for(var r={},o=0;o<e.length;o++)e[o].number=o,null!=e[o]&&(null==e[o].data?r[e[o].name]=t.layers[e[o].name]:"string"==typeof e[o].data?r[e[o].name]=t.layers[e[o].data]:"function"==typeof e[o].data&&(r[e[o].name]=e[o].data(t.layers))),r[e[o].name]=r[e[o].name]||{type:"FeatureCollection",features:[]};return t.layers=r,r},VectorRenderer.style_defaults={color:[1,0,0],width:Style.width.pixels(5),size:Style.width.pixels(5),extrude:!1,height:20,min_height:0,outline:{},render_mode:"polygons"},VectorRenderer.parseStyleForFeature=function(e,t,r){var t=t||{},o={};return"function"==typeof t.filter&&0==t.filter(e,r)?null:(o.color=t.color&&(t.color[e.properties.kind]||t.color.default)||VectorRenderer.style_defaults.color,"function"==typeof o.color&&(o.color=o.color(e,r)),o.width=t.width&&(t.width[e.properties.kind]||t.width.default)||VectorRenderer.style_defaults.width,"function"==typeof o.width&&(o.width=o.width(e,r)),o.size=t.size&&(t.size[e.properties.kind]||t.size.default)||VectorRenderer.style_defaults.size,"function"==typeof o.size&&(o.size=o.size(e,r)),o.extrude=t.extrude&&(t.extrude[e.properties.kind]||t.extrude.default)||VectorRenderer.style_defaults.extrude,"function"==typeof o.extrude&&(o.extrude=o.extrude(e,r)),o.height=e.properties&&e.properties.height||VectorRenderer.style_defaults.height,o.min_height=e.properties&&e.properties.min_height||VectorRenderer.style_defaults.min_height,o.extrude&&("number"==typeof o.extrude?o.height=o.extrude:"object"==typeof o.extrude&&o.extrude.length>=2&&(o.min_height=o.extrude[0],o.height=o.extrude[1])),o.z=t.z&&(t.z[e.properties.kind]||t.z.default)||VectorRenderer.style_defaults.z||0,"function"==typeof o.z&&(o.z=o.z(e,r)),o.outline={},t.outline=t.outline||{},o.outline.color=t.outline.color&&(t.outline.color[e.properties.kind]||t.outline.color.default)||VectorRenderer.style_defaults.outline.color,"function"==typeof o.outline.color&&(o.outline.color=o.outline.color(e,r)),o.outline.width=t.outline.width&&(t.outline.width[e.properties.kind]||t.outline.width.default)||VectorRenderer.style_defaults.outline.width,"function"==typeof o.outline.width&&(o.outline.width=o.outline.width(e,r)),o.outline.dash=t.outline.dash&&(t.outline.dash[e.properties.kind]||t.outline.dash.default)||VectorRenderer.style_defaults.outline.dash,"function"==typeof o.outline.dash&&(o.outline.dash=o.outline.dash(e,r)),o.render_mode=t.render_mode||VectorRenderer.style_defaults.render_mode,o)},void 0!==module&&(module.exports=VectorRenderer)},{"./geo.js":2,"./point.js":10,"./style.js":11}]},{},[9])(9)});