var libtess=libtess||{};libtess.DEBUG=!1,libtess.assert=function(e,t){if(libtess.DEBUG&&!e)throw new Error("Assertion failed"+(t?": "+t:""))},libtess.sweepDebugEvent=function(){},libtess.GLU_TESS_MAX_COORD=1e150,libtess.TRUE_PROJECT=!1,libtess.TESS_MAX_CACHE=100,libtess.GLU_TESS_DEFAULT_TOLERANCE=0,libtess.tessState={T_DORMANT:0,T_IN_POLYGON:1,T_IN_CONTOUR:2},libtess.windingRule={GLU_TESS_WINDING_ODD:100130,GLU_TESS_WINDING_NONZERO:100131,GLU_TESS_WINDING_POSITIVE:100132,GLU_TESS_WINDING_NEGATIVE:100133,GLU_TESS_WINDING_ABS_GEQ_TWO:100134},libtess.primitiveType={GL_LINE_LOOP:2,GL_TRIANGLES:4,GL_TRIANGLE_STRIP:5,GL_TRIANGLE_FAN:6},libtess.errorType={GLU_TESS_MISSING_BEGIN_POLYGON:100151,GLU_TESS_MISSING_END_POLYGON:100153,GLU_TESS_MISSING_BEGIN_CONTOUR:100152,GLU_TESS_MISSING_END_CONTOUR:100154,GLU_TESS_COORD_TOO_LARGE:100155,GLU_TESS_NEED_COMBINE_CALLBACK:100156},libtess.gluEnum={GLU_TESS_MESH:100112,GLU_TESS_TOLERANCE:100142,GLU_TESS_WINDING_RULE:100140,GLU_TESS_BOUNDARY_ONLY:100141,GLU_INVALID_ENUM:100900,GLU_INVALID_VALUE:100901,GLU_TESS_BEGIN:100100,GLU_TESS_VERTEX:100101,GLU_TESS_END:100102,GLU_TESS_ERROR:100103,GLU_TESS_EDGE_FLAG:100104,GLU_TESS_COMBINE:100105,GLU_TESS_BEGIN_DATA:100106,GLU_TESS_VERTEX_DATA:100107,GLU_TESS_END_DATA:100108,GLU_TESS_ERROR_DATA:100109,GLU_TESS_EDGE_FLAG_DATA:100110,GLU_TESS_COMBINE_DATA:100111},libtess.PQHandle,libtess.PQKey,libtess.CachedVertex=function(){this.coords=[0,0,0],this.data=null},libtess.GluTesselator=function(){this.state=libtess.tessState.T_DORMANT,this.lastEdge_=null,this.mesh=null,this.callError_=null,this.normal=[0,0,0],this.sUnit=[0,0,0],this.tUnit=[0,0,0],this.relTolerance=libtess.GLU_TESS_DEFAULT_TOLERANCE,this.windingRule=libtess.windingRule.GLU_TESS_WINDING_ODD,this.fatalError=!1,this.dict=null,this.pq=null,this.event=null,this.callCombine_=null,this.flagBoundary=!1,this.boundaryOnly=!1,this.lonelyTriList=null,this.callBegin_=null,this.callEdgeFlag_=null,this.callVertex_=null,this.callEnd_=null,this.callMesh_=null,this.callBeginData_=null,this.callEdgeFlagData_=null,this.callVertexData_=null,this.callEndData_=null,this.callErrorData_=null,this.callCombineData_=null,this.polygonData_=null,this.emptyCache=!1,this.cacheCount=0,this.cache=new Array(libtess.TESS_MAX_CACHE);for(var e=0;e<libtess.TESS_MAX_CACHE;e++)this.cache[e]=new libtess.CachedVertex},libtess.GluTesselator.prototype.gluDeleteTess=function(){this.requireState_(libtess.tessState.T_DORMANT)},libtess.GluTesselator.prototype.gluTessProperty=function(e,t){switch(e){case libtess.gluEnum.GLU_TESS_TOLERANCE:if(0>t||t>1)break;return void(this.relTolerance=t);case libtess.gluEnum.GLU_TESS_WINDING_RULE:var s=t;switch(s){case libtess.windingRule.GLU_TESS_WINDING_ODD:case libtess.windingRule.GLU_TESS_WINDING_NONZERO:case libtess.windingRule.GLU_TESS_WINDING_POSITIVE:case libtess.windingRule.GLU_TESS_WINDING_NEGATIVE:case libtess.windingRule.GLU_TESS_WINDING_ABS_GEQ_TWO:return void(this.windingRule=s)}break;case libtess.gluEnum.GLU_TESS_BOUNDARY_ONLY:return void(this.boundaryOnly=!!t);default:return void this.callErrorOrErrorData(libtess.gluEnum.GLU_INVALID_ENUM)}this.callErrorOrErrorData(libtess.gluEnum.GLU_INVALID_VALUE)},libtess.GluTesselator.prototype.gluGetTessProperty=function(e){switch(e){case libtess.gluEnum.GLU_TESS_TOLERANCE:return libtess.assert(0<=this.relTolerance&&this.relTolerance<=1),this.relTolerance;case libtess.gluEnum.GLU_TESS_WINDING_RULE:var t=this.windingRule;return libtess.assert(t===libtess.windingRule.GLU_TESS_WINDING_ODD||t===libtess.windingRule.GLU_TESS_WINDING_NONZERO||t===libtess.windingRule.GLU_TESS_WINDING_POSITIVE||t===libtess.windingRule.GLU_TESS_WINDING_NEGATIVE||t===libtess.windingRule.GLU_TESS_WINDING_ABS_GEQ_TWO),t;case libtess.gluEnum.GLU_TESS_BOUNDARY_ONLY:return libtess.assert(this.boundaryOnly===!0||this.boundaryOnly===!1),this.boundaryOnly;default:this.callErrorOrErrorData(libtess.gluEnum.GLU_INVALID_ENUM)}return!1},libtess.GluTesselator.prototype.gluTessNormal=function(e,t,s){this.normal[0]=e,this.normal[1]=t,this.normal[2]=s},libtess.GluTesselator.prototype.gluTessCallback=function(e,t){var s=t?t:null;switch(e){case libtess.gluEnum.GLU_TESS_BEGIN:return void(this.callBegin_=s);case libtess.gluEnum.GLU_TESS_BEGIN_DATA:return void(this.callBeginData_=s);case libtess.gluEnum.GLU_TESS_EDGE_FLAG:return this.callEdgeFlag_=s,void(this.flagBoundary=!!s);case libtess.gluEnum.GLU_TESS_EDGE_FLAG_DATA:return this.callEdgeFlagData_=s,void(this.flagBoundary=!!s);case libtess.gluEnum.GLU_TESS_VERTEX:return void(this.callVertex_=s);case libtess.gluEnum.GLU_TESS_VERTEX_DATA:return void(this.callVertexData_=s);case libtess.gluEnum.GLU_TESS_END:return void(this.callEnd_=s);case libtess.gluEnum.GLU_TESS_END_DATA:return void(this.callEndData_=s);case libtess.gluEnum.GLU_TESS_ERROR:return void(this.callError_=s);case libtess.gluEnum.GLU_TESS_ERROR_DATA:return void(this.callErrorData_=s);case libtess.gluEnum.GLU_TESS_COMBINE:return void(this.callCombine_=s);case libtess.gluEnum.GLU_TESS_COMBINE_DATA:return void(this.callCombineData_=s);case libtess.gluEnum.GLU_TESS_MESH:return void(this.callMesh_=s);default:return void this.callErrorOrErrorData(libtess.gluEnum.GLU_INVALID_ENUM)}},libtess.GluTesselator.prototype.gluTessVertex=function(e,t){var s=!1,i=[0,0,0];this.requireState_(libtess.tessState.T_IN_CONTOUR),this.emptyCache&&(this.emptyCache_(),this.lastEdge_=null);for(var r=0;3>r;++r){var n=e[r];n<-libtess.GLU_TESS_MAX_COORD&&(n=-libtess.GLU_TESS_MAX_COORD,s=!0),n>libtess.GLU_TESS_MAX_COORD&&(n=libtess.GLU_TESS_MAX_COORD,s=!0),i[r]=n}if(s&&this.callErrorOrErrorData(libtess.errorType.GLU_TESS_COORD_TOO_LARGE),null===this.mesh){if(this.cacheCount<libtess.TESS_MAX_CACHE)return void this.cacheVertex_(i,t);this.emptyCache_()}this.addVertex_(i,t)},libtess.GluTesselator.prototype.gluTessBeginPolygon=function(e){this.requireState_(libtess.tessState.T_DORMANT),this.state=libtess.tessState.T_IN_POLYGON,this.cacheCount=0,this.emptyCache=!1,this.mesh=null,this.polygonData_=e},libtess.GluTesselator.prototype.gluTessBeginContour=function(){this.requireState_(libtess.tessState.T_IN_POLYGON),this.state=libtess.tessState.T_IN_CONTOUR,this.lastEdge_=null,this.cacheCount>0&&(this.emptyCache=!0)},libtess.GluTesselator.prototype.gluTessEndContour=function(){this.requireState_(libtess.tessState.T_IN_CONTOUR),this.state=libtess.tessState.T_IN_POLYGON},libtess.GluTesselator.prototype.gluTessEndPolygon=function(){if(this.requireState_(libtess.tessState.T_IN_POLYGON),this.state=libtess.tessState.T_DORMANT,null===this.mesh){if(!this.flagBoundary&&!this.callMesh_&&libtess.render.renderCache(this))return void(this.polygonData_=null);this.emptyCache_()}return libtess.normal.projectPolygon(this),libtess.sweep.computeInterior(this),!this.fatalError&&(this.boundaryOnly?libtess.tessmono.setWindingNumber(this.mesh,1,!0):libtess.tessmono.tessellateInterior(this.mesh),this.mesh.checkMesh(),(this.callBegin_||this.callEnd_||this.callVertex_||this.callEdgeFlag_||this.callBeginData_||this.callEndData_||this.callVertexData_||this.callEdgeFlagData_)&&(this.boundaryOnly?libtess.render.renderBoundary(this,this.mesh):libtess.render.renderMesh(this,this.mesh)),this.callMesh_)?(libtess.tessmono.discardExterior(this.mesh),this.callMesh_(this.mesh),this.mesh=null,void(this.polygonData_=null)):(libtess.mesh.deleteMesh(this.mesh),this.polygonData_=null,void(this.mesh=null))},libtess.GluTesselator.prototype.makeDormant_=function(){this.mesh&&libtess.mesh.deleteMesh(this.mesh),this.state=libtess.tessState.T_DORMANT,this.lastEdge_=null,this.mesh=null},libtess.GluTesselator.prototype.requireState_=function(e){this.state!==e&&this.gotoState_(e)},libtess.GluTesselator.prototype.gotoState_=function(e){for(;this.state!==e;)if(this.state<e)switch(this.state){case libtess.tessState.T_DORMANT:this.callErrorOrErrorData(libtess.errorType.GLU_TESS_MISSING_BEGIN_POLYGON),this.gluTessBeginPolygon(null);break;case libtess.tessState.T_IN_POLYGON:this.callErrorOrErrorData(libtess.errorType.GLU_TESS_MISSING_BEGIN_CONTOUR),this.gluTessBeginContour()}else switch(this.state){case libtess.tessState.T_IN_CONTOUR:this.callErrorOrErrorData(libtess.errorType.GLU_TESS_MISSING_END_CONTOUR),this.gluTessEndContour();break;case libtess.tessState.T_IN_POLYGON:this.callErrorOrErrorData(libtess.errorType.GLU_TESS_MISSING_END_POLYGON),this.makeDormant_()}},libtess.GluTesselator.prototype.addVertex_=function(e,t){var s=this.lastEdge_;null===s?(s=libtess.mesh.makeEdge(this.mesh),libtess.mesh.meshSplice(s,s.sym)):(libtess.mesh.splitEdge(s),s=s.lNext),s.org.data=t,s.org.coords[0]=e[0],s.org.coords[1]=e[1],s.org.coords[2]=e[2],s.winding=1,s.sym.winding=-1,this.lastEdge_=s},libtess.GluTesselator.prototype.cacheVertex_=function(e,t){var s=this.cache[this.cacheCount];s.data=t,s.coords[0]=e[0],s.coords[1]=e[1],s.coords[2]=e[2],++this.cacheCount},libtess.GluTesselator.prototype.emptyCache_=function(){this.mesh=new libtess.GluMesh;for(var e=0;e<this.cacheCount;e++){var t=this.cache[e];this.addVertex_(t.coords,t.data)}this.cacheCount=0,this.emptyCache=!1},libtess.GluTesselator.prototype.callBeginOrBeginData=function(e){this.callBeginData_?this.callBeginData_(e,this.polygonData_):this.callBegin_&&this.callBegin_(e)},libtess.GluTesselator.prototype.callVertexOrVertexData=function(e){this.callVertexData_?this.callVertexData_(e,this.polygonData_):this.callVertex_&&this.callVertex_(e)},libtess.GluTesselator.prototype.callEdgeFlagOrEdgeFlagData=function(e){this.callEdgeFlagData_?this.callEdgeFlagData_(e,this.polygonData_):this.callEdgeFlag_&&this.callEdgeFlag_(e)},libtess.GluTesselator.prototype.callEndOrEndData=function(){this.callEndData_?this.callEndData_(this.polygonData_):this.callEnd_&&this.callEnd_()},libtess.GluTesselator.prototype.callCombineOrCombineData=function(e,t,s){var i;return this.callCombineData_?i=this.callCombineData_(e,t,s,this.polygonData_):this.callCombine_&&(i=this.callCombine_(e,t,s)),void 0===i&&(i=null),i},libtess.GluTesselator.prototype.callErrorOrErrorData=function(e){this.callErrorData_?this.callErrorData_(e,this.polygonData_):this.callError_&&this.callError_(e)},libtess.DictNode=function(){this.key=null,this.next=null,this.prev=null},libtess.DictNode.prototype.getKey=function(){return this.key},libtess.DictNode.prototype.getSucc=function(){return this.next},libtess.DictNode.prototype.getPred=function(){return this.prev},libtess.dictKey,libtess.Dict=function(e,t){this.head=new libtess.DictNode,this.head.next=this.head,this.head.prev=this.head,this.frame=e,this.leq_=t},libtess.Dict.prototype.deleteDict=function(){},libtess.Dict.prototype.insertBefore=function(e,t){do e=e.prev;while(null!==e.key&&!this.leq_(this.frame,e.key,t));var s=new libtess.DictNode;return s.key=t,s.next=e.next,e.next.prev=s,s.prev=e,e.next=s,s},libtess.Dict.prototype.insert=function(e){return this.insertBefore(this.head,e)},libtess.Dict.prototype.deleteNode=function(e){e.next.prev=e.prev,e.prev.next=e.next},libtess.Dict.prototype.search=function(e){var t=this.head;do t=t.next;while(null!==t.key&&!this.leq_(this.frame,e,t.key));return t},libtess.Dict.prototype.getMin=function(){return this.head.next},libtess.Dict.prototype.getMax=function(){return this.head.prev},libtess.PQNode=function(){this.handle=0},libtess.PQNode.realloc=function(e,t){var s=new Array(t),i=0;if(null!==e)for(;i<e.length;i++)s[i]=e[i];for(;t>i;i++)s[i]=new libtess.PQNode;return s},libtess.PQHandleElem=function(){this.key=null,this.node=0},libtess.PQHandleElem.realloc=function(e,t){var s=new Array(t),i=0;if(null!==e)for(;i<e.length;i++)s[i]=e[i];for(;t>i;i++)s[i]=new libtess.PQHandleElem;return s},libtess.PriorityQHeap=function(e){this.nodes_=libtess.PQNode.realloc(null,libtess.PriorityQHeap.INIT_SIZE_+1),this.handles_=libtess.PQHandleElem.realloc(null,libtess.PriorityQHeap.INIT_SIZE_+1),this.size_=0,this.max_=libtess.PriorityQHeap.INIT_SIZE_,this.freeList_=0,this.initialized_=!1,this.leq_=e,this.nodes_[1].handle=1},libtess.PriorityQHeap.INIT_SIZE_=32,libtess.PriorityQHeap.prototype.deleteHeap=function(){this.handles_=null,this.nodes_=null},libtess.PriorityQHeap.prototype.init=function(){for(var e=this.size_;e>=1;--e)this.floatDown_(e);this.initialized_=!0},libtess.PriorityQHeap.prototype.insert=function(e){var t=++this.size_;2*t>this.max_&&(this.max_*=2,this.nodes_=libtess.PQNode.realloc(this.nodes_,this.max_+1),this.handles_=libtess.PQHandleElem.realloc(this.handles_,this.max_+1));var s;return 0===this.freeList_?s=t:(s=this.freeList_,this.freeList_=this.handles_[s].node),this.nodes_[t].handle=s,this.handles_[s].node=t,this.handles_[s].key=e,this.initialized_&&this.floatUp_(t),s},libtess.PriorityQHeap.prototype.isEmpty=function(){return 0===this.size_},libtess.PriorityQHeap.prototype.minimum=function(){return this.handles_[this.nodes_[1].handle].key},libtess.PriorityQHeap.prototype.extractMin=function(){var e=this.nodes_,t=this.handles_,s=e[1].handle,i=t[s].key;return this.size_>0&&(e[1].handle=e[this.size_].handle,t[e[1].handle].node=1,t[s].key=null,t[s].node=this.freeList_,this.freeList_=s,--this.size_>0&&this.floatDown_(1)),i},libtess.PriorityQHeap.prototype.remove=function(e){var t=this.nodes_,s=this.handles_;libtess.assert(e>=1&&e<=this.max_&&null!==s[e].key);var i=s[e].node;t[i].handle=t[this.size_].handle,s[t[i].handle].node=i,i<=--this.size_&&(1>=i||this.leq_(s[t[i>>1].handle].key,s[t[i].handle].key)?this.floatDown_(i):this.floatUp_(i)),s[e].key=null,s[e].node=this.freeList_,this.freeList_=e},libtess.PriorityQHeap.prototype.floatDown_=function(e){for(var t=this.nodes_,s=this.handles_,i=t[e].handle;;){var r=e<<1;r<this.size_&&this.leq_(s[t[r+1].handle].key,s[t[r].handle].key)&&++r,libtess.assert(r<=this.max_);var n=t[r].handle;if(r>this.size_||this.leq_(s[i].key,s[n].key)){t[e].handle=i,s[i].node=e;break}t[e].handle=n,s[n].node=e,e=r}},libtess.PriorityQHeap.prototype.floatUp_=function(e){for(var t=this.nodes_,s=this.handles_,i=t[e].handle;;){var r=e>>1,n=t[r].handle;if(0===r||this.leq_(s[n].key,s[i].key)){t[e].handle=i,s[i].node=e;break}t[e].handle=n,s[n].node=e,e=r}},libtess.PriorityQ=function(e){this.keys_=libtess.PriorityQ.prototype.PQKeyRealloc_(null,libtess.PriorityQ.INIT_SIZE_),this.order_=null,this.size_=0,this.max_=libtess.PriorityQ.INIT_SIZE_,this.initialized_=!1,this.leq_=e,this.heap_=new libtess.PriorityQHeap(this.leq_)},libtess.PriorityQ.INIT_SIZE_=32,libtess.PriorityQ.prototype.deleteQ=function(){this.heap_.deleteHeap(),this.heap_=null,this.order_=null,this.keys_=null},libtess.PriorityQ.prototype.init=function(){this.order_=[];for(var e=0;e<this.size_;e++)this.order_[e]=e;var t=function(e,t){return function(s,i){return t(e[s],e[i])?1:-1}}(this.keys_,this.leq_);if(this.order_.sort(t),this.max_=this.size_,this.initialized_=!0,this.heap_.init(),libtess.DEBUG){var s=0,i=s+this.size_-1;for(e=s;i>e;++e)libtess.assert(this.leq_(this.keys_[this.order_[e+1]],this.keys_[this.order_[e]]))}},libtess.PriorityQ.prototype.insert=function(e){if(this.initialized_)return this.heap_.insert(e);var t=this.size_;return++this.size_>=this.max_&&(this.max_*=2,this.keys_=libtess.PriorityQ.prototype.PQKeyRealloc_(this.keys_,this.max_)),this.keys_[t]=e,-(t+1)},libtess.PriorityQ.prototype.PQKeyRealloc_=function(e,t){var s=new Array(t),i=0;if(null!==e)for(;i<e.length;i++)s[i]=e[i];for(;t>i;i++)s[i]=null;return s},libtess.PriorityQ.prototype.keyLessThan_=function(e,t){var s=this.keys_[e],i=this.keys_[t];return!this.leq_(i,s)},libtess.PriorityQ.prototype.keyGreaterThan_=function(e,t){var s=this.keys_[e],i=this.keys_[t];return!this.leq_(s,i)},libtess.PriorityQ.prototype.extractMin=function(){if(0===this.size_)return this.heap_.extractMin();var e=this.keys_[this.order_[this.size_-1]];if(!this.heap_.isEmpty()){var t=this.heap_.minimum();if(this.leq_(t,e))return this.heap_.extractMin()}do--this.size_;while(this.size_>0&&null===this.keys_[this.order_[this.size_-1]]);return e},libtess.PriorityQ.prototype.minimum=function(){if(0===this.size_)return this.heap_.minimum();var e=this.keys_[this.order_[this.size_-1]];if(!this.heap_.isEmpty()){var t=this.heap_.minimum();if(this.leq_(t,e))return t}return e},libtess.PriorityQ.prototype.isEmpty=function(){return 0===this.size_&&this.heap_.isEmpty()},libtess.PriorityQ.prototype.remove=function(e){if(e>=0)return void this.heap_.remove(e);for(e=-(e+1),libtess.assert(e<this.max_&&null!==this.keys_[e]),this.keys_[e]=null;this.size_>0&&null===this.keys_[this.order_[this.size_-1]];)--this.size_},libtess.mesh=function(){},libtess.mesh.makeEdge=function(e){var t=libtess.mesh.makeEdgePair_(e.eHead);return libtess.mesh.makeVertex_(t,e.vHead),libtess.mesh.makeVertex_(t.sym,e.vHead),libtess.mesh.makeFace_(t,e.fHead),t},libtess.mesh.meshSplice=function(e,t){var s=!1,i=!1;e!==t&&(t.org!==e.org&&(i=!0,libtess.mesh.killVertex_(t.org,e.org)),t.lFace!==e.lFace&&(s=!0,libtess.mesh.killFace_(t.lFace,e.lFace)),libtess.mesh.splice_(t,e),i||(libtess.mesh.makeVertex_(t,e.org),e.org.anEdge=e),s||(libtess.mesh.makeFace_(t,e.lFace),e.lFace.anEdge=e))},libtess.mesh.deleteEdge=function(e){var t=e.sym,s=!1;e.lFace!==e.rFace()&&(s=!0,libtess.mesh.killFace_(e.lFace,e.rFace())),e.oNext===e?libtess.mesh.killVertex_(e.org,null):(e.rFace().anEdge=e.oPrev(),e.org.anEdge=e.oNext,libtess.mesh.splice_(e,e.oPrev()),s||libtess.mesh.makeFace_(e,e.lFace)),t.oNext===t?(libtess.mesh.killVertex_(t.org,null),libtess.mesh.killFace_(t.lFace,null)):(e.lFace.anEdge=t.oPrev(),t.org.anEdge=t.oNext,libtess.mesh.splice_(t,t.oPrev())),libtess.mesh.killEdge_(e)},libtess.mesh.addEdgeVertex=function(e){var t=libtess.mesh.makeEdgePair_(e),s=t.sym;return libtess.mesh.splice_(t,e.lNext),t.org=e.dst(),libtess.mesh.makeVertex_(s,t.org),t.lFace=s.lFace=e.lFace,t},libtess.mesh.splitEdge=function(e){var t=libtess.mesh.addEdgeVertex(e),s=t.sym;return libtess.mesh.splice_(e.sym,e.sym.oPrev()),libtess.mesh.splice_(e.sym,s),e.sym.org=s.org,s.dst().anEdge=s.sym,s.sym.lFace=e.rFace(),s.winding=e.winding,s.sym.winding=e.sym.winding,s},libtess.mesh.connect=function(e,t){var s=!1,i=libtess.mesh.makeEdgePair_(e),r=i.sym;return t.lFace!==e.lFace&&(s=!0,libtess.mesh.killFace_(t.lFace,e.lFace)),libtess.mesh.splice_(i,e.lNext),libtess.mesh.splice_(r,t),i.org=e.dst(),r.org=t.org,i.lFace=r.lFace=e.lFace,e.lFace.anEdge=r,s||libtess.mesh.makeFace_(i,e.lFace),i},libtess.mesh.zapFace=function(e){var t,s=e.anEdge,i=s.lNext;do if(t=i,i=t.lNext,t.lFace=null,null===t.rFace()){t.oNext===t?libtess.mesh.killVertex_(t.org,null):(t.org.anEdge=t.oNext,libtess.mesh.splice_(t,t.oPrev()));var r=t.sym;r.oNext===r?libtess.mesh.killVertex_(r.org,null):(r.org.anEdge=r.oNext,libtess.mesh.splice_(r,r.oPrev())),libtess.mesh.killEdge_(t)}while(t!==s);var n=e.prev,o=e.next;o.prev=n,n.next=o},libtess.mesh.meshUnion=function(e,t){var s=e.fHead,i=e.vHead,r=e.eHead,n=t.fHead,o=t.vHead,l=t.eHead;return n.next!==n&&(s.prev.next=n.next,n.next.prev=s.prev,n.prev.next=s,s.prev=n.prev),o.next!==o&&(i.prev.next=o.next,o.next.prev=i.prev,o.prev.next=i,i.prev=o.prev),l.next!==l&&(r.sym.next.sym.next=l.next,l.next.sym.next=r.sym.next,l.sym.next.sym.next=r,r.sym.next=l.sym.next),e},libtess.mesh.deleteMesh=function(){},libtess.mesh.makeEdgePair_=function(e){var t=new libtess.GluHalfEdge,s=new libtess.GluHalfEdge,i=e.sym.next;return s.next=i,i.sym.next=t,t.next=e,e.sym.next=s,t.sym=s,t.oNext=t,t.lNext=s,s.sym=t,s.oNext=s,s.lNext=t,t},libtess.mesh.splice_=function(e,t){var s=e.oNext,i=t.oNext;s.sym.lNext=t,i.sym.lNext=e,e.oNext=i,t.oNext=s},libtess.mesh.makeVertex_=function(e,t){var s=t.prev,i=new libtess.GluVertex(t,s);s.next=i,t.prev=i,i.anEdge=e;var r=e;do r.org=i,r=r.oNext;while(r!==e)},libtess.mesh.makeFace_=function(e,t){var s=t.prev,i=new libtess.GluFace(t,s);s.next=i,t.prev=i,i.anEdge=e,i.inside=t.inside;var r=e;do r.lFace=i,r=r.lNext;while(r!==e)},libtess.mesh.killEdge_=function(e){var t=e.next,s=e.sym.next;t.sym.next=s,s.sym.next=t},libtess.mesh.killVertex_=function(e,t){var s=e.anEdge,i=s;do i.org=t,i=i.oNext;while(i!==s);var r=e.prev,n=e.next;n.prev=r,r.next=n},libtess.mesh.killFace_=function(e,t){var s=e.anEdge,i=s;do i.lFace=t,i=i.lNext;while(i!==s);var r=e.prev,n=e.next;n.prev=r,r.next=n},libtess.GluFace=function(e,t){this.next=e||this,this.prev=t||this,this.anEdge=null,this.data=null,this.trail=null,this.marked=!1,this.inside=!1},libtess.GluHalfEdge=function(e){this.next=e||this,this.sym=null,this.oNext=null,this.lNext=null,this.org=null,this.lFace=null,this.activeRegion=null,this.winding=0},libtess.GluHalfEdge.prototype.rFace=function(){return this.sym.lFace},libtess.GluHalfEdge.prototype.dst=function(){return this.sym.org},libtess.GluHalfEdge.prototype.oPrev=function(){return this.sym.lNext},libtess.GluHalfEdge.prototype.lPrev=function(){return this.oNext.sym},libtess.GluHalfEdge.prototype.dPrev=function(){return this.lNext.sym},libtess.GluHalfEdge.prototype.rPrev=function(){return this.sym.oNext},libtess.GluHalfEdge.prototype.dNext=function(){return this.rPrev().sym},libtess.GluHalfEdge.prototype.rNext=function(){return this.oPrev().sym},libtess.GluVertex=function(e,t){this.next=e||this,this.prev=t||this,this.anEdge=null,this.data=null,this.coords=[0,0,0],this.s=0,this.t=0,this.pqHandle=null},libtess.GluMesh=function(){this.vHead=new libtess.GluVertex,this.fHead=new libtess.GluFace,this.eHead=new libtess.GluHalfEdge,this.eHeadSym=new libtess.GluHalfEdge,this.eHead.sym=this.eHeadSym,this.eHeadSym.sym=this.eHead},libtess.GluMesh.prototype.checkMesh=function(){if(libtess.DEBUG){var e,t,s=this.fHead,i=this.vHead,r=this.eHead,n=s;for(n=s;(t=n.next)!==s;n=t){libtess.assert(t.prev===n),e=t.anEdge;do libtess.assert(e.sym!==e),libtess.assert(e.sym.sym===e),libtess.assert(e.lNext.oNext.sym===e),libtess.assert(e.oNext.sym.lNext===e),libtess.assert(e.lFace===t),e=e.lNext;while(e!==t.anEdge)}libtess.assert(t.prev===n&&null===t.anEdge&&null===t.data);var o,l=i;for(l=i;(o=l.next)!==i;l=o){libtess.assert(o.prev===l),e=o.anEdge;do libtess.assert(e.sym!==e),libtess.assert(e.sym.sym===e),libtess.assert(e.lNext.oNext.sym===e),libtess.assert(e.oNext.sym.lNext===e),libtess.assert(e.org===o),e=e.oNext;while(e!==o.anEdge)}libtess.assert(o.prev===l&&null===o.anEdge&&null===o.data);var a=r;for(a=r;(e=a.next)!==r;a=e)libtess.assert(e.sym.next===a.sym),libtess.assert(e.sym!==e),libtess.assert(e.sym.sym===e),libtess.assert(null!==e.org),libtess.assert(null!==e.dst()),libtess.assert(e.lNext.oNext.sym===e),libtess.assert(e.oNext.sym.lNext===e);libtess.assert(e.sym.next===a.sym&&e.sym===this.eHeadSym&&e.sym.sym===e&&null===e.org&&null===e.dst()&&null===e.lFace&&null===e.rFace())}},libtess.sweep=function(){},libtess.sweep.SENTINEL_COORD_=4*libtess.GLU_TESS_MAX_COORD,libtess.sweep.TOLERANCE_NONZERO_=!1,libtess.sweep.computeInterior=function(e){e.fatalError=!1,libtess.sweep.removeDegenerateEdges_(e),libtess.sweep.initPriorityQ_(e),libtess.sweep.initEdgeDict_(e);for(var t;null!==(t=e.pq.extractMin());){for(;;){var s=e.pq.minimum();if(null===s||!libtess.geom.vertEq(s,t))break;s=e.pq.extractMin(),libtess.sweep.spliceMergeVertices_(e,t.anEdge,s.anEdge)}libtess.sweep.sweepEvent_(e,t)}var i=e.dict.getMin().getKey();e.event=i.eUp.org,libtess.sweepDebugEvent(e),libtess.sweep.doneEdgeDict_(e),libtess.sweep.donePriorityQ_(e),libtess.sweep.removeDegenerateFaces_(e.mesh),e.mesh.checkMesh()},libtess.sweep.addWinding_=function(e,t){e.winding+=t.winding,e.sym.winding+=t.sym.winding},libtess.sweep.edgeLeq_=function(e,t,s){var i=e.event,r=t.eUp,n=s.eUp;if(r.dst()===i)return n.dst()===i?libtess.geom.vertLeq(r.org,n.org)?libtess.geom.edgeSign(n.dst(),r.org,n.org)<=0:libtess.geom.edgeSign(r.dst(),n.org,r.org)>=0:libtess.geom.edgeSign(n.dst(),i,n.org)<=0;if(n.dst()===i)return libtess.geom.edgeSign(r.dst(),i,r.org)>=0;var o=libtess.geom.edgeEval(r.dst(),i,r.org),l=libtess.geom.edgeEval(n.dst(),i,n.org);return o>=l},libtess.sweep.deleteRegion_=function(e,t){t.fixUpperEdge&&libtess.assert(0===t.eUp.winding),t.eUp.activeRegion=null,e.dict.deleteNode(t.nodeUp),t.nodeUp=null},libtess.sweep.fixUpperEdge_=function(e,t){libtess.assert(e.fixUpperEdge),libtess.mesh.deleteEdge(e.eUp),e.fixUpperEdge=!1,e.eUp=t,t.activeRegion=e},libtess.sweep.topLeftRegion_=function(e){var t=e.eUp.org;do e=e.regionAbove();while(e.eUp.org===t);if(e.fixUpperEdge){var s=libtess.mesh.connect(e.regionBelow().eUp.sym,e.eUp.lNext);libtess.sweep.fixUpperEdge_(e,s),e=e.regionAbove()}return e},libtess.sweep.topRightRegion_=function(e){var t=e.eUp.dst();do e=e.regionAbove();while(e.eUp.dst()===t);return e},libtess.sweep.addRegionBelow_=function(e,t,s){var i=new libtess.ActiveRegion;return i.eUp=s,i.nodeUp=e.dict.insertBefore(t.nodeUp,i),s.activeRegion=i,i},libtess.sweep.isWindingInside_=function(e,t){switch(e.windingRule){case libtess.windingRule.GLU_TESS_WINDING_ODD:return 0!==(1&t);case libtess.windingRule.GLU_TESS_WINDING_NONZERO:return 0!==t;case libtess.windingRule.GLU_TESS_WINDING_POSITIVE:return t>0;case libtess.windingRule.GLU_TESS_WINDING_NEGATIVE:return 0>t;case libtess.windingRule.GLU_TESS_WINDING_ABS_GEQ_TWO:return t>=2||-2>=t}return libtess.assert(!1),!1},libtess.sweep.computeWinding_=function(e,t){t.windingNumber=t.regionAbove().windingNumber+t.eUp.winding,t.inside=libtess.sweep.isWindingInside_(e,t.windingNumber)},libtess.sweep.finishRegion_=function(e,t){var s=t.eUp,i=s.lFace;i.inside=t.inside,i.anEdge=s,libtess.sweep.deleteRegion_(e,t)},libtess.sweep.finishLeftRegions_=function(e,t,s){for(var i=t,r=t.eUp;i!==s;){i.fixUpperEdge=!1;var n=i.regionBelow(),o=n.eUp;if(o.org!==r.org){if(!n.fixUpperEdge){libtess.sweep.finishRegion_(e,i);break}o=libtess.mesh.connect(r.lPrev(),o.sym),libtess.sweep.fixUpperEdge_(n,o)}r.oNext!==o&&(libtess.mesh.meshSplice(o.oPrev(),o),libtess.mesh.meshSplice(r,o)),libtess.sweep.finishRegion_(e,i),r=n.eUp,i=n}return r},libtess.sweep.addRightEdges_=function(e,t,s,i,r,n){var o=!0,l=s;do libtess.assert(libtess.geom.vertLeq(l.org,l.dst())),libtess.sweep.addRegionBelow_(e,t,l.sym),l=l.oNext;while(l!==i);null===r&&(r=t.regionBelow().eUp.rPrev());for(var a,c=t,d=r;a=c.regionBelow(),l=a.eUp.sym,l.org===d.org;)l.oNext!==d&&(libtess.mesh.meshSplice(l.oPrev(),l),libtess.mesh.meshSplice(d.oPrev(),l)),a.windingNumber=c.windingNumber-l.winding,a.inside=libtess.sweep.isWindingInside_(e,a.windingNumber),c.dirty=!0,!o&&libtess.sweep.checkForRightSplice_(e,c)&&(libtess.sweep.addWinding_(l,d),libtess.sweep.deleteRegion_(e,c),libtess.mesh.deleteEdge(d)),o=!1,c=a,d=l;c.dirty=!0,libtess.assert(c.windingNumber-l.winding===a.windingNumber),n&&libtess.sweep.walkDirtyRegions_(e,c)},libtess.sweep.callCombine_=function(e,t,s,i,r){var n=[t.coords[0],t.coords[1],t.coords[2]];t.data=null,t.data=e.callCombineOrCombineData(n,s,i),null===t.data&&(r?e.fatalError||(e.callErrorOrErrorData(libtess.errorType.GLU_TESS_NEED_COMBINE_CALLBACK),e.fatalError=!0):t.data=s[0])},libtess.sweep.spliceMergeVertices_=function(e,t,s){var i=[null,null,null,null],r=[.5,.5,0,0];i[0]=t.org.data,i[1]=s.org.data,libtess.sweep.callCombine_(e,t.org,i,r,!1),libtess.mesh.meshSplice(t,s)},libtess.sweep.vertexWeights_=function(e,t,s,i,r){var n=libtess.geom.vertL1dist(t,e),o=libtess.geom.vertL1dist(s,e),l=r,a=r+1;i[l]=.5*o/(n+o),i[a]=.5*n/(n+o),e.coords[0]+=i[l]*t.coords[0]+i[a]*s.coords[0],e.coords[1]+=i[l]*t.coords[1]+i[a]*s.coords[1],e.coords[2]+=i[l]*t.coords[2]+i[a]*s.coords[2]},libtess.sweep.getIntersectData_=function(e,t,s,i,r,n){var o=[0,0,0,0],l=[s.data,i.data,r.data,n.data];t.coords[0]=t.coords[1]=t.coords[2]=0,libtess.sweep.vertexWeights_(t,s,i,o,0),libtess.sweep.vertexWeights_(t,r,n,o,2),libtess.sweep.callCombine_(e,t,l,o,!0)},libtess.sweep.checkForRightSplice_=function(e,t){var s=t.regionBelow(),i=t.eUp,r=s.eUp;if(libtess.geom.vertLeq(i.org,r.org)){if(libtess.geom.edgeSign(r.dst(),i.org,r.org)>0)return!1;libtess.geom.vertEq(i.org,r.org)?i.org!==r.org&&(e.pq.remove(i.org.pqHandle),libtess.sweep.spliceMergeVertices_(e,r.oPrev(),i)):(libtess.mesh.splitEdge(r.sym),libtess.mesh.meshSplice(i,r.oPrev()),t.dirty=s.dirty=!0)}else{if(libtess.geom.edgeSign(i.dst(),r.org,i.org)<0)return!1;t.regionAbove().dirty=t.dirty=!0,libtess.mesh.splitEdge(i.sym),libtess.mesh.meshSplice(r.oPrev(),i)}return!0},libtess.sweep.checkForLeftSplice_=function(e,t){var s,i=t.regionBelow(),r=t.eUp,n=i.eUp;if(libtess.assert(!libtess.geom.vertEq(r.dst(),n.dst())),libtess.geom.vertLeq(r.dst(),n.dst())){if(libtess.geom.edgeSign(r.dst(),n.dst(),r.org)<0)return!1;t.regionAbove().dirty=t.dirty=!0,s=libtess.mesh.splitEdge(r),libtess.mesh.meshSplice(n.sym,s),s.lFace.inside=t.inside}else{if(libtess.geom.edgeSign(n.dst(),r.dst(),n.org)>0)return!1;t.dirty=i.dirty=!0,s=libtess.mesh.splitEdge(n),libtess.mesh.meshSplice(r.lNext,n.sym),s.rFace().inside=t.inside}return!0},libtess.sweep.checkForIntersect_=function(e,t){var s=t.regionBelow(),i=t.eUp,r=s.eUp,n=i.org,o=r.org,l=i.dst(),a=r.dst(),c=new libtess.GluVertex;if(libtess.assert(!libtess.geom.vertEq(a,l)),libtess.assert(libtess.geom.edgeSign(l,e.event,n)<=0),libtess.assert(libtess.geom.edgeSign(a,e.event,o)>=0),libtess.assert(n!==e.event&&o!==e.event),libtess.assert(!t.fixUpperEdge&&!s.fixUpperEdge),n===o)return!1;var d=Math.min(n.t,l.t),u=Math.max(o.t,a.t);if(d>u)return!1;if(libtess.geom.vertLeq(n,o)){if(libtess.geom.edgeSign(a,n,o)>0)return!1}else if(libtess.geom.edgeSign(l,o,n)<0)return!1;libtess.sweepDebugEvent(e),libtess.geom.edgeIntersect(l,n,a,o,c),libtess.assert(Math.min(n.t,l.t)<=c.t),libtess.assert(c.t<=Math.max(o.t,a.t)),libtess.assert(Math.min(a.s,l.s)<=c.s),libtess.assert(c.s<=Math.max(o.s,n.s)),libtess.geom.vertLeq(c,e.event)&&(c.s=e.event.s,c.t=e.event.t);var h=libtess.geom.vertLeq(n,o)?n:o;if(libtess.geom.vertLeq(h,c)&&(c.s=h.s,c.t=h.t),libtess.geom.vertEq(c,n)||libtess.geom.vertEq(c,o))return libtess.sweep.checkForRightSplice_(e,t),!1;if(!libtess.geom.vertEq(l,e.event)&&libtess.geom.edgeSign(l,e.event,c)>=0||!libtess.geom.vertEq(a,e.event)&&libtess.geom.edgeSign(a,e.event,c)<=0){if(a===e.event)return libtess.mesh.splitEdge(i.sym),libtess.mesh.meshSplice(r.sym,i),t=libtess.sweep.topLeftRegion_(t),i=t.regionBelow().eUp,libtess.sweep.finishLeftRegions_(e,t.regionBelow(),s),libtess.sweep.addRightEdges_(e,t,i.oPrev(),i,i,!0),!0;if(l===e.event){libtess.mesh.splitEdge(r.sym),libtess.mesh.meshSplice(i.lNext,r.oPrev()),s=t,t=libtess.sweep.topRightRegion_(t);var p=t.regionBelow().eUp.rPrev();return s.eUp=r.oPrev(),r=libtess.sweep.finishLeftRegions_(e,s,null),libtess.sweep.addRightEdges_(e,t,r.oNext,i.rPrev(),p,!0),!0}return libtess.geom.edgeSign(l,e.event,c)>=0&&(t.regionAbove().dirty=t.dirty=!0,libtess.mesh.splitEdge(i.sym),i.org.s=e.event.s,i.org.t=e.event.t),libtess.geom.edgeSign(a,e.event,c)<=0&&(t.dirty=s.dirty=!0,libtess.mesh.splitEdge(r.sym),r.org.s=e.event.s,r.org.t=e.event.t),!1}return libtess.mesh.splitEdge(i.sym),libtess.mesh.splitEdge(r.sym),libtess.mesh.meshSplice(r.oPrev(),i),i.org.s=c.s,i.org.t=c.t,i.org.pqHandle=e.pq.insert(i.org),libtess.sweep.getIntersectData_(e,i.org,n,l,o,a),t.regionAbove().dirty=t.dirty=s.dirty=!0,!1},libtess.sweep.walkDirtyRegions_=function(e,t){for(var s=t.regionBelow();;){for(;s.dirty;)t=s,s=s.regionBelow();if(!t.dirty&&(s=t,t=t.regionAbove(),null===t||!t.dirty))return;t.dirty=!1;var i=t.eUp,r=s.eUp;if(i.dst()!==r.dst()&&libtess.sweep.checkForLeftSplice_(e,t)&&(s.fixUpperEdge?(libtess.sweep.deleteRegion_(e,s),libtess.mesh.deleteEdge(r),s=t.regionBelow(),r=s.eUp):t.fixUpperEdge&&(libtess.sweep.deleteRegion_(e,t),libtess.mesh.deleteEdge(i),t=s.regionAbove(),i=t.eUp)),i.org!==r.org)if(i.dst()===r.dst()||t.fixUpperEdge||s.fixUpperEdge||i.dst()!==e.event&&r.dst()!==e.event)libtess.sweep.checkForRightSplice_(e,t);else if(libtess.sweep.checkForIntersect_(e,t))return;i.org===r.org&&i.dst()===r.dst()&&(libtess.sweep.addWinding_(r,i),libtess.sweep.deleteRegion_(e,t),libtess.mesh.deleteEdge(i),t=s.regionAbove())}},libtess.sweep.connectRightVertex_=function(e,t,s){var i=s.oNext,r=t.regionBelow(),n=t.eUp,o=r.eUp,l=!1;if(n.dst()!==o.dst()&&libtess.sweep.checkForIntersect_(e,t),libtess.geom.vertEq(n.org,e.event)&&(libtess.mesh.meshSplice(i.oPrev(),n),t=libtess.sweep.topLeftRegion_(t),i=t.regionBelow().eUp,libtess.sweep.finishLeftRegions_(e,t.regionBelow(),r),l=!0),libtess.geom.vertEq(o.org,e.event)&&(libtess.mesh.meshSplice(s,o.oPrev()),s=libtess.sweep.finishLeftRegions_(e,r,null),l=!0),l)return void libtess.sweep.addRightEdges_(e,t,s.oNext,i,i,!0);
var a;a=libtess.geom.vertLeq(o.org,n.org)?o.oPrev():n,a=libtess.mesh.connect(s.lPrev(),a),libtess.sweep.addRightEdges_(e,t,a,a.oNext,a.oNext,!1),a.sym.activeRegion.fixUpperEdge=!0,libtess.sweep.walkDirtyRegions_(e,t)},libtess.sweep.connectLeftDegenerate_=function(e,t,s){var i=t.eUp;if(libtess.geom.vertEq(i.org,s))return libtess.assert(libtess.sweep.TOLERANCE_NONZERO_),void libtess.sweep.spliceMergeVertices_(e,i,s.anEdge);if(!libtess.geom.vertEq(i.dst(),s))return libtess.mesh.splitEdge(i.sym),t.fixUpperEdge&&(libtess.mesh.deleteEdge(i.oNext),t.fixUpperEdge=!1),libtess.mesh.meshSplice(s.anEdge,i),void libtess.sweep.sweepEvent_(e,s);libtess.assert(libtess.sweep.TOLERANCE_NONZERO_),t=libtess.sweep.topRightRegion_(t);var r=t.regionBelow(),n=r.eUp.sym,o=n.oNext,l=o;r.fixUpperEdge&&(libtess.assert(o!==n),libtess.sweep.deleteRegion_(e,r),libtess.mesh.deleteEdge(n),n=o.oPrev()),libtess.mesh.meshSplice(s.anEdge,n),libtess.geom.edgeGoesLeft(o)||(o=null),libtess.sweep.addRightEdges_(e,t,n.oNext,l,o,!0)},libtess.sweep.connectLeftVertex_=function(e,t){var s=new libtess.ActiveRegion;s.eUp=t.anEdge.sym;var i=e.dict.search(s).getKey(),r=i.regionBelow(),n=i.eUp,o=r.eUp;if(0===libtess.geom.edgeSign(n.dst(),t,n.org))return void libtess.sweep.connectLeftDegenerate_(e,i,t);var l,a=libtess.geom.vertLeq(o.dst(),n.dst())?i:r;if(i.inside||a.fixUpperEdge){if(a===i)l=libtess.mesh.connect(t.anEdge.sym,n.lNext);else{var c=libtess.mesh.connect(o.dNext(),t.anEdge);l=c.sym}a.fixUpperEdge?libtess.sweep.fixUpperEdge_(a,l):libtess.sweep.computeWinding_(e,libtess.sweep.addRegionBelow_(e,i,l)),libtess.sweep.sweepEvent_(e,t)}else libtess.sweep.addRightEdges_(e,i,t.anEdge,t.anEdge,null,!0)},libtess.sweep.sweepEvent_=function(e,t){e.event=t,libtess.sweepDebugEvent(e);for(var s=t.anEdge;null===s.activeRegion;)if(s=s.oNext,s===t.anEdge)return void libtess.sweep.connectLeftVertex_(e,t);var i=libtess.sweep.topLeftRegion_(s.activeRegion),r=i.regionBelow(),n=r.eUp,o=libtess.sweep.finishLeftRegions_(e,r,null);o.oNext===n?libtess.sweep.connectRightVertex_(e,i,o):libtess.sweep.addRightEdges_(e,i,o.oNext,n,n,!0)},libtess.sweep.addSentinel_=function(e,t){var s=new libtess.ActiveRegion,i=libtess.mesh.makeEdge(e.mesh);i.org.s=libtess.sweep.SENTINEL_COORD_,i.org.t=t,i.dst().s=-libtess.sweep.SENTINEL_COORD_,i.dst().t=t,e.event=i.dst(),s.eUp=i,s.windingNumber=0,s.inside=!1,s.fixUpperEdge=!1,s.sentinel=!0,s.dirty=!1,s.nodeUp=e.dict.insert(s)},libtess.sweep.initEdgeDict_=function(e){e.dict=new libtess.Dict(e,libtess.sweep.edgeLeq_),libtess.sweep.addSentinel_(e,-libtess.sweep.SENTINEL_COORD_),libtess.sweep.addSentinel_(e,libtess.sweep.SENTINEL_COORD_)},libtess.sweep.doneEdgeDict_=function(e){for(var t,s=0;null!==(t=e.dict.getMin().getKey());)t.sentinel||(libtess.assert(t.fixUpperEdge),libtess.assert(1===++s)),libtess.assert(0===t.windingNumber),libtess.sweep.deleteRegion_(e,t);e.dict.deleteDict(),e.dict=null},libtess.sweep.removeDegenerateEdges_=function(e){for(var t,s=e.mesh.eHead,i=s.next;i!==s;i=t){t=i.next;var r=i.lNext;libtess.geom.vertEq(i.org,i.dst())&&i.lNext.lNext!==i&&(libtess.sweep.spliceMergeVertices_(e,r,i),libtess.mesh.deleteEdge(i),i=r,r=i.lNext),r.lNext===i&&(r!==i&&((r===t||r===t.sym)&&(t=t.next),libtess.mesh.deleteEdge(r)),(i===t||i===t.sym)&&(t=t.next),libtess.mesh.deleteEdge(i))}},libtess.sweep.initPriorityQ_=function(e){var t=new libtess.PriorityQ(libtess.geom.vertLeq);e.pq=t;var s,i=e.mesh.vHead;for(s=i.next;s!==i;s=s.next)s.pqHandle=t.insert(s);t.init()},libtess.sweep.donePriorityQ_=function(e){e.pq.deleteQ(),e.pq=null},libtess.sweep.removeDegenerateFaces_=function(e){for(var t,s=e.fHead.next;s!==e.fHead;s=t){t=s.next;var i=s.anEdge;libtess.assert(i.lNext!==i),i.lNext.lNext===i&&(libtess.sweep.addWinding_(i.oNext,i),libtess.mesh.deleteEdge(i))}},libtess.ActiveRegion=function(){this.eUp=null,this.nodeUp=null,this.windingNumber=0,this.inside=!1,this.sentinel=!1,this.dirty=!1,this.fixUpperEdge=!1},libtess.ActiveRegion.prototype.regionBelow=function(){return this.nodeUp.getPred().getKey()},libtess.ActiveRegion.prototype.regionAbove=function(){return this.nodeUp.getSucc().getKey()},libtess.render=function(){},libtess.render.SIGN_INCONSISTENT_=2,libtess.render.renderMesh=function(e,t){e.lonelyTriList=null;var s;for(s=t.fHead.next;s!==t.fHead;s=s.next)s.marked=!1;for(s=t.fHead.next;s!==t.fHead;s=s.next)s.inside&&!s.marked&&(libtess.render.renderMaximumFaceGroup_(e,s),libtess.assert(s.marked));null!==e.lonelyTriList&&(libtess.render.renderLonelyTriangles_(e,e.lonelyTriList),e.lonelyTriList=null)},libtess.render.renderBoundary=function(e,t){for(var s=t.fHead.next;s!==t.fHead;s=s.next)if(s.inside){e.callBeginOrBeginData(libtess.primitiveType.GL_LINE_LOOP);var i=s.anEdge;do e.callVertexOrVertexData(i.org.data),i=i.lNext;while(i!==s.anEdge);e.callEndOrEndData()}},libtess.render.renderCache=function(e){if(e.cacheCount<3)return!0;var t=[0,0,0];t[0]=e.normal[0],t[1]=e.normal[1],t[2]=e.normal[2],0===t[0]&&0===t[1]&&0===t[2]&&libtess.render.computeNormal_(e,t,!1);var s=libtess.render.computeNormal_(e,t,!0);if(s===libtess.render.SIGN_INCONSISTENT_)return!1;if(0===s)return!0;switch(e.windingRule){case libtess.windingRule.GLU_TESS_WINDING_ODD:case libtess.windingRule.GLU_TESS_WINDING_NONZERO:break;case libtess.windingRule.GLU_TESS_WINDING_POSITIVE:if(0>s)return!0;break;case libtess.windingRule.GLU_TESS_WINDING_NEGATIVE:if(s>0)return!0;break;case libtess.windingRule.GLU_TESS_WINDING_ABS_GEQ_TWO:return!0}e.callBeginOrBeginData(e.boundaryOnly?libtess.primitiveType.GL_LINE_LOOP:e.cacheCount>3?libtess.primitiveType.GL_TRIANGLE_FAN:libtess.primitiveType.GL_TRIANGLES);var i,r=0,n=r+e.cacheCount;if(e.callVertexOrVertexData(e.cache[r].data),s>0)for(i=r+1;n>i;++i)e.callVertexOrVertexData(e.cache[i].data);else for(i=n-1;i>r;--i)e.callVertexOrVertexData(e.cache[i].data);return e.callEndOrEndData(),!0},libtess.render.marked_=function(e){return!e.inside||e.marked},libtess.render.freeTrail_=function(e){for(;null!==e;)e.marked=!1,e=e.trail},libtess.render.maximumFan_=function(e){var t,s=new libtess.FaceCount(0,null,libtess.render.renderFan_),i=null;for(t=e;!libtess.render.marked_(t.lFace);t=t.oNext)t.lFace.trail=i,i=t.lFace,t.lFace.marked=!0,++s.size;for(t=e;!libtess.render.marked_(t.rFace());t=t.oPrev())t.rFace().trail=i,i=t.rFace(),t.rFace().marked=!0,++s.size;return s.eStart=t,libtess.render.freeTrail_(i),s},libtess.render.maximumStrip_=function(e){var t,s,i,r=new libtess.FaceCount(0,null,libtess.render.renderStrip_),n=0,o=0,l=null;for(t=e;!libtess.render.marked_(t.lFace)&&(t.lFace.trail=l,l=t.lFace,t.lFace.marked=!0,++o,t=t.dPrev(),!libtess.render.marked_(t.lFace));++o,t=t.oNext)t.lFace.trail=l,l=t.lFace,t.lFace.marked=!0;for(s=t,t=e;!libtess.render.marked_(t.rFace())&&(t.rFace().trail=l,l=t.rFace(),t.rFace().marked=!0,++n,t=t.oPrev(),!libtess.render.marked_(t.rFace()));++n,t=t.dNext())t.rFace().trail=l,l=t.rFace(),t.rFace().marked=!0;return i=t,r.size=o+n,0===(1&o)?r.eStart=s.sym:0===(1&n)?r.eStart=i:(--r.size,r.eStart=i.oNext),libtess.render.freeTrail_(l),r},libtess.render.renderFan_=function(e,t,s){for(e.callBeginOrBeginData(libtess.primitiveType.GL_TRIANGLE_FAN),e.callVertexOrVertexData(t.org.data),e.callVertexOrVertexData(t.dst().data);!libtess.render.marked_(t.lFace);)t.lFace.marked=!0,--s,t=t.oNext,e.callVertexOrVertexData(t.dst().data);libtess.assert(0===s),e.callEndOrEndData()},libtess.render.renderStrip_=function(e,t,s){for(e.callBeginOrBeginData(libtess.primitiveType.GL_TRIANGLE_STRIP),e.callVertexOrVertexData(t.org.data),e.callVertexOrVertexData(t.dst().data);!libtess.render.marked_(t.lFace)&&(t.lFace.marked=!0,--s,t=t.dPrev(),e.callVertexOrVertexData(t.org.data),!libtess.render.marked_(t.lFace));)t.lFace.marked=!0,--s,t=t.oNext,e.callVertexOrVertexData(t.dst().data);libtess.assert(0===s),e.callEndOrEndData()},libtess.render.renderTriangle_=function(e,t,s){libtess.assert(1===s),t.lFace.trail=e.lonelyTriList,e.lonelyTriList=t.lFace,t.lFace.marked=!0},libtess.render.renderMaximumFaceGroup_=function(e,t){var s,i=t.anEdge,r=new libtess.FaceCount(1,i,libtess.render.renderTriangle_);e.flagBoundary||(s=libtess.render.maximumFan_(i),s.size>r.size&&(r=s),s=libtess.render.maximumFan_(i.lNext),s.size>r.size&&(r=s),s=libtess.render.maximumFan_(i.lPrev()),s.size>r.size&&(r=s),s=libtess.render.maximumStrip_(i),s.size>r.size&&(r=s),s=libtess.render.maximumStrip_(i.lNext),s.size>r.size&&(r=s),s=libtess.render.maximumStrip_(i.lPrev()),s.size>r.size&&(r=s)),r.render(e,r.eStart,r.size)},libtess.render.renderLonelyTriangles_=function(e,t){var s=-1,i=t;for(e.callBeginOrBeginData(libtess.primitiveType.GL_TRIANGLES);null!==i;i=i.trail){var r=i.anEdge;do{if(e.flagBoundary){var n=r.rFace().inside?0:1;s!==n&&(s=n,e.callEdgeFlagOrEdgeFlagData(!!s))}e.callVertexOrVertexData(r.org.data),r=r.lNext}while(r!==i.anEdge)}e.callEndOrEndData()},libtess.render.computeNormal_=function(e,t,s){s||(t[0]=t[1]=t[2]=0);for(var i=0,r=i+e.cacheCount,n=i+1,o=e.cache[i],l=e.cache[n],a=l.coords[0]-o.coords[0],c=l.coords[1]-o.coords[1],d=l.coords[2]-o.coords[2],u=0;++n<r;){l=e.cache[n];var h=a,p=c,_=d;a=l.coords[0]-o.coords[0],c=l.coords[1]-o.coords[1],d=l.coords[2]-o.coords[2];var g=[0,0,0];g[0]=p*d-_*c,g[1]=_*a-h*d,g[2]=h*c-p*a;var f=g[0]*t[0]+g[1]*t[1]+g[2]*t[2];if(s){if(0!==f)if(f>0){if(0>u)return libtess.render.SIGN_INCONSISTENT_;u=1}else{if(u>0)return libtess.render.SIGN_INCONSISTENT_;u=-1}}else f>=0?(t[0]+=g[0],t[1]+=g[1],t[2]+=g[2]):(t[0]-=g[0],t[1]-=g[1],t[2]-=g[2])}return u},libtess.FaceCount=function(e,t,s){this.size=e,this.eStart=t,this.render=s},libtess.geom=function(){},libtess.geom.vertEq=function(e,t){return e.s===t.s&&e.t===t.t},libtess.geom.vertLeq=function(e,t){return e.s<t.s||e.s===t.s&&e.t<=t.t},libtess.geom.edgeEval=function(e,t,s){var i,r;return libtess.assert(libtess.geom.vertLeq(e,t)&&libtess.geom.vertLeq(t,s)),i=t.s-e.s,r=s.s-t.s,i+r>0?r>i?t.t-e.t+(e.t-s.t)*(i/(i+r)):t.t-s.t+(s.t-e.t)*(r/(i+r)):0},libtess.geom.edgeSign=function(e,t,s){var i,r;return libtess.assert(libtess.geom.vertLeq(e,t)&&libtess.geom.vertLeq(t,s)),i=t.s-e.s,r=s.s-t.s,i+r>0?(t.t-s.t)*i+(t.t-e.t)*r:0},libtess.geom.transLeq=function(e,t){return e.t<t.t||e.t===t.t&&e.s<=t.s},libtess.geom.transEval=function(e,t,s){var i,r;return libtess.assert(libtess.geom.transLeq(e,t)&&libtess.geom.transLeq(t,s)),i=t.t-e.t,r=s.t-t.t,i+r>0?r>i?t.s-e.s+(e.s-s.s)*(i/(i+r)):t.s-s.s+(s.s-e.s)*(r/(i+r)):0},libtess.geom.transSign=function(e,t,s){var i,r;return libtess.assert(libtess.geom.transLeq(e,t)&&libtess.geom.transLeq(t,s)),i=t.t-e.t,r=s.t-t.t,i+r>0?(t.s-s.s)*i+(t.s-e.s)*r:0},libtess.geom.edgeGoesLeft=function(e){return libtess.geom.vertLeq(e.dst(),e.org)},libtess.geom.edgeGoesRight=function(e){return libtess.geom.vertLeq(e.org,e.dst())},libtess.geom.vertL1dist=function(e,t){return Math.abs(e.s-t.s)+Math.abs(e.t-t.t)},libtess.geom.vertCCW=function(e,t,s){return e.s*(t.t-s.t)+t.s*(s.t-e.t)+s.s*(e.t-t.t)>=0},libtess.geom.interpolate_=function(e,t,s,i){return e=0>e?0:e,s=0>s?0:s,s>=e?0===s?(t+i)/2:t+(i-t)*(e/(e+s)):i+(t-i)*(s/(e+s))},libtess.geom.edgeIntersect=function(e,t,s,i,r){var n,o,l;libtess.geom.vertLeq(e,t)||(l=e,e=t,t=l),libtess.geom.vertLeq(s,i)||(l=s,s=i,i=l),libtess.geom.vertLeq(e,s)||(l=e,e=s,s=l,l=t,t=i,i=l),libtess.geom.vertLeq(s,t)?libtess.geom.vertLeq(t,i)?(n=libtess.geom.edgeEval(e,s,t),o=libtess.geom.edgeEval(s,t,i),0>n+o&&(n=-n,o=-o),r.s=libtess.geom.interpolate_(n,s.s,o,t.s)):(n=libtess.geom.edgeSign(e,s,t),o=-libtess.geom.edgeSign(e,i,t),0>n+o&&(n=-n,o=-o),r.s=libtess.geom.interpolate_(n,s.s,o,i.s)):r.s=(s.s+t.s)/2,libtess.geom.transLeq(e,t)||(l=e,e=t,t=l),libtess.geom.transLeq(s,i)||(l=s,s=i,i=l),libtess.geom.transLeq(e,s)||(l=e,e=s,s=l,l=t,t=i,i=l),libtess.geom.transLeq(s,t)?libtess.geom.transLeq(t,i)?(n=libtess.geom.transEval(e,s,t),o=libtess.geom.transEval(s,t,i),0>n+o&&(n=-n,o=-o),r.t=libtess.geom.interpolate_(n,s.t,o,t.t)):(n=libtess.geom.transSign(e,s,t),o=-libtess.geom.transSign(e,i,t),0>n+o&&(n=-n,o=-o),r.t=libtess.geom.interpolate_(n,s.t,o,i.t)):r.t=(s.t+t.t)/2},libtess.normal=function(){},libtess.normal.S_UNIT_X_=1,libtess.normal.S_UNIT_Y_=0,libtess.normal.projectPolygon=function(e){var t=!1,s=[0,0,0];s[0]=e.normal[0],s[1]=e.normal[1],s[2]=e.normal[2],0===s[0]&&0===s[1]&&0===s[2]&&(libtess.normal.computeNormal_(e,s),t=!0);var i=e.sUnit,r=e.tUnit,n=libtess.normal.longAxis_(s);if(libtess.TRUE_PROJECT){libtess.normal.normalize_(s),i[n]=0,i[(n+1)%3]=libtess.normal.S_UNIT_X_,i[(n+2)%3]=libtess.normal.S_UNIT_Y_;var o=libtess.normal.dot_(i,s);i[0]-=o*s[0],i[1]-=o*s[1],i[2]-=o*s[2],libtess.normal.normalize_(i),r[0]=s[1]*i[2]-s[2]*i[1],r[1]=s[2]*i[0]-s[0]*i[2],r[2]=s[0]*i[1]-s[1]*i[0],libtess.normal.normalize_(r)}else i[n]=0,i[(n+1)%3]=libtess.normal.S_UNIT_X_,i[(n+2)%3]=libtess.normal.S_UNIT_Y_,r[n]=0,r[(n+1)%3]=s[n]>0?-libtess.normal.S_UNIT_Y_:libtess.normal.S_UNIT_Y_,r[(n+2)%3]=s[n]>0?libtess.normal.S_UNIT_X_:-libtess.normal.S_UNIT_X_;for(var l=e.mesh.vHead,a=l.next;a!==l;a=a.next)a.s=libtess.normal.dot_(a.coords,i),a.t=libtess.normal.dot_(a.coords,r);t&&libtess.normal.checkOrientation_(e)},libtess.normal.dot_=function(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]},libtess.normal.normalize_=function(e){var t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2];libtess.assert(t>0),t=Math.sqrt(t),e[0]/=t,e[1]/=t,e[2]/=t},libtess.normal.longAxis_=function(e){var t=0;return Math.abs(e[1])>Math.abs(e[0])&&(t=1),Math.abs(e[2])>Math.abs(e[t])&&(t=2),t},libtess.normal.computeNormal_=function(e,t){var s=[0,0,0],i=[0,0,0],r=[0,0,0],n=[0,0,0],o=[0,0,0];s[0]=s[1]=s[2]=-2*libtess.GLU_TESS_MAX_COORD,i[0]=i[1]=i[2]=2*libtess.GLU_TESS_MAX_COORD;var l,a,c=new Array(3),d=new Array(3),u=e.mesh.vHead;for(a=u.next;a!==u;a=a.next)for(l=0;3>l;++l){var h=a.coords[l];h<i[l]&&(i[l]=h,d[l]=a),h>s[l]&&(s[l]=h,c[l]=a)}if(l=0,s[1]-i[1]>s[0]-i[0]&&(l=1),s[2]-i[2]>s[l]-i[l]&&(l=2),i[l]>=s[l])return t[0]=0,t[1]=0,void(t[2]=1);var p=0,_=d[l],g=c[l];for(r[0]=_.coords[0]-g.coords[0],r[1]=_.coords[1]-g.coords[1],r[2]=_.coords[2]-g.coords[2],a=u.next;a!==u;a=a.next){n[0]=a.coords[0]-g.coords[0],n[1]=a.coords[1]-g.coords[1],n[2]=a.coords[2]-g.coords[2],o[0]=r[1]*n[2]-r[2]*n[1],o[1]=r[2]*n[0]-r[0]*n[2],o[2]=r[0]*n[1]-r[1]*n[0];var f=o[0]*o[0]+o[1]*o[1]+o[2]*o[2];f>p&&(p=f,t[0]=o[0],t[1]=o[1],t[2]=o[2])}0>=p&&(t[0]=t[1]=t[2]=0,t[libtess.normal.longAxis_(r)]=1)},libtess.normal.checkOrientation_=function(e){for(var t=0,s=e.mesh.fHead,i=s.next;i!==s;i=i.next){var r=i.anEdge;if(!(r.winding<=0))do t+=(r.org.s-r.dst().s)*(r.org.t+r.dst().t),r=r.lNext;while(r!==i.anEdge)}if(0>t){for(var n=e.mesh.vHead,o=n.next;o!==n;o=o.next)o.t=-o.t;e.tUnit[0]=-e.tUnit[0],e.tUnit[1]=-e.tUnit[1],e.tUnit[2]=-e.tUnit[2]}},libtess.tessmono=function(){},libtess.tessmono.tessellateMonoRegion_=function(e){var t=e.anEdge;for(libtess.assert(t.lNext!==t&&t.lNext.lNext!==t);libtess.geom.vertLeq(t.dst(),t.org);t=t.lPrev());for(;libtess.geom.vertLeq(t.org,t.dst());t=t.lNext);for(var s,i=t.lPrev();t.lNext!==i;)if(libtess.geom.vertLeq(t.dst(),i.org)){for(;i.lNext!==t&&(libtess.geom.edgeGoesLeft(i.lNext)||libtess.geom.edgeSign(i.org,i.dst(),i.lNext.dst())<=0);)s=libtess.mesh.connect(i.lNext,i),i=s.sym;i=i.lPrev()}else{for(;i.lNext!==t&&(libtess.geom.edgeGoesRight(t.lPrev())||libtess.geom.edgeSign(t.dst(),t.org,t.lPrev().org)>=0);)s=libtess.mesh.connect(t,t.lPrev()),t=s.sym;t=t.lNext}for(libtess.assert(i.lNext!==t);i.lNext.lNext!==t;)s=libtess.mesh.connect(i.lNext,i),i=s.sym},libtess.tessmono.tessellateInterior=function(e){for(var t,s=e.fHead.next;s!==e.fHead;s=t)t=s.next,s.inside&&libtess.tessmono.tessellateMonoRegion_(s)},libtess.tessmono.discardExterior=function(e){for(var t,s=e.fHead.next;s!==e.fHead;s=t)t=s.next,s.inside||libtess.mesh.zapFace(s)},libtess.tessmono.setWindingNumber=function(e,t,s){for(var i,r=e.eHead.next;r!==e.eHead;r=i)i=r.next,r.rFace().inside!==r.lFace.inside?r.winding=r.lFace.inside?t:-t:s?libtess.mesh.deleteEdge(r):r.winding=0},function e(t,s,i){function r(o,l){if(!s[o]){if(!t[o]){var a="function"==typeof require&&require;if(!l&&a)return a(o,!0);if(n)return n(o,!0);throw new Error("Cannot find module '"+o+"'")}var c=s[o]={exports:{}};t[o][0].call(c.exports,function(e){var s=t[o][1][e];return r(s?s:e)},c,c.exports,e,t,s,i)}return s[o].exports}for(var n="function"==typeof require&&require,o=0;o<i.length;o++)r(i[o]);return r}({1:[function(e,t){"use strict";function s(e,t){e instanceof r||(e=new r(e)),this.layers={},this._buffer=e;var s,i;for("undefined"==typeof t&&(t=e.length);e.pos<t;)if(s=e.readVarint(),i=s>>3,3==i){var n=this.readLayer();n.length&&(this.layers[n.name]=n)}else e.skip(s)}var i=e("./vectortilelayer"),r=e("pbf");t.exports=s,s.prototype.readLayer=function(){var e=this._buffer,t=e.readVarint(),s=e.pos+t,r=new i(e,s);return e.pos=s,r},s.prototype.toGeoJSON=function(){for(var e={},t=Object.keys(this.layers),s=0;s<t.length;s++)e[t[s]]=this.layers[t[s]].toGeoJSON();return e}},{"./vectortilelayer":3,pbf:4}],2:[function(e,t){"use strict";function s(e,t,s,i,r){this._extent=s,this._type=0,this._keys=i,this._buffer=e,this._geometry=-1,"undefined"==typeof t&&(t=e.length);for(var n,o;e.pos<t;)if(n=e.readVarint(),o=n>>3,1==o)this._id=e.readVarint();else if(2==o)for(var l=e.pos+e.readVarint();e.pos<l;){var a=i[e.readVarint()],c=r[e.readVarint()];this[a]=c}else 3==o?this._type=e.readVarint():4==o?(this._geometry=e.pos,e.skip(n)):e.skip(n)}t.exports=s,s.Unknown=0,s.Point=1,s.LineString=2,s.Polygon=3,s.mapping=[],s.mapping[s.Point]="point",s.mapping[s.LineString]="line",s.mapping[s.Polygon]="fill",s.prototype.loadGeometry=function(){var e=this._buffer;e.pos=this._geometry;for(var t=e.readVarint(),s=e.pos+t,i=1,r=0,n=0,o=0,l=[],a=null;e.pos<s;){if(!r){var c=e.readVarint();i=7&c,r=c>>3}if(r--,1==i||2==i)n+=e.readSVarint(),o+=e.readSVarint(),1==i&&(a&&l.push(a),a=[]),a.push({x:n,y:o});else{if(7!=i)throw new Error("unknown command "+i);a.push(a[0])}}return a&&l.push(a),l},s.prototype.bbox=function(){var e=this._buffer;e.pos=this._geometry;for(var t=e.readVarint(),s=e.pos+t,i=1,r=0,n=0,o=0,l=1/0,a=-1/0,c=1/0,d=-1/0;e.pos<s;){if(!r){var u=e.readVarint();i=7&u,r=u>>3}if(r--,1==i||2==i)n+=e.readSVarint(),o+=e.readSVarint(),l>n&&(l=n),n>a&&(a=n),c>o&&(c=o),o>d&&(d=o);else if(7!=i)throw new Error("unknown command "+i)}return[l,c,a,d]},s.prototype.toGeoJSON=function(){for(var e={type:"Feature",geometry:{},properties:{}},t=0;t<this._keys.length;t++){var i=this._keys[t];e.properties[i]=this[i]}e.geometry.coordinates=this.loadGeometry();for(var r=0;r<e.geometry.coordinates.length;r++)for(var n=e.geometry.coordinates[r],o=0;o<n.length;o++)n[o]=[n[o].x,n[o].y];return this._type==s.Point?e.geometry.type="Point":this._type==s.LineString?1==e.geometry.coordinates.length?(e.geometry.coordinates=e.geometry.coordinates[0],e.geometry.type="LineString"):e.geometry.type="MultiLineString":this._type==s.Polygon&&(e.geometry.type="Polygon"),e}},{}],3:[function(e,t){"use strict";function s(e,t){this.version=1,this.name=null,this.extent=4096,this.length=0,this._buffer=e,this._keys=[],this._values=[],this._features=[];var s,i;for("undefined"==typeof t&&(t=e.length);e.pos<t;)s=e.readVarint(),i=s>>3,15==i?this.version=e.readVarint():1==i?this.name=e.readString():5==i?this.extent=e.readVarint():2==i?(this.length++,this._features.push(e.pos),e.skip(s)):3==i?this._keys.push(e.readString()):4==i?this._values.push(this.readFeatureValue()):(console.warn("skipping layer tag "+i),e.skip(s))}var i=e("./vectortilefeature.js");t.exports=s,s.prototype.readFeatureValue=function(){for(var e,t,s=this._buffer,i=null,r=s.readVarint(),n=s.pos+r;s.pos<n;)if(e=s.readVarint(),t=e>>3,1==t)i=s.readString();else{if(2==t)throw new Error("read float");if(3==t)i=s.readDouble();else if(4==t)i=s.readVarint();else{if(5==t)throw new Error("read uint");6==t?i=s.readSVarint():7==t?i=Boolean(s.readVarint()):s.skip(e)}}return i},s.prototype.feature=function(e){if(0>e||e>=this._features.length)throw new Error("feature index out of bounds");this._buffer.pos=this._features[e];var t=this._buffer.readVarint()+this._buffer.pos;return new i(this._buffer,t,this.extent,this._keys,this._values)},s.prototype.toGeoJSON=function(){for(var e={type:"FeatureCollection",features:[]},t=0;t<this.length;t++)e.features.push(this.feature(t).toGeoJSON());return e}},{"./vectortilefeature.js":2}],4:[function(e,t){"use strict";function s(e){this.buf=e,this.length=e.length,this.pos=0}var i=e("ieee754");t.exports=s,s.prototype.destroy=function(){this.buf=null},s.prototype.readUInt32=function(){var e=this.readUInt32LE(this.pos);return this.pos+=4,e},s.prototype.readUInt64=function(){var e=this.readUInt64LE(this.pos);return this.pos+=8,e},s.prototype.readDouble=function(){var e=i.read(this.buf,this.pos,!1,52,8);return this.pos+=8,e},s.prototype.readVarint=function(){var e=this.pos;return this.buf[e]<=127?(this.pos++,this.buf[e]):this.buf[e+1]<=127?(this.pos+=2,127&this.buf[e]|this.buf[e+1]<<7):this.buf[e+2]<=127?(this.pos+=3,127&this.buf[e]|(127&this.buf[e+1])<<7|this.buf[e+2]<<14):this.buf[e+3]<=127?(this.pos+=4,127&this.buf[e]|(127&this.buf[e+1])<<7|(127&this.buf[e+2])<<14|this.buf[e+3]<<21):this.buf[e+4]<=127?(this.pos+=5,(127&this.buf[e]|(127&this.buf[e+1])<<7|(127&this.buf[e+2])<<14|this.buf[e+3]<<21)+268435456*this.buf[e+4]):(this.skip(0),0)},s.prototype.readSVarint=function(){var e=this.readVarint();if(e>2147483647)throw new Error("TODO: Handle numbers >= 2^30");return e>>1^-(1&e)},s.prototype.readString=function(){for(var e=this.readVarint(),t=String.fromCharCode,s=this.buf,i=this.pos,r=this.pos+e,n="";r>i;)if(s[i]<=127)n+=t(s[i++]);else{if(s[i]<=191)throw new Error("Invalid UTF-8 codepoint: "+s[i]);if(s[i]<=223)n+=t((31&s[i++])<<6|63&s[i++]);else if(s[i]<=239)n+=t((31&s[i++])<<12|(63&s[i++])<<6|63&s[i++]);else if(s[i]<=247)i+=4;else if(s[i]<=251)i+=5;else{if(!(s[i]<=253))throw new Error("Invalid UTF-8 codepoint: "+s[i]);i+=6}}return this.pos+=e,n},s.prototype.readBuffer=function(){var e=this.readVarint(),t=this.buf.subarray(this.pos,this.pos+e);return this.pos+=e,t},s.prototype.readPacked=function(e){for(var t=this.readVarint(),s=this.pos+t,i=[];this.pos<s;)i.push(this["read"+e]());return i},s.prototype.skip=function(e){var t=7&e;switch(t){case 0:for(;this.buf[this.pos++]>127;);break;case 1:this.pos+=8;break;case 2:var s=this.readVarint();this.pos+=s;break;case 5:this.pos+=4;break;default:throw new Error("Unimplemented type: "+t)}}},{ieee754:5}],5:[function(e,t,s){s.read=function(e,t,s,i,r){var n,o,l=8*r-i-1,a=(1<<l)-1,c=a>>1,d=-7,u=s?r-1:0,h=s?-1:1,p=e[t+u];for(u+=h,n=p&(1<<-d)-1,p>>=-d,d+=l;d>0;n=256*n+e[t+u],u+=h,d-=8);for(o=n&(1<<-d)-1,n>>=-d,d+=i;d>0;o=256*o+e[t+u],u+=h,d-=8);if(0===n)n=1-c;else{if(n===a)return o?0/0:1/0*(p?-1:1);o+=Math.pow(2,i),n-=c}return(p?-1:1)*o*Math.pow(2,n-i)},s.write=function(e,t,s,i,r,n){var o,l,a,c=8*n-r-1,d=(1<<c)-1,u=d>>1,h=23===r?Math.pow(2,-24)-Math.pow(2,-77):0,p=i?0:n-1,_=i?1:-1,g=0>t||0===t&&0>1/t?1:0;for(t=Math.abs(t),isNaN(t)||1/0===t?(l=isNaN(t)?1:0,o=d):(o=Math.floor(Math.log(t)/Math.LN2),t*(a=Math.pow(2,-o))<1&&(o--,a*=2),t+=o+u>=1?h/a:h*Math.pow(2,1-u),t*a>=2&&(o++,a/=2),o+u>=d?(l=0,o=d):o+u>=1?(l=(t*a-1)*Math.pow(2,r),o+=u):(l=t*Math.pow(2,u-1)*Math.pow(2,r),o=0));r>=8;e[s+p]=255&l,p+=_,l/=256,r-=8);for(o=o<<r|l,c+=r;c>0;e[s+p]=255&o,p+=_,o/=256,c-=8);e[s+p-_]|=128*g}},{}],6:[function(e,t){function s(e,t,s,i){n.call(this,"CanvasRenderer",e,t,s,i),this.selection_info=document.createElement("div"),this.selection_info.setAttribute("class","label"),this.selection_info.style.display="none",this.cutout_context=document.createElement("canvas").getContext("2d")}var i=e("../point.js"),r=e("../geo.js"),n=e("../vector_renderer.js");n.CanvasRenderer=s,s.prototype=Object.create(n.prototype),s.prototype._tileWorkerCompleted=function(e){var t=document.createElement("canvas"),s=t.getContext("2d");t.style.width=r.tile_size+"px",t.style.width=r.tile_size+"px",t.width=Math.round(r.tile_size*this.device_pixel_ratio),t.height=Math.round(r.tile_size*this.device_pixel_ratio),t.style.background=this.colorToString(this.styles.default),this.renderTile(e,s);var i=document.querySelector("div[data-tile-key='"+e.key+"']");i.appendChild(t)},s.prototype.scaleGeometryToPixels=function(e){var t=this;return r.transformGeometry(e,function(e){return i(e[0]*r.tile_size*t.device_pixel_ratio/n.tile_scale,e[1]*r.tile_size*t.device_pixel_ratio/n.tile_scale*-1)})},s.prototype.renderLine=function(e,t,s){var i=e,r=t.color,n=t.width,o=t.dash,l=s;l.beginPath(),l.strokeStyle=this.colorToString(r),l.lineCap="round",l.lineWidth=n,l.setLineDash&&l.setLineDash(o?o.map(function(e){return e*n}):[]);for(var a=0;a<i.length-1;a++){var c=[i[a].x,i[a].y,i[a+1].x,i[a+1].y];l.moveTo(c[0],c[1]),l.lineTo(c[2],c[3])}l.closePath(),l.stroke()},s.prototype.renderPolygon=function(e,t,s){var i=e,r=t.color,n=(t.width,t.outline&&t.outline.color),o=t.outline&&t.outline.width,l=t.outline&&t.outline.dash,a=s;a.beginPath(),a.fillStyle=this.colorToString(r),a.moveTo(i[0].x,i[0].y);for(var c=1;c<i.length;c++)a.lineTo(i[c].x,i[c].y);a.closePath(),a.fill(),n&&o&&(a.strokeStyle=this.colorToString(n),a.lineCap="round",a.lineWidth=o,a.setLineDash&&a.setLineDash(l?l.map(function(e){return e*o}):[]),a.stroke())},s.prototype.renderPoint=function(e,t,s){var i=t.color,r=t.size,n=t.outline&&t.outline.color,o=t.outline&&t.outline.width,l=t.outline&&t.outline.dash,a=s;a.fillStyle=this.colorToString(i),a.beginPath(),a.arc(e.x,e.y,r,0,2*Math.PI),a.closePath(),a.fill(),n&&o&&(a.strokeStyle=this.colorToString(n),a.lineWidth=o,a.setLineDash&&a.setLineDash(l?l.map(function(e){return e*o}):[]),a.stroke())},s.prototype.renderFeature=function(e,t,s){var i,r,n,o=e.geometry;if("LineString"==o.type)this.renderLine(o.pixels,t,s);else if("MultiLineString"==o.type)for(i=0;i<o.pixels.length;i++)this.renderLine(o.pixels[i],t,s);else if("Polygon"==o.type||"MultiPolygon"==o.type)for(n="Polygon"==o.type?[o.pixels]:o.pixels,i=0;i<n.length;i++)if(n[i].length>1){for((this.cutout_context.canvas.width!=s.canvas.width||this.cutout_context.canvas.height!=s.canvas.height)&&(this.cutout_context.canvas.width=s.canvas.width,this.cutout_context.canvas.height=s.canvas.height),this.cutout_context.clearRect(0,0,this.cutout_context.canvas.width,this.cutout_context.canvas.height),this.cutout_context.globalCompositeOperation="source-over",this.renderPolygon(n[i][0],t,this.cutout_context),this.cutout_context.globalCompositeOperation="destination-out",r=1;r<n[i].length;r++)this.renderPolygon(n[i][r],t,this.cutout_context);if(s.drawImage(this.cutout_context.canvas,0,0),t.outline&&t.outline.color)for(r=1;r<n[i].length;r++)this.renderLine(n[i][r],t.outline,s)}else this.renderPolygon(n[i][0],t,s);else if("Point"==o.type)this.renderPoint(o.pixels,t,s);else if("MultiPoint"==o.type)for(i=0;i<o.pixels.length;i++)this.renderPoint(o.pixels[i],t,s)},s.prototype.renderTile=function(e,t){var s,i=this,o={colors:{}},l=document.createElement("canvas");l.style.width=r.tile_size+"px",l.style.width=r.tile_size+"px",l.width=Math.round(r.tile_size*this.device_pixel_ratio),l.height=Math.round(r.tile_size*this.device_pixel_ratio);var a,c=l.getContext("2d"),d=0;for(var u in i.layers){var h=i.layers[u];e.layers[h.name].features.forEach(function(r){r.geometry.pixels=this.scaleGeometryToPixels(r.geometry,i.tile_min,i.tile_max),s=n.parseStyleForFeature(r,this.styles[h.name],e),0!=h.visible&&this.renderFeature(r,s,t),1==h.selection&&null!=r.properties.name&&""!=r.properties.name?(a=this.generateColor(o.colors),a.properties=r.properties,d++,this.renderFeature(r,{color:a.color,width:s.width,size:s.size},c)):this.renderFeature(r,{color:[0,0,0],width:s.width,size:s.size},c)},this)}var p=this.selection_info;d>0?(this.tiles[e.key].selection=o,o.pixels=new Uint32Array(c.getImageData(0,0,l.width,l.height).data.buffer),t.canvas.onmousemove=function(e){var s={x:e.offsetX,y:e.offsetY},n=s.y*i.device_pixel_ratio*r.tile_size*i.device_pixel_ratio+s.x*i.device_pixel_ratio,l=o.pixels[n],a=o.colors[l];null!=a?(t.canvas.style.cursor="crosshair",p.style.left=s.x+5+"px",p.style.top=s.y+5+"px",p.innerHTML='<span class="labelInner">'+a.properties.name+"</span>",p.style.display="block",t.canvas.parentNode.appendChild(p)):(t.canvas.style.cursor=null,p.style.display="none",p.parentNode==t.canvas.parentNode&&t.canvas.parentNode.removeChild(p))}):t.canvas.onmousemove=function(){t.canvas.style.cursor=null,p.style.display="none",p.parentNode==t.canvas.parentNode&&t.canvas.parentNode.removeChild(p)}},s.prototype.colorToString=function(e){return"rgb("+e.map(function(e){return~~(256*e)}).join(",")+")"},s.prototype.generateColor=function(e){var t,s,i,r,n,o,l;for(e=e||{};;)if(t=Math.random(),s=Math.random(),i=Math.random(),r=~~(256*t),n=~~(256*s),o=~~(256*i),l=r+(n<<8)+(o<<16)+(255<<24)>>>0,void 0===e[l]){e[l]={color:[t,s,i]};break}return e[l]},void 0!==t&&(t.exports=s)},{"../geo.js":7,"../point.js":13,"../vector_renderer.js":17}],7:[function(e,t){var s=e("./point.js"),i={};i.tile_size=256,i.half_circumference_meters=20037508.342789244,i.map_origin_meters=s(-i.half_circumference_meters,i.half_circumference_meters),i.min_zoom_meters_per_pixel=2*i.half_circumference_meters/i.tile_size,i.meters_per_pixel=[],i.max_zoom=20;for(var r=0;r<=i.max_zoom;r++)i.meters_per_pixel[r]=i.min_zoom_meters_per_pixel/Math.pow(2,r);i.metersForTile=function(e){return s(e.x*i.tile_size*i.meters_per_pixel[e.z]+i.map_origin_meters.x,e.y*i.tile_size*i.meters_per_pixel[e.z]*-1+i.map_origin_meters.y)},i.metersToLatLng=function(e){var t=s.copy(e);return t.x/=i.half_circumference_meters,t.y/=i.half_circumference_meters,t.y=(2*Math.atan(Math.exp(t.y*Math.PI))-Math.PI/2)/Math.PI,t.x*=180,t.y*=180,t},i.latLngToMeters=function(e){var t=s.copy(e);return t.y=Math.log(Math.tan((t.y+90)*Math.PI/360))/(Math.PI/180),t.y=t.y*i.half_circumference_meters/180,t.x=t.x*i.half_circumference_meters/180,t},i.transformGeometry=function(e,t){return"Point"==e.type?t(e.coordinates):"LineString"==e.type||"MultiPoint"==e.type?e.coordinates.map(t):"Polygon"==e.type||"MultiLineString"==e.type?e.coordinates.map(function(e){return e.map(t)}):"MultiPolygon"==e.type?e.coordinates.map(function(e){return e.map(function(e){return e.map(t)})}):{}},i.boxIntersect=function(e,t){return!(t.sw.x>e.ne.x||t.ne.x<e.sw.x||t.sw.y>e.ne.y||t.ne.y<e.sw.y)},i.splitFeatureLines=function(e,t){var s,t=t||.001,i=t*t,r=e.geometry;if("MultiLineString"==r.type)s=r.coordinates;else{if("LineString"!=r.type)return e;s=[r.coordinates]}for(var n=[],o=0;o<s.length;o++){for(var l,a=s[o],c=[],d=null,u=0;u<a.length;u++){var h=a[u];if(l=!0,null!=d){var p=(h[0]-d[0])*(h[0]-d[0])+(h[1]-d[1])*(h[1]-d[1]);p>i&&(l=!1)}0==l&&(n.push(c),c=[]),c.push(h),d=h}n.push(c),c=[]}return 1==n.length?(r.type="LineString",r.coordinates=n[0]):(r.type="MultiLineString",r.coordinates=n),e},void 0!==t&&(t.exports=i)},{"./point.js":13}],8:[function(e,t){var s={};s.getContext=function(e){var e=e,t=!1;if(null==e&&(e=document.createElement("canvas"),e.style.position="absolute",e.style.top=0,e.style.left=0,e.style.zIndex=-1,document.body.appendChild(e),t=!0),gl=e.getContext("experimental-webgl",{}),!gl)throw alert("Couldn't create WebGL context. Your browser probably doesn't support WebGL or it's turned off?"),"Couldn't create WebGL context";return s.resizeCanvas(gl,window.innerWidth,window.innerHeight),1==t&&window.addEventListener("resize",function(){s.resizeCanvas(gl,window.innerWidth,window.innerHeight)}),s.VertexArrayObject.init(gl),gl},s.resizeCanvas=function(e,t,s){var i=window.devicePixelRatio||1;e.canvas.style.width=t+"px",e.canvas.style.height=s+"px",e.canvas.width=Math.round(e.canvas.style.width*i),e.canvas.height=Math.round(e.canvas.style.width*i),e.viewport(0,0,e.canvas.width,e.canvas.height)},s.createProgramFromElements=function(e,t,i){var r=document.getElementById(t).textContent,n=document.getElementById(i).textContent,o=e.createProgram();return s.updateProgram(e,o,r,n)},s.createProgramFromURLs=function(e,t,i){var r=e.createProgram();return s.updateProgramFromURLs(e,r,t,i)},s.updateProgramFromURLs=function(e,t,i,r){var n,o,l=new XMLHttpRequest;return l.onload=function(){n=l.response},l.open("GET",i+"?"+ +new Date,!1),l.send(),l.onload=function(){o=l.response
},l.open("GET",r+"?"+ +new Date,!1),l.send(),s.updateProgram(e,t,n,o)},s.updateProgram=function(e,t,i,r){try{var n=s.createShader(e,i,e.VERTEX_SHADER),o=s.createShader(e,"#ifdef GL_ES\nprecision highp float;\n#endif\n\n"+r,e.FRAGMENT_SHADER)}catch(l){return alert(l),t}if(e.useProgram(null),null!=t)for(var a=e.getAttachedShaders(t),c=0;c<a.length;c++)e.detachShader(t,a[c]);else t=e.createProgram();if(null==n||null==o)return t;if(e.attachShader(t,n),e.attachShader(t,o),e.deleteShader(n),e.deleteShader(o),e.linkProgram(t),!e.getProgramParameter(t,e.LINK_STATUS)){var d="WebGL program error:\nVALIDATE_STATUS: "+e.getProgramParameter(t,e.VALIDATE_STATUS)+"\nERROR: "+e.getError()+"\n\n--- Vertex Shader ---\n"+i+"\n\n--- Fragment Shader ---\n"+r;throw d}return t},s.createShader=function(e,t,s){var i=e.createShader(s);if(e.shaderSource(i,t),e.compileShader(i),!e.getShaderParameter(i,e.COMPILE_STATUS)){var r="WebGL shader error:\n"+(s==e.VERTEX_SHADER?"VERTEX":"FRAGMENT")+" SHADER:\n"+e.getShaderInfoLog(i);throw r}return i},s.Program=function(e,t,s,i){i=i||{},this.gl=e,this.program=null,this.defines=i.defines||{},this.uniforms={},this.attribs={},this.vertex_shader_source=t,this.fragment_shader_source=s,this.compile()},s.Program.createProgramFromURLs=function(e,t,i,r){var n=Object.create(s.Program.prototype);return n.vertex_shader_url=t,n.fragment_shader_url=i,n.updateVertexShaderSource=function(){var e,t=new XMLHttpRequest;return t.onload=function(){e=t.response},t.open("GET",this.vertex_shader_url+"?"+ +new Date,!1),t.send(),e},n.updateFragmentShaderSource=function(){var e,t=new XMLHttpRequest;return t.onload=function(){e=t.response},t.open("GET",this.fragment_shader_url+"?"+ +new Date,!1),t.send(),e},s.Program.call(n,e,null,null,r),n},s.Program.defines={},s.Program.prototype.compile=function(){"function"==typeof this.updateVertexShaderSource&&(this.vertex_shader_source=this.updateVertexShaderSource()),"function"==typeof this.updateFragmentShaderSource&&(this.fragment_shader_source=this.updateFragmentShaderSource());var e={};for(var t in s.Program.defines)e[t]=s.Program.defines[t];for(var t in this.defines)e[t]=this.defines[t];var i="";for(var t in e)0!=e[t]&&(i+="boolean"==typeof e[t]&&1==e[t]?"#define "+t+"\n":"#define "+t+" "+e[t]+"\n");this.processed_vertex_shader_source=i+this.vertex_shader_source,this.processed_fragment_shader_source=i+this.fragment_shader_source,this.program=s.updateProgram(this.gl,this.program,this.processed_vertex_shader_source,this.processed_fragment_shader_source),this.gl.useProgram(this.program),this.refreshUniforms(),this.refreshAttributes()},s.Program.prototype.uniform=function(e,t){var s=this.uniforms[t]=this.uniforms[t]||{};s.name=t,s.location=s.location||this.gl.getUniformLocation(this.program,t),s.method="uniform"+e,s.values=Array.prototype.slice.call(arguments,2),this.updateUniform(t)},s.Program.prototype.updateUniform=function(e){var t=this.uniforms[e];null!=t&&null!=t.location&&this.gl[t.method].apply(this.gl,[t.location].concat(t.values))},s.Program.prototype.refreshUniforms=function(){for(var e in this.uniforms)this.uniforms[e].location=this.gl.getUniformLocation(this.program,e),this.updateUniform(e)},s.Program.prototype.refreshAttributes=function(){this.attribs={}},s.Program.prototype.attribute=function(e){var t=this.attribs[e]=this.attribs[e]||{};return null!=t.location?t:(t.name=e,t.location=this.gl.getAttribLocation(this.program,e),t)};try{s.tesselator=function(){function e(e,t){t.push([e[0],e[1]])}function t(e){return e}function s(){}var i=new libtess.GluTesselator;return i.gluTessCallback(libtess.gluEnum.GLU_TESS_VERTEX_DATA,e),i.gluTessCallback(libtess.gluEnum.GLU_TESS_COMBINE,t),i.gluTessCallback(libtess.gluEnum.GLU_TESS_EDGE_FLAG,s),i.gluTessNormal(0,0,1),i}(),s.triangulatePolygon=function(e){var t=[];s.tesselator.gluTessBeginPolygon(t);for(var i=0;i<e.length;i++){s.tesselator.gluTessBeginContour();for(var r=e[i],n=0;n<r.length;n++){var o=[r[n][0],r[n][1],0];s.tesselator.gluTessVertex(o,o)}s.tesselator.gluTessEndContour()}return s.tesselator.gluTessEndPolygon(),t}}catch(i){}s.addVertices=function(e,t,s){if(null!=e&&e.length>0)if("object"==typeof e[0])for(var i=0;i<e.length;i++)t.push.apply(t,e[i]),s&&t.push.apply(t,s);else t.push.apply(t,e),s&&t.push.apply(t,s);return t},s.VertexArrayObject={},s.VertexArrayObject.disabled=!1,s.VertexArrayObject.bound_vao=null,s.VertexArrayObject.init=function(e){null==s.VertexArrayObject.ext&&(1!=s.VertexArrayObject.disabled&&(s.VertexArrayObject.ext=e.getExtension("OES_vertex_array_object")),console.log(null!=s.VertexArrayObject.ext?"Vertex Array Object extension available":1!=s.VertexArrayObject.disabled?"Vertex Array Object extension NOT available":"Vertex Array Object extension force disabled"))},s.VertexArrayObject.create=function(e,t){var i={};i.setup=e,i.teardown=t;var r=s.VertexArrayObject.ext;return null!=r?(i._vao=r.createVertexArrayOES(),r.bindVertexArrayOES(i._vao),i.setup(),r.bindVertexArrayOES(null),"function"==typeof i.teardown&&i.teardown()):i.setup(),i},s.VertexArrayObject.bind=function(e){var t=s.VertexArrayObject.ext;null!=e?null!=t&&null!=e._vao?(t.bindVertexArrayOES(e._vao),s.VertexArrayObject.bound_vao=e):e.setup():(null!=t?t.bindVertexArrayOES(null):null!=s.VertexArrayObject.bound_vao&&"function"==typeof s.VertexArrayObject.bound_vao.teardown&&s.VertexArrayObject.bound_vao.teardown(),s.VertexArrayObject.bound_vao=null)},void 0!==t&&(t.exports=s)},{}],9:[function(e,t){var s=e("../vector.js"),i=e("../point.js"),r=e("./gl.js"),n={};n.debug=!1,n.buildPolygons=function(e,t,s,i){i=i||{};var n=[t,0,0,1];i.vertex_constants&&n.push.apply(n,i.vertex_constants);for(var o=e.length,l=0;o>l;l++){var a=r.triangulatePolygon(e[l]);r.addVertices(a,s,n)}return s},n.buildExtrudedPolygons=function(e,t,i,o,l,a){a=a||{};var c=t+(o||0),d=t+i;n.buildPolygons(e,d,l,{vertex_constants:a.vertex_constants});var u=[null,null,null];a.vertex_constants&&u.push.apply(u,a.vertex_constants);for(var h=e.length,p=0;h>p;p++)for(var _=e[p],g=0;g<_.length;g++)for(var f=_[g],m=0;m<f.length-1;m++){var y=[];y.push([f[m+1][0],f[m+1][1],d],[f[m+1][0],f[m+1][1],c],[f[m][0],f[m][1],c],[f[m][0],f[m][1],c],[f[m][0],f[m][1],d],[f[m+1][0],f[m+1][1],d]);var v=s.cross([0,0,1],s.normalize([f[m+1][0]-f[m][0],f[m+1][1]-f[m][1],0]));u[0]=v[0],u[1]=v[1],u[2]=v[2],r.addVertices(y,l,u)}return l},n.buildPolylines=function(e,t,i,o,l){function a(e,t){var r=s.normalize([-1*(t[1]-e[1]),t[0]-e[0]]),n=[e[0]+r[0]*i/2,e[1]+r[1]*i/2],o=[e[0]-r[0]*i/2,e[1]-r[1]*i/2],l=[t[0]+r[0]*i/2,t[1]+r[1]*i/2],a=[t[0]-r[0]*i/2,t[1]-r[1]*i/2];m.push(a,l,o,o,l,n)}function c(r,o,a){var c=s.normalize([-1*(o[1]-r[1]),o[0]-r[0]]),d=[[r[0]+c[0]*i/2,r[1]+c[1]*i/2],[o[0]+c[0]*i/2,o[1]+c[1]*i/2]],u=[[r[0]-c[0]*i/2,r[1]-c[1]*i/2],[o[0]-c[0]*i/2,o[1]-c[1]*i/2]],h=s.normalize([-1*(a[1]-o[1]),a[0]-o[0]]),p=[[o[0]+h[0]*i/2,o[1]+h[1]*i/2],[a[0]+h[0]*i/2,a[1]+h[1]*i/2]],_=[[o[0]-h[0]*i/2,o[1]-h[1]*i/2],[a[0]-h[0]*i/2,a[1]-h[1]*i/2]],g=s.lineIntersection(d[0],d[1],p[0],p[1]),f=null;if(null!=g){var y=g,v=s.lengthSq([y[0]-o[0],y[1]-o[1]]),b=3;v>i*i*b*b&&(f="distance",y=s.normalize([y[0]-o[0],y[1]-o[1]]),y=[o[0]+y[0]*b,o[1]+y[1]*b]);var x=[o[0]-y[0]+o[0],o[1]-y[1]+o[1]];m.push(x,y,u[0],u[0],y,d[0],_[1],p[1],x,x,p[1],y)}else f="parallel",u[1]=_[0],d[1]=p[0],m.push(u[1],d[1],u[0],u[0],d[1],d[0],_[1],p[1],_[0],_[0],p[1],p[0]);if(n.debug&&l.vertex_lines&&l.vertex_lines.push(u[0][0],u[0][1],t+.001,0,0,1,0,1,0,u[1][0],u[1][1],t+.001,0,0,1,0,1,0,_[0][0],_[0][1],t+.001,0,0,1,0,1,0,_[1][0],_[1][1],t+.001,0,0,1,0,1,0,d[0][0],d[0][1],t+.001,0,0,1,0,1,0,d[1][0],d[1][1],t+.001,0,0,1,0,1,0,p[0][0],p[0][1],t+.001,0,0,1,0,1,0,p[1][0],p[1][1],t+.001,0,0,1,0,1,0,u[0][0],u[0][1],t+.001,0,0,1,0,1,0,d[0][0],d[0][1],t+.001,0,0,1,0,1,0,u[1][0],u[1][1],t+.001,0,0,1,0,1,0,d[1][0],d[1][1],t+.001,0,0,1,0,1,0,_[0][0],_[0][1],t+.001,0,0,1,0,1,0,p[0][0],p[0][1],t+.001,0,0,1,0,1,0,_[1][0],_[1][1],t+.001,0,0,1,0,1,0,p[1][0],p[1][1],t+.001,0,0,1,0,1,0),n.debug&&f&&l.vertex_lines){var E;"parallel"==f?E=[0,1,0]:"distance"==f&&(E=[1,0,0]),l.vertex_lines.push(r[0],r[1],t+.002,0,0,1,E[0],E[1],E[2],o[0],o[1],t+.002,0,0,1,E[0],E[1],E[2],o[0],o[1],t+.002,0,0,1,E[0],E[1],E[2],a[0],a[1],t+.002,0,0,1,E[0],E[1],E[2]);for(var w=e.length,S=0;w>S;S++)for(var T=e[S],N=0;N<T.length-1;N++){var r=T[N],a=T[N+1];l.vertex_lines.push(r[0],r[1],t+5e-4,0,0,1,0,0,1,a[0],a[1],t+5e-4,0,0,1,0,0,1)}}}l=l||{},l.closed_polygon=l.closed_polygon||!1,l.remove_tile_edges=l.remove_tile_edges||!1;var d=[t,0,0,1];if(l.vertex_constants&&d.push.apply(d,l.vertex_constants),n.debug&&l.vertex_lines)for(var u=e.length,h=0;u>h;h++)for(var p=e[h],_=0;_<p.length-1;_++){var g=p[_],f=p[_+1];l.vertex_lines.push(g[0],g[1],t+.001,0,0,1,1,0,0,f[0],f[1],t+.001,0,0,1,1,0,0)}for(var m=[],u=e.length,h=0;u>h;h++){var p=e[h];if(p.length>2){var y=[];if(p.length>3){var _,v,b=[];for(1==l.closed_polygon?(_=0,v=p.length-1):(_=1,v=p.length-2,b.push(p[0]));v>_;_++){var g=p[_],f=p[_+1];b.push([(g[0]+f[0])/2,(g[1]+f[1])/2])}var x;for(1==l.closed_polygon?x=b.length:(b.push(p[p.length-1]),x=b.length-1),_=0;x>_;_++)y.push([b[_],p[(_+1)%p.length],b[(_+1)%b.length]])}else y=[[p[0],p[1],p[2]]];for(var _=0;_<y.length;_++)if(l.remove_tile_edges){var E=n.isOnTileEdge(y[_][0],y[_][1]),w=n.isOnTileEdge(y[_][1],y[_][2]);E||w?E?w||a(y[_][1],y[_][2]):a(y[_][0],y[_][1]):c(y[_][0],y[_][1],y[_][2])}else c(y[_][0],y[_][1],y[_][2])}else 2==p.length&&a(p[0],p[1])}return r.addVertices(m,o,d),o},n.buildQuads=function(e,t,s,i,r){for(var r=r||{},n=e.length,o=0;n>o;o++){var l=e[o],a=[[l[0]-t/2,l[1]-s/2],[l[0]+t/2,l[1]-s/2],[l[0]+t/2,l[1]+s/2],[l[0]-t/2,l[1]-s/2],[l[0]+t/2,l[1]+s/2],[l[0]-t/2,l[1]+s/2]];if(1==r.texcoords)var c=[[-1,-1],[1,-1],[1,1],[-1,-1],[1,1],[-1,1]];var d={positions:a,texcoords:r.texcoords&&c};i(d)}},n.buildLines=function(e,t,s,i,r,n,o,l){l=l||{};for(var a=i.color,c=(i.width,e.length),d=0;c>d;d++)for(var u=e[d],h=0;h<u.length-1;h++){var p=u[h],_=u[h+1];o.push(p[0],p[1],n,0,0,1,a[0],a[1],a[2],_[0],_[1],n,0,0,1,a[0],a[1],a[2])}return o},n.isOnTileEdge=function(e,t,s){s=s||{};var i=s.tolerance_function||n.valuesWithinTolerance,r=s.tolerance||1,o=n.tile_bounds[0],l=n.tile_bounds[1],a=null;return i(e[0],o.x,r)&&i(t[0],o.x,r)?a="left":i(e[0],l.x,r)&&i(t[0],l.x,r)?a="right":i(e[1],o.y,r)&&i(t[1],o.y,r)?a="top":i(e[1],l.y,r)&&i(t[1],l.y,r)&&(a="bottom"),a},n.setTileScale=function(e){n.tile_bounds=[i(0,0),i(e,-e)]},n.valuesWithinTolerance=function(e,t,s){return s=s||1,Math.abs(e-t)<s},n.buildZigzagLineTestPattern=function(){var e=i(0,0),t=i(4096,4096),s={id:123,geometry:{type:"LineString",coordinates:[[.75*e.x+.25*t.x,.75*e.y+.25*t.y],[.75*e.x+.25*t.x,.5*e.y+.5*t.y],[.25*e.x+.75*t.x,.75*e.y+.25*t.y],[.25*e.x+.75*t.x,.25*e.y+.75*t.y],[.4*e.x+.6*t.x,.5*e.y+.5*t.y],[.5*e.x+.5*t.x,.25*e.y+.75*t.y],[.75*e.x+.25*t.x,.25*e.y+.75*t.y],[.75*e.x+.25*t.x,.4*e.y+.6*t.y]]},properties:{kind:"debug"}};return s},void 0!==t&&(t.exports=n)},{"../point.js":13,"../vector.js":16,"./gl.js":8}],10:[function(e,t){function s(e,t,s,i,r){r=r||{},this.gl=e,this.gl_program=t,this.attribs=i,this.vertex_data=s,this.buffer=this.gl.createBuffer(),this.draw_mode=r.draw_mode||this.gl.TRIANGLES,this.data_usage=r.data_usage||this.gl.STATIC_DRAW,this.vertex_stride=0;for(var n=0;n<this.attribs.length;n++){var l=this.attribs[n];switch(l.location=this.gl_program.attribute(l.name).location,l.byte_size=l.size,l.type){case this.gl.FLOAT:case this.gl.INT:case this.gl.UNSIGNED_INT:l.byte_size*=4;break;case this.gl.SHORT:case this.gl.UNSIGNED_SHORT:l.byte_size*=2}l.offset=this.vertex_stride,this.vertex_stride+=l.byte_size}this.vertex_count=this.vertex_data.byteLength/this.vertex_stride,this.vao=o.VertexArrayObject.create(function(){this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.buffer),this.setup()}.bind(this)),this.gl.bufferData(this.gl.ARRAY_BUFFER,this.vertex_data,this.data_usage)}function i(e,t,i){s.call(this,e,t,i,[{name:"position",size:3,type:e.FLOAT,normalized:!1},{name:"normal",size:3,type:e.FLOAT,normalized:!1},{name:"color",size:3,type:e.FLOAT,normalized:!1},{name:"layer",size:1,type:e.FLOAT,normalized:!1}]),this.geometry_count=this.vertex_count/3}function r(e,t,i){s.call(this,e,t,i,[{name:"position",size:3,type:e.FLOAT,normalized:!1},{name:"texcoord",size:2,type:e.FLOAT,normalized:!1},{name:"color",size:3,type:e.FLOAT,normalized:!1},{name:"layer",size:1,type:e.FLOAT,normalized:!1}]),this.geometry_count=this.vertex_count/3}function n(e,t,s,r){r=r||{},i.call(this,e,program,s),this.draw_mode=this.gl.LINES,this.line_width=r.line_width||2,this.geometry_count=this.vertex_count/2}var o=e("./gl.js");s.prototype.setup=function(){for(var e=0;e<this.attribs.length;e++){var t=this.attribs[e];this.gl.enableVertexAttribArray(t.location),this.gl.vertexAttribPointer(t.location,t.size,t.type,t.normalized,this.vertex_stride,t.offset)}},s.prototype.render=function(){this.gl.useProgram(this.gl_program.program),o.VertexArrayObject.bind(this.vao),"function"==typeof this._render&&this._render(),this.gl.drawArrays(this.draw_mode,0,this.vertex_count),o.VertexArrayObject.bind(null)},s.prototype.destroy=function(){console.log("GLGeometry.destroy: delete buffer of size "+this.vertex_data.byteLength),this.gl.deleteBuffer(this.buffer),delete this.vertex_data},i.prototype=Object.create(s.prototype),r.prototype=Object.create(s.prototype),n.prototype=Object.create(i.prototype),n.prototype._render=function(){this.gl.lineWidth(this.line_width),"function"==typeof i.prototype._render&&i.prototype._render.call(this)},void 0!==t&&(t.exports={GLGeometry:s,GLTriangles:i,GLPolyPoints:r,GLLines:n})},{"./gl.js":8}],11:[function(e,t){function s(e,t,s,i){var i=i||{};n.call(this,"GLRenderer",e,t,s,i),l.setTileScale(n.tile_scale),o.Program.defines.TILE_SCALE=n.tile_scale+".0",this.container=i.container,this.continuous_animation=!1}{var i=e("../point.js"),r=e("../geo.js"),n=e("../vector_renderer.js"),o=e("./gl.js"),l=e("./gl_builders.js"),a=(e("./gl_geom.js").GLGeometry,e("./gl_geom.js").GLTriangles),c=e("./gl_geom.js").GLPolyPoints;e("./gl_geom.js").GLLines}n.GLRenderer=s,s.prototype=Object.create(n.prototype),s.debug=!1,s.shader_sources=e("./gl_shaders.js"),s.prototype._init=function(){this.container=this.container||document.body,this.canvas=document.createElement("canvas"),this.canvas.style.position="absolute",this.canvas.style.top=0,this.canvas.style.left=0,this.canvas.style.zIndex=-1,this.container.appendChild(this.canvas),this.gl=o.getContext(this.canvas);var e=this;this.render_modes={polygons:{gl_program:new o.Program(this.gl,s.shader_sources.polygon_vertex,s.shader_sources.polygon_fragment),makeGLGeometry:function(t){return new a(e.gl,this.gl_program,t)}},polygons_noise:{gl_program:new o.Program(this.gl,s.shader_sources.polygon_vertex,s.shader_sources.polygon_fragment,{defines:{EFFECT_NOISE_TEXTURE:!0,EFFECT_NOISE_ANIMATABLE:!0}}),makeGLGeometry:function(t){return new a(e.gl,this.gl_program,t)}},points:{gl_program:new o.Program(this.gl,s.shader_sources.point_vertex,s.shader_sources.point_fragment,{defines:{EFFECT_SCREEN_COLOR:!0}}),makeGLGeometry:function(t){return new c(e.gl,this.gl_program,t)}}},this.resizeMap(this.container.clientWidth,this.container.clientHeight),this.start_time=+new Date,this.last_render_count=null,this.initInputHandlers()},s.calculateZ=function(){var e=0;return e},s.addTile=function(e,t,i){var r,a,c,d,u,h={};e.debug.features=0;for(var p=0;p<t.length;p++)if(r=t[p],null!=i[r.name]&&null!=e.layers[r.name])for(var _=e.layers[r.name].features.length,g=_-1;g>=0;g--)if(c=e.layers[r.name].features[g],d=s.calculateZ(r,e),a=n.parseStyleForFeature(c,i[r.name],e),null!=a){u=a.render_mode,null==h[u]&&(h[u]=[]);var f=[a.color[0],a.color[1],a.color[2],p];if(a.outline.color)var m=[a.outline.color[0],a.outline.color[1],a.outline.color[2],p-.5];var y=null,v=null,b=null;if("Polygon"==c.geometry.type?b=[c.geometry.coordinates]:"MultiPolygon"==c.geometry.type?b=c.geometry.coordinates:"LineString"==c.geometry.type?v=[c.geometry.coordinates]:"MultiLineString"==c.geometry.type?v=c.geometry.coordinates:"Point"==c.geometry.type?y=[c.geometry.coordinates]:"MultiPoint"==c.geometry.type&&(y=c.geometry.coordinates),null!=b&&(a.extrude&&a.height?l.buildExtrudedPolygons(b,d,a.height,a.min_height,h[u],{vertex_constants:f}):l.buildPolygons(b,d,h[u],{vertex_constants:f}),a.outline.color&&a.outline.width))for(var x=0;x<b.length;x++)l.buildPolylines(b[x],s.calculateZ(r,e,-.5),a.outline.width,h[u],{closed_polygon:!0,remove_tile_edges:!0,vertex_constants:m});if(null!=v&&(l.buildPolylines(v,d,a.width,h[u],{vertex_constants:f}),a.outline.color&&a.outline.width&&l.buildPolylines(v,s.calculateZ(r,e,-.5),a.width+2*a.outline.width,h[u],{vertex_constants:m})),null!=y){var E=[d+1,0,0,1].concat(f);l.buildQuads(y,2*a.size,2*a.size,function(e){var t=e.positions;if("points"==u){E=f;for(var s in e.positions)t[s]=e.positions[s].concat(d+1,e.texcoords[s])}o.addVertices(t,h[u],E)},{texcoords:"points"==u})}e.debug.features++}e.vertex_data={};for(var w in h)e.vertex_data[w]=new Float32Array(h[w]);return e},s.prototype._tileWorkerCompleted=function(e){var t=e.vertex_data;e.gl_geometry={};for(var s in t)e.gl_geometry[s]=this.render_modes[s].makeGLGeometry(t[s]);e.debug.geometries=0,e.debug.buffer_size=0;for(var i in e.gl_geometry)e.debug.geometries+=e.gl_geometry[i].geometry_count,e.debug.buffer_size+=e.gl_geometry[i].vertex_data.byteLength;e.debug.geom_ratio=(e.debug.geometries/e.debug.features).toFixed(1),delete e.vertex_data},s.prototype.removeTile=function(e){if(1!=this.map_zooming){var t=this.tiles[e];if(null!=t&&null!=t.gl_geometry){for(var s in t.gl_geometry)t.gl_geometry[s].destroy();t.gl_geometry=null}n.prototype.removeTile.apply(this,arguments)}},s.prototype.preserve_tiles_within_zoom=2,s.prototype.setZoom=function(e){console.log("renderer.map_last_zoom: "+this.map_last_zoom),this.map_zooming=!1,this.zoom=e;var t=this.zoom,s=this.zoom;Math.abs(this.zoom-this.map_last_zoom)<=this.preserve_tiles_within_zoom&&(this.zoom>this.map_last_zoom?t=this.zoom-this.preserve_tiles_within_zoom:s=this.zoom+this.preserve_tiles_within_zoom),this.removeTilesOutsideZoomRange(t,s),this.map_last_zoom=this.zoom,this.dirty=!0},s.prototype.removeTilesOutsideZoomRange=function(e,t){e=Math.min(e,this.tile_source.max_zoom||e),t=Math.min(t,this.tile_source.max_zoom||t),console.log("removeTilesOutsideZoomRange ["+e+", "+t+"])");var s=[];for(var i in this.tiles){var r=this.tiles[i];(r.coords.z<e||r.coords.z>t)&&s.push(i)}for(var n=0;n<s.length;n++){var o=s[n];console.log("removed "+o+" (outside range ["+e+", "+t+"])"),this.removeTile(o)}},s.prototype.resizeMap=function(e,t){n.prototype.resizeMap.apply(this,arguments),this.css_size={width:e,height:t},this.device_size={width:Math.round(this.css_size.width*this.device_pixel_ratio),height:Math.round(this.css_size.height*this.device_pixel_ratio)},this.canvas.style.width=this.css_size.width+"px",this.canvas.style.height=this.css_size.height+"px",this.canvas.width=this.device_size.width,this.canvas.height=this.device_size.height,this.gl.viewport(0,0,this.canvas.width,this.canvas.height)},s.prototype._render=function(){var e=this.gl;this.input(),e.clearColor(0,0,0,1),e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER_BIT),e.enable(e.DEPTH_TEST),e.depthFunc(e.LESS),e.enable(e.CULL_FACE),e.cullFace(e.BACK);var t=0;for(var s in this.render_modes){var n=this.render_modes[s].gl_program;e.useProgram(n.program),n.uniform("2f","resolution",this.css_size.width,this.css_size.height),n.uniform("1f","time",(+new Date-this.start_time)/1e3);var o=r.latLngToMeters(i(this.center.lng,this.center.lat));n.uniform("2f","map_center",o.x,o.y),n.uniform("1f","map_zoom",this.zoom),n.uniform("1f","num_layers",this.layers.length);var l=r.min_zoom_meters_per_pixel/Math.pow(2,this.zoom),a=i(this.css_size.width/2*l,this.css_size.height/2*l);n.uniform("2f","meter_zoom",a.x,a.y);var c=Math.min(~~this.zoom,this.tile_source.max_zoom||~~this.zoom);for(var d in this.tiles){var u=this.tiles[d];1==u.loaded&&1==u.visible&&Math.min(u.coords.z,this.tile_source.max_zoom||u.coords.z)==c&&null!=u.gl_geometry[s]&&(n.uniform("2f","tile_min",u.min.x,u.min.y),n.uniform("2f","tile_max",u.max.x,u.max.y),u.gl_geometry[s].render(),t+=u.gl_geometry[s].geometry_count)}}return t!=this.last_render_count&&console.log("rendered "+t+" primitives"),this.last_render_count=t,1==this.continuous_animation&&(this.dirty=!0),!0},s.prototype.getDebugSum=function(e,t){var s=0;for(var i in this.tiles)null==this.tiles[i].debug[e]||"function"==typeof t&&1!=t(this.tiles[i])||(s+=this.tiles[i].debug[e]);return s},s.prototype.getDebugAverage=function(e,t){return this.getDebugSum(e,t)/Object.keys(this.tiles).length},s.prototype.initInputHandlers=function(){var e=this;e.key=null,document.addEventListener("keydown",function(t){if(37==t.keyCode)e.key="left";else if(39==t.keyCode)e.key="right";else if(38==t.keyCode)e.key="up";else if(40==t.keyCode)e.key="down";else if(83==t.keyCode){console.log("reloading shaders");for(var s in this.render_modes)this.render_modes[s].gl_program.compile();e.dirty=!0}}),document.addEventListener("keyup",function(){e.key=null})},s.prototype.input=function(){},void 0!==t&&(t.exports=s)},{"../geo.js":7,"../point.js":13,"../vector_renderer.js":17,"./gl.js":8,"./gl_builders.js":9,"./gl_geom.js":10,"./gl_shaders.js":12}],12:[function(e,t){var s={};s.point_fragment="uniform vec2 resolution;\n\nvarying vec3 fcolor;\nvarying vec2 ftexcoord;\n\nvoid main (void) {\n    vec4 color = vec4(fcolor, 1.);\n\n    // if (length(ftexcoord.xy) > 10.) {\n    //     // color = vec4(0., 0., 0., 0.);\n    //     discard;\n    // }\n\n    float len = length(ftexcoord);\n    if (len > 1.) {\n        discard;\n    }\n    color.rgb *= (1. - smoothstep(.25, 1., len)) + 0.5;\n    // color.a = (1. - smoothstep(2.5, 10., len)) + 0.25;\n\n    #if defined(EFFECT_SCREEN_COLOR)\n        // Mutate colors by screen position\n        color.rgb += vec3(gl_FragCoord.x / resolution.x, 0.0, gl_FragCoord.y / resolution.y);\n    #endif\n\n    gl_FragColor = color;\n}\n",s.point_vertex="uniform vec2 map_center;\nuniform float map_zoom;\nuniform vec2 meter_zoom;\nuniform vec2 tile_min;\nuniform vec2 tile_max;\nuniform float num_layers;\n// uniform float time;\n\nattribute vec3 position;\n// attribute vec3 normal;\nattribute vec2 texcoord;\nattribute vec3 color;\nattribute float layer;\n\nvarying vec3 fcolor;\nvarying vec2 ftexcoord;\n\n// vec3 light = normalize(vec3(0.2, 0.7, -0.5)); // vec3(0.1, 0.2, -0.4)\n// const float ambient = 0.45;\n\nvoid main() {\n    vec3 vposition = position;\n    // vec3 vnormal = normal;\n    // vec2 vtexcoord = texcoord;\n\n    // Calc position of vertex in meters, relative to center of screen\n    vposition.y *= -1.0; // adjust for flipped y-coords\n    vposition.xy *= (tile_max - tile_min) / TILE_SCALE; // adjust for vertex location within tile (scaled from local coords to meters)\n    vposition.xy += tile_min.xy - map_center; // adjust for corner of tile relative to map center\n    vposition.xy /= meter_zoom; // adjust for zoom in meters to get clip space coords\n\n    // Shading & texture\n    fcolor = color;\n    ftexcoord = texcoord;\n\n    // #if defined(PROJECTION_PERSPECTIVE)\n    //     // Perspective-style projection\n    //     vec2 perspective_offset = vec2(-0.25, -0.25);\n    //     vec2 perspective_factor = vec2(0.8, 0.8); // vec2(-0.25, 0.75);\n    //     vposition.xy += vposition.z * perspective_factor * (vposition.xy - perspective_offset) / meter_zoom.xy; // perspective from offset center screen\n    // #elif defined(PROJECTION_ISOMETRIC) || defined(PROJECTION_POPUP)\n    //     // Pop-up effect - 3d in center of viewport, fading to 2d at edges\n    //     #if defined(PROJECTION_POPUP)\n    //         if (vposition.z > 1.0) {\n    //             float cd = distance(vposition.xy * (resolution.xy / resolution.yy), vec2(0.0, 0.0));\n    //             const float popup_fade_inner = 0.5;\n    //             const float popup_fade_outer = 0.75;\n    //             if (cd > popup_fade_inner) {\n    //                 vposition.z *= 1.0 - smoothstep(popup_fade_inner, popup_fade_outer, cd);\n    //             }\n    //             const float zoom_boost_start = 15.0;\n    //             const float zoom_boost_end = 17.0;\n    //             const float zoom_boost_magnitude = 0.75;\n    //             vposition.z *= 1.0 + (1.0 - smoothstep(zoom_boost_start, zoom_boost_end, map_zoom)) * zoom_boost_magnitude;\n    //         }\n    //     #endif\n\n    //     // Isometric-style projection\n    //     vposition.y += vposition.z / meter_zoom.y; // z coordinate is a simple translation up along y axis, ala isometric\n    //     // vposition.y += vposition.z * 0.5; // closer to Ultima 7-style axonometric\n    //     // vposition.x -= vposition.z * 0.5;\n    // #endif\n\n    // Reverse and scale to 0-1 for GL depth buffer\n    // Layers are force-ordered (higher layers guaranteed to render on top of lower), then by height/depth\n    float z_layer_scale = 4096.;\n    float z_layer_range = (num_layers + 1.) * z_layer_scale;\n    float z_layer = (layer + 1.) * z_layer_scale;\n    // float z_layer = (layer + 1.);\n\n    vposition.z = z_layer + clamp(vposition.z, 1., z_layer_scale);\n    vposition.z = (z_layer_range - vposition.z) / z_layer_range;\n\n    gl_Position = vec4(vposition, 1.0);\n}\n",s.polygon_fragment="uniform vec2 resolution;\nuniform float time;\n\nvarying vec3 fcolor;\n\n#if defined(EFFECT_NOISE_TEXTURE)\n    varying vec3 fposition;\n\n    // http://stackoverflow.com/questions/4200224/random-noise-functions-for-glsl\n    // float rand (vec2 co) {\n    //    return fract(sin(dot(co.xy, vec2(12.9898, 78.233))) * 43758.5453);\n    // }\n\n    // Noise functions from: https://github.com/ashima/webgl-noise\n    vec3 mod289(vec3 x) {\n        return x - floor(x * (1.0 / 289.0)) * 289.0;\n    }\n\n    vec4 mod289(vec4 x) {\n        return x - floor(x * (1.0 / 289.0)) * 289.0;\n    }\n\n    vec4 permute(vec4 x) {\n        return mod289(((x*34.0)+1.0)*x);\n    }\n\n    vec4 taylorInvSqrt(vec4 r) {\n        return 1.79284291400159 - 0.85373472095314 * r;\n    }\n\n    vec3 fade(vec3 t) {\n        return t*t*t*(t*(t*6.0-15.0)+10.0);\n    }\n\n    float snoise(vec3 v) {\n        const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\n        const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\n\n        // First corner\n        vec3 i  = floor(v + dot(v, C.yyy) );\n        vec3 x0 =   v - i + dot(i, C.xxx) ;\n\n        // Other corners\n        vec3 g = step(x0.yzx, x0.xyz);\n        vec3 l = 1.0 - g;\n        vec3 i1 = min( g.xyz, l.zxy );\n        vec3 i2 = max( g.xyz, l.zxy );\n\n        //   x0 = x0 - 0.0 + 0.0 * C.xxx;\n        //   x1 = x0 - i1  + 1.0 * C.xxx;\n        //   x2 = x0 - i2  + 2.0 * C.xxx;\n        //   x3 = x0 - 1.0 + 3.0 * C.xxx;\n        vec3 x1 = x0 - i1 + C.xxx;\n        vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\n        vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\n\n        // Permutations\n        i = mod289(i);\n        vec4 p = permute( permute( permute(\n        i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\n        + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\n        + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\n\n        // Gradients: 7x7 points over a square, mapped onto an octahedron.\n        // The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\n        float n_ = 0.142857142857; // 1.0/7.0\n        vec3  ns = n_ * D.wyz - D.xzx;\n\n        vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\n\n        vec4 x_ = floor(j * ns.z);\n        vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\n\n        vec4 x = x_ *ns.x + ns.yyyy;\n        vec4 y = y_ *ns.x + ns.yyyy;\n        vec4 h = 1.0 - abs(x) - abs(y);\n\n        vec4 b0 = vec4( x.xy, y.xy );\n        vec4 b1 = vec4( x.zw, y.zw );\n\n        //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\n        //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\n        vec4 s0 = floor(b0)*2.0 + 1.0;\n        vec4 s1 = floor(b1)*2.0 + 1.0;\n        vec4 sh = -step(h, vec4(0.0));\n\n        vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\n        vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\n\n        vec3 p0 = vec3(a0.xy,h.x);\n        vec3 p1 = vec3(a0.zw,h.y);\n        vec3 p2 = vec3(a1.xy,h.z);\n        vec3 p3 = vec3(a1.zw,h.w);\n\n        //Normalise gradients\n        vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n        p0 *= norm.x;\n        p1 *= norm.y;\n        p2 *= norm.z;\n        p3 *= norm.w;\n\n        // Mix final noise value\n        vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\n        m = m * m;\n        return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1), dot(p2,x2), dot(p3,x3) ) );\n    }\n\n    // Classic Perlin noise\n    float cnoise(vec3 P) {\n        vec3 Pi0 = floor(P); // Integer part for indexing\n        vec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\n        Pi0 = mod289(Pi0);\n        Pi1 = mod289(Pi1);\n        vec3 Pf0 = fract(P); // Fractional part for interpolation\n        vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n        vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n        vec4 iy = vec4(Pi0.yy, Pi1.yy);\n        vec4 iz0 = Pi0.zzzz;\n        vec4 iz1 = Pi1.zzzz;\n\n        vec4 ixy = permute(permute(ix) + iy);\n        vec4 ixy0 = permute(ixy + iz0);\n        vec4 ixy1 = permute(ixy + iz1);\n\n        vec4 gx0 = ixy0 * (1.0 / 7.0);\n        vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\n        gx0 = fract(gx0);\n        vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n        vec4 sz0 = step(gz0, vec4(0.0));\n        gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n        gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n        vec4 gx1 = ixy1 * (1.0 / 7.0);\n        vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\n        gx1 = fract(gx1);\n        vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n        vec4 sz1 = step(gz1, vec4(0.0));\n        gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n        gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n        vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n        vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n        vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n        vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n        vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n        vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n        vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n        vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n        vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n        g000 *= norm0.x;\n        g010 *= norm0.y;\n        g100 *= norm0.z;\n        g110 *= norm0.w;\n        vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n        g001 *= norm1.x;\n        g011 *= norm1.y;\n        g101 *= norm1.z;\n        g111 *= norm1.w;\n\n        float n000 = dot(g000, Pf0);\n        float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n        float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n        float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n        float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n        float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n        float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n        float n111 = dot(g111, Pf1);\n\n        vec3 fade_xyz = fade(Pf0);\n        vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n        vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n        float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\n        return 2.2 * n_xyz;\n    }\n\n    // Classic Perlin noise, periodic variant\n    float pnoise(vec3 P, vec3 rep) {\n        vec3 Pi0 = mod(floor(P), rep); // Integer part, modulo period\n        vec3 Pi1 = mod(Pi0 + vec3(1.0), rep); // Integer part + 1, mod period\n        Pi0 = mod289(Pi0);\n        Pi1 = mod289(Pi1);\n        vec3 Pf0 = fract(P); // Fractional part for interpolation\n        vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n        vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n        vec4 iy = vec4(Pi0.yy, Pi1.yy);\n        vec4 iz0 = Pi0.zzzz;\n        vec4 iz1 = Pi1.zzzz;\n\n        vec4 ixy = permute(permute(ix) + iy);\n        vec4 ixy0 = permute(ixy + iz0);\n        vec4 ixy1 = permute(ixy + iz1);\n\n        vec4 gx0 = ixy0 * (1.0 / 7.0);\n        vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\n        gx0 = fract(gx0);\n        vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n        vec4 sz0 = step(gz0, vec4(0.0));\n        gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n        gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n        vec4 gx1 = ixy1 * (1.0 / 7.0);\n        vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\n        gx1 = fract(gx1);\n        vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n        vec4 sz1 = step(gz1, vec4(0.0));\n        gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n        gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n        vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n        vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n        vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n        vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n        vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n        vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n        vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n        vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n        vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n        g000 *= norm0.x;\n        g010 *= norm0.y;\n        g100 *= norm0.z;\n        g110 *= norm0.w;\n        vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n        g001 *= norm1.x;\n        g011 *= norm1.y;\n        g101 *= norm1.z;\n        g111 *= norm1.w;\n\n        float n000 = dot(g000, Pf0);\n        float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n        float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n        float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n        float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n        float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n        float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n        float n111 = dot(g111, Pf1);\n\n        vec3 fade_xyz = fade(Pf0);\n        vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n        vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n        float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\n        return 2.2 * n_xyz;\n    }\n#endif\n\nvoid main (void) {\n\n    #if defined(EFFECT_SPOTLIGHT)\n    // Spotlight effect\n        vec2 position = gl_FragCoord.xy / resolution.xy;    // scale coords to [0.0, 1.0]\n        position = position * 2.0 - 1.0;                    // scale coords to [-1.0, 1.0]\n        position.y *= resolution.y / resolution.x;          // correct aspect ratio\n\n        vec3 color = fcolor * max(1.0 - distance(position, vec2(0.0, 0.0)), 0.2);\n        // vec3 color = fcolor * (1.0 - dot(normalize(vec3(rand(gl_FragCoord.xy * 0.01) * 10.0, 0.0, -1.0)), vec3(0, 0, 1.0)));\n    #else\n        vec3 color = fcolor;\n    #endif\n\n    #if defined(EFFECT_COLOR_BLEED)\n        // Mutate colors by screen position or time\n        color += vec3(gl_FragCoord.x / resolution.x, 0.0, gl_FragCoord.y / resolution.y);\n        color.r += sin(time / 3.0);\n    #endif\n\n    // Mutate color by 3d noise\n    #if defined (EFFECT_NOISE_TEXTURE)\n        #if defined(EFFECT_NOISE_ANIMATABLE) && defined(EFFECT_NOISE_ANIMATED)\n            color *= (abs(cnoise((fposition + vec3(time * 5., time * 7.5, time * 10.)) / 10.0)) / 4.0) + 0.75;\n        #endif\n        #ifndef EFFECT_NOISE_ANIMATABLE\n            color *= (abs(cnoise(fposition / 10.0)) / 4.0) + 0.75;\n        #endif\n    #endif\n\n    gl_FragColor = vec4(color, 1.0);\n    // gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\n}\n",s.polygon_vertex='// #define PROJECTION_PERSPECTIVE\n// #define PROJECTION_ISOMETRIC\n// #define PROJECTION_POPUP\n\n// #define LIGHTING_POINT\n// #define LIGHTING_DIRECTION\n\n// #define ANIMATION_ELEVATOR\n// #define ANIMATION_WAVE\n\nuniform vec2 resolution;\nuniform vec2 map_center;\nuniform float map_zoom;\nuniform vec2 meter_zoom;\nuniform vec2 tile_min;\nuniform vec2 tile_max;\nuniform float num_layers;\nuniform float time;\n\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec3 color;\nattribute float layer;\n\nvarying vec3 fcolor;\n\n#if defined(EFFECT_NOISE_TEXTURE)\n    varying vec3 fposition;\n#endif\n\nvec3 light = normalize(vec3(0.2, 0.7, -0.5)); // vec3(0.1, 0.2, -0.4)\nconst float ambient = 0.45;\n\n// Project lat-lng to mercator\n// vec2 latLngToMeters (vec2 coordinate) {\n//     const float pi = 3.1415926;\n//     const float half_circumference_meters = 20037508.342789244;\n//     vec2 projected;\n\n//     // Latitude\n//     projected.y = log(tan((coordinate.y + 90.0) * pi / 360.0)) / (pi / 180.0);\n//     projected.y = projected.y * half_circumference_meters / 180.0;\n\n//     // Longitude\n//     projected.x = coordinate.x * half_circumference_meters / 180.0;\n\n//     return projected;\n// }\n\nvoid main() {\n    vec3 vposition = position;\n    vec3 vnormal = normal;\n\n    // Calc position of vertex in meters, relative to center of screen\n    vposition.y *= -1.0; // adjust for flipped y-coords\n    // vposition.y += TILE_SCALE; // alternate, to also adjust for force-positive y coords in tile\n    vposition.xy *= (tile_max - tile_min) / TILE_SCALE; // adjust for vertex location within tile (scaled from local coords to meters)\n\n    // Vertex displacement + procedural effects\n    #if defined(ANIMATION_ELEVATOR) || defined(ANIMATION_WAVE) || defined(EFFECT_NOISE_TEXTURE)\n        vec3 vposition_world = vposition + vec3(tile_min, 0.); // need vertex in world coords (before map center transform), hack to get around precision issues (see below)\n\n        #if defined(EFFECT_NOISE_TEXTURE)\n            fposition = vposition_world;\n        #endif\n\n        if (vposition_world.z > 1.0) {\n            // vposition.x += sin(vposition_world.z + time) * 10.0 * sin(position.x); // swaying buildings\n            // vposition.y += cos(vposition_world.z + time) * 10.0;\n\n            #if defined(ANIMATION_ELEVATOR)\n                // vposition.z *= (sin(vposition_world.z / 25.0 * time) + 1.0) / 2.0 + 0.1; // evelator buildings\n                vposition.z *= max((sin(vposition_world.z + time) + 1.0) / 2.0, 0.05); // evelator buildings\n            #elif defined(ANIMATION_WAVE)\n                vposition.z *= max((sin(vposition_world.x / 100.0 + time) + 1.0) / 2.0, 0.05); // wave\n            #endif\n        }\n    #endif\n\n    // NOTE: due to unresolved floating point precision issues, tile and map center adjustment need to happen in ONE operation, or artifcats are introduced\n    vposition.xy += tile_min.xy - map_center; // adjust for corner of tile relative to map center\n    vposition.xy /= meter_zoom; // adjust for zoom in meters to get clip space coords\n\n    // Shading\n    fcolor = color;\n    // fcolor += vec3(sin(position.z + time), 0.0, 0.0); // color change on height + time\n\n    #if defined(LIGHTING_POINT) || defined(LIGHTING_NIGHT)\n        // Gouraud shading\n        light = vec3(-0.25, -0.25, 0.50); // vec3(0.1, 0.1, 0.35); // point light location\n\n        #if defined(LIGHTING_NIGHT)\n            // "Night" effect by flipping vertex z\n            light = normalize(vec3(vposition.x, vposition.y, vposition.z) - light); // light angle from light point to vertex\n            fcolor *= dot(vnormal, light * -1.0); // + ambient + clamp(vposition.z * 2.0 / meter_zoom.x, 0.0, 0.25);\n        #else\n            // Point light-based gradient\n            light = normalize(vec3(vposition.x, vposition.y, -vposition.z) - light); // light angle from light point to vertex\n            fcolor *= dot(vnormal, light * -1.0) + ambient + clamp(vposition.z * 2.0 / meter_zoom.x, 0.0, 0.25);\n        #endif\n\n    #elif defined(LIGHTING_DIRECTION)\n        // Flat shading\n        light = normalize(vec3(0.2, 0.7, -0.5));\n        // light = normalize(vec3(-1., 0.7, -.0));\n        // light = normalize(vec3(-1., 0.7, -.75));\n        // fcolor *= max(dot(vnormal, light * -1.0), 0.1) + ambient;\n        fcolor *= dot(vnormal, light * -1.0) + ambient;\n    #endif\n\n    #if defined(PROJECTION_PERSPECTIVE)\n        // Perspective-style projection\n        vec2 perspective_offset = vec2(-0.25, -0.25);\n        vec2 perspective_factor = vec2(0.8, 0.8); // vec2(-0.25, 0.75);\n        vposition.xy += vposition.z * perspective_factor * (vposition.xy - perspective_offset) / meter_zoom.xy; // perspective from offset center screen\n    #elif defined(PROJECTION_ISOMETRIC) || defined(PROJECTION_POPUP)\n        // Pop-up effect - 3d in center of viewport, fading to 2d at edges\n        #if defined(PROJECTION_POPUP)\n            if (vposition.z > 1.0) {\n                float cd = distance(vposition.xy * (resolution.xy / resolution.yy), vec2(0.0, 0.0));\n                const float popup_fade_inner = 0.5;\n                const float popup_fade_outer = 0.75;\n                if (cd > popup_fade_inner) {\n                    vposition.z *= 1.0 - smoothstep(popup_fade_inner, popup_fade_outer, cd);\n                }\n                const float zoom_boost_start = 15.0;\n                const float zoom_boost_end = 17.0;\n                const float zoom_boost_magnitude = 0.75;\n                vposition.z *= 1.0 + (1.0 - smoothstep(zoom_boost_start, zoom_boost_end, map_zoom)) * zoom_boost_magnitude;\n            }\n        #endif\n\n        // Isometric-style projection\n        vposition.y += vposition.z / meter_zoom.y; // z coordinate is a simple translation up along y axis, ala isometric\n        // vposition.y += vposition.z * 0.5; // closer to Ultima 7-style axonometric\n        // vposition.x -= vposition.z * 0.5;\n    #endif\n\n    // Rotation test\n    // float theta = 0;\n    // const float pi = 3.1415926;\n    // vec2 pr;\n    // pr.x = vposition.x * cos(theta * pi / 180.0) + vposition.y * -sin(theta * pi / 180.0);\n    // pr.y = vposition.x * sin(theta * pi / 180.0) + vposition.y * cos(theta * pi / 180.0);\n    // vposition.xy = pr;\n\n    // vposition.y *= max(abs(sin(vposition.x)), 0.1); // hourglass effect\n    // vposition.y *= abs(max(sin(vposition.x), 0.1)); // funnel effect\n\n    // Reverse and scale to 0-1 for GL depth buffer\n    // Layers are force-ordered (higher layers guaranteed to render on top of lower), then by height/depth\n    float z_layer_scale = 4096.;\n    float z_layer_range = (num_layers + 1.) * z_layer_scale;\n    float z_layer = (layer + 1.) * z_layer_scale;\n\n    vposition.z = z_layer + clamp(vposition.z, 1., z_layer_scale);\n    vposition.z = (z_layer_range - vposition.z) / z_layer_range;\n\n    gl_Position = vec4(vposition, 1.0);\n}\n',void 0!==t.exports&&(t.exports=s)
},{}],13:[function(e,t){function s(e,t){return{x:e,y:t}}s.copy=function(e){return null==e?null:{x:e.x,y:e.y}},void 0!==t&&(t.exports=s)},{}],14:[function(e,t){var s={};s.color={pseudoRandomGrayscale:function(e){var t=Math.max(parseInt(e.id,16)%100/100,.4);return[.7*t,.7*t,.7*t]},pseudoRandomColor:function(e){return[.7*(parseInt(e.id,16)/100%1),.7*(parseInt(e.id,16)/1e4%1),.7*(parseInt(e.id,16)/1e6%1)]},randomColor:function(){return[.7*Math.random(),.7*Math.random(),.7*Math.random()]}},s.width={pixels:function(e){return function(t,s){return("function"==typeof e?e(t,s):e)*s.units_per_pixel}},meters:function(e){return function(t,s){return("function"==typeof e?e(t,s):e)*s.units_per_meter}}},void 0!==t&&(t.exports=s)},{}],15:[function(e,t){function s(e,t){var t=t||{};this.url_template=e,this.max_zoom=t.max_zoom||l.max_zoom}function i(e,t){s.apply(this,arguments);this.response_type="",this.url_hosts=null;var i=this.url_template.match(/{s:\[([^}+]+)\]}/);null!=i&&i.length>1&&(this.url_hosts=i[1].split(","),this.next_host=0)}function r(){i.apply(this,arguments)}function n(){if(i.apply(this,arguments),"undefined"==typeof topojson)try{importScripts("http://d3js.org/topojson.v1.min.js"),console.log("loaded TopoJSON library")}catch(e){console.log("failed to load TopoJSON library!")}}function o(){i.apply(this,arguments),this.response_type="arraybuffer",this.VectorTile=e("vector-tile")}var l=e("./geo.js"),a=e("./point.js"),c=e("./vector_renderer.js");s.create=function(e,t,i){return new s[e](t,i)},s.projectTile=function(e){var t=+new Date;for(var s in e.layers)for(var i=e.layers[s].features.length,r=0;i>r;r++){var n=e.layers[s].features[r];n.geometry.coordinates=l.transformGeometry(n.geometry,function(e){var t=l.latLngToMeters(a(e[0],e[1]));return[t.x,t.y]})}return e.debug.projection=+new Date-t,e},s.scaleTile=function(e){for(var t in e.layers)for(var s=e.layers[t].features.length,i=0;s>i;i++){var r=e.layers[t].features[i];r.geometry.coordinates=l.transformGeometry(r.geometry,function(t){return t[0]=(t[0]-e.min.x)*c.units_per_meter[e.coords.z],t[1]=(t[1]-e.min.y)*c.units_per_meter[e.coords.z],t})}return e},i.prototype=Object.create(s.prototype),i.prototype.loadTile=function(e,t){var s=this,i=new XMLHttpRequest,r=this.url_template.replace("{x}",e.coords.x).replace("{y}",e.coords.y).replace("{z}",e.coords.z);null!=this.url_hosts&&(r=r.replace(/{s:\[([^}+]+)\]}/,this.url_hosts[this.next_host]),this.next_host=(this.next_host+1)%this.url_hosts.length),e.url=r,e.xhr=i,e.debug.network=+new Date,i.onload=function(){0!=e.loading&&(e.debug.response_size=e.xhr.response.length||e.xhr.response.byteLength,e.debug.network=+new Date-e.debug.network,s._loadTile&&(e.debug.parsing=+new Date,s._loadTile(e),e.debug.parsing=+new Date-e.debug.parsing),e.xhr=null,e.loading=!1,e.loaded=!0,t&&t(e))},i.open("GET",r,!0),i.responseType=this.response_type,i.send()},s.GeoJSONTileSource=r,r.prototype=Object.create(i.prototype),r.prototype._loadTile=function(e){e.layers=JSON.parse(e.xhr.response),s.projectTile(e),s.scaleTile(e)},s.TopoJSONTileSource=n,n.prototype=Object.create(i.prototype),n.prototype._loadTile=function(e){if("undefined"==typeof topojson)return void(e.layers={});if(e.layers=JSON.parse(e.xhr.response),null!=e.layers.objects.vectiles)e.layers=topojson.feature(e.layers,e.layers.objects.vectiles);else{var t={};for(var i in e.layers.objects)t[i]=topojson.feature(e.layers,e.layers.objects[i]);e.layers=t}s.projectTile(e),s.scaleTile(e)},s.MapboxTileSource=o,o.prototype=Object.create(i.prototype),o.prototype._loadTile=function(e){e.data=new this.VectorTile(new Uint8Array(e.xhr.response)),e.layers=e.data.toGeoJSON(),delete e.data;for(var t in e.layers)for(var s=e.layers[t].features.length,i=0;s>i;i++){var r=e.layers[t].features[i];r.properties.id=r.properties.osm_id,r.geometry.coordinates=l.transformGeometry(r.geometry,function(e){return e[1]=-e[1],e})}},void 0!==t&&(t.exports=s)},{"./geo.js":7,"./point.js":13,"./vector_renderer.js":17,"vector-tile":1}],16:[function(e,t){var s={};s.lengthSq=function(e){return 2==e.length?e[0]*e[0]+e[1]*e[1]:e[0]*e[0]+e[1]*e[1]+e[2]*e[2]},s.length=function(e){return Math.sqrt(s.lengthSq(e))},s.normalize=function(e){var t;if(2==e.length)return t=e[0]*e[0]+e[1]*e[1],t=Math.sqrt(t),0!=t?[e[0]/t,e[1]/t]:[0,0];var t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2];return t=Math.sqrt(t),0!=t?[e[0]/t,e[1]/t,e[2]/t]:[0,0,0]},s.cross=function(e,t){return[e[1]*t[2]-e[2]*t[1],e[2]*t[0]-e[0]*t[2],e[0]*t[1]-e[1]*t[0]]},s.lineIntersection=function(e,t,s,i,r){var r=r||.01,n=e[1]-t[1],o=e[0]-t[0],l=s[1]-i[1],a=s[0]-i[0],c=e[0]*t[1]-e[1]*t[0],d=s[0]*i[1]-s[1]*i[0],u=o*l-n*a;return Math.abs(u)>r?[(c*a-o*d)/u,(c*l-n*d)/u]:null},void 0!==t&&(t.exports=s)},{}],17:[function(require,module,exports){function VectorRenderer(e,t,s,i,r){var r=r||{};this.type=e,this.tile_source=t,this.tiles={},this.num_workers=r.num_workers||1,this.layer_source=VectorRenderer.urlForPath(s),this.layers="string"==typeof s?VectorRenderer.loadLayers(s):s,this.style_source=VectorRenderer.urlForPath(i),this.styles="string"==typeof i?VectorRenderer.loadStyles(i):i,this.createWorkers(),this.zoom=null,this.center=null,this.device_pixel_ratio=window.devicePixelRatio||1,this.dirty=!0,this.initialized=!1}var Point=require("./point.js"),Geo=require("./geo.js"),Style=require("./style.js");!function(){try{VectorRenderer.library_base_url="";for(var e=document.getElementsByTagName("script"),t=0;t<e.length;t++){var s=e[t].src.indexOf("vector-map.debug.js");if(-1==s&&(s=e[t].src.indexOf("vector-map.min.js")),s>=0){VectorRenderer.library_base_url=e[t].src.substr(0,s);break}}}catch(i){}}(),VectorRenderer.tile_scale=4096,VectorRenderer.units_per_meter=[],VectorRenderer.units_per_pixel=[],function(){for(var e=0;e<=Geo.max_zoom;e++)VectorRenderer.units_per_meter[e]=VectorRenderer.tile_scale/(Geo.tile_size*Geo.meters_per_pixel[e]),VectorRenderer.units_per_pixel[e]=VectorRenderer.tile_scale/Geo.tile_size}(),VectorRenderer.create=function(e,t,s,i,r){return new VectorRenderer[e](t,s,i,r)},VectorRenderer.prototype.init=function(){"function"==typeof this._init&&this._init.apply(this,arguments);var e=this;this.workers.forEach(function(t){t.addEventListener("message",e.tileWorkerCompleted.bind(e))}),this.initialized=!0},VectorRenderer.prototype.createWorkers=function(){var e=this,t=VectorRenderer.library_base_url+"vector-map-worker.min.js",s=new XMLHttpRequest;s.onload=function(){var t=window.URL.createObjectURL(new Blob([s.response],{type:"application/javascript"}));e.workers=[];for(var i=0;i<e.num_workers;i++)e.workers.push(new Worker(t))},s.open("GET",t,!1),s.send(),this.next_worker=0},VectorRenderer.prototype.setCenter=function(e,t){this.center={lng:e,lat:t},this.dirty=!0},VectorRenderer.prototype.setZoom=function(e){this.map_last_zoom=this.zoom,this.zoom=e,this.map_zooming=!1,this.dirty=!0},VectorRenderer.prototype.startZoom=function(){this.map_last_zoom=this.zoom,this.map_zooming=!0},VectorRenderer.prototype.setBounds=function(e,t){this.bounds={sw:{lng:e.lng,lat:e.lat},ne:{lng:t.lng,lat:t.lat}};var s=200*Geo.meters_per_pixel[~~this.zoom];this.buffered_meter_bounds={sw:Geo.latLngToMeters(Point(this.bounds.sw.lng,this.bounds.sw.lat)),ne:Geo.latLngToMeters(Point(this.bounds.ne.lng,this.bounds.ne.lat))},this.buffered_meter_bounds.sw.x-=s,this.buffered_meter_bounds.sw.y-=s,this.buffered_meter_bounds.ne.x+=s,this.buffered_meter_bounds.ne.y+=s;for(var i in this.tiles)this.updateVisibilityForTile(this.tiles[i]);this.dirty=!0},VectorRenderer.prototype.updateVisibilityForTile=function(e){return e.visible=Geo.boxIntersect(e.bounds,this.buffered_meter_bounds),e.visible},VectorRenderer.prototype.resizeMap=function(){this.dirty=!0},VectorRenderer.prototype.requestRedraw=function(){this.dirty=!0},VectorRenderer.prototype.render=function(){return 0==this.dirty||0==this.initialized?!1:(this.dirty=!1,"function"==typeof this._render&&this._render.apply(this,arguments),!0)},VectorRenderer.prototype.loadTile=function(e,t,s){if(e.z>this.tile_source.max_zoom){var i=e.z-this.tile_source.max_zoom;e.x=~~(e.x/Math.pow(2,i)),e.y=~~(e.y/Math.pow(2,i)),e.display_z=e.z,e.z-=i}null==this.tile_set_loading&&(this.tile_set_loading=+new Date,console.log("tile set load START"));var r=[e.x,e.y,e.z].join("/");if(this.tiles[r])return void(s&&s(null,t));var n=this.tiles[r]={};if(n.key=r,n.coords=e,n.min=Geo.metersForTile(n.coords),n.max=Geo.metersForTile({x:n.coords.x+1,y:n.coords.y+1,z:n.coords.z}),n.bounds={sw:{x:n.min.x,y:n.max.y},ne:{x:n.max.x,y:n.min.y}},n.units_per_meter=VectorRenderer.units_per_meter[n.coords.z],n.units_per_pixel=VectorRenderer.units_per_pixel[n.coords.z],n.debug={},n.loading=!0,n.loaded=!1,this.updateVisibilityForTile(n),this.workers[this.next_worker].postMessage({type:"loadTile",tile:n,renderer_type:this.type,tile_source:this.tile_source,layer_source:this.layer_source,style_source:this.style_source}),n.worker=this.workers[this.next_worker],this.next_worker=(this.next_worker+1)%this.workers.length,t.setAttribute("data-tile-key",n.key),t.style.width="256px",t.style.height="256px",this.debug){var o=document.createElement("div");o.textContent=n.key,o.style.position="absolute",o.style.left=0,o.style.top=0,o.style.color="white",o.style.fontSize="16px",t.appendChild(o),t.style.borderStyle="solid",t.style.borderColor="white",t.style.borderWidth="1px"}s&&s(null,t)},VectorRenderer.prototype.tileWorkerCompleted=function(e){if("loadTileCompleted"==e.data.type){var t=e.data.tile;if(null==this.tiles[t.key])return void console.log("discarded tile "+t.key+" in VectorRenderer.tileWorkerCompleted because previously removed");if(this.tiles[t.key]=t,"function"==typeof this._tileWorkerCompleted&&this._tileWorkerCompleted(t),delete t.layers,null!=this.tile_set_loading){var s=!0;for(var i in this.tiles)if(1==this.tiles[i].loading){s=!1;break}1==s&&(this.last_tile_set_load=+new Date-this.tile_set_loading,this.tile_set_loading=null,console.log("tile set load FINISHED in: "+this.last_tile_set_load))}this.dirty=!0,this.printDebugForTile(t)}},VectorRenderer.prototype.removeTile=function(e){console.log("tile unload for "+e);var t=this.tiles[e];null!=t&&1==t.loading&&(console.log("cancel tile load for "+e),null!=t.worker&&t.worker.postMessage({type:"removeTile",key:t.key})),delete this.tiles[e],this.dirty=!0},VectorRenderer.prototype.printDebugForTile=function(e){console.log("debug for "+e.key+": [ "+Object.keys(e.debug).map(function(t){return t+": "+e.debug[t]}).join(", ")+" ]")},VectorRenderer.urlForPath=function(e){var t=e.toLowerCase().substr(0,4);return"http"!=t&&"file"!=t&&(e=window.location.origin+window.location.pathname+e),e},VectorRenderer.loadLayers=function(url){var layers,req=new XMLHttpRequest;return req.onload=function(){eval("layers = "+req.response)},req.open("GET",url,!1),req.send(),layers},VectorRenderer.loadStyles=function(url){var styles,req=new XMLHttpRequest;return req.onload=function(){eval("styles = "+req.response)},req.open("GET",url,!1),req.send(),styles},VectorRenderer.processLayersForTile=function(e,t){for(var s={},i=0;i<e.length;i++)e[i].number=i,null!=e[i]&&(null==e[i].data?s[e[i].name]=t.layers[e[i].name]:"string"==typeof e[i].data?s[e[i].name]=t.layers[e[i].data]:"function"==typeof e[i].data&&(s[e[i].name]=e[i].data(t.layers))),s[e[i].name]=s[e[i].name]||{type:"FeatureCollection",features:[]};return t.layers=s,s},VectorRenderer.style_defaults={color:[1,0,0],width:Style.width.pixels(5),size:Style.width.pixels(5),extrude:!1,height:20,min_height:0,outline:{},render_mode:"polygons"},VectorRenderer.parseStyleForFeature=function(e,t,s){var t=t||{},i={};return"function"==typeof t.filter&&0==t.filter(e,s)?null:(i.color=t.color&&(t.color[e.properties.kind]||t.color.default)||VectorRenderer.style_defaults.color,"function"==typeof i.color&&(i.color=i.color(e,s)),i.width=t.width&&(t.width[e.properties.kind]||t.width.default)||VectorRenderer.style_defaults.width,"function"==typeof i.width&&(i.width=i.width(e,s)),i.size=t.size&&(t.size[e.properties.kind]||t.size.default)||VectorRenderer.style_defaults.size,"function"==typeof i.size&&(i.size=i.size(e,s)),i.extrude=t.extrude&&(t.extrude[e.properties.kind]||t.extrude.default)||VectorRenderer.style_defaults.extrude,"function"==typeof i.extrude&&(i.extrude=i.extrude(e,s)),i.height=e.properties&&e.properties.height||VectorRenderer.style_defaults.height,i.min_height=e.properties&&e.properties.min_height||VectorRenderer.style_defaults.min_height,i.extrude&&("number"==typeof i.extrude?i.height=i.extrude:"object"==typeof i.extrude&&i.extrude.length>=2&&(i.min_height=i.extrude[0],i.height=i.extrude[1])),i.outline={},t.outline=t.outline||{},i.outline.color=t.outline.color&&(t.outline.color[e.properties.kind]||t.outline.color.default)||VectorRenderer.style_defaults.outline.color,"function"==typeof i.outline.color&&(i.outline.color=i.outline.color(e,s)),i.outline.width=t.outline.width&&(t.outline.width[e.properties.kind]||t.outline.width.default)||VectorRenderer.style_defaults.outline.width,"function"==typeof i.outline.width&&(i.outline.width=i.outline.width(e,s)),i.outline.dash=t.outline.dash&&(t.outline.dash[e.properties.kind]||t.outline.dash.default)||VectorRenderer.style_defaults.outline.dash,"function"==typeof i.outline.dash&&(i.outline.dash=i.outline.dash(e,s)),i.render_mode=t.render_mode||VectorRenderer.style_defaults.render_mode,i)},void 0!==module&&(module.exports=VectorRenderer)},{"./geo.js":7,"./point.js":13,"./style.js":14}],18:[function(e){var t=e("./tile_source.js"),s=e("./vector_renderer.js"),i=(e("./gl/gl_renderer.js"),e("./gl/gl_builders.js")),r=(e("./canvas/canvas_renderer.js"),{});r.worker=self,r.tiles={},i.setTileScale(s.tile_scale),r.tile_source=null,r.worker.addEventListener("message",function(e){if("loadTile"==e.data.type){var i=e.data.tile,n=e.data.renderer_type;r.tile_source=r.tile_source||t.create(e.data.tile_source.type,e.data.tile_source.url,e.data.tile_source),r.layers=r.layers||s.loadLayers(e.data.layer_source),r.styles=r.styles||s.loadStyles(e.data.style_source),r.tiles[i.key]=i,r.tile_source.loadTile(i,function(){s.processLayersForTile(r.layers,i),i.debug.rendering=+new Date,null!=s[n].addTile&&s[n].addTile(i,r.layers,r.styles),i.debug.rendering=+new Date-i.debug.rendering,r.worker.postMessage({type:"loadTileCompleted",tile:i}),delete r.tiles[i.key]})}}),r.worker.addEventListener("message",function(e){if("removeTile"==e.data.type){var t=e.data.key,s=r.tiles[t];null!=s&&(s.loading=!1,null!=s.xhr&&s.xhr.abort(),delete r.tiles[t])}})},{"./canvas/canvas_renderer.js":6,"./gl/gl_builders.js":9,"./gl/gl_renderer.js":11,"./tile_source.js":15,"./vector_renderer.js":17}]},{},[18]);